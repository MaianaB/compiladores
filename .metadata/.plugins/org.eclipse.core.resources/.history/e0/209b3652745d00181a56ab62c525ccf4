grammar com.ufcg.compiladores.Go with org.eclipse.xtext.common.Terminals

generate go "http://www.ufcg.com/compiladores/Go"

Model:
	greetings+=Greeting*;
	
Greeting:
	'Hello' name=ID '!';

Type:
	TypeName | TypeLit | "(" Type ")"
;

TypeName:
	identifier | QualifiedIdent
;

TypeLit:
	ArrayType | StructType | PointerType | FunctionType | InterfaceType | SliceType | MapType | ChannelType
;

ArrayLength:
	Expression
;

ArrayType:
	"[" ArrayLength "]" Type=Type
;

ElementType:
	Type=Type
;

SliceType:
	"[" "]" ElementType
;

StructType:
	"struct" "{" (FieldDecl ";")* ";"
;

FieldDecl:
	(IdentifierList Type | EmbeddedField)(Tag)?
;

EmbeddedField:
	("*")? TypeName
;

Tag:
	string_lit
;

PointerType:
	"*" BaseType
;

BaseType:
	Type=Type
;

FunctionType:
	"func" Signature
;

Signature:
	Parameters (Result)?
;

Result:
	Parameters | Type
;

Parameters:
	"(" (ParameterList (",")?)? ")"
;

ParameterList:
	ParameterDecl ("," ParameterDecl)?
;

ParameterDecl:
	(IdentifierList)? ("...")? Type
;

InterfaceType:
	"interface" "{" (MethodSpec=MethodSpec ";")? "}"
;

MethodSpec:
	MethodName Signature | InterfaceTypeName
;

MethodName:
	identifier
;

InterfaceTypeName:
	TypeName
;

MapType:
	"map" "[" KeyType "]" ElementType=ElementType
;

KeyType:
	Type=Type
;

ChannelType:
	("chan" | "chan" "<-" | "<-" "chan") ElementType
;

comments:
	LETTER*"//"LETTER* | LETTER*"/*"LETTER*"*/";
	
identifier:
	LETTER (LETTER | DECIMAL_DIGIT)*;
	
int_lit:
	decimal_lit | octal_lit | hex_lit
;

decimal_lit:
	DECIMAL_DIGIT (DECIMAL_DIGIT)*
;

octal_lit:
	"0" OCTAL_DIGIT*
;

hex_lit:
	"0" ( "x" | "X" ) HEX_DIGIT HEX_DIGIT*
;

float_lit:
	decimals "." (decimals)? (exponent)? | decimals exponent | "." decimals (exponent)?
;

string_lit:
	raw_string_lit | interpreted_string_lit
;

raw_string_lit:
	"'" (unicode_char | newline)? "'"
;

interpreted_string_lit:
	'"' (unicode_value | byte_value)? '"'
;

unicode_char:
	"?" | "." | "," | "!"
;

newline:
	"U+000A"
;

decimals: 
	DECIMAL_DIGIT DECIMAL_DIGIT*
;

exponent:
	("e" | "E") ("+" | "-")? decimals
;

imaginary_lit:
	(decimals | float_lit) "i"
;

rune_lit:
	"'" (unicode_value | byte_value) "'"
;

unicode_value:
	LETTER | little_u_value | big_u_value | escaped_char 
;

byte_value:
	octal_byte_value | hex_byte_value
;

octal_byte_value:
	CHAR OCTAL_DIGIT OCTAL_DIGIT OCTAL_DIGIT	
;

hex_byte_value:
	CHAR "x" HEX_DIGIT HEX_DIGIT
;

little_u_value:
	CHAR "u" HEX_DIGIT HEX_DIGIT HEX_DIGIT HEX_DIGIT
;

big_u_value:
	CHAR "U" HEX_DIGIT HEX_DIGIT HEX_DIGIT HEX_DIGIT HEX_DIGIT HEX_DIGIT HEX_DIGIT HEX_DIGIT
;

escaped_char:
	CHAR ("a" | "b" | "f" | "n" | "r" | "t" | "v" | CHAR | "'" | '"')
;

CHAR: "\'";


terminal LETTER:
	('a'..'z'|'A'..'Z'|'_');
	
terminal DECIMAL_DIGIT:
	("0".."9");
	
terminal OCTAL_DIGIT:
	("0".."7");

terminal HEX_DIGIT:
	("0".."9" | "A".."F" | "a".."f");