/*
 * generated by Xtext 2.14.0
 */
grammar InternalGo;

options {
	superClass=AbstractInternalAntlrParser;
	backtrack=true;
}

@lexer::header {
package com.ufcg.compiladores.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package com.ufcg.compiladores.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import com.ufcg.compiladores.services.GoGrammarAccess;

}

@parser::members {

/*
  This grammar contains a lot of empty actions to work around a bug in ANTLR.
  Otherwise the ANTLR tool will create synpreds that cannot be compiled in some rare cases.
*/

 	private GoGrammarAccess grammarAccess;

    public InternalGoParser(TokenStream input, GoGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "SouceFile";
   	}

   	@Override
   	protected GoGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleSouceFile
entryRuleSouceFile returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSouceFileRule()); }
	iv_ruleSouceFile=ruleSouceFile
	{ $current=$iv_ruleSouceFile.current; }
	EOF;

// Rule SouceFile
ruleSouceFile returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getSouceFileAccess().getPackageClausePackageClauseParserRuleCall_0_0());
				}
				lv_PackageClause_0_0=rulePackageClause
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSouceFileRule());
					}
					set(
						$current,
						"PackageClause",
						lv_PackageClause_0_0,
						"com.ufcg.compiladores.Go.PackageClause");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1=';'
		{
			newLeafNode(otherlv_1, grammarAccess.getSouceFileAccess().getSemicolonKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getSouceFileAccess().getImportDeclImportDeclParserRuleCall_2_0_0());
					}
					lv_ImportDecl_2_0=ruleImportDecl
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSouceFileRule());
						}
						add(
							$current,
							"ImportDecl",
							lv_ImportDecl_2_0,
							"com.ufcg.compiladores.Go.ImportDecl");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_3=';'
			{
				newLeafNode(otherlv_3, grammarAccess.getSouceFileAccess().getSemicolonKeyword_2_1());
			}
		)*
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getSouceFileAccess().getTopLevelDeclTopLevelDeclParserRuleCall_3_0_0());
					}
					lv_TopLevelDecl_4_0=ruleTopLevelDecl
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSouceFileRule());
						}
						set(
							$current,
							"TopLevelDecl",
							lv_TopLevelDecl_4_0,
							"com.ufcg.compiladores.Go.TopLevelDecl");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_5=';'
			{
				newLeafNode(otherlv_5, grammarAccess.getSouceFileAccess().getSemicolonKeyword_3_1());
			}
		)?
	)
;

// Entry rule entryRuleType
entryRuleType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeRule()); }
	iv_ruleType=ruleType
	{ $current=$iv_ruleType.current; }
	EOF;

// Rule Type
ruleType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getTypeAccess().getTypeNameTypeNameParserRuleCall_0_0());
				}
				lv_TypeName_0_0=ruleTypeName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTypeRule());
					}
					set(
						$current,
						"TypeName",
						lv_TypeName_0_0,
						"com.ufcg.compiladores.Go.TypeName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getTypeAccess().getTypeLitTypeLitParserRuleCall_1_0());
				}
				lv_TypeLit_1_0=ruleTypeLit
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTypeRule());
					}
					set(
						$current,
						"TypeLit",
						lv_TypeLit_1_0,
						"com.ufcg.compiladores.Go.TypeLit");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			otherlv_2='('
			{
				newLeafNode(otherlv_2, grammarAccess.getTypeAccess().getLeftParenthesisKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTypeAccess().getTypeTypeParserRuleCall_2_1_0());
					}
					lv_Type_3_0=ruleType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTypeRule());
						}
						set(
							$current,
							"Type",
							lv_Type_3_0,
							"com.ufcg.compiladores.Go.Type");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_4=')'
			{
				newLeafNode(otherlv_4, grammarAccess.getTypeAccess().getRightParenthesisKeyword_2_2());
			}
		)
	)
;

// Entry rule entryRuleTypeName
entryRuleTypeName returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeNameRule()); }
	iv_ruleTypeName=ruleTypeName
	{ $current=$iv_ruleTypeName.current; }
	EOF;

// Rule TypeName
ruleTypeName returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getTypeNameAccess().getIdentifierIdentifierParserRuleCall_0_0());
				}
				lv_identifier_0_0=ruleidentifier
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTypeNameRule());
					}
					set(
						$current,
						"identifier",
						lv_identifier_0_0,
						"com.ufcg.compiladores.Go.identifier");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getTypeNameAccess().getTypeNameLinhaTypeNameLinhaParserRuleCall_1_0());
				}
				lv_TypeNameLinha_1_0=ruleTypeNameLinha
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTypeNameRule());
					}
					set(
						$current,
						"TypeNameLinha",
						lv_TypeNameLinha_1_0,
						"com.ufcg.compiladores.Go.TypeNameLinha");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleTypeNameLinha
entryRuleTypeNameLinha returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeNameLinhaRule()); }
	iv_ruleTypeNameLinha=ruleTypeNameLinha
	{ $current=$iv_ruleTypeNameLinha.current; }
	EOF;

// Rule TypeNameLinha
ruleTypeNameLinha returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='.'
			{
				newLeafNode(otherlv_0, grammarAccess.getTypeNameLinhaAccess().getFullStopKeyword_0_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTypeNameLinhaAccess().getIdentifierIdentifierParserRuleCall_0_1_0());
					}
					lv_identifier_1_0=ruleidentifier
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTypeNameLinhaRule());
						}
						set(
							$current,
							"identifier",
							lv_identifier_1_0,
							"com.ufcg.compiladores.Go.identifier");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getTypeNameLinhaAccess().getTypeNameLinhaTypeNameLinhaParserRuleCall_0_2_0());
					}
					lv_TypeNameLinha_2_0=ruleTypeNameLinha
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTypeNameLinhaRule());
						}
						set(
							$current,
							"TypeNameLinha",
							lv_TypeNameLinha_2_0,
							"com.ufcg.compiladores.Go.TypeNameLinha");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getTypeNameLinhaAccess().getQualifiedIdentQualifiedIdentParserRuleCall_1_0_0());
					}
					lv_QualifiedIdent_3_0=ruleQualifiedIdent
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTypeNameLinhaRule());
						}
						set(
							$current,
							"QualifiedIdent",
							lv_QualifiedIdent_3_0,
							"com.ufcg.compiladores.Go.QualifiedIdent");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getTypeNameLinhaAccess().getTypeNameLinhaTypeNameLinhaParserRuleCall_1_1_0());
					}
					lv_TypeNameLinha_4_0=ruleTypeNameLinha
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTypeNameLinhaRule());
						}
						set(
							$current,
							"TypeNameLinha",
							lv_TypeNameLinha_4_0,
							"com.ufcg.compiladores.Go.TypeNameLinha");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getTypeNameLinhaAccess().getTypeNameLinhaAction_2_0(),
						$current);
				}
			)
			this_ANY_OTHER_6=RULE_ANY_OTHER
			{
				newLeafNode(this_ANY_OTHER_6, grammarAccess.getTypeNameLinhaAccess().getANY_OTHERTerminalRuleCall_2_1());
			}
		)
	)
;

// Entry rule entryRuleTypeLit
entryRuleTypeLit returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeLitRule()); }
	iv_ruleTypeLit=ruleTypeLit
	{ $current=$iv_ruleTypeLit.current; }
	EOF;

// Rule TypeLit
ruleTypeLit returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='['
			{
				newLeafNode(otherlv_0, grammarAccess.getTypeLitAccess().getLeftSquareBracketKeyword_0_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTypeLitAccess().getTypeLitLinhaTypeLitLinhaParserRuleCall_0_1_0());
					}
					lv_TypeLitLinha_1_0=ruleTypeLitLinha
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTypeLitRule());
						}
						set(
							$current,
							"TypeLitLinha",
							lv_TypeLitLinha_1_0,
							"com.ufcg.compiladores.Go.TypeLitLinha");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getTypeLitAccess().getStructTypeStructTypeParserRuleCall_1_0());
				}
				lv_StructType_2_0=ruleStructType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTypeLitRule());
					}
					set(
						$current,
						"StructType",
						lv_StructType_2_0,
						"com.ufcg.compiladores.Go.StructType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getTypeLitAccess().getPointerTypePointerTypeParserRuleCall_2_0());
				}
				lv_PointerType_3_0=rulePointerType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTypeLitRule());
					}
					set(
						$current,
						"PointerType",
						lv_PointerType_3_0,
						"com.ufcg.compiladores.Go.PointerType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getTypeLitAccess().getFunctionTypeFunctionTypeParserRuleCall_3_0());
				}
				lv_FunctionType_4_0=ruleFunctionType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTypeLitRule());
					}
					set(
						$current,
						"FunctionType",
						lv_FunctionType_4_0,
						"com.ufcg.compiladores.Go.FunctionType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getTypeLitAccess().getInterfaceTypeInterfaceTypeParserRuleCall_4_0());
				}
				lv_InterfaceType_5_0=ruleInterfaceType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTypeLitRule());
					}
					set(
						$current,
						"InterfaceType",
						lv_InterfaceType_5_0,
						"com.ufcg.compiladores.Go.InterfaceType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getTypeLitAccess().getMapTypeMapTypeParserRuleCall_5_0());
				}
				lv_MapType_6_0=ruleMapType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTypeLitRule());
					}
					set(
						$current,
						"MapType",
						lv_MapType_6_0,
						"com.ufcg.compiladores.Go.MapType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getTypeLitAccess().getChannelTypeChannelTypeParserRuleCall_6_0());
				}
				lv_ChannelType_7_0=ruleChannelType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTypeLitRule());
					}
					set(
						$current,
						"ChannelType",
						lv_ChannelType_7_0,
						"com.ufcg.compiladores.Go.ChannelType");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleTypeLitLinha
entryRuleTypeLitLinha returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeLitLinhaRule()); }
	iv_ruleTypeLitLinha=ruleTypeLitLinha
	{ $current=$iv_ruleTypeLitLinha.current; }
	EOF;

// Rule TypeLitLinha
ruleTypeLitLinha returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getTypeLitLinhaAccess().getArrayLengthArrayLengthParserRuleCall_0_0_0());
					}
					lv_ArrayLength_0_0=ruleArrayLength
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTypeLitLinhaRule());
						}
						set(
							$current,
							"ArrayLength",
							lv_ArrayLength_0_0,
							"com.ufcg.compiladores.Go.ArrayLength");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_1=']'
			{
				newLeafNode(otherlv_1, grammarAccess.getTypeLitLinhaAccess().getRightSquareBracketKeyword_0_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTypeLitLinhaAccess().getElementTypeElementTypeParserRuleCall_0_2_0());
					}
					lv_ElementType_2_0=ruleElementType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTypeLitLinhaRule());
						}
						set(
							$current,
							"ElementType",
							lv_ElementType_2_0,
							"com.ufcg.compiladores.Go.ElementType");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getTypeLitLinhaAccess().getTypeLitLinhaTypeLitLinhaParserRuleCall_0_3_0());
					}
					lv_TypeLitLinha_3_0=ruleTypeLitLinha
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTypeLitLinhaRule());
						}
						set(
							$current,
							"TypeLitLinha",
							lv_TypeLitLinha_3_0,
							"com.ufcg.compiladores.Go.TypeLitLinha");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			otherlv_4=']'
			{
				newLeafNode(otherlv_4, grammarAccess.getTypeLitLinhaAccess().getRightSquareBracketKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTypeLitLinhaAccess().getElementTypeElementTypeParserRuleCall_1_1_0());
					}
					lv_ElementType_5_0=ruleElementType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTypeLitLinhaRule());
						}
						set(
							$current,
							"ElementType",
							lv_ElementType_5_0,
							"com.ufcg.compiladores.Go.ElementType");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getTypeLitLinhaAccess().getTypeLitLinhaTypeLitLinhaParserRuleCall_1_2_0());
					}
					lv_TypeLitLinha_6_0=ruleTypeLitLinha
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTypeLitLinhaRule());
						}
						set(
							$current,
							"TypeLitLinha",
							lv_TypeLitLinha_6_0,
							"com.ufcg.compiladores.Go.TypeLitLinha");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getTypeLitLinhaAccess().getTypeLitLinhaAction_2_0(),
						$current);
				}
			)
			this_ANY_OTHER_8=RULE_ANY_OTHER
			{
				newLeafNode(this_ANY_OTHER_8, grammarAccess.getTypeLitLinhaAccess().getANY_OTHERTerminalRuleCall_2_1());
			}
		)
	)
;

// Entry rule entryRuleArrayLength
entryRuleArrayLength returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArrayLengthRule()); }
	iv_ruleArrayLength=ruleArrayLength
	{ $current=$iv_ruleArrayLength.current; }
	EOF;

// Rule ArrayLength
ruleArrayLength returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getArrayLengthAccess().getExpressionExpressionParserRuleCall_0());
			}
			lv_Expression_0_0=ruleExpression
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getArrayLengthRule());
				}
				set(
					$current,
					"Expression",
					lv_Expression_0_0,
					"com.ufcg.compiladores.Go.Expression");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleElementType
entryRuleElementType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getElementTypeRule()); }
	iv_ruleElementType=ruleElementType
	{ $current=$iv_ruleElementType.current; }
	EOF;

// Rule ElementType
ruleElementType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getElementTypeAccess().getTypeTypeParserRuleCall_0());
			}
			lv_Type_0_0=ruleType
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getElementTypeRule());
				}
				set(
					$current,
					"Type",
					lv_Type_0_0,
					"com.ufcg.compiladores.Go.Type");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleStructType
entryRuleStructType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStructTypeRule()); }
	iv_ruleStructType=ruleStructType
	{ $current=$iv_ruleStructType.current; }
	EOF;

// Rule StructType
ruleStructType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getStructTypeAccess().getStructTypeAction_0(),
					$current);
			}
		)
		otherlv_1='struct'
		{
			newLeafNode(otherlv_1, grammarAccess.getStructTypeAccess().getStructKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getStructTypeAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getStructTypeAccess().getFieldDeclFieldDeclParserRuleCall_3_0_0());
					}
					lv_FieldDecl_3_0=ruleFieldDecl
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStructTypeRule());
						}
						add(
							$current,
							"FieldDecl",
							lv_FieldDecl_3_0,
							"com.ufcg.compiladores.Go.FieldDecl");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_4=';'
			{
				newLeafNode(otherlv_4, grammarAccess.getStructTypeAccess().getSemicolonKeyword_3_1());
			}
		)*
		otherlv_5=';'
		{
			newLeafNode(otherlv_5, grammarAccess.getStructTypeAccess().getSemicolonKeyword_4());
		}
	)
;

// Entry rule entryRuleFieldDecl
entryRuleFieldDecl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFieldDeclRule()); }
	iv_ruleFieldDecl=ruleFieldDecl
	{ $current=$iv_ruleFieldDecl.current; }
	EOF;

// Rule FieldDecl
ruleFieldDecl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getFieldDeclAccess().getIdentifierListIdentifierListParserRuleCall_0_0_0_0());
						}
						lv_IdentifierList_0_0=ruleIdentifierList
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getFieldDeclRule());
							}
							set(
								$current,
								"IdentifierList",
								lv_IdentifierList_0_0,
								"com.ufcg.compiladores.Go.IdentifierList");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getFieldDeclAccess().getTypeTypeParserRuleCall_0_0_1_0());
						}
						lv_Type_1_0=ruleType
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getFieldDeclRule());
							}
							set(
								$current,
								"Type",
								lv_Type_1_0,
								"com.ufcg.compiladores.Go.Type");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getFieldDeclAccess().getEmbeddedFieldEmbeddedFieldParserRuleCall_0_1_0());
					}
					lv_EmbeddedField_2_0=ruleEmbeddedField
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFieldDeclRule());
						}
						set(
							$current,
							"EmbeddedField",
							lv_EmbeddedField_2_0,
							"com.ufcg.compiladores.Go.EmbeddedField");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getFieldDeclAccess().getTagTagParserRuleCall_1_0());
				}
				lv_Tag_3_0=ruleTag
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFieldDeclRule());
					}
					set(
						$current,
						"Tag",
						lv_Tag_3_0,
						"com.ufcg.compiladores.Go.Tag");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleEmbeddedField
entryRuleEmbeddedField returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEmbeddedFieldRule()); }
	iv_ruleEmbeddedField=ruleEmbeddedField
	{ $current=$iv_ruleEmbeddedField.current; }
	EOF;

// Rule EmbeddedField
ruleEmbeddedField returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='*'
			{
				newLeafNode(otherlv_0, grammarAccess.getEmbeddedFieldAccess().getAsteriskKeyword_0());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getEmbeddedFieldAccess().getTypeNameTypeNameParserRuleCall_1_0());
				}
				lv_TypeName_1_0=ruleTypeName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEmbeddedFieldRule());
					}
					set(
						$current,
						"TypeName",
						lv_TypeName_1_0,
						"com.ufcg.compiladores.Go.TypeName");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleTag
entryRuleTag returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTagRule()); }
	iv_ruleTag=ruleTag
	{ $current=$iv_ruleTag.current; }
	EOF;

// Rule Tag
ruleTag returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getTagAccess().getString_litString_litParserRuleCall_0());
			}
			lv_string_lit_0_0=rulestring_lit
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getTagRule());
				}
				set(
					$current,
					"string_lit",
					lv_string_lit_0_0,
					"com.ufcg.compiladores.Go.string_lit");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRulePointerType
entryRulePointerType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPointerTypeRule()); }
	iv_rulePointerType=rulePointerType
	{ $current=$iv_rulePointerType.current; }
	EOF;

// Rule PointerType
rulePointerType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='*'
		{
			newLeafNode(otherlv_0, grammarAccess.getPointerTypeAccess().getAsteriskKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPointerTypeAccess().getTypeTypeParserRuleCall_1_0());
				}
				lv_Type_1_0=ruleType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPointerTypeRule());
					}
					set(
						$current,
						"Type",
						lv_Type_1_0,
						"com.ufcg.compiladores.Go.Type");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleFunctionType
entryRuleFunctionType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFunctionTypeRule()); }
	iv_ruleFunctionType=ruleFunctionType
	{ $current=$iv_ruleFunctionType.current; }
	EOF;

// Rule FunctionType
ruleFunctionType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='func'
		{
			newLeafNode(otherlv_0, grammarAccess.getFunctionTypeAccess().getFuncKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFunctionTypeAccess().getSignatureSignatureParserRuleCall_1_0());
				}
				lv_Signature_1_0=ruleSignature
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFunctionTypeRule());
					}
					set(
						$current,
						"Signature",
						lv_Signature_1_0,
						"com.ufcg.compiladores.Go.Signature");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleSignature
entryRuleSignature returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSignatureRule()); }
	iv_ruleSignature=ruleSignature
	{ $current=$iv_ruleSignature.current; }
	EOF;

// Rule Signature
ruleSignature returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getSignatureAccess().getParametersParametersParserRuleCall_0_0());
				}
				lv_Parameters_0_0=ruleParameters
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSignatureRule());
					}
					set(
						$current,
						"Parameters",
						lv_Parameters_0_0,
						"com.ufcg.compiladores.Go.Parameters");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSignatureAccess().getResultResultParserRuleCall_1_0());
				}
				lv_Result_1_0=ruleResult
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSignatureRule());
					}
					set(
						$current,
						"Result",
						lv_Result_1_0,
						"com.ufcg.compiladores.Go.Result");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleResult
entryRuleResult returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getResultRule()); }
	iv_ruleResult=ruleResult
	{ $current=$iv_ruleResult.current; }
	EOF;

// Rule Result
ruleResult returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getResultAccess().getParametersParametersParserRuleCall_0_0());
				}
				lv_Parameters_0_0=ruleParameters
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getResultRule());
					}
					set(
						$current,
						"Parameters",
						lv_Parameters_0_0,
						"com.ufcg.compiladores.Go.Parameters");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getResultAccess().getTypeTypeParserRuleCall_1_0());
				}
				lv_Type_1_0=ruleType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getResultRule());
					}
					set(
						$current,
						"Type",
						lv_Type_1_0,
						"com.ufcg.compiladores.Go.Type");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleParameters
entryRuleParameters returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParametersRule()); }
	iv_ruleParameters=ruleParameters
	{ $current=$iv_ruleParameters.current; }
	EOF;

// Rule Parameters
ruleParameters returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getParametersAccess().getParametersAction_0(),
					$current);
			}
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getParametersAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getParametersAccess().getParameterListParameterListParserRuleCall_2_0_0());
					}
					lv_ParameterList_2_0=ruleParameterList
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getParametersRule());
						}
						set(
							$current,
							"ParameterList",
							lv_ParameterList_2_0,
							"com.ufcg.compiladores.Go.ParameterList");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3=','
				{
					newLeafNode(otherlv_3, grammarAccess.getParametersAccess().getCommaKeyword_2_1());
				}
			)?
		)?
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getParametersAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleParameterList
entryRuleParameterList returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParameterListRule()); }
	iv_ruleParameterList=ruleParameterList
	{ $current=$iv_ruleParameterList.current; }
	EOF;

// Rule ParameterList
ruleParameterList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getParameterListAccess().getParameterDeclParameterDeclParserRuleCall_0_0());
				}
				lv_ParameterDecl_0_0=ruleParameterDecl
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParameterListRule());
					}
					add(
						$current,
						"ParameterDecl",
						lv_ParameterDecl_0_0,
						"com.ufcg.compiladores.Go.ParameterDecl");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1=','
			{
				newLeafNode(otherlv_1, grammarAccess.getParameterListAccess().getCommaKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getParameterListAccess().getParameterDeclParameterDeclParserRuleCall_1_1_0());
					}
					lv_ParameterDecl_2_0=ruleParameterDecl
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getParameterListRule());
						}
						add(
							$current,
							"ParameterDecl",
							lv_ParameterDecl_2_0,
							"com.ufcg.compiladores.Go.ParameterDecl");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleParameterDecl
entryRuleParameterDecl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParameterDeclRule()); }
	iv_ruleParameterDecl=ruleParameterDecl
	{ $current=$iv_ruleParameterDecl.current; }
	EOF;

// Rule ParameterDecl
ruleParameterDecl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getParameterDeclAccess().getIdentifierListIdentifierListParserRuleCall_0_0());
				}
				lv_IdentifierList_0_0=ruleIdentifierList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParameterDeclRule());
					}
					set(
						$current,
						"IdentifierList",
						lv_IdentifierList_0_0,
						"com.ufcg.compiladores.Go.IdentifierList");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			otherlv_1='...'
			{
				newLeafNode(otherlv_1, grammarAccess.getParameterDeclAccess().getFullStopFullStopFullStopKeyword_1());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getParameterDeclAccess().getTypeTypeParserRuleCall_2_0());
				}
				lv_Type_2_0=ruleType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParameterDeclRule());
					}
					set(
						$current,
						"Type",
						lv_Type_2_0,
						"com.ufcg.compiladores.Go.Type");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleInterfaceType
entryRuleInterfaceType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInterfaceTypeRule()); }
	iv_ruleInterfaceType=ruleInterfaceType
	{ $current=$iv_ruleInterfaceType.current; }
	EOF;

// Rule InterfaceType
ruleInterfaceType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getInterfaceTypeAccess().getInterfaceTypeAction_0(),
					$current);
			}
		)
		otherlv_1='interface'
		{
			newLeafNode(otherlv_1, grammarAccess.getInterfaceTypeAccess().getInterfaceKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getInterfaceTypeAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getInterfaceTypeAccess().getMethodSpecMethodSpecParserRuleCall_3_0_0());
					}
					lv_MethodSpec_3_0=ruleMethodSpec
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInterfaceTypeRule());
						}
						set(
							$current,
							"MethodSpec",
							lv_MethodSpec_3_0,
							"com.ufcg.compiladores.Go.MethodSpec");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_4=';'
			{
				newLeafNode(otherlv_4, grammarAccess.getInterfaceTypeAccess().getSemicolonKeyword_3_1());
			}
		)?
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getInterfaceTypeAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleMethodSpec
entryRuleMethodSpec returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMethodSpecRule()); }
	iv_ruleMethodSpec=ruleMethodSpec
	{ $current=$iv_ruleMethodSpec.current; }
	EOF;

// Rule MethodSpec
ruleMethodSpec returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getMethodSpecAccess().getMethodNameMethodNameParserRuleCall_0_0_0());
					}
					lv_MethodName_0_0=ruleMethodName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMethodSpecRule());
						}
						set(
							$current,
							"MethodName",
							lv_MethodName_0_0,
							"com.ufcg.compiladores.Go.MethodName");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getMethodSpecAccess().getSignatureSignatureParserRuleCall_0_1_0());
					}
					lv_Signature_1_0=ruleSignature
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMethodSpecRule());
						}
						set(
							$current,
							"Signature",
							lv_Signature_1_0,
							"com.ufcg.compiladores.Go.Signature");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getMethodSpecAccess().getInterfaceTypeNameInterfaceTypeNameParserRuleCall_1_0());
				}
				lv_InterfaceTypeName_2_0=ruleInterfaceTypeName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMethodSpecRule());
					}
					set(
						$current,
						"InterfaceTypeName",
						lv_InterfaceTypeName_2_0,
						"com.ufcg.compiladores.Go.InterfaceTypeName");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleMethodName
entryRuleMethodName returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMethodNameRule()); }
	iv_ruleMethodName=ruleMethodName
	{ $current=$iv_ruleMethodName.current; }
	EOF;

// Rule MethodName
ruleMethodName returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getMethodNameAccess().getIdentifierIdentifierParserRuleCall_0());
			}
			lv_identifier_0_0=ruleidentifier
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getMethodNameRule());
				}
				set(
					$current,
					"identifier",
					lv_identifier_0_0,
					"com.ufcg.compiladores.Go.identifier");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleInterfaceTypeName
entryRuleInterfaceTypeName returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInterfaceTypeNameRule()); }
	iv_ruleInterfaceTypeName=ruleInterfaceTypeName
	{ $current=$iv_ruleInterfaceTypeName.current; }
	EOF;

// Rule InterfaceTypeName
ruleInterfaceTypeName returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getInterfaceTypeNameAccess().getTypeNameTypeNameParserRuleCall_0());
			}
			lv_TypeName_0_0=ruleTypeName
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getInterfaceTypeNameRule());
				}
				set(
					$current,
					"TypeName",
					lv_TypeName_0_0,
					"com.ufcg.compiladores.Go.TypeName");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleMapType
entryRuleMapType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMapTypeRule()); }
	iv_ruleMapType=ruleMapType
	{ $current=$iv_ruleMapType.current; }
	EOF;

// Rule MapType
ruleMapType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='map'
		{
			newLeafNode(otherlv_0, grammarAccess.getMapTypeAccess().getMapKeyword_0());
		}
		otherlv_1='['
		{
			newLeafNode(otherlv_1, grammarAccess.getMapTypeAccess().getLeftSquareBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMapTypeAccess().getKeyTypeKeyTypeParserRuleCall_2_0());
				}
				lv_KeyType_2_0=ruleKeyType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMapTypeRule());
					}
					set(
						$current,
						"KeyType",
						lv_KeyType_2_0,
						"com.ufcg.compiladores.Go.KeyType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=']'
		{
			newLeafNode(otherlv_3, grammarAccess.getMapTypeAccess().getRightSquareBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMapTypeAccess().getElementTypeElementTypeParserRuleCall_4_0());
				}
				lv_ElementType_4_0=ruleElementType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMapTypeRule());
					}
					set(
						$current,
						"ElementType",
						lv_ElementType_4_0,
						"com.ufcg.compiladores.Go.ElementType");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleKeyType
entryRuleKeyType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getKeyTypeRule()); }
	iv_ruleKeyType=ruleKeyType
	{ $current=$iv_ruleKeyType.current; }
	EOF;

// Rule KeyType
ruleKeyType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getKeyTypeAccess().getTypeTypeParserRuleCall_0());
			}
			lv_Type_0_0=ruleType
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getKeyTypeRule());
				}
				set(
					$current,
					"Type",
					lv_Type_0_0,
					"com.ufcg.compiladores.Go.Type");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleChannelType
entryRuleChannelType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getChannelTypeRule()); }
	iv_ruleChannelType=ruleChannelType
	{ $current=$iv_ruleChannelType.current; }
	EOF;

// Rule ChannelType
ruleChannelType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='chan'
			{
				newLeafNode(otherlv_0, grammarAccess.getChannelTypeAccess().getChanKeyword_0_0());
			}
			    |
			(
				otherlv_1='chan'
				{
					newLeafNode(otherlv_1, grammarAccess.getChannelTypeAccess().getChanKeyword_0_1_0());
				}
				otherlv_2='<-'
				{
					newLeafNode(otherlv_2, grammarAccess.getChannelTypeAccess().getLessThanSignHyphenMinusKeyword_0_1_1());
				}
			)
			    |
			(
				otherlv_3='<-'
				{
					newLeafNode(otherlv_3, grammarAccess.getChannelTypeAccess().getLessThanSignHyphenMinusKeyword_0_2_0());
				}
				otherlv_4='chan'
				{
					newLeafNode(otherlv_4, grammarAccess.getChannelTypeAccess().getChanKeyword_0_2_1());
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getChannelTypeAccess().getElementTypeElementTypeParserRuleCall_1_0());
				}
				lv_ElementType_5_0=ruleElementType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getChannelTypeRule());
					}
					set(
						$current,
						"ElementType",
						lv_ElementType_5_0,
						"com.ufcg.compiladores.Go.ElementType");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleBlock
entryRuleBlock returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBlockRule()); }
	iv_ruleBlock=ruleBlock
	{ $current=$iv_ruleBlock.current; }
	EOF;

// Rule Block
ruleBlock returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='{'
		{
			newLeafNode(otherlv_0, grammarAccess.getBlockAccess().getLeftCurlyBracketKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBlockAccess().getStatementListStatementListParserRuleCall_1_0());
				}
				lv_StatementList_1_0=ruleStatementList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBlockRule());
					}
					set(
						$current,
						"StatementList",
						lv_StatementList_1_0,
						"com.ufcg.compiladores.Go.StatementList");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='}'
		{
			newLeafNode(otherlv_2, grammarAccess.getBlockAccess().getRightCurlyBracketKeyword_2());
		}
	)
;

// Entry rule entryRuleStatementList
entryRuleStatementList returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStatementListRule()); }
	iv_ruleStatementList=ruleStatementList
	{ $current=$iv_ruleStatementList.current; }
	EOF;

// Rule StatementList
ruleStatementList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getStatementListAccess().getStatementListAction_0(),
					$current);
			}
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getStatementListAccess().getStatementStatementParserRuleCall_1_0_0());
					}
					lv_Statement_1_0=ruleStatement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStatementListRule());
						}
						add(
							$current,
							"Statement",
							lv_Statement_1_0,
							"com.ufcg.compiladores.Go.Statement");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_2=';'
			{
				newLeafNode(otherlv_2, grammarAccess.getStatementListAccess().getSemicolonKeyword_1_1());
			}
		)*
	)
;

// Entry rule entryRuleDeclaration
entryRuleDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeclarationRule()); }
	iv_ruleDeclaration=ruleDeclaration
	{ $current=$iv_ruleDeclaration.current; }
	EOF;

// Rule Declaration
ruleDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getDeclarationAccess().getConstDeclConstDeclParserRuleCall_0_0());
				}
				lv_ConstDecl_0_0=ruleConstDecl
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDeclarationRule());
					}
					set(
						$current,
						"ConstDecl",
						lv_ConstDecl_0_0,
						"com.ufcg.compiladores.Go.ConstDecl");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getDeclarationAccess().getTypeDeclTypeDeclParserRuleCall_1_0());
				}
				lv_TypeDecl_1_0=ruleTypeDecl
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDeclarationRule());
					}
					set(
						$current,
						"TypeDecl",
						lv_TypeDecl_1_0,
						"com.ufcg.compiladores.Go.TypeDecl");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getDeclarationAccess().getVarDeclVarDeclParserRuleCall_2_0());
				}
				lv_VarDecl_2_0=ruleVarDecl
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDeclarationRule());
					}
					set(
						$current,
						"VarDecl",
						lv_VarDecl_2_0,
						"com.ufcg.compiladores.Go.VarDecl");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleTopLevelDecl
entryRuleTopLevelDecl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTopLevelDeclRule()); }
	iv_ruleTopLevelDecl=ruleTopLevelDecl
	{ $current=$iv_ruleTopLevelDecl.current; }
	EOF;

// Rule TopLevelDecl
ruleTopLevelDecl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getTopLevelDeclAccess().getDeclarationDeclarationParserRuleCall_0_0());
				}
				lv_Declaration_0_0=ruleDeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTopLevelDeclRule());
					}
					set(
						$current,
						"Declaration",
						lv_Declaration_0_0,
						"com.ufcg.compiladores.Go.Declaration");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			otherlv_1='func'
			{
				newLeafNode(otherlv_1, grammarAccess.getTopLevelDeclAccess().getFuncKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTopLevelDeclAccess().getTopLevelDeclLinhaTopLevelDeclLinhaParserRuleCall_1_1_0());
					}
					lv_topLevelDeclLinha_2_0=ruletopLevelDeclLinha
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTopLevelDeclRule());
						}
						set(
							$current,
							"topLevelDeclLinha",
							lv_topLevelDeclLinha_2_0,
							"com.ufcg.compiladores.Go.topLevelDeclLinha");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuletopLevelDeclLinha
entryRuletopLevelDeclLinha returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTopLevelDeclLinhaRule()); }
	iv_ruletopLevelDeclLinha=ruletopLevelDeclLinha
	{ $current=$iv_ruletopLevelDeclLinha.current; }
	EOF;

// Rule topLevelDeclLinha
ruletopLevelDeclLinha returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getTopLevelDeclLinhaAccess().getFunctionNameFunctionNameParserRuleCall_0_0_0());
					}
					lv_FunctionName_0_0=ruleFunctionName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTopLevelDeclLinhaRule());
						}
						set(
							$current,
							"FunctionName",
							lv_FunctionName_0_0,
							"com.ufcg.compiladores.Go.FunctionName");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getTopLevelDeclLinhaAccess().getSignatureSignatureParserRuleCall_0_1_0());
					}
					lv_Signature_1_0=ruleSignature
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTopLevelDeclLinhaRule());
						}
						set(
							$current,
							"Signature",
							lv_Signature_1_0,
							"com.ufcg.compiladores.Go.Signature");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getTopLevelDeclLinhaAccess().getFunctionBodyFunctionBodyParserRuleCall_0_2_0());
					}
					lv_FunctionBody_2_0=ruleFunctionBody
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTopLevelDeclLinhaRule());
						}
						set(
							$current,
							"FunctionBody",
							lv_FunctionBody_2_0,
							"com.ufcg.compiladores.Go.FunctionBody");
						afterParserOrEnumRuleCall();
					}
				)
			)?
		)
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getTopLevelDeclLinhaAccess().getReceiverReceiverParserRuleCall_1_0_0());
					}
					lv_Receiver_3_0=ruleReceiver
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTopLevelDeclLinhaRule());
						}
						set(
							$current,
							"Receiver",
							lv_Receiver_3_0,
							"com.ufcg.compiladores.Go.Receiver");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getTopLevelDeclLinhaAccess().getMethodNameMethodNameParserRuleCall_1_1_0());
					}
					lv_MethodName_4_0=ruleMethodName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTopLevelDeclLinhaRule());
						}
						set(
							$current,
							"MethodName",
							lv_MethodName_4_0,
							"com.ufcg.compiladores.Go.MethodName");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getTopLevelDeclLinhaAccess().getSignatureSignatureParserRuleCall_1_2_0());
					}
					lv_Signature_5_0=ruleSignature
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTopLevelDeclLinhaRule());
						}
						set(
							$current,
							"Signature",
							lv_Signature_5_0,
							"com.ufcg.compiladores.Go.Signature");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getTopLevelDeclLinhaAccess().getFunctionBodyFunctionBodyParserRuleCall_1_3_0());
					}
					lv_FunctionBody_6_0=ruleFunctionBody
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTopLevelDeclLinhaRule());
						}
						set(
							$current,
							"FunctionBody",
							lv_FunctionBody_6_0,
							"com.ufcg.compiladores.Go.FunctionBody");
						afterParserOrEnumRuleCall();
					}
				)
			)?
		)
	)
;

// Entry rule entryRuleConstDecl
entryRuleConstDecl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConstDeclRule()); }
	iv_ruleConstDecl=ruleConstDecl
	{ $current=$iv_ruleConstDecl.current; }
	EOF;

// Rule ConstDecl
ruleConstDecl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getConstDeclAccess().getConstDeclAction_0(),
					$current);
			}
		)
		otherlv_1='const'
		{
			newLeafNode(otherlv_1, grammarAccess.getConstDeclAccess().getConstKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getConstDeclAccess().getConstSpecConstSpecParserRuleCall_2_0_0());
					}
					lv_ConstSpec_2_0=ruleConstSpec
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConstDeclRule());
						}
						set(
							$current,
							"ConstSpec",
							lv_ConstSpec_2_0,
							"com.ufcg.compiladores.Go.ConstSpec");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				otherlv_3='('
				{
					newLeafNode(otherlv_3, grammarAccess.getConstDeclAccess().getLeftParenthesisKeyword_2_1_0());
				}
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getConstDeclAccess().getConstSpecConstSpecParserRuleCall_2_1_1_0_0());
							}
							lv_ConstSpec_4_0=ruleConstSpec
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getConstDeclRule());
								}
								set(
									$current,
									"ConstSpec",
									lv_ConstSpec_4_0,
									"com.ufcg.compiladores.Go.ConstSpec");
								afterParserOrEnumRuleCall();
							}
						)
					)
					otherlv_5=';'
					{
						newLeafNode(otherlv_5, grammarAccess.getConstDeclAccess().getSemicolonKeyword_2_1_1_1());
					}
				)?
				otherlv_6=')'
				{
					newLeafNode(otherlv_6, grammarAccess.getConstDeclAccess().getRightParenthesisKeyword_2_1_2());
				}
			)
		)
	)
;

// Entry rule entryRuleConstSpec
entryRuleConstSpec returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConstSpecRule()); }
	iv_ruleConstSpec=ruleConstSpec
	{ $current=$iv_ruleConstSpec.current; }
	EOF;

// Rule ConstSpec
ruleConstSpec returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getConstSpecAccess().getIdentifierListIdentifierListParserRuleCall_0_0());
				}
				lv_IdentifierList_0_0=ruleIdentifierList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConstSpecRule());
					}
					set(
						$current,
						"IdentifierList",
						lv_IdentifierList_0_0,
						"com.ufcg.compiladores.Go.IdentifierList");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getConstSpecAccess().getTypeTypeParserRuleCall_1_0_0());
					}
					lv_Type_1_0=ruleType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConstSpecRule());
						}
						set(
							$current,
							"Type",
							lv_Type_1_0,
							"com.ufcg.compiladores.Go.Type");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			otherlv_2='='
			{
				newLeafNode(otherlv_2, grammarAccess.getConstSpecAccess().getEqualsSignKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConstSpecAccess().getExpressionListExpressionListParserRuleCall_1_2_0());
					}
					lv_ExpressionList_3_0=ruleExpressionList
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConstSpecRule());
						}
						set(
							$current,
							"ExpressionList",
							lv_ExpressionList_3_0,
							"com.ufcg.compiladores.Go.ExpressionList");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleIdentifierList
entryRuleIdentifierList returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIdentifierListRule()); }
	iv_ruleIdentifierList=ruleIdentifierList
	{ $current=$iv_ruleIdentifierList.current; }
	EOF;

// Rule IdentifierList
ruleIdentifierList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getIdentifierListAccess().getIdentifierIdentifierParserRuleCall_0_0());
				}
				lv_identifier_0_0=ruleidentifier
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIdentifierListRule());
					}
					add(
						$current,
						"identifier",
						lv_identifier_0_0,
						"com.ufcg.compiladores.Go.identifier");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1=','
			{
				newLeafNode(otherlv_1, grammarAccess.getIdentifierListAccess().getCommaKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getIdentifierListAccess().getIdentifierIdentifierParserRuleCall_1_1_0());
					}
					lv_identifier_2_0=ruleidentifier
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getIdentifierListRule());
						}
						add(
							$current,
							"identifier",
							lv_identifier_2_0,
							"com.ufcg.compiladores.Go.identifier");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleExpressionList
entryRuleExpressionList returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionListRule()); }
	iv_ruleExpressionList=ruleExpressionList
	{ $current=$iv_ruleExpressionList.current; }
	EOF;

// Rule ExpressionList
ruleExpressionList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getExpressionListAccess().getExpressionExpressionParserRuleCall_0_0());
				}
				lv_Expression_0_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExpressionListRule());
					}
					add(
						$current,
						"Expression",
						lv_Expression_0_0,
						"com.ufcg.compiladores.Go.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1=','
			{
				newLeafNode(otherlv_1, grammarAccess.getExpressionListAccess().getCommaKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getExpressionListAccess().getExpressionExpressionParserRuleCall_1_1_0());
					}
					lv_Expression_2_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExpressionListRule());
						}
						add(
							$current,
							"Expression",
							lv_Expression_2_0,
							"com.ufcg.compiladores.Go.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleTypeDecl
entryRuleTypeDecl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeDeclRule()); }
	iv_ruleTypeDecl=ruleTypeDecl
	{ $current=$iv_ruleTypeDecl.current; }
	EOF;

// Rule TypeDecl
ruleTypeDecl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getTypeDeclAccess().getTypeDeclAction_0(),
					$current);
			}
		)
		otherlv_1='type'
		{
			newLeafNode(otherlv_1, grammarAccess.getTypeDeclAccess().getTypeKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getTypeDeclAccess().getTypeSpecTypeSpecParserRuleCall_2_0_0());
					}
					lv_TypeSpec_2_0=ruleTypeSpec
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTypeDeclRule());
						}
						set(
							$current,
							"TypeSpec",
							lv_TypeSpec_2_0,
							"com.ufcg.compiladores.Go.TypeSpec");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				otherlv_3='('
				{
					newLeafNode(otherlv_3, grammarAccess.getTypeDeclAccess().getLeftParenthesisKeyword_2_1_0());
				}
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getTypeDeclAccess().getTypeSpecTypeSpecParserRuleCall_2_1_1_0_0());
							}
							lv_TypeSpec_4_0=ruleTypeSpec
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getTypeDeclRule());
								}
								set(
									$current,
									"TypeSpec",
									lv_TypeSpec_4_0,
									"com.ufcg.compiladores.Go.TypeSpec");
								afterParserOrEnumRuleCall();
							}
						)
					)
					otherlv_5=';'
					{
						newLeafNode(otherlv_5, grammarAccess.getTypeDeclAccess().getSemicolonKeyword_2_1_1_1());
					}
				)?
				otherlv_6=')'
				{
					newLeafNode(otherlv_6, grammarAccess.getTypeDeclAccess().getRightParenthesisKeyword_2_1_2());
				}
			)
		)
	)
;

// Entry rule entryRuleTypeSpec
entryRuleTypeSpec returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeSpecRule()); }
	iv_ruleTypeSpec=ruleTypeSpec
	{ $current=$iv_ruleTypeSpec.current; }
	EOF;

// Rule TypeSpec
ruleTypeSpec returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getTypeSpecAccess().getAliasDeclParserRuleCall_0());
		}
		this_AliasDecl_0=ruleAliasDecl
		{
			$current = $this_AliasDecl_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getTypeSpecAccess().getTypeDefParserRuleCall_1());
		}
		this_TypeDef_1=ruleTypeDef
		{
			$current = $this_TypeDef_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleAliasDecl
entryRuleAliasDecl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAliasDeclRule()); }
	iv_ruleAliasDecl=ruleAliasDecl
	{ $current=$iv_ruleAliasDecl.current; }
	EOF;

// Rule AliasDecl
ruleAliasDecl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getAliasDeclAccess().getIdentifierIdentifierParserRuleCall_0_0());
				}
				lv_identifier_0_0=ruleidentifier
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAliasDeclRule());
					}
					set(
						$current,
						"identifier",
						lv_identifier_0_0,
						"com.ufcg.compiladores.Go.identifier");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getAliasDeclAccess().getEqualsSignKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAliasDeclAccess().getTypeTypeParserRuleCall_2_0());
				}
				lv_Type_2_0=ruleType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAliasDeclRule());
					}
					set(
						$current,
						"Type",
						lv_Type_2_0,
						"com.ufcg.compiladores.Go.Type");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleTypeDef
entryRuleTypeDef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeDefRule()); }
	iv_ruleTypeDef=ruleTypeDef
	{ $current=$iv_ruleTypeDef.current; }
	EOF;

// Rule TypeDef
ruleTypeDef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getTypeDefAccess().getIdentifierIdentifierParserRuleCall_0_0());
				}
				lv_identifier_0_0=ruleidentifier
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTypeDefRule());
					}
					set(
						$current,
						"identifier",
						lv_identifier_0_0,
						"com.ufcg.compiladores.Go.identifier");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getTypeDefAccess().getTypeTypeParserRuleCall_1_0());
				}
				lv_Type_1_0=ruleType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTypeDefRule());
					}
					set(
						$current,
						"Type",
						lv_Type_1_0,
						"com.ufcg.compiladores.Go.Type");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleVarDecl
entryRuleVarDecl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVarDeclRule()); }
	iv_ruleVarDecl=ruleVarDecl
	{ $current=$iv_ruleVarDecl.current; }
	EOF;

// Rule VarDecl
ruleVarDecl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getVarDeclAccess().getVarDeclAction_0(),
					$current);
			}
		)
		otherlv_1='var'
		{
			newLeafNode(otherlv_1, grammarAccess.getVarDeclAccess().getVarKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getVarDeclAccess().getVarSpecVarSpecParserRuleCall_2_0_0());
					}
					lv_VarSpec_2_0=ruleVarSpec
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVarDeclRule());
						}
						set(
							$current,
							"VarSpec",
							lv_VarSpec_2_0,
							"com.ufcg.compiladores.Go.VarSpec");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				otherlv_3='('
				{
					newLeafNode(otherlv_3, grammarAccess.getVarDeclAccess().getLeftParenthesisKeyword_2_1_0());
				}
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getVarDeclAccess().getVarSpecVarSpecParserRuleCall_2_1_1_0_0());
							}
							lv_VarSpec_4_0=ruleVarSpec
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getVarDeclRule());
								}
								set(
									$current,
									"VarSpec",
									lv_VarSpec_4_0,
									"com.ufcg.compiladores.Go.VarSpec");
								afterParserOrEnumRuleCall();
							}
						)
					)
					otherlv_5=';'
					{
						newLeafNode(otherlv_5, grammarAccess.getVarDeclAccess().getSemicolonKeyword_2_1_1_1());
					}
				)?
				otherlv_6=')'
				{
					newLeafNode(otherlv_6, grammarAccess.getVarDeclAccess().getRightParenthesisKeyword_2_1_2());
				}
			)
		)
	)
;

// Entry rule entryRuleVarSpec
entryRuleVarSpec returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVarSpecRule()); }
	iv_ruleVarSpec=ruleVarSpec
	{ $current=$iv_ruleVarSpec.current; }
	EOF;

// Rule VarSpec
ruleVarSpec returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getVarSpecAccess().getIdentifierListIdentifierListParserRuleCall_0_0());
				}
				lv_IdentifierList_0_0=ruleIdentifierList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVarSpecRule());
					}
					set(
						$current,
						"IdentifierList",
						lv_IdentifierList_0_0,
						"com.ufcg.compiladores.Go.IdentifierList");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getVarSpecAccess().getTypeTypeParserRuleCall_1_0_0_0());
						}
						lv_Type_1_0=ruleType
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getVarSpecRule());
							}
							set(
								$current,
								"Type",
								lv_Type_1_0,
								"com.ufcg.compiladores.Go.Type");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_2='='
					{
						newLeafNode(otherlv_2, grammarAccess.getVarSpecAccess().getEqualsSignKeyword_1_0_1_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getVarSpecAccess().getExpressionListExpressionListParserRuleCall_1_0_1_1_0());
							}
							lv_ExpressionList_3_0=ruleExpressionList
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getVarSpecRule());
								}
								set(
									$current,
									"ExpressionList",
									lv_ExpressionList_3_0,
									"com.ufcg.compiladores.Go.ExpressionList");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)?
			)
			    |
			(
				otherlv_4='='
				{
					newLeafNode(otherlv_4, grammarAccess.getVarSpecAccess().getEqualsSignKeyword_1_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getVarSpecAccess().getExpressionListExpressionListParserRuleCall_1_1_1_0());
						}
						lv_ExpressionList_5_0=ruleExpressionList
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getVarSpecRule());
							}
							set(
								$current,
								"ExpressionList",
								lv_ExpressionList_5_0,
								"com.ufcg.compiladores.Go.ExpressionList");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)
	)
;

// Entry rule entryRuleShortVarDecl
entryRuleShortVarDecl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getShortVarDeclRule()); }
	iv_ruleShortVarDecl=ruleShortVarDecl
	{ $current=$iv_ruleShortVarDecl.current; }
	EOF;

// Rule ShortVarDecl
ruleShortVarDecl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getShortVarDeclAccess().getIdentifierListIdentifierListParserRuleCall_0_0());
				}
				lv_IdentifierList_0_0=ruleIdentifierList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getShortVarDeclRule());
					}
					set(
						$current,
						"IdentifierList",
						lv_IdentifierList_0_0,
						"com.ufcg.compiladores.Go.IdentifierList");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1=':='
		{
			newLeafNode(otherlv_1, grammarAccess.getShortVarDeclAccess().getColonEqualsSignKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getShortVarDeclAccess().getExpressionListExpressionListParserRuleCall_2_0());
				}
				lv_ExpressionList_2_0=ruleExpressionList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getShortVarDeclRule());
					}
					set(
						$current,
						"ExpressionList",
						lv_ExpressionList_2_0,
						"com.ufcg.compiladores.Go.ExpressionList");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleFunctionName
entryRuleFunctionName returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFunctionNameRule()); }
	iv_ruleFunctionName=ruleFunctionName
	{ $current=$iv_ruleFunctionName.current; }
	EOF;

// Rule FunctionName
ruleFunctionName returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getFunctionNameAccess().getIdentifierIdentifierParserRuleCall_0());
			}
			lv_identifier_0_0=ruleidentifier
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getFunctionNameRule());
				}
				set(
					$current,
					"identifier",
					lv_identifier_0_0,
					"com.ufcg.compiladores.Go.identifier");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleFunctionBody
entryRuleFunctionBody returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFunctionBodyRule()); }
	iv_ruleFunctionBody=ruleFunctionBody
	{ $current=$iv_ruleFunctionBody.current; }
	EOF;

// Rule FunctionBody
ruleFunctionBody returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getFunctionBodyAccess().getBlockBlockParserRuleCall_0());
			}
			lv_Block_0_0=ruleBlock
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getFunctionBodyRule());
				}
				set(
					$current,
					"Block",
					lv_Block_0_0,
					"com.ufcg.compiladores.Go.Block");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleReceiver
entryRuleReceiver returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReceiverRule()); }
	iv_ruleReceiver=ruleReceiver
	{ $current=$iv_ruleReceiver.current; }
	EOF;

// Rule Receiver
ruleReceiver returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		/* */
	}
	{
		newCompositeNode(grammarAccess.getReceiverAccess().getParametersParserRuleCall());
	}
	this_Parameters_0=ruleParameters
	{
		$current = $this_Parameters_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleOperand
entryRuleOperand returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOperandRule()); }
	iv_ruleOperand=ruleOperand
	{ $current=$iv_ruleOperand.current; }
	EOF;

// Rule Operand
ruleOperand returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getOperandAccess().getLiteralLiteralParserRuleCall_0_0());
				}
				lv_Literal_0_0=ruleLiteral
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOperandRule());
					}
					set(
						$current,
						"Literal",
						lv_Literal_0_0,
						"com.ufcg.compiladores.Go.Literal");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getOperandAccess().getOperandNameOperandNameParserRuleCall_1_0());
				}
				lv_OperandName_1_0=ruleOperandName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOperandRule());
					}
					set(
						$current,
						"OperandName",
						lv_OperandName_1_0,
						"com.ufcg.compiladores.Go.OperandName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			otherlv_2='('
			{
				newLeafNode(otherlv_2, grammarAccess.getOperandAccess().getLeftParenthesisKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getOperandAccess().getExpressionExpressionParserRuleCall_2_1_0());
					}
					lv_Expression_3_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOperandRule());
						}
						set(
							$current,
							"Expression",
							lv_Expression_3_0,
							"com.ufcg.compiladores.Go.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_4=')'
			{
				newLeafNode(otherlv_4, grammarAccess.getOperandAccess().getRightParenthesisKeyword_2_2());
			}
		)
	)
;

// Entry rule entryRuleLiteral
entryRuleLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLiteralRule()); }
	iv_ruleLiteral=ruleLiteral
	{ $current=$iv_ruleLiteral.current; }
	EOF;

// Rule Literal
ruleLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getLiteralAccess().getBasicLitBasicLitParserRuleCall_0_0());
				}
				lv_BasicLit_0_0=ruleBasicLit
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLiteralRule());
					}
					set(
						$current,
						"BasicLit",
						lv_BasicLit_0_0,
						"com.ufcg.compiladores.Go.BasicLit");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getLiteralAccess().getCompositeLitParserRuleCall_1());
		}
		this_CompositeLit_1=ruleCompositeLit
		{
			$current = $this_CompositeLit_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getLiteralAccess().getFunctionLitParserRuleCall_2());
		}
		this_FunctionLit_2=ruleFunctionLit
		{
			$current = $this_FunctionLit_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleBasicLit
entryRuleBasicLit returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBasicLitRule()); }
	iv_ruleBasicLit=ruleBasicLit
	{ $current=$iv_ruleBasicLit.current; }
	EOF;

// Rule BasicLit
ruleBasicLit returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getBasicLitAccess().getBasicLitAction_0_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getBasicLitAccess().getInt_litInt_litParserRuleCall_0_1_0());
					}
					lv_int_lit_1_0=ruleint_lit
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBasicLitRule());
						}
						set(
							$current,
							"int_lit",
							lv_int_lit_1_0,
							"com.ufcg.compiladores.Go.int_lit");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getBasicLitAccess().getFloat_litFloat_litParserRuleCall_1_0());
				}
				lv_float_lit_2_0=rulefloat_lit
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBasicLitRule());
					}
					set(
						$current,
						"float_lit",
						lv_float_lit_2_0,
						"com.ufcg.compiladores.Go.float_lit");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getBasicLitAccess().getRune_litRune_litParserRuleCall_2_0());
				}
				lv_rune_lit_3_0=rulerune_lit
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBasicLitRule());
					}
					set(
						$current,
						"rune_lit",
						lv_rune_lit_3_0,
						"com.ufcg.compiladores.Go.rune_lit");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getBasicLitAccess().getString_litString_litParserRuleCall_3_0());
				}
				lv_string_lit_4_0=rulestring_lit
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBasicLitRule());
					}
					set(
						$current,
						"string_lit",
						lv_string_lit_4_0,
						"com.ufcg.compiladores.Go.string_lit");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleOperandName
entryRuleOperandName returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOperandNameRule()); }
	iv_ruleOperandName=ruleOperandName
	{ $current=$iv_ruleOperandName.current; }
	EOF;

// Rule OperandName
ruleOperandName returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getOperandNameAccess().getIdentifierParserRuleCall_0());
		}
		this_identifier_0=ruleidentifier
		{
			$current = $this_identifier_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getOperandNameAccess().getQualifiedIdentParserRuleCall_1());
		}
		this_QualifiedIdent_1=ruleQualifiedIdent
		{
			$current = $this_QualifiedIdent_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleQualifiedIdent
entryRuleQualifiedIdent returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getQualifiedIdentRule()); }
	iv_ruleQualifiedIdent=ruleQualifiedIdent
	{ $current=$iv_ruleQualifiedIdent.current; }
	EOF;

// Rule QualifiedIdent
ruleQualifiedIdent returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getQualifiedIdentAccess().getPackageNamePackageNameParserRuleCall_0_0());
				}
				lv_PackageName_0_0=rulePackageName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getQualifiedIdentRule());
					}
					set(
						$current,
						"PackageName",
						lv_PackageName_0_0,
						"com.ufcg.compiladores.Go.PackageName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='.'
		{
			newLeafNode(otherlv_1, grammarAccess.getQualifiedIdentAccess().getFullStopKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getQualifiedIdentAccess().getIdentifierIdentifierParserRuleCall_2_0());
				}
				lv_identifier_2_0=ruleidentifier
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getQualifiedIdentRule());
					}
					set(
						$current,
						"identifier",
						lv_identifier_2_0,
						"com.ufcg.compiladores.Go.identifier");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleCompositeLit
entryRuleCompositeLit returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCompositeLitRule()); }
	iv_ruleCompositeLit=ruleCompositeLit
	{ $current=$iv_ruleCompositeLit.current; }
	EOF;

// Rule CompositeLit
ruleCompositeLit returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getCompositeLitAccess().getLiteralTypeLiteralTypeParserRuleCall_0_0());
				}
				lv_LiteralType_0_0=ruleLiteralType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCompositeLitRule());
					}
					set(
						$current,
						"LiteralType",
						lv_LiteralType_0_0,
						"com.ufcg.compiladores.Go.LiteralType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getCompositeLitAccess().getLiteralValueLiteralValueParserRuleCall_1_0());
				}
				lv_LiteralValue_1_0=ruleLiteralValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCompositeLitRule());
					}
					set(
						$current,
						"LiteralValue",
						lv_LiteralValue_1_0,
						"com.ufcg.compiladores.Go.LiteralValue");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleLiteralType
entryRuleLiteralType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLiteralTypeRule()); }
	iv_ruleLiteralType=ruleLiteralType
	{ $current=$iv_ruleLiteralType.current; }
	EOF;

// Rule LiteralType
ruleLiteralType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getLiteralTypeAccess().getStructTypeStructTypeParserRuleCall_0_0());
				}
				lv_StructType_0_0=ruleStructType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLiteralTypeRule());
					}
					set(
						$current,
						"StructType",
						lv_StructType_0_0,
						"com.ufcg.compiladores.Go.StructType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			otherlv_1='['
			{
				newLeafNode(otherlv_1, grammarAccess.getLiteralTypeAccess().getLeftSquareBracketKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getLiteralTypeAccess().getLiteralTypeLinhaLiteralTypeLinhaParserRuleCall_1_1_0());
					}
					lv_LiteralTypeLinha_2_0=ruleLiteralTypeLinha
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLiteralTypeRule());
						}
						set(
							$current,
							"LiteralTypeLinha",
							lv_LiteralTypeLinha_2_0,
							"com.ufcg.compiladores.Go.LiteralTypeLinha");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getLiteralTypeAccess().getElementTypeElementTypeParserRuleCall_2_0());
				}
				lv_ElementType_3_0=ruleElementType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLiteralTypeRule());
					}
					set(
						$current,
						"ElementType",
						lv_ElementType_3_0,
						"com.ufcg.compiladores.Go.ElementType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getLiteralTypeAccess().getMapTypeMapTypeParserRuleCall_3_0());
				}
				lv_MapType_4_0=ruleMapType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLiteralTypeRule());
					}
					set(
						$current,
						"MapType",
						lv_MapType_4_0,
						"com.ufcg.compiladores.Go.MapType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getLiteralTypeAccess().getTypeNameTypeNameParserRuleCall_4_0());
				}
				lv_TypeName_5_0=ruleTypeName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLiteralTypeRule());
					}
					set(
						$current,
						"TypeName",
						lv_TypeName_5_0,
						"com.ufcg.compiladores.Go.TypeName");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleLiteralTypeLinha
entryRuleLiteralTypeLinha returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLiteralTypeLinhaRule()); }
	iv_ruleLiteralTypeLinha=ruleLiteralTypeLinha
	{ $current=$iv_ruleLiteralTypeLinha.current; }
	EOF;

// Rule LiteralTypeLinha
ruleLiteralTypeLinha returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getLiteralTypeLinhaAccess().getArrayLengthArrayLengthParserRuleCall_0_0_0());
					}
					lv_ArrayLength_0_0=ruleArrayLength
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLiteralTypeLinhaRule());
						}
						set(
							$current,
							"ArrayLength",
							lv_ArrayLength_0_0,
							"com.ufcg.compiladores.Go.ArrayLength");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_1=']'
			{
				newLeafNode(otherlv_1, grammarAccess.getLiteralTypeLinhaAccess().getRightSquareBracketKeyword_0_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getLiteralTypeLinhaAccess().getElementTypeElementTypeParserRuleCall_0_2_0());
					}
					lv_ElementType_2_0=ruleElementType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLiteralTypeLinhaRule());
						}
						set(
							$current,
							"ElementType",
							lv_ElementType_2_0,
							"com.ufcg.compiladores.Go.ElementType");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			otherlv_3=']'
			{
				newLeafNode(otherlv_3, grammarAccess.getLiteralTypeLinhaAccess().getRightSquareBracketKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getLiteralTypeLinhaAccess().getElementTypeElementTypeParserRuleCall_1_1_0());
					}
					lv_ElementType_4_0=ruleElementType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLiteralTypeLinhaRule());
						}
						set(
							$current,
							"ElementType",
							lv_ElementType_4_0,
							"com.ufcg.compiladores.Go.ElementType");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getLiteralTypeLinhaAccess().getLiteralTypeLinhaAction_2_0(),
						$current);
				}
			)
			otherlv_6='...'
			{
				newLeafNode(otherlv_6, grammarAccess.getLiteralTypeLinhaAccess().getFullStopFullStopFullStopKeyword_2_1());
			}
			otherlv_7=']'
			{
				newLeafNode(otherlv_7, grammarAccess.getLiteralTypeLinhaAccess().getRightSquareBracketKeyword_2_2());
			}
		)
	)
;

// Entry rule entryRuleLiteralValue
entryRuleLiteralValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLiteralValueRule()); }
	iv_ruleLiteralValue=ruleLiteralValue
	{ $current=$iv_ruleLiteralValue.current; }
	EOF;

// Rule LiteralValue
ruleLiteralValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getLiteralValueAccess().getLiteralValueAction_0(),
					$current);
			}
		)
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getLiteralValueAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getLiteralValueAccess().getElementListElementListParserRuleCall_2_0_0());
					}
					lv_ElementList_2_0=ruleElementList
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLiteralValueRule());
						}
						set(
							$current,
							"ElementList",
							lv_ElementList_2_0,
							"com.ufcg.compiladores.Go.ElementList");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3=','
				{
					newLeafNode(otherlv_3, grammarAccess.getLiteralValueAccess().getCommaKeyword_2_1());
				}
			)?
		)?
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getLiteralValueAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleElementList
entryRuleElementList returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getElementListRule()); }
	iv_ruleElementList=ruleElementList
	{ $current=$iv_ruleElementList.current; }
	EOF;

// Rule ElementList
ruleElementList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getElementListAccess().getKeyedElementKeyedElementParserRuleCall_0_0());
				}
				lv_KeyedElement_0_0=ruleKeyedElement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getElementListRule());
					}
					add(
						$current,
						"KeyedElement",
						lv_KeyedElement_0_0,
						"com.ufcg.compiladores.Go.KeyedElement");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1=','
			{
				newLeafNode(otherlv_1, grammarAccess.getElementListAccess().getCommaKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getElementListAccess().getKeyedElementKeyedElementParserRuleCall_1_1_0());
					}
					lv_KeyedElement_2_0=ruleKeyedElement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getElementListRule());
						}
						add(
							$current,
							"KeyedElement",
							lv_KeyedElement_2_0,
							"com.ufcg.compiladores.Go.KeyedElement");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleElement
entryRuleElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getElementRule()); }
	iv_ruleElement=ruleElement
	{ $current=$iv_ruleElement.current; }
	EOF;

// Rule Element
ruleElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getElementAccess().getExpressionExpressionParserRuleCall_0_0());
				}
				lv_Expression_0_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getElementRule());
					}
					set(
						$current,
						"Expression",
						lv_Expression_0_0,
						"com.ufcg.compiladores.Go.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getElementAccess().getLiteralValueLiteralValueParserRuleCall_1_0());
				}
				lv_LiteralValue_1_0=ruleLiteralValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getElementRule());
					}
					set(
						$current,
						"LiteralValue",
						lv_LiteralValue_1_0,
						"com.ufcg.compiladores.Go.LiteralValue");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleKeyedElement
entryRuleKeyedElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getKeyedElementRule()); }
	iv_ruleKeyedElement=ruleKeyedElement
	{ $current=$iv_ruleKeyedElement.current; }
	EOF;

// Rule KeyedElement
ruleKeyedElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getKeyedElementAccess().getKeyKeyParserRuleCall_0_0_0());
					}
					lv_Key_0_0=ruleKey
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getKeyedElementRule());
						}
						set(
							$current,
							"Key",
							lv_Key_0_0,
							"com.ufcg.compiladores.Go.Key");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_1=':'
			{
				newLeafNode(otherlv_1, grammarAccess.getKeyedElementAccess().getColonKeyword_0_1());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getKeyedElementAccess().getElementElementParserRuleCall_1_0());
				}
				lv_Element_2_0=ruleElement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getKeyedElementRule());
					}
					set(
						$current,
						"Element",
						lv_Element_2_0,
						"com.ufcg.compiladores.Go.Element");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleKey
entryRuleKey returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getKeyRule()); }
	iv_ruleKey=ruleKey
	{ $current=$iv_ruleKey.current; }
	EOF;

// Rule Key
ruleKey returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getKeyAccess().getFieldNameFieldNameParserRuleCall_0_0());
				}
				lv_FieldName_0_0=ruleFieldName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getKeyRule());
					}
					set(
						$current,
						"FieldName",
						lv_FieldName_0_0,
						"com.ufcg.compiladores.Go.FieldName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getKeyAccess().getExpressionExpressionParserRuleCall_1_0());
				}
				lv_Expression_1_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getKeyRule());
					}
					set(
						$current,
						"Expression",
						lv_Expression_1_0,
						"com.ufcg.compiladores.Go.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getKeyAccess().getLiteralValueLiteralValueParserRuleCall_2_0());
				}
				lv_LiteralValue_2_0=ruleLiteralValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getKeyRule());
					}
					set(
						$current,
						"LiteralValue",
						lv_LiteralValue_2_0,
						"com.ufcg.compiladores.Go.LiteralValue");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleFieldName
entryRuleFieldName returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFieldNameRule()); }
	iv_ruleFieldName=ruleFieldName
	{ $current=$iv_ruleFieldName.current; }
	EOF;

// Rule FieldName
ruleFieldName returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getFieldNameAccess().getIdentifierIdentifierParserRuleCall_0());
			}
			lv_identifier_0_0=ruleidentifier
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getFieldNameRule());
				}
				set(
					$current,
					"identifier",
					lv_identifier_0_0,
					"com.ufcg.compiladores.Go.identifier");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleFunctionLit
entryRuleFunctionLit returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFunctionLitRule()); }
	iv_ruleFunctionLit=ruleFunctionLit
	{ $current=$iv_ruleFunctionLit.current; }
	EOF;

// Rule FunctionLit
ruleFunctionLit returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='func'
		{
			newLeafNode(otherlv_0, grammarAccess.getFunctionLitAccess().getFuncKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFunctionLitAccess().getSignatureSignatureParserRuleCall_1_0());
				}
				lv_Signature_1_0=ruleSignature
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFunctionLitRule());
					}
					set(
						$current,
						"Signature",
						lv_Signature_1_0,
						"com.ufcg.compiladores.Go.Signature");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getFunctionLitAccess().getFunctionBodyFunctionBodyParserRuleCall_2_0());
				}
				lv_FunctionBody_2_0=ruleFunctionBody
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFunctionLitRule());
					}
					set(
						$current,
						"FunctionBody",
						lv_FunctionBody_2_0,
						"com.ufcg.compiladores.Go.FunctionBody");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRulePrimaryExpr
entryRulePrimaryExpr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrimaryExprRule()); }
	iv_rulePrimaryExpr=rulePrimaryExpr
	{ $current=$iv_rulePrimaryExpr.current; }
	EOF;

// Rule PrimaryExpr
rulePrimaryExpr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getPrimaryExprAccess().getOperandOperandParserRuleCall_0_0_0());
					}
					lv_Operand_0_0=ruleOperand
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrimaryExprRule());
						}
						set(
							$current,
							"Operand",
							lv_Operand_0_0,
							"com.ufcg.compiladores.Go.Operand");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getPrimaryExprAccess().getPrimaryExprLinhaPrimaryExprLinhaParserRuleCall_0_1_0());
					}
					lv_PrimaryExprLinha_1_0=rulePrimaryExprLinha
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrimaryExprRule());
						}
						set(
							$current,
							"PrimaryExprLinha",
							lv_PrimaryExprLinha_1_0,
							"com.ufcg.compiladores.Go.PrimaryExprLinha");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getPrimaryExprAccess().getConversionConversionParserRuleCall_1_0_0());
					}
					lv_Conversion_2_0=ruleConversion
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrimaryExprRule());
						}
						set(
							$current,
							"Conversion",
							lv_Conversion_2_0,
							"com.ufcg.compiladores.Go.Conversion");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getPrimaryExprAccess().getPrimaryExprLinhaPrimaryExprLinhaParserRuleCall_1_1_0());
					}
					lv_PrimaryExprLinha_3_0=rulePrimaryExprLinha
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrimaryExprRule());
						}
						set(
							$current,
							"PrimaryExprLinha",
							lv_PrimaryExprLinha_3_0,
							"com.ufcg.compiladores.Go.PrimaryExprLinha");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getPrimaryExprAccess().getMethodExprMethodExprParserRuleCall_2_0_0());
					}
					lv_MethodExpr_4_0=ruleMethodExpr
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrimaryExprRule());
						}
						set(
							$current,
							"MethodExpr",
							lv_MethodExpr_4_0,
							"com.ufcg.compiladores.Go.MethodExpr");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getPrimaryExprAccess().getPrimaryExprLinhaPrimaryExprLinhaParserRuleCall_2_1_0());
					}
					lv_PrimaryExprLinha_5_0=rulePrimaryExprLinha
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrimaryExprRule());
						}
						set(
							$current,
							"PrimaryExprLinha",
							lv_PrimaryExprLinha_5_0,
							"com.ufcg.compiladores.Go.PrimaryExprLinha");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRulePrimaryExprLinha
entryRulePrimaryExprLinha returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrimaryExprLinhaRule()); }
	iv_rulePrimaryExprLinha=rulePrimaryExprLinha
	{ $current=$iv_rulePrimaryExprLinha.current; }
	EOF;

// Rule PrimaryExprLinha
rulePrimaryExprLinha returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getPrimaryExprLinhaAccess().getArgumentsArgumentsParserRuleCall_0_0_0());
					}
					lv_Arguments_0_0=ruleArguments
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrimaryExprLinhaRule());
						}
						set(
							$current,
							"Arguments",
							lv_Arguments_0_0,
							"com.ufcg.compiladores.Go.Arguments");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getPrimaryExprLinhaAccess().getPrimaryExprLinhaPrimaryExprLinhaParserRuleCall_0_1_0());
					}
					lv_PrimaryExprLinha_1_0=rulePrimaryExprLinha
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrimaryExprLinhaRule());
						}
						set(
							$current,
							"PrimaryExprLinha",
							lv_PrimaryExprLinha_1_0,
							"com.ufcg.compiladores.Go.PrimaryExprLinha");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			otherlv_2='.'
			{
				newLeafNode(otherlv_2, grammarAccess.getPrimaryExprLinhaAccess().getFullStopKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPrimaryExprLinhaAccess().getPontoPontoParserRuleCall_1_1_0());
					}
					lv_ponto_3_0=ruleponto
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrimaryExprLinhaRule());
						}
						set(
							$current,
							"ponto",
							lv_ponto_3_0,
							"com.ufcg.compiladores.Go.ponto");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			otherlv_4='['
			{
				newLeafNode(otherlv_4, grammarAccess.getPrimaryExprLinhaAccess().getLeftSquareBracketKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPrimaryExprLinhaAccess().getCochetesCochetesParserRuleCall_2_1_0());
					}
					lv_cochetes_5_0=rulecochetes
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrimaryExprLinhaRule());
						}
						set(
							$current,
							"cochetes",
							lv_cochetes_5_0,
							"com.ufcg.compiladores.Go.cochetes");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getPrimaryExprLinhaAccess().getPrimaryExprLinhaAction_3_0(),
						$current);
				}
			)
			this_ANY_OTHER_7=RULE_ANY_OTHER
			{
				newLeafNode(this_ANY_OTHER_7, grammarAccess.getPrimaryExprLinhaAccess().getANY_OTHERTerminalRuleCall_3_1());
			}
		)
	)
;

// Entry rule entryRuleponto
entryRuleponto returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPontoRule()); }
	iv_ruleponto=ruleponto
	{ $current=$iv_ruleponto.current; }
	EOF;

// Rule ponto
ruleponto returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getPontoAccess().getSelectorSelectorParserRuleCall_0_0_0());
					}
					lv_Selector_0_0=ruleSelector
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPontoRule());
						}
						set(
							$current,
							"Selector",
							lv_Selector_0_0,
							"com.ufcg.compiladores.Go.Selector");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getPontoAccess().getPrimaryExprLinhaPrimaryExprLinhaParserRuleCall_0_1_0());
					}
					lv_PrimaryExprLinha_1_0=rulePrimaryExprLinha
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPontoRule());
						}
						set(
							$current,
							"PrimaryExprLinha",
							lv_PrimaryExprLinha_1_0,
							"com.ufcg.compiladores.Go.PrimaryExprLinha");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getPontoAccess().getTypeAssertionTypeAssertionParserRuleCall_1_0_0());
					}
					lv_TypeAssertion_2_0=ruleTypeAssertion
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPontoRule());
						}
						set(
							$current,
							"TypeAssertion",
							lv_TypeAssertion_2_0,
							"com.ufcg.compiladores.Go.TypeAssertion");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getPontoAccess().getPrimaryExprLinhaPrimaryExprLinhaParserRuleCall_1_1_0());
					}
					lv_PrimaryExprLinha_3_0=rulePrimaryExprLinha
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPontoRule());
						}
						set(
							$current,
							"PrimaryExprLinha",
							lv_PrimaryExprLinha_3_0,
							"com.ufcg.compiladores.Go.PrimaryExprLinha");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRulecochetes
entryRulecochetes returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCochetesRule()); }
	iv_rulecochetes=rulecochetes
	{ $current=$iv_rulecochetes.current; }
	EOF;

// Rule cochetes
rulecochetes returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getCochetesAccess().getIndexIndexParserRuleCall_0_0_0());
					}
					lv_Index_0_0=ruleIndex
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCochetesRule());
						}
						set(
							$current,
							"Index",
							lv_Index_0_0,
							"com.ufcg.compiladores.Go.Index");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getCochetesAccess().getPrimaryExprLinhaPrimaryExprLinhaParserRuleCall_0_1_0());
					}
					lv_PrimaryExprLinha_1_0=rulePrimaryExprLinha
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCochetesRule());
						}
						set(
							$current,
							"PrimaryExprLinha",
							lv_PrimaryExprLinha_1_0,
							"com.ufcg.compiladores.Go.PrimaryExprLinha");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getCochetesAccess().getSliceSliceParserRuleCall_1_0_0());
					}
					lv_Slice_2_0=ruleSlice
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCochetesRule());
						}
						set(
							$current,
							"Slice",
							lv_Slice_2_0,
							"com.ufcg.compiladores.Go.Slice");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getCochetesAccess().getPrimaryExprLinhaPrimaryExprLinhaParserRuleCall_1_1_0());
					}
					lv_PrimaryExprLinha_3_0=rulePrimaryExprLinha
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCochetesRule());
						}
						set(
							$current,
							"PrimaryExprLinha",
							lv_PrimaryExprLinha_3_0,
							"com.ufcg.compiladores.Go.PrimaryExprLinha");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleSelector
entryRuleSelector returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSelectorRule()); }
	iv_ruleSelector=ruleSelector
	{ $current=$iv_ruleSelector.current; }
	EOF;

// Rule Selector
ruleSelector returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getSelectorAccess().getIdentifierIdentifierParserRuleCall_0());
			}
			lv_identifier_0_0=ruleidentifier
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getSelectorRule());
				}
				set(
					$current,
					"identifier",
					lv_identifier_0_0,
					"com.ufcg.compiladores.Go.identifier");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleIndex
entryRuleIndex returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIndexRule()); }
	iv_ruleIndex=ruleIndex
	{ $current=$iv_ruleIndex.current; }
	EOF;

// Rule Index
ruleIndex returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getIndexAccess().getIndexAction_0_0(),
						$current);
				}
			)
			otherlv_1=']'
			{
				newLeafNode(otherlv_1, grammarAccess.getIndexAccess().getRightSquareBracketKeyword_0_1());
			}
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getIndexAccess().getSliceSliceParserRuleCall_1_0());
				}
				lv_Slice_2_0=ruleSlice
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIndexRule());
					}
					set(
						$current,
						"Slice",
						lv_Slice_2_0,
						"com.ufcg.compiladores.Go.Slice");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleSlice
entryRuleSlice returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSliceRule()); }
	iv_ruleSlice=ruleSlice
	{ $current=$iv_ruleSlice.current; }
	EOF;

// Rule Slice
ruleSlice returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=':'
		{
			newLeafNode(otherlv_0, grammarAccess.getSliceAccess().getColonKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSliceAccess().getDecimalsDecimalsParserRuleCall_1_0());
				}
				lv_decimals_1_0=ruledecimals
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSliceRule());
					}
					add(
						$current,
						"decimals",
						lv_decimals_1_0,
						"com.ufcg.compiladores.Go.decimals");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getSliceAccess().getColonKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSliceAccess().getDecimalsDecimalsParserRuleCall_3_0());
				}
				lv_decimals_3_0=ruledecimals
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSliceRule());
					}
					add(
						$current,
						"decimals",
						lv_decimals_3_0,
						"com.ufcg.compiladores.Go.decimals");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=']'
		{
			newLeafNode(otherlv_4, grammarAccess.getSliceAccess().getRightSquareBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleTypeAssertion
entryRuleTypeAssertion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeAssertionRule()); }
	iv_ruleTypeAssertion=ruleTypeAssertion
	{ $current=$iv_ruleTypeAssertion.current; }
	EOF;

// Rule TypeAssertion
ruleTypeAssertion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='('
		{
			newLeafNode(otherlv_0, grammarAccess.getTypeAssertionAccess().getLeftParenthesisKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTypeAssertionAccess().getTypeTypeParserRuleCall_1_0());
				}
				lv_Type_1_0=ruleType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTypeAssertionRule());
					}
					set(
						$current,
						"Type",
						lv_Type_1_0,
						"com.ufcg.compiladores.Go.Type");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=')'
		{
			newLeafNode(otherlv_2, grammarAccess.getTypeAssertionAccess().getRightParenthesisKeyword_2());
		}
	)
;

// Entry rule entryRuleArguments
entryRuleArguments returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArgumentsRule()); }
	iv_ruleArguments=ruleArguments
	{ $current=$iv_ruleArguments.current; }
	EOF;

// Rule Arguments
ruleArguments returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getArgumentsAccess().getArgumentsAction_0(),
					$current);
			}
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getArgumentsAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getArgumentsAccess().getExpressionListExpressionListParserRuleCall_2_0_0_0());
						}
						lv_ExpressionList_2_0=ruleExpressionList
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getArgumentsRule());
							}
							set(
								$current,
								"ExpressionList",
								lv_ExpressionList_2_0,
								"com.ufcg.compiladores.Go.ExpressionList");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getArgumentsAccess().getTypeTypeParserRuleCall_2_0_1_0_0());
							}
							lv_Type_3_0=ruleType
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getArgumentsRule());
								}
								set(
									$current,
									"Type",
									lv_Type_3_0,
									"com.ufcg.compiladores.Go.Type");
								afterParserOrEnumRuleCall();
							}
						)
					)
					(
						otherlv_4=','
						{
							newLeafNode(otherlv_4, grammarAccess.getArgumentsAccess().getCommaKeyword_2_0_1_1_0());
						}
						(
							(
								{
									newCompositeNode(grammarAccess.getArgumentsAccess().getExpressionListExpressionListParserRuleCall_2_0_1_1_1_0());
								}
								lv_ExpressionList_5_0=ruleExpressionList
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getArgumentsRule());
									}
									set(
										$current,
										"ExpressionList",
										lv_ExpressionList_5_0,
										"com.ufcg.compiladores.Go.ExpressionList");
									afterParserOrEnumRuleCall();
								}
							)
						)
					)?
				)
			)
			(
				otherlv_6='...'
				{
					newLeafNode(otherlv_6, grammarAccess.getArgumentsAccess().getFullStopFullStopFullStopKeyword_2_1());
				}
			)?
			(
				otherlv_7=','
				{
					newLeafNode(otherlv_7, grammarAccess.getArgumentsAccess().getCommaKeyword_2_2());
				}
			)?
		)?
		otherlv_8=')'
		{
			newLeafNode(otherlv_8, grammarAccess.getArgumentsAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleMethodExpr
entryRuleMethodExpr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMethodExprRule()); }
	iv_ruleMethodExpr=ruleMethodExpr
	{ $current=$iv_ruleMethodExpr.current; }
	EOF;

// Rule MethodExpr
ruleMethodExpr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getMethodExprAccess().getReceiverTypeReceiverTypeParserRuleCall_0_0());
				}
				lv_ReceiverType_0_0=ruleReceiverType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMethodExprRule());
					}
					set(
						$current,
						"ReceiverType",
						lv_ReceiverType_0_0,
						"com.ufcg.compiladores.Go.ReceiverType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='.'
		{
			newLeafNode(otherlv_1, grammarAccess.getMethodExprAccess().getFullStopKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMethodExprAccess().getMethodNameMethodNameParserRuleCall_2_0());
				}
				lv_MethodName_2_0=ruleMethodName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMethodExprRule());
					}
					set(
						$current,
						"MethodName",
						lv_MethodName_2_0,
						"com.ufcg.compiladores.Go.MethodName");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleReceiverType
entryRuleReceiverType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReceiverTypeRule()); }
	iv_ruleReceiverType=ruleReceiverType
	{ $current=$iv_ruleReceiverType.current; }
	EOF;

// Rule ReceiverType
ruleReceiverType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getReceiverTypeAccess().getTypeTypeParserRuleCall_0());
			}
			lv_Type_0_0=ruleType
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getReceiverTypeRule());
				}
				set(
					$current,
					"Type",
					lv_Type_0_0,
					"com.ufcg.compiladores.Go.Type");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleExpression
entryRuleExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionRule()); }
	iv_ruleExpression=ruleExpression
	{ $current=$iv_ruleExpression.current; }
	EOF;

// Rule Expression
ruleExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getExpressionAccess().getUnaryExprUnaryExprParserRuleCall_0_0());
				}
				lv_UnaryExpr_0_0=ruleUnaryExpr
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExpressionRule());
					}
					set(
						$current,
						"UnaryExpr",
						lv_UnaryExpr_0_0,
						"com.ufcg.compiladores.Go.UnaryExpr");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getExpressionAccess().getExpressionLinhaExpressionLinhaParserRuleCall_1_0());
				}
				lv_ExpressionLinha_1_0=ruleExpressionLinha
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExpressionRule());
					}
					set(
						$current,
						"ExpressionLinha",
						lv_ExpressionLinha_1_0,
						"com.ufcg.compiladores.Go.ExpressionLinha");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleExpressionLinha
entryRuleExpressionLinha returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionLinhaRule()); }
	iv_ruleExpressionLinha=ruleExpressionLinha
	{ $current=$iv_ruleExpressionLinha.current; }
	EOF;

// Rule ExpressionLinha
ruleExpressionLinha returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getExpressionLinhaAccess().getBinary_opBinary_opParserRuleCall_0_0_0());
					}
					lv_binary_op_0_0=rulebinary_op
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExpressionLinhaRule());
						}
						set(
							$current,
							"binary_op",
							lv_binary_op_0_0,
							"com.ufcg.compiladores.Go.binary_op");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getExpressionLinhaAccess().getExpressionExpressionParserRuleCall_0_1_0());
					}
					lv_Expression_1_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExpressionLinhaRule());
						}
						set(
							$current,
							"Expression",
							lv_Expression_1_0,
							"com.ufcg.compiladores.Go.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getExpressionLinhaAccess().getExpressionLinhaExpressionLinhaParserRuleCall_0_2_0());
					}
					lv_ExpressionLinha_2_0=ruleExpressionLinha
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExpressionLinhaRule());
						}
						set(
							$current,
							"ExpressionLinha",
							lv_ExpressionLinha_2_0,
							"com.ufcg.compiladores.Go.ExpressionLinha");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getExpressionLinhaAccess().getExpressionLinhaAction_1_0(),
						$current);
				}
			)
			this_ANY_OTHER_4=RULE_ANY_OTHER
			{
				newLeafNode(this_ANY_OTHER_4, grammarAccess.getExpressionLinhaAccess().getANY_OTHERTerminalRuleCall_1_1());
			}
		)
	)
;

// Entry rule entryRuleUnaryExpr
entryRuleUnaryExpr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUnaryExprRule()); }
	iv_ruleUnaryExpr=ruleUnaryExpr
	{ $current=$iv_ruleUnaryExpr.current; }
	EOF;

// Rule UnaryExpr
ruleUnaryExpr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getUnaryExprAccess().getPrimaryExprPrimaryExprParserRuleCall_0_0());
				}
				lv_PrimaryExpr_0_0=rulePrimaryExpr
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUnaryExprRule());
					}
					set(
						$current,
						"PrimaryExpr",
						lv_PrimaryExpr_0_0,
						"com.ufcg.compiladores.Go.PrimaryExpr");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getUnaryExprAccess().getUnary_opUnary_opParserRuleCall_1_0_0());
					}
					lv_unary_op_1_0=ruleunary_op
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getUnaryExprRule());
						}
						set(
							$current,
							"unary_op",
							lv_unary_op_1_0,
							"com.ufcg.compiladores.Go.unary_op");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getUnaryExprAccess().getUnaryExprUnaryExprParserRuleCall_1_1_0());
					}
					lv_UnaryExpr_2_0=ruleUnaryExpr
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getUnaryExprRule());
						}
						set(
							$current,
							"UnaryExpr",
							lv_UnaryExpr_2_0,
							"com.ufcg.compiladores.Go.UnaryExpr");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRulebinary_op
entryRulebinary_op returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBinary_opRule()); }
	iv_rulebinary_op=rulebinary_op
	{ $current=$iv_rulebinary_op.current; }
	EOF;

// Rule binary_op
rulebinary_op returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getBinary_opAccess().getBinary_opAction_0_0(),
						$current);
				}
			)
			otherlv_1='||'
			{
				newLeafNode(otherlv_1, grammarAccess.getBinary_opAccess().getVerticalLineVerticalLineKeyword_0_1());
			}
		)
		    |
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getBinary_opAccess().getBinary_opAction_1_0(),
						$current);
				}
			)
			otherlv_3='&&'
			{
				newLeafNode(otherlv_3, grammarAccess.getBinary_opAccess().getAmpersandAmpersandKeyword_1_1());
			}
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getBinary_opAccess().getRel_opRel_opParserRuleCall_2_0());
				}
				lv_rel_op_4_0=rulerel_op
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBinary_opRule());
					}
					set(
						$current,
						"rel_op",
						lv_rel_op_4_0,
						"com.ufcg.compiladores.Go.rel_op");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getBinary_opAccess().getAdd_opAdd_opParserRuleCall_3_0());
				}
				lv_add_op_5_0=ruleadd_op
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBinary_opRule());
					}
					set(
						$current,
						"add_op",
						lv_add_op_5_0,
						"com.ufcg.compiladores.Go.add_op");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getBinary_opAccess().getMul_opMul_opParserRuleCall_4_0());
				}
				lv_mul_op_6_0=rulemul_op
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBinary_opRule());
					}
					set(
						$current,
						"mul_op",
						lv_mul_op_6_0,
						"com.ufcg.compiladores.Go.mul_op");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRulerel_op
entryRulerel_op returns [String current=null]:
	{ newCompositeNode(grammarAccess.getRel_opRule()); }
	iv_rulerel_op=rulerel_op
	{ $current=$iv_rulerel_op.current.getText(); }
	EOF;

// Rule rel_op
rulerel_op returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='=='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getRel_opAccess().getEqualsSignEqualsSignKeyword_0());
		}
		    |
		kw='!='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getRel_opAccess().getExclamationMarkEqualsSignKeyword_1());
		}
		    |
		kw='<'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getRel_opAccess().getLessThanSignKeyword_2());
		}
		    |
		kw='<='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getRel_opAccess().getLessThanSignEqualsSignKeyword_3());
		}
		    |
		kw='>'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getRel_opAccess().getGreaterThanSignKeyword_4());
		}
		    |
		kw='>='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getRel_opAccess().getGreaterThanSignEqualsSignKeyword_5());
		}
	)
;

// Entry rule entryRuleadd_op
entryRuleadd_op returns [String current=null]:
	{ newCompositeNode(grammarAccess.getAdd_opRule()); }
	iv_ruleadd_op=ruleadd_op
	{ $current=$iv_ruleadd_op.current.getText(); }
	EOF;

// Rule add_op
ruleadd_op returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='+'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAdd_opAccess().getPlusSignKeyword_0());
		}
		    |
		kw='-'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAdd_opAccess().getHyphenMinusKeyword_1());
		}
		    |
		kw='|'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAdd_opAccess().getVerticalLineKeyword_2());
		}
		    |
		kw='\u02C6'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAdd_opAccess().getModifierLetterCircumflexAccentKeyword_3());
		}
	)
;

// Entry rule entryRulemul_op
entryRulemul_op returns [String current=null]:
	{ newCompositeNode(grammarAccess.getMul_opRule()); }
	iv_rulemul_op=rulemul_op
	{ $current=$iv_rulemul_op.current.getText(); }
	EOF;

// Rule mul_op
rulemul_op returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='*'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getMul_opAccess().getAsteriskKeyword_0());
		}
		    |
		kw='/'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getMul_opAccess().getSolidusKeyword_1());
		}
		    |
		kw='%'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getMul_opAccess().getPercentSignKeyword_2());
		}
		    |
		kw='<<'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getMul_opAccess().getLessThanSignLessThanSignKeyword_3());
		}
		    |
		kw='>>'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getMul_opAccess().getGreaterThanSignGreaterThanSignKeyword_4());
		}
		    |
		kw='&'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getMul_opAccess().getAmpersandKeyword_5());
		}
		    |
		kw='&^'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getMul_opAccess().getAmpersandCircumflexAccentKeyword_6());
		}
	)
;

// Entry rule entryRuleunary_op
entryRuleunary_op returns [String current=null]:
	{ newCompositeNode(grammarAccess.getUnary_opRule()); }
	iv_ruleunary_op=ruleunary_op
	{ $current=$iv_ruleunary_op.current.getText(); }
	EOF;

// Rule unary_op
ruleunary_op returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='+'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getUnary_opAccess().getPlusSignKeyword_0());
		}
		    |
		kw='-'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getUnary_opAccess().getHyphenMinusKeyword_1());
		}
		    |
		kw='!'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getUnary_opAccess().getExclamationMarkKeyword_2());
		}
		    |
		kw='^'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getUnary_opAccess().getCircumflexAccentKeyword_3());
		}
		    |
		kw='*'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getUnary_opAccess().getAsteriskKeyword_4());
		}
		    |
		kw='&'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getUnary_opAccess().getAmpersandKeyword_5());
		}
		    |
		kw='<-'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getUnary_opAccess().getLessThanSignHyphenMinusKeyword_6());
		}
	)
;

// Entry rule entryRuleConversion
entryRuleConversion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConversionRule()); }
	iv_ruleConversion=ruleConversion
	{ $current=$iv_ruleConversion.current; }
	EOF;

// Rule Conversion
ruleConversion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getConversionAccess().getTypeTypeParserRuleCall_0_0());
				}
				lv_Type_0_0=ruleType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConversionRule());
					}
					set(
						$current,
						"Type",
						lv_Type_0_0,
						"com.ufcg.compiladores.Go.Type");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getConversionAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConversionAccess().getExpressionExpressionParserRuleCall_2_0());
				}
				lv_Expression_2_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConversionRule());
					}
					set(
						$current,
						"Expression",
						lv_Expression_2_0,
						"com.ufcg.compiladores.Go.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3=','
			{
				newLeafNode(otherlv_3, grammarAccess.getConversionAccess().getCommaKeyword_3());
			}
		)?
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getConversionAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRuleStatement
entryRuleStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStatementRule()); }
	iv_ruleStatement=ruleStatement
	{ $current=$iv_ruleStatement.current; }
	EOF;

// Rule Statement
ruleStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getStatementAccess().getDeclarationDeclarationParserRuleCall_0_0());
				}
				lv_Declaration_0_0=ruleDeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStatementRule());
					}
					set(
						$current,
						"Declaration",
						lv_Declaration_0_0,
						"com.ufcg.compiladores.Go.Declaration");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getStatementAccess().getLabeledStmtLabeledStmtParserRuleCall_1_0());
				}
				lv_LabeledStmt_1_0=ruleLabeledStmt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStatementRule());
					}
					set(
						$current,
						"LabeledStmt",
						lv_LabeledStmt_1_0,
						"com.ufcg.compiladores.Go.LabeledStmt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getStatementAccess().getSimpleStmtSimpleStmtParserRuleCall_2_0());
				}
				lv_SimpleStmt_2_0=ruleSimpleStmt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStatementRule());
					}
					set(
						$current,
						"SimpleStmt",
						lv_SimpleStmt_2_0,
						"com.ufcg.compiladores.Go.SimpleStmt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getStatementAccess().getGoStmtGoStmtParserRuleCall_3_0());
				}
				lv_GoStmt_3_0=ruleGoStmt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStatementRule());
					}
					set(
						$current,
						"GoStmt",
						lv_GoStmt_3_0,
						"com.ufcg.compiladores.Go.GoStmt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getStatementAccess().getReturnStmtReturnStmtParserRuleCall_4_0());
				}
				lv_ReturnStmt_4_0=ruleReturnStmt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStatementRule());
					}
					set(
						$current,
						"ReturnStmt",
						lv_ReturnStmt_4_0,
						"com.ufcg.compiladores.Go.ReturnStmt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getStatementAccess().getBreakStmtBreakStmtParserRuleCall_5_0());
				}
				lv_BreakStmt_5_0=ruleBreakStmt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStatementRule());
					}
					set(
						$current,
						"BreakStmt",
						lv_BreakStmt_5_0,
						"com.ufcg.compiladores.Go.BreakStmt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getStatementAccess().getContinueStmtContinueStmtParserRuleCall_6_0());
				}
				lv_ContinueStmt_6_0=ruleContinueStmt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStatementRule());
					}
					set(
						$current,
						"ContinueStmt",
						lv_ContinueStmt_6_0,
						"com.ufcg.compiladores.Go.ContinueStmt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getStatementAccess().getGotoStmtGotoStmtParserRuleCall_7_0());
				}
				lv_GotoStmt_7_0=ruleGotoStmt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStatementRule());
					}
					set(
						$current,
						"GotoStmt",
						lv_GotoStmt_7_0,
						"com.ufcg.compiladores.Go.GotoStmt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getStatementAccess().getFallthroughStmtFallthroughStmtParserRuleCall_8_0());
				}
				lv_FallthroughStmt_8_0=ruleFallthroughStmt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStatementRule());
					}
					set(
						$current,
						"FallthroughStmt",
						lv_FallthroughStmt_8_0,
						"com.ufcg.compiladores.Go.FallthroughStmt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getStatementAccess().getBlockBlockParserRuleCall_9_0());
				}
				lv_Block_9_0=ruleBlock
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStatementRule());
					}
					set(
						$current,
						"Block",
						lv_Block_9_0,
						"com.ufcg.compiladores.Go.Block");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getStatementAccess().getIfStmtIfStmtParserRuleCall_10_0());
				}
				lv_IfStmt_10_0=ruleIfStmt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStatementRule());
					}
					set(
						$current,
						"IfStmt",
						lv_IfStmt_10_0,
						"com.ufcg.compiladores.Go.IfStmt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getStatementAccess().getSwitchStmtSwitchStmtParserRuleCall_11_0());
				}
				lv_SwitchStmt_11_0=ruleSwitchStmt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStatementRule());
					}
					set(
						$current,
						"SwitchStmt",
						lv_SwitchStmt_11_0,
						"com.ufcg.compiladores.Go.SwitchStmt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getStatementAccess().getSelectStmtSelectStmtParserRuleCall_12_0());
				}
				lv_SelectStmt_12_0=ruleSelectStmt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStatementRule());
					}
					set(
						$current,
						"SelectStmt",
						lv_SelectStmt_12_0,
						"com.ufcg.compiladores.Go.SelectStmt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getStatementAccess().getForStmtForStmtParserRuleCall_13_0());
				}
				lv_ForStmt_13_0=ruleForStmt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStatementRule());
					}
					set(
						$current,
						"ForStmt",
						lv_ForStmt_13_0,
						"com.ufcg.compiladores.Go.ForStmt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getStatementAccess().getDeferStmtDeferStmtParserRuleCall_14_0());
				}
				lv_DeferStmt_14_0=ruleDeferStmt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStatementRule());
					}
					set(
						$current,
						"DeferStmt",
						lv_DeferStmt_14_0,
						"com.ufcg.compiladores.Go.DeferStmt");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleSimpleStmt
entryRuleSimpleStmt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSimpleStmtRule()); }
	iv_ruleSimpleStmt=ruleSimpleStmt
	{ $current=$iv_ruleSimpleStmt.current; }
	EOF;

// Rule SimpleStmt
ruleSimpleStmt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getSimpleStmtAccess().getEmptyStmtEmptyStmtParserRuleCall_0_0());
				}
				lv_EmptyStmt_0_0=ruleEmptyStmt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSimpleStmtRule());
					}
					set(
						$current,
						"EmptyStmt",
						lv_EmptyStmt_0_0,
						"com.ufcg.compiladores.Go.EmptyStmt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getSimpleStmtAccess().getExpressionStmtExpressionStmtParserRuleCall_1_0());
				}
				lv_ExpressionStmt_1_0=ruleExpressionStmt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSimpleStmtRule());
					}
					set(
						$current,
						"ExpressionStmt",
						lv_ExpressionStmt_1_0,
						"com.ufcg.compiladores.Go.ExpressionStmt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getSimpleStmtAccess().getSendStmtSendStmtParserRuleCall_2_0());
				}
				lv_SendStmt_2_0=ruleSendStmt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSimpleStmtRule());
					}
					set(
						$current,
						"SendStmt",
						lv_SendStmt_2_0,
						"com.ufcg.compiladores.Go.SendStmt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getSimpleStmtAccess().getIncDecStmtIncDecStmtParserRuleCall_3_0());
				}
				lv_IncDecStmt_3_0=ruleIncDecStmt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSimpleStmtRule());
					}
					set(
						$current,
						"IncDecStmt",
						lv_IncDecStmt_3_0,
						"com.ufcg.compiladores.Go.IncDecStmt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getSimpleStmtAccess().getAssignmentAssignmentParserRuleCall_4_0());
				}
				lv_Assignment_4_0=ruleAssignment
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSimpleStmtRule());
					}
					set(
						$current,
						"Assignment",
						lv_Assignment_4_0,
						"com.ufcg.compiladores.Go.Assignment");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getSimpleStmtAccess().getShortVarDeclShortVarDeclParserRuleCall_5_0());
				}
				lv_ShortVarDecl_5_0=ruleShortVarDecl
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSimpleStmtRule());
					}
					set(
						$current,
						"ShortVarDecl",
						lv_ShortVarDecl_5_0,
						"com.ufcg.compiladores.Go.ShortVarDecl");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleEmptyStmt
entryRuleEmptyStmt returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEmptyStmtRule()); }
	iv_ruleEmptyStmt=ruleEmptyStmt
	{ $current=$iv_ruleEmptyStmt.current.getText(); }
	EOF;

// Rule EmptyStmt
ruleEmptyStmt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	this_ANY_OTHER_0=RULE_ANY_OTHER
	{
		$current.merge(this_ANY_OTHER_0);
	}
	{
		newLeafNode(this_ANY_OTHER_0, grammarAccess.getEmptyStmtAccess().getANY_OTHERTerminalRuleCall());
	}
;

// Entry rule entryRuleLabeledStmt
entryRuleLabeledStmt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLabeledStmtRule()); }
	iv_ruleLabeledStmt=ruleLabeledStmt
	{ $current=$iv_ruleLabeledStmt.current; }
	EOF;

// Rule LabeledStmt
ruleLabeledStmt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getLabeledStmtAccess().getLabelLabelParserRuleCall_0_0());
				}
				lv_Label_0_0=ruleLabel
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLabeledStmtRule());
					}
					set(
						$current,
						"Label",
						lv_Label_0_0,
						"com.ufcg.compiladores.Go.Label");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getLabeledStmtAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLabeledStmtAccess().getStatementStatementParserRuleCall_2_0());
				}
				lv_Statement_2_0=ruleStatement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLabeledStmtRule());
					}
					set(
						$current,
						"Statement",
						lv_Statement_2_0,
						"com.ufcg.compiladores.Go.Statement");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleLabel
entryRuleLabel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLabelRule()); }
	iv_ruleLabel=ruleLabel
	{ $current=$iv_ruleLabel.current; }
	EOF;

// Rule Label
ruleLabel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getLabelAccess().getIdentifierIdentifierParserRuleCall_0());
			}
			lv_identifier_0_0=ruleidentifier
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getLabelRule());
				}
				set(
					$current,
					"identifier",
					lv_identifier_0_0,
					"com.ufcg.compiladores.Go.identifier");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleExpressionStmt
entryRuleExpressionStmt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionStmtRule()); }
	iv_ruleExpressionStmt=ruleExpressionStmt
	{ $current=$iv_ruleExpressionStmt.current; }
	EOF;

// Rule ExpressionStmt
ruleExpressionStmt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getExpressionStmtAccess().getExpressionExpressionParserRuleCall_0());
			}
			lv_Expression_0_0=ruleExpression
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getExpressionStmtRule());
				}
				set(
					$current,
					"Expression",
					lv_Expression_0_0,
					"com.ufcg.compiladores.Go.Expression");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleSendStmt
entryRuleSendStmt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSendStmtRule()); }
	iv_ruleSendStmt=ruleSendStmt
	{ $current=$iv_ruleSendStmt.current; }
	EOF;

// Rule SendStmt
ruleSendStmt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getSendStmtAccess().getChannelChannelParserRuleCall_0_0());
				}
				lv_Channel_0_0=ruleChannel
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSendStmtRule());
					}
					set(
						$current,
						"Channel",
						lv_Channel_0_0,
						"com.ufcg.compiladores.Go.Channel");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='<-'
		{
			newLeafNode(otherlv_1, grammarAccess.getSendStmtAccess().getLessThanSignHyphenMinusKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSendStmtAccess().getExpressionExpressionParserRuleCall_2_0());
				}
				lv_Expression_2_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSendStmtRule());
					}
					set(
						$current,
						"Expression",
						lv_Expression_2_0,
						"com.ufcg.compiladores.Go.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleChannel
entryRuleChannel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getChannelRule()); }
	iv_ruleChannel=ruleChannel
	{ $current=$iv_ruleChannel.current; }
	EOF;

// Rule Channel
ruleChannel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getChannelAccess().getExpressionExpressionParserRuleCall_0());
			}
			lv_Expression_0_0=ruleExpression
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getChannelRule());
				}
				set(
					$current,
					"Expression",
					lv_Expression_0_0,
					"com.ufcg.compiladores.Go.Expression");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleIncDecStmt
entryRuleIncDecStmt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIncDecStmtRule()); }
	iv_ruleIncDecStmt=ruleIncDecStmt
	{ $current=$iv_ruleIncDecStmt.current; }
	EOF;

// Rule IncDecStmt
ruleIncDecStmt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getIncDecStmtAccess().getExpressionExpressionParserRuleCall_0_0());
				}
				lv_Expression_0_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIncDecStmtRule());
					}
					set(
						$current,
						"Expression",
						lv_Expression_0_0,
						"com.ufcg.compiladores.Go.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1='++'
			{
				newLeafNode(otherlv_1, grammarAccess.getIncDecStmtAccess().getPlusSignPlusSignKeyword_1_0());
			}
			    |
			otherlv_2='--'
			{
				newLeafNode(otherlv_2, grammarAccess.getIncDecStmtAccess().getHyphenMinusHyphenMinusKeyword_1_1());
			}
		)
	)
;

// Entry rule entryRuleAssignment
entryRuleAssignment returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAssignmentRule()); }
	iv_ruleAssignment=ruleAssignment
	{ $current=$iv_ruleAssignment.current; }
	EOF;

// Rule Assignment
ruleAssignment returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getAssignmentAccess().getExpressionListExpressionListParserRuleCall_0_0());
				}
				lv_ExpressionList_0_0=ruleExpressionList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAssignmentRule());
					}
					add(
						$current,
						"ExpressionList",
						lv_ExpressionList_0_0,
						"com.ufcg.compiladores.Go.ExpressionList");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getAssignmentAccess().getAssign_opAssign_opParserRuleCall_1_0());
				}
				lv_assign_op_1_0=ruleassign_op
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAssignmentRule());
					}
					set(
						$current,
						"assign_op",
						lv_assign_op_1_0,
						"com.ufcg.compiladores.Go.assign_op");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getAssignmentAccess().getExpressionListExpressionListParserRuleCall_2_0());
				}
				lv_ExpressionList_2_0=ruleExpressionList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAssignmentRule());
					}
					add(
						$current,
						"ExpressionList",
						lv_ExpressionList_2_0,
						"com.ufcg.compiladores.Go.ExpressionList");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleassign_op
entryRuleassign_op returns [String current=null]:
	{ newCompositeNode(grammarAccess.getAssign_opRule()); }
	iv_ruleassign_op=ruleassign_op
	{ $current=$iv_ruleassign_op.current.getText(); }
	EOF;

// Rule assign_op
ruleassign_op returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getAssign_opAccess().getAdd_opParserRuleCall_0_0());
			}
			this_add_op_0=ruleadd_op
			{
				$current.merge(this_add_op_0);
			}
			{
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getAssign_opAccess().getMul_opParserRuleCall_0_1());
			}
			this_mul_op_1=rulemul_op
			{
				$current.merge(this_mul_op_1);
			}
			{
				afterParserOrEnumRuleCall();
			}
		)?
		kw='='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAssign_opAccess().getEqualsSignKeyword_1());
		}
	)
;

// Entry rule entryRuleIfStmt
entryRuleIfStmt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIfStmtRule()); }
	iv_ruleIfStmt=ruleIfStmt
	{ $current=$iv_ruleIfStmt.current; }
	EOF;

// Rule IfStmt
ruleIfStmt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='if'
		{
			newLeafNode(otherlv_0, grammarAccess.getIfStmtAccess().getIfKeyword_0());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getIfStmtAccess().getSimpleStmtSimpleStmtParserRuleCall_1_0_0());
					}
					lv_SimpleStmt_1_0=ruleSimpleStmt
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getIfStmtRule());
						}
						set(
							$current,
							"SimpleStmt",
							lv_SimpleStmt_1_0,
							"com.ufcg.compiladores.Go.SimpleStmt");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_2=';'
			{
				newLeafNode(otherlv_2, grammarAccess.getIfStmtAccess().getSemicolonKeyword_1_1());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getIfStmtAccess().getExpressionExpressionParserRuleCall_2_0());
				}
				lv_Expression_3_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIfStmtRule());
					}
					set(
						$current,
						"Expression",
						lv_Expression_3_0,
						"com.ufcg.compiladores.Go.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getIfStmtAccess().getBlockBlockParserRuleCall_3_0());
				}
				lv_Block_4_0=ruleBlock
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIfStmtRule());
					}
					add(
						$current,
						"Block",
						lv_Block_4_0,
						"com.ufcg.compiladores.Go.Block");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5='else'
			{
				newLeafNode(otherlv_5, grammarAccess.getIfStmtAccess().getElseKeyword_4_0());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getIfStmtAccess().getIfStmtIfStmtParserRuleCall_4_1_0_0());
						}
						lv_IfStmt_6_0=ruleIfStmt
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getIfStmtRule());
							}
							set(
								$current,
								"IfStmt",
								lv_IfStmt_6_0,
								"com.ufcg.compiladores.Go.IfStmt");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getIfStmtAccess().getBlockBlockParserRuleCall_4_1_1_0());
						}
						lv_Block_7_0=ruleBlock
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getIfStmtRule());
							}
							add(
								$current,
								"Block",
								lv_Block_7_0,
								"com.ufcg.compiladores.Go.Block");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)?
	)
;

// Entry rule entryRuleSwitchStmt
entryRuleSwitchStmt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSwitchStmtRule()); }
	iv_ruleSwitchStmt=ruleSwitchStmt
	{ $current=$iv_ruleSwitchStmt.current; }
	EOF;

// Rule SwitchStmt
ruleSwitchStmt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='switch'
		{
			newLeafNode(otherlv_0, grammarAccess.getSwitchStmtAccess().getSwitchKeyword_0());
		}
		(
			{
				/* */
			}
			{
				newCompositeNode(grammarAccess.getSwitchStmtAccess().getSimpleStmtParserRuleCall_1_0());
			}
			this_SimpleStmt_1=ruleSimpleStmt
			{
				$current = $this_SimpleStmt_1.current;
				afterParserOrEnumRuleCall();
			}
			otherlv_2=';'
			{
				newLeafNode(otherlv_2, grammarAccess.getSwitchStmtAccess().getSemicolonKeyword_1_1());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getSwitchStmtAccess().getSwitch_stmt_linhaSwitch_stmt_linhaParserRuleCall_2_0());
				}
				lv_switch_stmt_linha_3_0=ruleswitch_stmt_linha
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSwitchStmtRule());
					}
					set(
						$current,
						"switch_stmt_linha",
						lv_switch_stmt_linha_3_0,
						"com.ufcg.compiladores.Go.switch_stmt_linha");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleExprCaseClause
entryRuleExprCaseClause returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExprCaseClauseRule()); }
	iv_ruleExprCaseClause=ruleExprCaseClause
	{ $current=$iv_ruleExprCaseClause.current; }
	EOF;

// Rule ExprCaseClause
ruleExprCaseClause returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getExprCaseClauseAccess().getExprSwitchCaseExprSwitchCaseParserRuleCall_0_0());
				}
				lv_ExprSwitchCase_0_0=ruleExprSwitchCase
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExprCaseClauseRule());
					}
					set(
						$current,
						"ExprSwitchCase",
						lv_ExprSwitchCase_0_0,
						"com.ufcg.compiladores.Go.ExprSwitchCase");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getExprCaseClauseAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getExprCaseClauseAccess().getStatementListStatementListParserRuleCall_2_0());
				}
				lv_StatementList_2_0=ruleStatementList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExprCaseClauseRule());
					}
					set(
						$current,
						"StatementList",
						lv_StatementList_2_0,
						"com.ufcg.compiladores.Go.StatementList");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleExprSwitchCase
entryRuleExprSwitchCase returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExprSwitchCaseRule()); }
	iv_ruleExprSwitchCase=ruleExprSwitchCase
	{ $current=$iv_ruleExprSwitchCase.current; }
	EOF;

// Rule ExprSwitchCase
ruleExprSwitchCase returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='case'
			{
				newLeafNode(otherlv_0, grammarAccess.getExprSwitchCaseAccess().getCaseKeyword_0_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getExprSwitchCaseAccess().getExpressionListExpressionListParserRuleCall_0_1_0());
					}
					lv_ExpressionList_1_0=ruleExpressionList
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExprSwitchCaseRule());
						}
						set(
							$current,
							"ExpressionList",
							lv_ExpressionList_1_0,
							"com.ufcg.compiladores.Go.ExpressionList");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getExprSwitchCaseAccess().getExprSwitchCaseAction_1_0(),
						$current);
				}
			)
			otherlv_3='default'
			{
				newLeafNode(otherlv_3, grammarAccess.getExprSwitchCaseAccess().getDefaultKeyword_1_1());
			}
		)
	)
;

// Entry rule entryRuleswitch_stmt_linha
entryRuleswitch_stmt_linha returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSwitch_stmt_linhaRule()); }
	iv_ruleswitch_stmt_linha=ruleswitch_stmt_linha
	{ $current=$iv_ruleswitch_stmt_linha.current; }
	EOF;

// Rule switch_stmt_linha
ruleswitch_stmt_linha returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getSwitch_stmt_linhaAccess().getTypeSwitchGuardTypeSwitchGuardParserRuleCall_0_0_0());
					}
					lv_TypeSwitchGuard_0_0=ruleTypeSwitchGuard
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSwitch_stmt_linhaRule());
						}
						set(
							$current,
							"TypeSwitchGuard",
							lv_TypeSwitchGuard_0_0,
							"com.ufcg.compiladores.Go.TypeSwitchGuard");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_1='{'
			{
				newLeafNode(otherlv_1, grammarAccess.getSwitch_stmt_linhaAccess().getLeftCurlyBracketKeyword_0_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSwitch_stmt_linhaAccess().getTypeCaseClauseTypeCaseClauseParserRuleCall_0_2_0());
					}
					lv_TypeCaseClause_2_0=ruleTypeCaseClause
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSwitch_stmt_linhaRule());
						}
						add(
							$current,
							"TypeCaseClause",
							lv_TypeCaseClause_2_0,
							"com.ufcg.compiladores.Go.TypeCaseClause");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			otherlv_3='}'
			{
				newLeafNode(otherlv_3, grammarAccess.getSwitch_stmt_linhaAccess().getRightCurlyBracketKeyword_0_3());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSwitch_stmt_linhaAccess().getSwitch_stmt_linhaSwitch_stmt_linhaParserRuleCall_0_4_0());
					}
					lv_switch_stmt_linha_4_0=ruleswitch_stmt_linha
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSwitch_stmt_linhaRule());
						}
						set(
							$current,
							"switch_stmt_linha",
							lv_switch_stmt_linha_4_0,
							"com.ufcg.compiladores.Go.switch_stmt_linha");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getSwitch_stmt_linhaAccess().getSwitch_stmt_linhaAction_1_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getSwitch_stmt_linhaAccess().getExpressionExpressionParserRuleCall_1_1_0());
					}
					lv_Expression_6_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSwitch_stmt_linhaRule());
						}
						set(
							$current,
							"Expression",
							lv_Expression_6_0,
							"com.ufcg.compiladores.Go.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			otherlv_7='{'
			{
				newLeafNode(otherlv_7, grammarAccess.getSwitch_stmt_linhaAccess().getLeftCurlyBracketKeyword_1_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSwitch_stmt_linhaAccess().getExprCaseClauseExprCaseClauseParserRuleCall_1_3_0());
					}
					lv_ExprCaseClause_8_0=ruleExprCaseClause
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSwitch_stmt_linhaRule());
						}
						add(
							$current,
							"ExprCaseClause",
							lv_ExprCaseClause_8_0,
							"com.ufcg.compiladores.Go.ExprCaseClause");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			otherlv_9='}'
			{
				newLeafNode(otherlv_9, grammarAccess.getSwitch_stmt_linhaAccess().getRightCurlyBracketKeyword_1_4());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSwitch_stmt_linhaAccess().getSwitch_stmt_linhaSwitch_stmt_linhaParserRuleCall_1_5_0());
					}
					lv_switch_stmt_linha_10_0=ruleswitch_stmt_linha
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSwitch_stmt_linhaRule());
						}
						set(
							$current,
							"switch_stmt_linha",
							lv_switch_stmt_linha_10_0,
							"com.ufcg.compiladores.Go.switch_stmt_linha");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getSwitch_stmt_linhaAccess().getSwitch_stmt_linhaAction_2_0(),
						$current);
				}
			)
			this_ANY_OTHER_12=RULE_ANY_OTHER
			{
				newLeafNode(this_ANY_OTHER_12, grammarAccess.getSwitch_stmt_linhaAccess().getANY_OTHERTerminalRuleCall_2_1());
			}
		)
	)
;

// Entry rule entryRuleTypeSwitchGuard
entryRuleTypeSwitchGuard returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeSwitchGuardRule()); }
	iv_ruleTypeSwitchGuard=ruleTypeSwitchGuard
	{ $current=$iv_ruleTypeSwitchGuard.current; }
	EOF;

// Rule TypeSwitchGuard
ruleTypeSwitchGuard returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getTypeSwitchGuardAccess().getIdentifierIdentifierParserRuleCall_0_0_0());
					}
					lv_identifier_0_0=ruleidentifier
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTypeSwitchGuardRule());
						}
						set(
							$current,
							"identifier",
							lv_identifier_0_0,
							"com.ufcg.compiladores.Go.identifier");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_1=':='
			{
				newLeafNode(otherlv_1, grammarAccess.getTypeSwitchGuardAccess().getColonEqualsSignKeyword_0_1());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getTypeSwitchGuardAccess().getPrimaryExprPrimaryExprParserRuleCall_1_0());
				}
				lv_PrimaryExpr_2_0=rulePrimaryExpr
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTypeSwitchGuardRule());
					}
					set(
						$current,
						"PrimaryExpr",
						lv_PrimaryExpr_2_0,
						"com.ufcg.compiladores.Go.PrimaryExpr");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='.'
		{
			newLeafNode(otherlv_3, grammarAccess.getTypeSwitchGuardAccess().getFullStopKeyword_2());
		}
		otherlv_4='('
		{
			newLeafNode(otherlv_4, grammarAccess.getTypeSwitchGuardAccess().getLeftParenthesisKeyword_3());
		}
		otherlv_5='type'
		{
			newLeafNode(otherlv_5, grammarAccess.getTypeSwitchGuardAccess().getTypeKeyword_4());
		}
		otherlv_6=')'
		{
			newLeafNode(otherlv_6, grammarAccess.getTypeSwitchGuardAccess().getRightParenthesisKeyword_5());
		}
	)
;

// Entry rule entryRuleTypeCaseClause
entryRuleTypeCaseClause returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeCaseClauseRule()); }
	iv_ruleTypeCaseClause=ruleTypeCaseClause
	{ $current=$iv_ruleTypeCaseClause.current; }
	EOF;

// Rule TypeCaseClause
ruleTypeCaseClause returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getTypeCaseClauseAccess().getTypeSwitchCaseTypeSwitchCaseParserRuleCall_0_0());
				}
				lv_TypeSwitchCase_0_0=ruleTypeSwitchCase
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTypeCaseClauseRule());
					}
					set(
						$current,
						"TypeSwitchCase",
						lv_TypeSwitchCase_0_0,
						"com.ufcg.compiladores.Go.TypeSwitchCase");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getTypeCaseClauseAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTypeCaseClauseAccess().getStatementListStatementListParserRuleCall_2_0());
				}
				lv_StatementList_2_0=ruleStatementList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTypeCaseClauseRule());
					}
					set(
						$current,
						"StatementList",
						lv_StatementList_2_0,
						"com.ufcg.compiladores.Go.StatementList");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleTypeSwitchCase
entryRuleTypeSwitchCase returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeSwitchCaseRule()); }
	iv_ruleTypeSwitchCase=ruleTypeSwitchCase
	{ $current=$iv_ruleTypeSwitchCase.current; }
	EOF;

// Rule TypeSwitchCase
ruleTypeSwitchCase returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='case'
			{
				newLeafNode(otherlv_0, grammarAccess.getTypeSwitchCaseAccess().getCaseKeyword_0_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTypeSwitchCaseAccess().getTypeListTypeListParserRuleCall_0_1_0());
					}
					lv_TypeList_1_0=ruleTypeList
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTypeSwitchCaseRule());
						}
						set(
							$current,
							"TypeList",
							lv_TypeList_1_0,
							"com.ufcg.compiladores.Go.TypeList");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getTypeSwitchCaseAccess().getTypeSwitchCaseAction_1_0(),
						$current);
				}
			)
			otherlv_3='default'
			{
				newLeafNode(otherlv_3, grammarAccess.getTypeSwitchCaseAccess().getDefaultKeyword_1_1());
			}
		)
	)
;

// Entry rule entryRuleTypeList
entryRuleTypeList returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeListRule()); }
	iv_ruleTypeList=ruleTypeList
	{ $current=$iv_ruleTypeList.current; }
	EOF;

// Rule TypeList
ruleTypeList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getTypeListAccess().getTypeTypeParserRuleCall_0_0());
				}
				lv_Type_0_0=ruleType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTypeListRule());
					}
					add(
						$current,
						"Type",
						lv_Type_0_0,
						"com.ufcg.compiladores.Go.Type");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1=','
			{
				newLeafNode(otherlv_1, grammarAccess.getTypeListAccess().getCommaKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTypeListAccess().getTypeTypeParserRuleCall_1_1_0());
					}
					lv_Type_2_0=ruleType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTypeListRule());
						}
						add(
							$current,
							"Type",
							lv_Type_2_0,
							"com.ufcg.compiladores.Go.Type");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleForStmt
entryRuleForStmt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getForStmtRule()); }
	iv_ruleForStmt=ruleForStmt
	{ $current=$iv_ruleForStmt.current; }
	EOF;

// Rule ForStmt
ruleForStmt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='for'
		{
			newLeafNode(otherlv_0, grammarAccess.getForStmtAccess().getForKeyword_0());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getForStmtAccess().getConditionConditionParserRuleCall_1_0_0());
					}
					lv_Condition_1_0=ruleCondition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getForStmtRule());
						}
						set(
							$current,
							"Condition",
							lv_Condition_1_0,
							"com.ufcg.compiladores.Go.Condition");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getForStmtAccess().getForClauseForClauseParserRuleCall_1_1_0());
					}
					lv_ForClause_2_0=ruleForClause
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getForStmtRule());
						}
						set(
							$current,
							"ForClause",
							lv_ForClause_2_0,
							"com.ufcg.compiladores.Go.ForClause");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getForStmtAccess().getRangeClauseRangeClauseParserRuleCall_1_2_0());
					}
					lv_RangeClause_3_0=ruleRangeClause
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getForStmtRule());
						}
						set(
							$current,
							"RangeClause",
							lv_RangeClause_3_0,
							"com.ufcg.compiladores.Go.RangeClause");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getForStmtAccess().getBlockBlockParserRuleCall_2_0());
				}
				lv_Block_4_0=ruleBlock
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForStmtRule());
					}
					set(
						$current,
						"Block",
						lv_Block_4_0,
						"com.ufcg.compiladores.Go.Block");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleCondition
entryRuleCondition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConditionRule()); }
	iv_ruleCondition=ruleCondition
	{ $current=$iv_ruleCondition.current; }
	EOF;

// Rule Condition
ruleCondition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getConditionAccess().getExpressionExpressionParserRuleCall_0());
			}
			lv_Expression_0_0=ruleExpression
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getConditionRule());
				}
				set(
					$current,
					"Expression",
					lv_Expression_0_0,
					"com.ufcg.compiladores.Go.Expression");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleForClause
entryRuleForClause returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getForClauseRule()); }
	iv_ruleForClause=ruleForClause
	{ $current=$iv_ruleForClause.current; }
	EOF;

// Rule ForClause
ruleForClause returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getForClauseAccess().getForClauseAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getForClauseAccess().getInitStmtInitStmtParserRuleCall_1_0());
				}
				lv_InitStmt_1_0=ruleInitStmt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForClauseRule());
					}
					set(
						$current,
						"InitStmt",
						lv_InitStmt_1_0,
						"com.ufcg.compiladores.Go.InitStmt");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_2=';'
		{
			newLeafNode(otherlv_2, grammarAccess.getForClauseAccess().getSemicolonKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getForClauseAccess().getConditionConditionParserRuleCall_3_0());
				}
				lv_Condition_3_0=ruleCondition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForClauseRule());
					}
					set(
						$current,
						"Condition",
						lv_Condition_3_0,
						"com.ufcg.compiladores.Go.Condition");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_4=';'
		{
			newLeafNode(otherlv_4, grammarAccess.getForClauseAccess().getSemicolonKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getForClauseAccess().getPostStmtPostStmtParserRuleCall_5_0());
				}
				lv_PostStmt_5_0=rulePostStmt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForClauseRule());
					}
					set(
						$current,
						"PostStmt",
						lv_PostStmt_5_0,
						"com.ufcg.compiladores.Go.PostStmt");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleInitStmt
entryRuleInitStmt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInitStmtRule()); }
	iv_ruleInitStmt=ruleInitStmt
	{ $current=$iv_ruleInitStmt.current; }
	EOF;

// Rule InitStmt
ruleInitStmt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getInitStmtAccess().getSimpleStmtSimpleStmtParserRuleCall_0());
			}
			lv_SimpleStmt_0_0=ruleSimpleStmt
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getInitStmtRule());
				}
				set(
					$current,
					"SimpleStmt",
					lv_SimpleStmt_0_0,
					"com.ufcg.compiladores.Go.SimpleStmt");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRulePostStmt
entryRulePostStmt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPostStmtRule()); }
	iv_rulePostStmt=rulePostStmt
	{ $current=$iv_rulePostStmt.current; }
	EOF;

// Rule PostStmt
rulePostStmt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getPostStmtAccess().getSimpleStmtSimpleStmtParserRuleCall_0());
			}
			lv_SimpleStmt_0_0=ruleSimpleStmt
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getPostStmtRule());
				}
				set(
					$current,
					"SimpleStmt",
					lv_SimpleStmt_0_0,
					"com.ufcg.compiladores.Go.SimpleStmt");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleRangeClause
entryRuleRangeClause returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRangeClauseRule()); }
	iv_ruleRangeClause=ruleRangeClause
	{ $current=$iv_ruleRangeClause.current; }
	EOF;

// Rule RangeClause
ruleRangeClause returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getRangeClauseAccess().getExpressionListExpressionListParserRuleCall_0_0_0_0());
						}
						lv_ExpressionList_0_0=ruleExpressionList
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getRangeClauseRule());
							}
							set(
								$current,
								"ExpressionList",
								lv_ExpressionList_0_0,
								"com.ufcg.compiladores.Go.ExpressionList");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_1='='
				{
					newLeafNode(otherlv_1, grammarAccess.getRangeClauseAccess().getEqualsSignKeyword_0_0_1());
				}
			)
			    |
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getRangeClauseAccess().getIdentifierListIdentifierListParserRuleCall_0_1_0_0());
						}
						lv_IdentifierList_2_0=ruleIdentifierList
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getRangeClauseRule());
							}
							set(
								$current,
								"IdentifierList",
								lv_IdentifierList_2_0,
								"com.ufcg.compiladores.Go.IdentifierList");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_3=':='
				{
					newLeafNode(otherlv_3, grammarAccess.getRangeClauseAccess().getColonEqualsSignKeyword_0_1_1());
				}
			)
		)?
		otherlv_4='range'
		{
			newLeafNode(otherlv_4, grammarAccess.getRangeClauseAccess().getRangeKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRangeClauseAccess().getExpressionExpressionParserRuleCall_2_0());
				}
				lv_Expression_5_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRangeClauseRule());
					}
					set(
						$current,
						"Expression",
						lv_Expression_5_0,
						"com.ufcg.compiladores.Go.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleGoStmt
entryRuleGoStmt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGoStmtRule()); }
	iv_ruleGoStmt=ruleGoStmt
	{ $current=$iv_ruleGoStmt.current; }
	EOF;

// Rule GoStmt
ruleGoStmt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='go'
		{
			newLeafNode(otherlv_0, grammarAccess.getGoStmtAccess().getGoKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getGoStmtAccess().getExpressionExpressionParserRuleCall_1_0());
				}
				lv_Expression_1_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGoStmtRule());
					}
					set(
						$current,
						"Expression",
						lv_Expression_1_0,
						"com.ufcg.compiladores.Go.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleSelectStmt
entryRuleSelectStmt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSelectStmtRule()); }
	iv_ruleSelectStmt=ruleSelectStmt
	{ $current=$iv_ruleSelectStmt.current; }
	EOF;

// Rule SelectStmt
ruleSelectStmt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getSelectStmtAccess().getSelectStmtAction_0(),
					$current);
			}
		)
		otherlv_1='select'
		{
			newLeafNode(otherlv_1, grammarAccess.getSelectStmtAccess().getSelectKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getSelectStmtAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSelectStmtAccess().getCommClauseCommClauseParserRuleCall_3_0());
				}
				lv_CommClause_3_0=ruleCommClause
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSelectStmtRule());
					}
					add(
						$current,
						"CommClause",
						lv_CommClause_3_0,
						"com.ufcg.compiladores.Go.CommClause");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getSelectStmtAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleCommClause
entryRuleCommClause returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCommClauseRule()); }
	iv_ruleCommClause=ruleCommClause
	{ $current=$iv_ruleCommClause.current; }
	EOF;

// Rule CommClause
ruleCommClause returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getCommClauseAccess().getCommCaseCommCaseParserRuleCall_0_0());
				}
				lv_CommCase_0_0=ruleCommCase
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCommClauseRule());
					}
					set(
						$current,
						"CommCase",
						lv_CommCase_0_0,
						"com.ufcg.compiladores.Go.CommCase");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getCommClauseAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCommClauseAccess().getStatementListStatementListParserRuleCall_2_0());
				}
				lv_StatementList_2_0=ruleStatementList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCommClauseRule());
					}
					set(
						$current,
						"StatementList",
						lv_StatementList_2_0,
						"com.ufcg.compiladores.Go.StatementList");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleCommCase
entryRuleCommCase returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCommCaseRule()); }
	iv_ruleCommCase=ruleCommCase
	{ $current=$iv_ruleCommCase.current; }
	EOF;

// Rule CommCase
ruleCommCase returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='case'
			{
				newLeafNode(otherlv_0, grammarAccess.getCommCaseAccess().getCaseKeyword_0_0());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getCommCaseAccess().getSendStmtSendStmtParserRuleCall_0_1_0_0());
						}
						lv_SendStmt_1_0=ruleSendStmt
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getCommCaseRule());
							}
							set(
								$current,
								"SendStmt",
								lv_SendStmt_1_0,
								"com.ufcg.compiladores.Go.SendStmt");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getCommCaseAccess().getRecvStmtRecvStmtParserRuleCall_0_1_1_0());
						}
						lv_RecvStmt_2_0=ruleRecvStmt
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getCommCaseRule());
							}
							set(
								$current,
								"RecvStmt",
								lv_RecvStmt_2_0,
								"com.ufcg.compiladores.Go.RecvStmt");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)
		    |
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getCommCaseAccess().getCommCaseAction_1_0(),
						$current);
				}
			)
			otherlv_4='default'
			{
				newLeafNode(otherlv_4, grammarAccess.getCommCaseAccess().getDefaultKeyword_1_1());
			}
		)
	)
;

// Entry rule entryRuleRecvStmt
entryRuleRecvStmt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRecvStmtRule()); }
	iv_ruleRecvStmt=ruleRecvStmt
	{ $current=$iv_ruleRecvStmt.current; }
	EOF;

// Rule RecvStmt
ruleRecvStmt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getRecvStmtAccess().getExpressionListExpressionListParserRuleCall_0_0_0_0());
						}
						lv_ExpressionList_0_0=ruleExpressionList
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getRecvStmtRule());
							}
							set(
								$current,
								"ExpressionList",
								lv_ExpressionList_0_0,
								"com.ufcg.compiladores.Go.ExpressionList");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_1='='
				{
					newLeafNode(otherlv_1, grammarAccess.getRecvStmtAccess().getEqualsSignKeyword_0_0_1());
				}
			)
			    |
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getRecvStmtAccess().getIdentifierListIdentifierListParserRuleCall_0_1_0_0());
						}
						lv_IdentifierList_2_0=ruleIdentifierList
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getRecvStmtRule());
							}
							set(
								$current,
								"IdentifierList",
								lv_IdentifierList_2_0,
								"com.ufcg.compiladores.Go.IdentifierList");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_3=':='
				{
					newLeafNode(otherlv_3, grammarAccess.getRecvStmtAccess().getColonEqualsSignKeyword_0_1_1());
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getRecvStmtAccess().getRecvExprRecvExprParserRuleCall_1_0());
				}
				lv_RecvExpr_4_0=ruleRecvExpr
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRecvStmtRule());
					}
					set(
						$current,
						"RecvExpr",
						lv_RecvExpr_4_0,
						"com.ufcg.compiladores.Go.RecvExpr");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleRecvExpr
entryRuleRecvExpr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRecvExprRule()); }
	iv_ruleRecvExpr=ruleRecvExpr
	{ $current=$iv_ruleRecvExpr.current; }
	EOF;

// Rule RecvExpr
ruleRecvExpr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getRecvExprAccess().getExpressionExpressionParserRuleCall_0());
			}
			lv_Expression_0_0=ruleExpression
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getRecvExprRule());
				}
				set(
					$current,
					"Expression",
					lv_Expression_0_0,
					"com.ufcg.compiladores.Go.Expression");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleReturnStmt
entryRuleReturnStmt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReturnStmtRule()); }
	iv_ruleReturnStmt=ruleReturnStmt
	{ $current=$iv_ruleReturnStmt.current; }
	EOF;

// Rule ReturnStmt
ruleReturnStmt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getReturnStmtAccess().getReturnStmtAction_0(),
					$current);
			}
		)
		otherlv_1='return'
		{
			newLeafNode(otherlv_1, grammarAccess.getReturnStmtAccess().getReturnKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getReturnStmtAccess().getExpressionListExpressionListParserRuleCall_2_0());
				}
				lv_ExpressionList_2_0=ruleExpressionList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReturnStmtRule());
					}
					set(
						$current,
						"ExpressionList",
						lv_ExpressionList_2_0,
						"com.ufcg.compiladores.Go.ExpressionList");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleBreakStmt
entryRuleBreakStmt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBreakStmtRule()); }
	iv_ruleBreakStmt=ruleBreakStmt
	{ $current=$iv_ruleBreakStmt.current; }
	EOF;

// Rule BreakStmt
ruleBreakStmt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getBreakStmtAccess().getBreakStmtAction_0(),
					$current);
			}
		)
		otherlv_1='break'
		{
			newLeafNode(otherlv_1, grammarAccess.getBreakStmtAccess().getBreakKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBreakStmtAccess().getLabelLabelParserRuleCall_2_0());
				}
				lv_Label_2_0=ruleLabel
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBreakStmtRule());
					}
					set(
						$current,
						"Label",
						lv_Label_2_0,
						"com.ufcg.compiladores.Go.Label");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleContinueStmt
entryRuleContinueStmt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getContinueStmtRule()); }
	iv_ruleContinueStmt=ruleContinueStmt
	{ $current=$iv_ruleContinueStmt.current; }
	EOF;

// Rule ContinueStmt
ruleContinueStmt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getContinueStmtAccess().getContinueStmtAction_0(),
					$current);
			}
		)
		otherlv_1='continue'
		{
			newLeafNode(otherlv_1, grammarAccess.getContinueStmtAccess().getContinueKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getContinueStmtAccess().getLabelLabelParserRuleCall_2_0());
				}
				lv_Label_2_0=ruleLabel
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getContinueStmtRule());
					}
					set(
						$current,
						"Label",
						lv_Label_2_0,
						"com.ufcg.compiladores.Go.Label");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleGotoStmt
entryRuleGotoStmt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGotoStmtRule()); }
	iv_ruleGotoStmt=ruleGotoStmt
	{ $current=$iv_ruleGotoStmt.current; }
	EOF;

// Rule GotoStmt
ruleGotoStmt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='goto'
		{
			newLeafNode(otherlv_0, grammarAccess.getGotoStmtAccess().getGotoKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getGotoStmtAccess().getLabelLabelParserRuleCall_1_0());
				}
				lv_Label_1_0=ruleLabel
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGotoStmtRule());
					}
					set(
						$current,
						"Label",
						lv_Label_1_0,
						"com.ufcg.compiladores.Go.Label");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleFallthroughStmt
entryRuleFallthroughStmt returns [String current=null]:
	{ newCompositeNode(grammarAccess.getFallthroughStmtRule()); }
	iv_ruleFallthroughStmt=ruleFallthroughStmt
	{ $current=$iv_ruleFallthroughStmt.current.getText(); }
	EOF;

// Rule FallthroughStmt
ruleFallthroughStmt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw='fallthrough'
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getFallthroughStmtAccess().getFallthroughKeyword());
	}
;

// Entry rule entryRuleDeferStmt
entryRuleDeferStmt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeferStmtRule()); }
	iv_ruleDeferStmt=ruleDeferStmt
	{ $current=$iv_ruleDeferStmt.current; }
	EOF;

// Rule DeferStmt
ruleDeferStmt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='defer'
		{
			newLeafNode(otherlv_0, grammarAccess.getDeferStmtAccess().getDeferKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDeferStmtAccess().getExpressionExpressionParserRuleCall_1_0());
				}
				lv_Expression_1_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDeferStmtRule());
					}
					set(
						$current,
						"Expression",
						lv_Expression_1_0,
						"com.ufcg.compiladores.Go.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRulePackageClause
entryRulePackageClause returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPackageClauseRule()); }
	iv_rulePackageClause=rulePackageClause
	{ $current=$iv_rulePackageClause.current; }
	EOF;

// Rule PackageClause
rulePackageClause returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='package'
		{
			newLeafNode(otherlv_0, grammarAccess.getPackageClauseAccess().getPackageKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPackageClauseAccess().getPackageNamePackageNameParserRuleCall_1_0());
				}
				lv_PackageName_1_0=rulePackageName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPackageClauseRule());
					}
					set(
						$current,
						"PackageName",
						lv_PackageName_1_0,
						"com.ufcg.compiladores.Go.PackageName");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRulePackageName
entryRulePackageName returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPackageNameRule()); }
	iv_rulePackageName=rulePackageName
	{ $current=$iv_rulePackageName.current; }
	EOF;

// Rule PackageName
rulePackageName returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getPackageNameAccess().getIdentifierIdentifierParserRuleCall_0());
			}
			lv_identifier_0_0=ruleidentifier
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getPackageNameRule());
				}
				set(
					$current,
					"identifier",
					lv_identifier_0_0,
					"com.ufcg.compiladores.Go.identifier");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleImportDecl
entryRuleImportDecl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImportDeclRule()); }
	iv_ruleImportDecl=ruleImportDecl
	{ $current=$iv_ruleImportDecl.current; }
	EOF;

// Rule ImportDecl
ruleImportDecl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getImportDeclAccess().getImportDeclAction_0(),
					$current);
			}
		)
		otherlv_1='import'
		{
			newLeafNode(otherlv_1, grammarAccess.getImportDeclAccess().getImportKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getImportDeclAccess().getImportSpecImportSpecParserRuleCall_2_0_0());
					}
					lv_ImportSpec_2_0=ruleImportSpec
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getImportDeclRule());
						}
						add(
							$current,
							"ImportSpec",
							lv_ImportSpec_2_0,
							"com.ufcg.compiladores.Go.ImportSpec");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				otherlv_3='('
				{
					newLeafNode(otherlv_3, grammarAccess.getImportDeclAccess().getLeftParenthesisKeyword_2_1_0());
				}
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getImportDeclAccess().getImportSpecImportSpecParserRuleCall_2_1_1_0_0());
							}
							lv_ImportSpec_4_0=ruleImportSpec
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getImportDeclRule());
								}
								add(
									$current,
									"ImportSpec",
									lv_ImportSpec_4_0,
									"com.ufcg.compiladores.Go.ImportSpec");
								afterParserOrEnumRuleCall();
							}
						)
					)
					otherlv_5=';'
					{
						newLeafNode(otherlv_5, grammarAccess.getImportDeclAccess().getSemicolonKeyword_2_1_1_1());
					}
				)*
				otherlv_6=')'
				{
					newLeafNode(otherlv_6, grammarAccess.getImportDeclAccess().getRightParenthesisKeyword_2_1_2());
				}
			)
		)
	)
;

// Entry rule entryRuleImportSpec
entryRuleImportSpec returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImportSpecRule()); }
	iv_ruleImportSpec=ruleImportSpec
	{ $current=$iv_ruleImportSpec.current; }
	EOF;

// Rule ImportSpec
ruleImportSpec returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='.'
			{
				newLeafNode(otherlv_0, grammarAccess.getImportSpecAccess().getFullStopKeyword_0_0());
			}
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getImportSpecAccess().getPackageNamePackageNameParserRuleCall_0_1_0());
					}
					lv_PackageName_1_0=rulePackageName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getImportSpecRule());
						}
						set(
							$current,
							"PackageName",
							lv_PackageName_1_0,
							"com.ufcg.compiladores.Go.PackageName");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getImportSpecAccess().getImportPathImportPathParserRuleCall_1_0());
				}
				lv_ImportPath_2_0=ruleImportPath
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getImportSpecRule());
					}
					set(
						$current,
						"ImportPath",
						lv_ImportPath_2_0,
						"com.ufcg.compiladores.Go.ImportPath");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleImportPath
entryRuleImportPath returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImportPathRule()); }
	iv_ruleImportPath=ruleImportPath
	{ $current=$iv_ruleImportPath.current; }
	EOF;

// Rule ImportPath
ruleImportPath returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getImportPathAccess().getString_litString_litParserRuleCall_0());
			}
			lv_string_lit_0_0=rulestring_lit
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getImportPathRule());
				}
				set(
					$current,
					"string_lit",
					lv_string_lit_0_0,
					"com.ufcg.compiladores.Go.string_lit");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleidentifier
entryRuleidentifier returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIdentifierRule()); }
	iv_ruleidentifier=ruleidentifier
	{ $current=$iv_ruleidentifier.current; }
	EOF;

// Rule identifier
ruleidentifier returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_LETTER_0_0=RULE_LETTER
				{
					newLeafNode(lv_LETTER_0_0, grammarAccess.getIdentifierAccess().getLETTERLETTERTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getIdentifierRule());
					}
					addWithLastConsumed(
						$current,
						"LETTER",
						lv_LETTER_0_0,
						"com.ufcg.compiladores.Go.LETTER");
				}
			)
		)
		(
			(
				(
					lv_LETTER_1_0=RULE_LETTER
					{
						newLeafNode(lv_LETTER_1_0, grammarAccess.getIdentifierAccess().getLETTERLETTERTerminalRuleCall_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getIdentifierRule());
						}
						addWithLastConsumed(
							$current,
							"LETTER",
							lv_LETTER_1_0,
							"com.ufcg.compiladores.Go.LETTER");
					}
				)
			)
			    |
			(
				(
					lv_DECIMAL_DIGIT_2_0=RULE_DECIMAL_DIGIT
					{
						newLeafNode(lv_DECIMAL_DIGIT_2_0, grammarAccess.getIdentifierAccess().getDECIMAL_DIGITDECIMAL_DIGITTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getIdentifierRule());
						}
						addWithLastConsumed(
							$current,
							"DECIMAL_DIGIT",
							lv_DECIMAL_DIGIT_2_0,
							"com.ufcg.compiladores.Go.DECIMAL_DIGIT");
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleint_lit
entryRuleint_lit returns [String current=null]:
	{ newCompositeNode(grammarAccess.getInt_litRule()); }
	iv_ruleint_lit=ruleint_lit
	{ $current=$iv_ruleint_lit.current.getText(); }
	EOF;

// Rule int_lit
ruleint_lit returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getInt_litAccess().getDecimal_litParserRuleCall_0());
		}
		this_decimal_lit_0=ruledecimal_lit
		{
			$current.merge(this_decimal_lit_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getInt_litAccess().getOctal_litParserRuleCall_1());
		}
		this_octal_lit_1=ruleoctal_lit
		{
			$current.merge(this_octal_lit_1);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getInt_litAccess().getHex_litParserRuleCall_2());
		}
		this_hex_lit_2=rulehex_lit
		{
			$current.merge(this_hex_lit_2);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuledecimal_lit
entryRuledecimal_lit returns [String current=null]:
	{ newCompositeNode(grammarAccess.getDecimal_litRule()); }
	iv_ruledecimal_lit=ruledecimal_lit
	{ $current=$iv_ruledecimal_lit.current.getText(); }
	EOF;

// Rule decimal_lit
ruledecimal_lit returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_DECIMAL_DIGIT_0=RULE_DECIMAL_DIGIT
		{
			$current.merge(this_DECIMAL_DIGIT_0);
		}
		{
			newLeafNode(this_DECIMAL_DIGIT_0, grammarAccess.getDecimal_litAccess().getDECIMAL_DIGITTerminalRuleCall_0());
		}
		(
			this_DECIMAL_DIGIT_1=RULE_DECIMAL_DIGIT
			{
				$current.merge(this_DECIMAL_DIGIT_1);
			}
			{
				newLeafNode(this_DECIMAL_DIGIT_1, grammarAccess.getDecimal_litAccess().getDECIMAL_DIGITTerminalRuleCall_1());
			}
		)*
	)
;

// Entry rule entryRuleoctal_lit
entryRuleoctal_lit returns [String current=null]:
	{ newCompositeNode(grammarAccess.getOctal_litRule()); }
	iv_ruleoctal_lit=ruleoctal_lit
	{ $current=$iv_ruleoctal_lit.current.getText(); }
	EOF;

// Rule octal_lit
ruleoctal_lit returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='0'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOctal_litAccess().getDigitZeroKeyword_0());
		}
		(
			this_OCTAL_DIGIT_1=RULE_OCTAL_DIGIT
			{
				$current.merge(this_OCTAL_DIGIT_1);
			}
			{
				newLeafNode(this_OCTAL_DIGIT_1, grammarAccess.getOctal_litAccess().getOCTAL_DIGITTerminalRuleCall_1());
			}
		)*
	)
;

// Entry rule entryRulehex_lit
entryRulehex_lit returns [String current=null]:
	{ newCompositeNode(grammarAccess.getHex_litRule()); }
	iv_rulehex_lit=rulehex_lit
	{ $current=$iv_rulehex_lit.current.getText(); }
	EOF;

// Rule hex_lit
rulehex_lit returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='0'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getHex_litAccess().getDigitZeroKeyword_0());
		}
		(
			kw='x'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getHex_litAccess().getXKeyword_1_0());
			}
			    |
			kw='X'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getHex_litAccess().getXKeyword_1_1());
			}
		)
		this_HEX_DIGIT_3=RULE_HEX_DIGIT
		{
			$current.merge(this_HEX_DIGIT_3);
		}
		{
			newLeafNode(this_HEX_DIGIT_3, grammarAccess.getHex_litAccess().getHEX_DIGITTerminalRuleCall_2());
		}
		(
			this_HEX_DIGIT_4=RULE_HEX_DIGIT
			{
				$current.merge(this_HEX_DIGIT_4);
			}
			{
				newLeafNode(this_HEX_DIGIT_4, grammarAccess.getHex_litAccess().getHEX_DIGITTerminalRuleCall_3());
			}
		)*
	)
;

// Entry rule entryRulefloat_lit
entryRulefloat_lit returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFloat_litRule()); }
	iv_rulefloat_lit=rulefloat_lit
	{ $current=$iv_rulefloat_lit.current; }
	EOF;

// Rule float_lit
rulefloat_lit returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				newCompositeNode(grammarAccess.getFloat_litAccess().getDecimalsParserRuleCall_0_0());
			}
			this_decimals_0=ruledecimals
			{
				$current = $this_decimals_0.current;
				afterParserOrEnumRuleCall();
			}
			otherlv_1='.'
			{
				newLeafNode(otherlv_1, grammarAccess.getFloat_litAccess().getFullStopKeyword_0_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getFloat_litAccess().getDecimalsDecimalsParserRuleCall_0_2_0());
					}
					lv_decimals_2_0=ruledecimals
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFloat_litRule());
						}
						set(
							$current,
							"decimals",
							lv_decimals_2_0,
							"com.ufcg.compiladores.Go.decimals");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			(
				(
					{
						newCompositeNode(grammarAccess.getFloat_litAccess().getExponentExponentParserRuleCall_0_3_0());
					}
					lv_exponent_3_0=ruleexponent
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFloat_litRule());
						}
						set(
							$current,
							"exponent",
							lv_exponent_3_0,
							"com.ufcg.compiladores.Go.exponent");
						afterParserOrEnumRuleCall();
					}
				)
			)?
		)
		    |
		(
			{
				/* */
			}
			{
				newCompositeNode(grammarAccess.getFloat_litAccess().getDecimalsParserRuleCall_1_0());
			}
			this_decimals_4=ruledecimals
			{
				$current = $this_decimals_4.current;
				afterParserOrEnumRuleCall();
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getFloat_litAccess().getExponentExponentParserRuleCall_1_1_0());
					}
					lv_exponent_5_0=ruleexponent
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFloat_litRule());
						}
						set(
							$current,
							"exponent",
							lv_exponent_5_0,
							"com.ufcg.compiladores.Go.exponent");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			otherlv_6='.'
			{
				newLeafNode(otherlv_6, grammarAccess.getFloat_litAccess().getFullStopKeyword_2_0());
			}
			{
				/* */
			}
			{
				newCompositeNode(grammarAccess.getFloat_litAccess().getDecimalsParserRuleCall_2_1());
			}
			this_decimals_7=ruledecimals
			{
				$current = $this_decimals_7.current;
				afterParserOrEnumRuleCall();
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getFloat_litAccess().getExponenExponentParserRuleCall_2_2_0());
					}
					lv_exponen_8_0=ruleexponent
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFloat_litRule());
						}
						set(
							$current,
							"exponen",
							lv_exponen_8_0,
							"com.ufcg.compiladores.Go.exponent");
						afterParserOrEnumRuleCall();
					}
				)
			)?
		)
	)
;

// Entry rule entryRulestring_lit
entryRulestring_lit returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getString_litRule()); }
	iv_rulestring_lit=rulestring_lit
	{ $current=$iv_rulestring_lit.current; }
	EOF;

// Rule string_lit
rulestring_lit returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getString_litAccess().getRaw_string_litRaw_string_litParserRuleCall_0_0());
				}
				lv_raw_string_lit_0_0=ruleraw_string_lit
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getString_litRule());
					}
					set(
						$current,
						"raw_string_lit",
						lv_raw_string_lit_0_0,
						"com.ufcg.compiladores.Go.raw_string_lit");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getString_litAccess().getInterpreted_string_litInterpreted_string_litParserRuleCall_1_0());
				}
				lv_interpreted_string_lit_1_0=ruleinterpreted_string_lit
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getString_litRule());
					}
					set(
						$current,
						"interpreted_string_lit",
						lv_interpreted_string_lit_1_0,
						"com.ufcg.compiladores.Go.interpreted_string_lit");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleraw_string_lit
entryRuleraw_string_lit returns [String current=null]:
	{ newCompositeNode(grammarAccess.getRaw_string_litRule()); }
	iv_ruleraw_string_lit=ruleraw_string_lit
	{ $current=$iv_ruleraw_string_lit.current.getText(); }
	EOF;

// Rule raw_string_lit
ruleraw_string_lit returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='\''
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getRaw_string_litAccess().getApostropheKeyword_0());
		}
		(
			{
				newCompositeNode(grammarAccess.getRaw_string_litAccess().getUnicode_charParserRuleCall_1_0());
			}
			this_unicode_char_1=ruleunicode_char
			{
				$current.merge(this_unicode_char_1);
			}
			{
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getRaw_string_litAccess().getNewlineParserRuleCall_1_1());
			}
			this_newline_2=rulenewline
			{
				$current.merge(this_newline_2);
			}
			{
				afterParserOrEnumRuleCall();
			}
		)?
		kw='\''
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getRaw_string_litAccess().getApostropheKeyword_2());
		}
	)
;

// Entry rule entryRuleinterpreted_string_lit
entryRuleinterpreted_string_lit returns [String current=null]:
	{ newCompositeNode(grammarAccess.getInterpreted_string_litRule()); }
	iv_ruleinterpreted_string_lit=ruleinterpreted_string_lit
	{ $current=$iv_ruleinterpreted_string_lit.current.getText(); }
	EOF;

// Rule interpreted_string_lit
ruleinterpreted_string_lit returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='"'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getInterpreted_string_litAccess().getQuotationMarkKeyword_0());
		}
		(
			{
				newCompositeNode(grammarAccess.getInterpreted_string_litAccess().getUnicode_valueParserRuleCall_1_0());
			}
			this_unicode_value_1=ruleunicode_value
			{
				$current.merge(this_unicode_value_1);
			}
			{
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getInterpreted_string_litAccess().getByte_valueParserRuleCall_1_1());
			}
			this_byte_value_2=rulebyte_value
			{
				$current.merge(this_byte_value_2);
			}
			{
				afterParserOrEnumRuleCall();
			}
		)?
		kw='"'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getInterpreted_string_litAccess().getQuotationMarkKeyword_2());
		}
	)
;

// Entry rule entryRuleunicode_char
entryRuleunicode_char returns [String current=null]:
	{ newCompositeNode(grammarAccess.getUnicode_charRule()); }
	iv_ruleunicode_char=ruleunicode_char
	{ $current=$iv_ruleunicode_char.current.getText(); }
	EOF;

// Rule unicode_char
ruleunicode_char returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='?'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getUnicode_charAccess().getQuestionMarkKeyword_0());
		}
		    |
		kw='.'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getUnicode_charAccess().getFullStopKeyword_1());
		}
		    |
		kw=','
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getUnicode_charAccess().getCommaKeyword_2());
		}
		    |
		kw='!'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getUnicode_charAccess().getExclamationMarkKeyword_3());
		}
	)
;

// Entry rule entryRulenewline
entryRulenewline returns [String current=null]:
	{ newCompositeNode(grammarAccess.getNewlineRule()); }
	iv_rulenewline=rulenewline
	{ $current=$iv_rulenewline.current.getText(); }
	EOF;

// Rule newline
rulenewline returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw='U+000A'
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getNewlineAccess().getU000AKeyword());
	}
;

// Entry rule entryRuledecimals
entryRuledecimals returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDecimalsRule()); }
	iv_ruledecimals=ruledecimals
	{ $current=$iv_ruledecimals.current; }
	EOF;

// Rule decimals
ruledecimals returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_DECIMAL_DIGIT_0_0=RULE_DECIMAL_DIGIT
				{
					newLeafNode(lv_DECIMAL_DIGIT_0_0, grammarAccess.getDecimalsAccess().getDECIMAL_DIGITDECIMAL_DIGITTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDecimalsRule());
					}
					addWithLastConsumed(
						$current,
						"DECIMAL_DIGIT",
						lv_DECIMAL_DIGIT_0_0,
						"com.ufcg.compiladores.Go.DECIMAL_DIGIT");
				}
			)
		)
		(
			(
				lv_DECIMAL_DIGIT_1_0=RULE_DECIMAL_DIGIT
				{
					newLeafNode(lv_DECIMAL_DIGIT_1_0, grammarAccess.getDecimalsAccess().getDECIMAL_DIGITDECIMAL_DIGITTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDecimalsRule());
					}
					addWithLastConsumed(
						$current,
						"DECIMAL_DIGIT",
						lv_DECIMAL_DIGIT_1_0,
						"com.ufcg.compiladores.Go.DECIMAL_DIGIT");
				}
			)
		)*
	)
;

// Entry rule entryRuleexponent
entryRuleexponent returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExponentRule()); }
	iv_ruleexponent=ruleexponent
	{ $current=$iv_ruleexponent.current; }
	EOF;

// Rule exponent
ruleexponent returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='e'
			{
				newLeafNode(otherlv_0, grammarAccess.getExponentAccess().getEKeyword_0_0());
			}
			    |
			otherlv_1='E'
			{
				newLeafNode(otherlv_1, grammarAccess.getExponentAccess().getEKeyword_0_1());
			}
		)
		(
			otherlv_2='+'
			{
				newLeafNode(otherlv_2, grammarAccess.getExponentAccess().getPlusSignKeyword_1_0());
			}
			    |
			otherlv_3='-'
			{
				newLeafNode(otherlv_3, grammarAccess.getExponentAccess().getHyphenMinusKeyword_1_1());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getExponentAccess().getDecimalsDecimalsParserRuleCall_2_0());
				}
				lv_decimals_4_0=ruledecimals
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExponentRule());
					}
					set(
						$current,
						"decimals",
						lv_decimals_4_0,
						"com.ufcg.compiladores.Go.decimals");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRulerune_lit
entryRulerune_lit returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRune_litRule()); }
	iv_rulerune_lit=rulerune_lit
	{ $current=$iv_rulerune_lit.current; }
	EOF;

// Rule rune_lit
rulerune_lit returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='\''
		{
			newLeafNode(otherlv_0, grammarAccess.getRune_litAccess().getApostropheKeyword_0());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getRune_litAccess().getUnicode_valueUnicode_valueParserRuleCall_1_0_0());
					}
					lv_unicode_value_1_0=ruleunicode_value
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRune_litRule());
						}
						set(
							$current,
							"unicode_value",
							lv_unicode_value_1_0,
							"com.ufcg.compiladores.Go.unicode_value");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getRune_litAccess().getByte_valueByte_valueParserRuleCall_1_1_0());
					}
					lv_byte_value_2_0=rulebyte_value
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRune_litRule());
						}
						set(
							$current,
							"byte_value",
							lv_byte_value_2_0,
							"com.ufcg.compiladores.Go.byte_value");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		otherlv_3='\''
		{
			newLeafNode(otherlv_3, grammarAccess.getRune_litAccess().getApostropheKeyword_2());
		}
	)
;

// Entry rule entryRuleunicode_value
entryRuleunicode_value returns [String current=null]:
	{ newCompositeNode(grammarAccess.getUnicode_valueRule()); }
	iv_ruleunicode_value=ruleunicode_value
	{ $current=$iv_ruleunicode_value.current.getText(); }
	EOF;

// Rule unicode_value
ruleunicode_value returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_LETTER_0=RULE_LETTER
		{
			$current.merge(this_LETTER_0);
		}
		{
			newLeafNode(this_LETTER_0, grammarAccess.getUnicode_valueAccess().getLETTERTerminalRuleCall_0());
		}
		    |
		{
			newCompositeNode(grammarAccess.getUnicode_valueAccess().getLittle_u_valueParserRuleCall_1());
		}
		this_little_u_value_1=rulelittle_u_value
		{
			$current.merge(this_little_u_value_1);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getUnicode_valueAccess().getBig_u_valueParserRuleCall_2());
		}
		this_big_u_value_2=rulebig_u_value
		{
			$current.merge(this_big_u_value_2);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getUnicode_valueAccess().getEscaped_charParserRuleCall_3());
		}
		this_escaped_char_3=ruleescaped_char
		{
			$current.merge(this_escaped_char_3);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRulebyte_value
entryRulebyte_value returns [String current=null]:
	{ newCompositeNode(grammarAccess.getByte_valueRule()); }
	iv_rulebyte_value=rulebyte_value
	{ $current=$iv_rulebyte_value.current.getText(); }
	EOF;

// Rule byte_value
rulebyte_value returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getByte_valueAccess().getOctal_byte_valueParserRuleCall_0());
		}
		this_octal_byte_value_0=ruleoctal_byte_value
		{
			$current.merge(this_octal_byte_value_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getByte_valueAccess().getHex_byte_valueParserRuleCall_1());
		}
		this_hex_byte_value_1=rulehex_byte_value
		{
			$current.merge(this_hex_byte_value_1);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleoctal_byte_value
entryRuleoctal_byte_value returns [String current=null]:
	{ newCompositeNode(grammarAccess.getOctal_byte_valueRule()); }
	iv_ruleoctal_byte_value=ruleoctal_byte_value
	{ $current=$iv_ruleoctal_byte_value.current.getText(); }
	EOF;

// Rule octal_byte_value
ruleoctal_byte_value returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getOctal_byte_valueAccess().getCHARParserRuleCall_0());
		}
		this_CHAR_0=ruleCHAR
		{
			$current.merge(this_CHAR_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		this_OCTAL_DIGIT_1=RULE_OCTAL_DIGIT
		{
			$current.merge(this_OCTAL_DIGIT_1);
		}
		{
			newLeafNode(this_OCTAL_DIGIT_1, grammarAccess.getOctal_byte_valueAccess().getOCTAL_DIGITTerminalRuleCall_1());
		}
		this_OCTAL_DIGIT_2=RULE_OCTAL_DIGIT
		{
			$current.merge(this_OCTAL_DIGIT_2);
		}
		{
			newLeafNode(this_OCTAL_DIGIT_2, grammarAccess.getOctal_byte_valueAccess().getOCTAL_DIGITTerminalRuleCall_2());
		}
		this_OCTAL_DIGIT_3=RULE_OCTAL_DIGIT
		{
			$current.merge(this_OCTAL_DIGIT_3);
		}
		{
			newLeafNode(this_OCTAL_DIGIT_3, grammarAccess.getOctal_byte_valueAccess().getOCTAL_DIGITTerminalRuleCall_3());
		}
	)
;

// Entry rule entryRulehex_byte_value
entryRulehex_byte_value returns [String current=null]:
	{ newCompositeNode(grammarAccess.getHex_byte_valueRule()); }
	iv_rulehex_byte_value=rulehex_byte_value
	{ $current=$iv_rulehex_byte_value.current.getText(); }
	EOF;

// Rule hex_byte_value
rulehex_byte_value returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getHex_byte_valueAccess().getCHARParserRuleCall_0());
		}
		this_CHAR_0=ruleCHAR
		{
			$current.merge(this_CHAR_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		kw='x'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getHex_byte_valueAccess().getXKeyword_1());
		}
		this_HEX_DIGIT_2=RULE_HEX_DIGIT
		{
			$current.merge(this_HEX_DIGIT_2);
		}
		{
			newLeafNode(this_HEX_DIGIT_2, grammarAccess.getHex_byte_valueAccess().getHEX_DIGITTerminalRuleCall_2());
		}
		this_HEX_DIGIT_3=RULE_HEX_DIGIT
		{
			$current.merge(this_HEX_DIGIT_3);
		}
		{
			newLeafNode(this_HEX_DIGIT_3, grammarAccess.getHex_byte_valueAccess().getHEX_DIGITTerminalRuleCall_3());
		}
	)
;

// Entry rule entryRulelittle_u_value
entryRulelittle_u_value returns [String current=null]:
	{ newCompositeNode(grammarAccess.getLittle_u_valueRule()); }
	iv_rulelittle_u_value=rulelittle_u_value
	{ $current=$iv_rulelittle_u_value.current.getText(); }
	EOF;

// Rule little_u_value
rulelittle_u_value returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getLittle_u_valueAccess().getCHARParserRuleCall_0());
		}
		this_CHAR_0=ruleCHAR
		{
			$current.merge(this_CHAR_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		kw='u'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getLittle_u_valueAccess().getUKeyword_1());
		}
		this_HEX_DIGIT_2=RULE_HEX_DIGIT
		{
			$current.merge(this_HEX_DIGIT_2);
		}
		{
			newLeafNode(this_HEX_DIGIT_2, grammarAccess.getLittle_u_valueAccess().getHEX_DIGITTerminalRuleCall_2());
		}
		this_HEX_DIGIT_3=RULE_HEX_DIGIT
		{
			$current.merge(this_HEX_DIGIT_3);
		}
		{
			newLeafNode(this_HEX_DIGIT_3, grammarAccess.getLittle_u_valueAccess().getHEX_DIGITTerminalRuleCall_3());
		}
		this_HEX_DIGIT_4=RULE_HEX_DIGIT
		{
			$current.merge(this_HEX_DIGIT_4);
		}
		{
			newLeafNode(this_HEX_DIGIT_4, grammarAccess.getLittle_u_valueAccess().getHEX_DIGITTerminalRuleCall_4());
		}
		this_HEX_DIGIT_5=RULE_HEX_DIGIT
		{
			$current.merge(this_HEX_DIGIT_5);
		}
		{
			newLeafNode(this_HEX_DIGIT_5, grammarAccess.getLittle_u_valueAccess().getHEX_DIGITTerminalRuleCall_5());
		}
	)
;

// Entry rule entryRulebig_u_value
entryRulebig_u_value returns [String current=null]:
	{ newCompositeNode(grammarAccess.getBig_u_valueRule()); }
	iv_rulebig_u_value=rulebig_u_value
	{ $current=$iv_rulebig_u_value.current.getText(); }
	EOF;

// Rule big_u_value
rulebig_u_value returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getBig_u_valueAccess().getCHARParserRuleCall_0());
		}
		this_CHAR_0=ruleCHAR
		{
			$current.merge(this_CHAR_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		kw='U'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getBig_u_valueAccess().getUKeyword_1());
		}
		this_HEX_DIGIT_2=RULE_HEX_DIGIT
		{
			$current.merge(this_HEX_DIGIT_2);
		}
		{
			newLeafNode(this_HEX_DIGIT_2, grammarAccess.getBig_u_valueAccess().getHEX_DIGITTerminalRuleCall_2());
		}
		this_HEX_DIGIT_3=RULE_HEX_DIGIT
		{
			$current.merge(this_HEX_DIGIT_3);
		}
		{
			newLeafNode(this_HEX_DIGIT_3, grammarAccess.getBig_u_valueAccess().getHEX_DIGITTerminalRuleCall_3());
		}
		this_HEX_DIGIT_4=RULE_HEX_DIGIT
		{
			$current.merge(this_HEX_DIGIT_4);
		}
		{
			newLeafNode(this_HEX_DIGIT_4, grammarAccess.getBig_u_valueAccess().getHEX_DIGITTerminalRuleCall_4());
		}
		this_HEX_DIGIT_5=RULE_HEX_DIGIT
		{
			$current.merge(this_HEX_DIGIT_5);
		}
		{
			newLeafNode(this_HEX_DIGIT_5, grammarAccess.getBig_u_valueAccess().getHEX_DIGITTerminalRuleCall_5());
		}
		this_HEX_DIGIT_6=RULE_HEX_DIGIT
		{
			$current.merge(this_HEX_DIGIT_6);
		}
		{
			newLeafNode(this_HEX_DIGIT_6, grammarAccess.getBig_u_valueAccess().getHEX_DIGITTerminalRuleCall_6());
		}
		this_HEX_DIGIT_7=RULE_HEX_DIGIT
		{
			$current.merge(this_HEX_DIGIT_7);
		}
		{
			newLeafNode(this_HEX_DIGIT_7, grammarAccess.getBig_u_valueAccess().getHEX_DIGITTerminalRuleCall_7());
		}
		this_HEX_DIGIT_8=RULE_HEX_DIGIT
		{
			$current.merge(this_HEX_DIGIT_8);
		}
		{
			newLeafNode(this_HEX_DIGIT_8, grammarAccess.getBig_u_valueAccess().getHEX_DIGITTerminalRuleCall_8());
		}
		this_HEX_DIGIT_9=RULE_HEX_DIGIT
		{
			$current.merge(this_HEX_DIGIT_9);
		}
		{
			newLeafNode(this_HEX_DIGIT_9, grammarAccess.getBig_u_valueAccess().getHEX_DIGITTerminalRuleCall_9());
		}
	)
;

// Entry rule entryRuleescaped_char
entryRuleescaped_char returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEscaped_charRule()); }
	iv_ruleescaped_char=ruleescaped_char
	{ $current=$iv_ruleescaped_char.current.getText(); }
	EOF;

// Rule escaped_char
ruleescaped_char returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getEscaped_charAccess().getCHARParserRuleCall_0());
		}
		this_CHAR_0=ruleCHAR
		{
			$current.merge(this_CHAR_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		(
			kw='a'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getEscaped_charAccess().getAKeyword_1_0());
			}
			    |
			kw='b'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getEscaped_charAccess().getBKeyword_1_1());
			}
			    |
			kw='f'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getEscaped_charAccess().getFKeyword_1_2());
			}
			    |
			kw='n'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getEscaped_charAccess().getNKeyword_1_3());
			}
			    |
			kw='r'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getEscaped_charAccess().getRKeyword_1_4());
			}
			    |
			kw='t'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getEscaped_charAccess().getTKeyword_1_5());
			}
			    |
			kw='v'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getEscaped_charAccess().getVKeyword_1_6());
			}
			    |
			{
				newCompositeNode(grammarAccess.getEscaped_charAccess().getCHARParserRuleCall_1_7());
			}
			this_CHAR_8=ruleCHAR
			{
				$current.merge(this_CHAR_8);
			}
			{
				afterParserOrEnumRuleCall();
			}
			    |
			kw='\''
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getEscaped_charAccess().getApostropheKeyword_1_8());
			}
			    |
			kw='"'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getEscaped_charAccess().getQuotationMarkKeyword_1_9());
			}
		)
	)
;

// Entry rule entryRuleCHAR
entryRuleCHAR returns [String current=null]:
	{ newCompositeNode(grammarAccess.getCHARRule()); }
	iv_ruleCHAR=ruleCHAR
	{ $current=$iv_ruleCHAR.current.getText(); }
	EOF;

// Rule CHAR
ruleCHAR returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw='\''
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getCHARAccess().getApostropheKeyword());
	}
;

RULE_OCTAL_DIGIT : ('0'|'1'|'2'|'3'|'4'|'5'|'6');

RULE_DECIMAL_DIGIT : (RULE_OCTAL_DIGIT|RULE_SEVEN_TO_NINE);

RULE_HEX_DIGIT : (RULE_DECIMAL_DIGIT|RULE_A_TO_F);

fragment RULE_SEVEN_TO_NINE : ('7'|'8'|'9');

fragment RULE_A_TO_F : ('A'|'B'|'C'|'D'|'E'|'F'|'a'|'b'|'c'|'d'|'e'|'f');

RULE_LETTER : (RULE_A_TO_F|'g'|'h'|'i'|'j'|'k'|'l'|'m'|'n'|'o'|'p'|'q'|'r'|'s'|'t'|'u'|'v'|'x'|'y'|'z'|'_'|'G'|'H'|'I'|'J'|'K'|'L'|'M'|'N'|'O'|'P'|'Q'|'R'|'S'|'T'|'U'|'V'|'W'|'X'|'Y'|'Z');

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
