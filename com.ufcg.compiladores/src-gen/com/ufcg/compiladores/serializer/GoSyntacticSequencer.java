/*
 * generated by Xtext 2.14.0
 */
package com.ufcg.compiladores.serializer;

import com.google.inject.Inject;
import com.ufcg.compiladores.services.GoGrammarAccess;
import java.util.List;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.IGrammarAccess;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.nodemodel.INode;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.AbstractElementAlias;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.AlternativeAlias;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.GroupAlias;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.TokenAlias;
import org.eclipse.xtext.serializer.analysis.ISyntacticSequencerPDAProvider.ISynNavigable;
import org.eclipse.xtext.serializer.analysis.ISyntacticSequencerPDAProvider.ISynTransition;
import org.eclipse.xtext.serializer.sequencer.AbstractSyntacticSequencer;

@SuppressWarnings("all")
public class GoSyntacticSequencer extends AbstractSyntacticSequencer {

	protected GoGrammarAccess grammarAccess;
	protected AbstractElementAlias match_AliasDecl_ConstDecl_ConstSpec_ParameterDecl_Parameters_SouceFile_TopLevelDecl_Type_TypeDecl_TypeDef_VarDecl_VarSpec_topLevelDeclLinha_____ImportDeclParserRuleCall_2_0_SemicolonKeyword_2_1__q_FuncKeyword_1_0_FunctionNameParserRuleCall_0_0_q_LeftParenthesisKeyword_0_IdentifierListParserRuleCall_0_q_FullStopFullStopFullStopKeyword_1_q_LeftParenthesisKeyword_2_0_a___or_______ConstKeyword_0_LeftParenthesisKeyword_1_1_0_q_IdentifierListParserRuleCall_0___or___TypeKeyword_0_LeftParenthesisKeyword_1_1_0_q___IdentifierParserRuleCall_0_or___IdentifierParserRuleCall_0_EqualsSignKeyword_1_______or___VarKeyword_0_LeftParenthesisKeyword_1_1_0_q_IdentifierListParserRuleCall_0_____LeftParenthesisKeyword_2_0_a__;
	protected AbstractElementAlias match_AliasDecl_ConstDecl_ConstSpec_ParameterDecl_Parameters_SouceFile_TopLevelDecl_Type_TypeDecl_TypeDef_VarDecl_VarSpec_topLevelDeclLinha_____ImportDeclParserRuleCall_2_0_SemicolonKeyword_2_1__q_____FuncKeyword_1_0_FunctionNameParserRuleCall_0_0_q_LeftParenthesisKeyword_0_IdentifierListParserRuleCall_0_q_FullStopFullStopFullStopKeyword_1_q_LeftParenthesisKeyword_2_0_a___or___VarKeyword_0_LeftParenthesisKeyword_1_1_0_q_IdentifierListParserRuleCall_0_LeftParenthesisKeyword_2_0_a_______or_______ConstKeyword_0_LeftParenthesisKeyword_1_1_0_q_IdentifierListParserRuleCall_0___or___TypeKeyword_0_LeftParenthesisKeyword_1_1_0_q___IdentifierParserRuleCall_0_or___IdentifierParserRuleCall_0_EqualsSignKeyword_1_________LeftParenthesisKeyword_2_0_a__;
	protected AbstractElementAlias match_AliasDecl_ConstDecl_ConstSpec_ParameterDecl_Parameters_TopLevelDecl_TypeDecl_TypeDef_VarDecl_VarSpec_topLevelDeclLinha___ConstKeyword_0_LeftParenthesisKeyword_1_1_0_q_IdentifierListParserRuleCall_0___or___FuncKeyword_1_0_FunctionNameParserRuleCall_0_0_q_LeftParenthesisKeyword_0_IdentifierListParserRuleCall_0_q_FullStopFullStopFullStopKeyword_1_q___or___TypeKeyword_0_LeftParenthesisKeyword_1_1_0_q___IdentifierParserRuleCall_0_or___IdentifierParserRuleCall_0_EqualsSignKeyword_1_______or___VarKeyword_0_LeftParenthesisKeyword_1_1_0_q_IdentifierListParserRuleCall_0__;
	protected AbstractElementAlias match_AliasDecl_ConstDecl_ConstSpec_ParameterDecl_Parameters_TopLevelDecl_Type_TypeDecl_TypeDef_VarDecl_VarSpec_topLevelDeclLinha___ConstKeyword_0_LeftParenthesisKeyword_1_1_0_q_IdentifierListParserRuleCall_0___or_______FuncKeyword_1_0_FunctionNameParserRuleCall_0_0_q_LeftParenthesisKeyword_0_IdentifierListParserRuleCall_0_q_FullStopFullStopFullStopKeyword_1_q___or___TypeKeyword_0_LeftParenthesisKeyword_1_1_0_q___IdentifierParserRuleCall_0_or___IdentifierParserRuleCall_0_EqualsSignKeyword_1_______or___VarKeyword_0_LeftParenthesisKeyword_1_1_0_q_IdentifierListParserRuleCall_0_____LeftParenthesisKeyword_2_0_p_TypeNameParserRuleCall_0__;
	protected AbstractElementAlias match_AliasDecl_ConstDecl_ConstSpec_TypeDecl_TypeDef_VarDecl_VarSpec___ConstKeyword_0_LeftParenthesisKeyword_1_1_0_q_IdentifierListParserRuleCall_0___or___TypeKeyword_0_LeftParenthesisKeyword_1_1_0_q___IdentifierParserRuleCall_0_or___IdentifierParserRuleCall_0_EqualsSignKeyword_1_______or___VarKeyword_0_LeftParenthesisKeyword_1_1_0_q_IdentifierListParserRuleCall_0__;
	protected AbstractElementAlias match_AliasDecl_ConstDecl_ConstSpec_Type_TypeDecl_TypeDef_VarDecl_VarSpec___ConstKeyword_0_LeftParenthesisKeyword_1_1_0_q_IdentifierListParserRuleCall_0___or_______TypeKeyword_0_LeftParenthesisKeyword_1_1_0_q___IdentifierParserRuleCall_0_or___IdentifierParserRuleCall_0_EqualsSignKeyword_1_______or___VarKeyword_0_LeftParenthesisKeyword_1_1_0_q_IdentifierListParserRuleCall_0_____LeftParenthesisKeyword_2_0_p_TypeNameParserRuleCall_0__;
	protected AbstractElementAlias match_AliasDecl_TypeDef_IdentifierParserRuleCall_0_or___IdentifierParserRuleCall_0_EqualsSignKeyword_1__;
	protected AbstractElementAlias match_AliasDecl_Type_TypeDecl_TypeDef___LeftParenthesisKeyword_1_1_0_RightParenthesisKeyword_1_1_2___or_____IdentifierParserRuleCall_0_or___IdentifierParserRuleCall_0_EqualsSignKeyword_1_____LeftParenthesisKeyword_2_0_a_TypeNameParserRuleCall_0__;
	protected AbstractElementAlias match_Arguments_CommaKeyword_1_2_q;
	protected AbstractElementAlias match_Arguments_FullStopFullStopFullStopKeyword_1_1_q;
	protected AbstractElementAlias match_Arguments_FunctionLit_LiteralType_LiteralTypeLinha_MapType_ParameterDecl_Parameters_PrimaryExprLinha_TypeAssertion_LeftParenthesisKeyword_0_or___FullStopKeyword_0_LeftParenthesisKeyword_1___or___SelectorParserRuleCall_0_0_____FuncKeyword_0_LeftParenthesisKeyword_0_IdentifierListParserRuleCall_0_q_FullStopFullStopFullStopKeyword_1_q___or___LeftSquareBracketKeyword_1_0_RightSquareBracketKeyword_1_0___or___MapKeyword_0_LeftSquareBracketKeyword_1____q__;
	protected AbstractElementAlias match_Arguments_FunctionLit_LiteralType_LiteralTypeLinha_MapType_ParameterDecl_Parameters_PrimaryExprLinha_Type_TypeAssertion_LeftParenthesisKeyword_0_or_______FullStopKeyword_0_LeftParenthesisKeyword_1_LeftParenthesisKeyword_2_0_a___or___SelectorParserRuleCall_0_0_____FuncKeyword_0_LeftParenthesisKeyword_0_IdentifierListParserRuleCall_0_q_FullStopFullStopFullStopKeyword_1_q___or___LeftSquareBracketKeyword_1_0_RightSquareBracketKeyword_1_0___or___MapKeyword_0_LeftSquareBracketKeyword_1____q_LeftParenthesisKeyword_2_0_a_____TypeNameParserRuleCall_0_FullStopFullStopFullStopKeyword_1_1_q_CommaKeyword_1_2_q__;
	protected AbstractElementAlias match_Arguments_FunctionLit_LiteralType_LiteralTypeLinha_MapType_ParameterDecl_Parameters_PrimaryExprLinha_Type_TypeAssertion___LeftParenthesisKeyword_0_LeftParenthesisKeyword_2_0_a___or_______FullStopKeyword_0_LeftParenthesisKeyword_1___or___SelectorParserRuleCall_0_0_____FuncKeyword_0_LeftParenthesisKeyword_0_IdentifierListParserRuleCall_0_q_FullStopFullStopFullStopKeyword_1_q___or___LeftSquareBracketKeyword_1_0_RightSquareBracketKeyword_1_0___or___MapKeyword_0_LeftSquareBracketKeyword_1____q_____LeftParenthesisKeyword_2_0_a__;
	protected AbstractElementAlias match_Arguments_FunctionLit_LiteralType_LiteralTypeLinha_MapType_ParameterDecl_Parameters_PrimaryExprLinha_Type_TypeAssertion___SelectorParserRuleCall_0_0_____FuncKeyword_0_LeftParenthesisKeyword_0_IdentifierListParserRuleCall_0_q_FullStopFullStopFullStopKeyword_1_q___or___LeftSquareBracketKeyword_1_0_RightSquareBracketKeyword_1_0___or___MapKeyword_0_LeftSquareBracketKeyword_1____q_LeftParenthesisKeyword_2_0_a___or_____LeftParenthesisKeyword_0_or___FullStopKeyword_0_LeftParenthesisKeyword_1_____LeftParenthesisKeyword_2_0_a__;
	protected AbstractElementAlias match_Arguments_LiteralType_Operand_PrimaryExprLinha_LeftParenthesisKeyword_0_or_LeftSquareBracketKeyword_1_0_or___SelectorParserRuleCall_0_0___LeftParenthesisKeyword_2_0_or_LeftSquareBracketKeyword_1_0____;
	protected AbstractElementAlias match_ChannelType_ChanKeyword_0_0_or___ChanKeyword_0_1_0_LessThanSignHyphenMinusKeyword_0_1_1___or___LessThanSignHyphenMinusKeyword_0_2_0_ChanKeyword_0_2_1__;
	protected AbstractElementAlias match_ConstDecl_ConstSpec_IdentifierListParserRuleCall_0_or___LeftParenthesisKeyword_1_1_0_RightParenthesisKeyword_1_1_2__;
	protected AbstractElementAlias match_ConstDecl_LeftParenthesisKeyword_1_1_0_q;
	protected AbstractElementAlias match_Conversion_CommaKeyword_3_q;
	protected AbstractElementAlias match_FieldDecl_TagParserRuleCall_1_q;
	protected AbstractElementAlias match_ForClause_RangeClause_SimpleStmt_____EmptyStmtParserRuleCall_0_q_SemicolonKeyword_1_SemicolonKeyword_3___or_____IdentifierListParserRuleCall_0_1_0_ColonEqualsSignKeyword_0_1_1__q_RangeKeyword_1____q;
	protected AbstractElementAlias match_FunctionLit_LiteralType_LiteralTypeLinha_MapType_ParameterDecl_Parameters_PrimaryExprLinha_Type_TypeAssertion___FullStopKeyword_0_LeftParenthesisKeyword_1_LeftParenthesisKeyword_2_0_p___or___SelectorParserRuleCall_0_0_______FuncKeyword_0_LeftParenthesisKeyword_0_IdentifierListParserRuleCall_0_q_FullStopFullStopFullStopKeyword_1_q___or___LeftSquareBracketKeyword_1_0_RightSquareBracketKeyword_1_0___or___MapKeyword_0_LeftSquareBracketKeyword_1____q_LeftParenthesisKeyword_2_0_p__q__;
	protected AbstractElementAlias match_FunctionLit_LiteralType_LiteralTypeLinha_MapType_ParameterDecl_Parameters_PrimaryExprLinha_Type_TypeAssertion___SelectorParserRuleCall_0_0_FuncKeyword_0_LeftParenthesisKeyword_0_IdentifierListParserRuleCall_0_q_FullStopFullStopFullStopKeyword_1_q_LeftParenthesisKeyword_2_0_a___or_______FullStopKeyword_0_LeftParenthesisKeyword_1___or___SelectorParserRuleCall_0_0_____LeftSquareBracketKeyword_1_0_RightSquareBracketKeyword_1_0___or___MapKeyword_0_LeftSquareBracketKeyword_1____q_____LeftParenthesisKeyword_2_0_a__;
	protected AbstractElementAlias match_FunctionLit_LiteralType_LiteralTypeLinha_MapType_ParameterDecl_Parameters_Type_TypeSwitchGuard_____IdentifierParserRuleCall_0_0_ColonEqualsSignKeyword_0_1__q_MapKeyword_0_LeftSquareBracketKeyword_1_LeftParenthesisKeyword_2_0_a___or_______FuncKeyword_0_LeftParenthesisKeyword_0_IdentifierListParserRuleCall_0_q_FullStopFullStopFullStopKeyword_1_q___or___LeftSquareBracketKeyword_1_0_RightSquareBracketKeyword_1_0____q_LeftParenthesisKeyword_2_0_a__;
	protected AbstractElementAlias match_FunctionLit_LiteralType_LiteralTypeLinha_MapType_ParameterDecl_Parameters_Type_TypeSwitchGuard_____IdentifierParserRuleCall_0_0_ColonEqualsSignKeyword_0_1__q_____MapKeyword_0_LeftSquareBracketKeyword_1__q_LeftParenthesisKeyword_2_0_p__q___or_______FuncKeyword_0_LeftParenthesisKeyword_0_IdentifierListParserRuleCall_0_q_FullStopFullStopFullStopKeyword_1_q___or___LeftSquareBracketKeyword_1_0_RightSquareBracketKeyword_1_0____q_LeftParenthesisKeyword_2_0_p__;
	protected AbstractElementAlias match_FunctionLit_LiteralType_LiteralTypeLinha_MapType_ParameterDecl_Parameters_Type___FuncKeyword_0_LeftParenthesisKeyword_0_IdentifierListParserRuleCall_0_q_FullStopFullStopFullStopKeyword_1_q_LeftParenthesisKeyword_2_0_a___or_______LeftSquareBracketKeyword_1_0_RightSquareBracketKeyword_1_0___or___MapKeyword_0_LeftSquareBracketKeyword_1____q_LeftParenthesisKeyword_2_0_a__;
	protected AbstractElementAlias match_FunctionLit_LiteralType_LiteralTypeLinha_MapType_ParameterDecl_Parameters_____FuncKeyword_0_LeftParenthesisKeyword_0_IdentifierListParserRuleCall_0_q_FullStopFullStopFullStopKeyword_1_q___or___LeftSquareBracketKeyword_1_0_RightSquareBracketKeyword_1_0___or___MapKeyword_0_LeftSquareBracketKeyword_1____q;
	protected AbstractElementAlias match_FunctionLit_LiteralType_LiteralTypeLinha_MapType_Parameters_PrimaryExprLinha_Type_TypeAssertion___SelectorParserRuleCall_0_0_FuncKeyword_0_LeftParenthesisKeyword_0___or_______FullStopKeyword_0_LeftParenthesisKeyword_1___or___SelectorParserRuleCall_0_0_____LeftSquareBracketKeyword_1_0_RightSquareBracketKeyword_1_0___or___MapKeyword_0_LeftSquareBracketKeyword_1____q_____LeftParenthesisKeyword_2_0_p_TypeNameParserRuleCall_0_CommaKeyword_1_1_q__;
	protected AbstractElementAlias match_FunctionLit_LiteralType_LiteralTypeLinha_MapType_Parameters_Type___FuncKeyword_0_LeftParenthesisKeyword_0___or_______LeftSquareBracketKeyword_1_0_RightSquareBracketKeyword_1_0___or___MapKeyword_0_LeftSquareBracketKeyword_1____q_LeftParenthesisKeyword_2_0_p_TypeNameParserRuleCall_0_CommaKeyword_1_1_q__;
	protected AbstractElementAlias match_IfStmt_SimpleStmt___EmptyStmtParserRuleCall_0_SemicolonKeyword_1_1__q;
	protected AbstractElementAlias match_IncDecStmt_HyphenMinusHyphenMinusKeyword_1_1_or_PlusSignPlusSignKeyword_1_0;
	protected AbstractElementAlias match_InterfaceType_MethodSpec___InterfaceTypeNameParserRuleCall_1_SemicolonKeyword_2_1__q;
	protected AbstractElementAlias match_Key_KeyedElement_LiteralValue_____FieldNameParserRuleCall_0_or___LeftCurlyBracketKeyword_0_RightCurlyBracketKeyword_2_____ColonKeyword_0_1__q;
	protected AbstractElementAlias match_Key_LiteralValue_FieldNameParserRuleCall_0_or___LeftCurlyBracketKeyword_0_RightCurlyBracketKeyword_2__;
	protected AbstractElementAlias match_LiteralType_LiteralTypeLinha_MapType_____LeftSquareBracketKeyword_1_0_RightSquareBracketKeyword_1_0___or___MapKeyword_0_LeftSquareBracketKeyword_1____q;
	protected AbstractElementAlias match_LiteralType_Operand_LeftParenthesisKeyword_2_0_or_LeftSquareBracketKeyword_1_0;
	protected AbstractElementAlias match_LiteralType_PrimaryExprLinha_StructType_Type_TypeAssertion___FullStopKeyword_0_LeftParenthesisKeyword_1_LeftParenthesisKeyword_2_0_p_TypeNameParserRuleCall_0___or___SelectorParserRuleCall_0_0___TypeNameParserRuleCall_4_or___StructKeyword_0_LeftCurlyBracketKeyword_1_SemicolonKeyword_3______;
	protected AbstractElementAlias match_LiteralType_StructType_TypeNameParserRuleCall_4_or___StructKeyword_0_LeftCurlyBracketKeyword_1_SemicolonKeyword_3__;
	protected AbstractElementAlias match_LiteralValue_CommaKeyword_1_1_q;
	protected AbstractElementAlias match_Literal_Operand_BasicLitParserRuleCall_0_or_OperandNameParserRuleCall_1;
	protected AbstractElementAlias match_MapType_PrimaryExprLinha_Type_TypeAssertion___FullStopKeyword_0_LeftParenthesisKeyword_1_LeftParenthesisKeyword_2_0_a___or___SelectorParserRuleCall_0_0_MapKeyword_0_LeftSquareBracketKeyword_1_LeftParenthesisKeyword_2_0_a__;
	protected AbstractElementAlias match_MapType_Type_____MapKeyword_0_LeftSquareBracketKeyword_1__q_LeftParenthesisKeyword_2_0_p__q;
	protected AbstractElementAlias match_ParameterDecl_FullStopFullStopFullStopKeyword_1_q;
	protected AbstractElementAlias match_ParameterDecl_IdentifierListParserRuleCall_0_q;
	protected AbstractElementAlias match_ParameterDecl_Parameters_TopLevelDecl_Type_VarDecl_VarSpec_topLevelDeclLinha___FuncKeyword_1_0_FunctionNameParserRuleCall_0_0_q_LeftParenthesisKeyword_0_IdentifierListParserRuleCall_0_q_FullStopFullStopFullStopKeyword_1_q_LeftParenthesisKeyword_2_0_a___or___VarKeyword_0_LeftParenthesisKeyword_1_1_0_q_IdentifierListParserRuleCall_0_LeftParenthesisKeyword_2_0_a__;
	protected AbstractElementAlias match_ParameterDecl_Parameters_Type___LeftParenthesisKeyword_2_0_p_or___LeftParenthesisKeyword_0_IdentifierListParserRuleCall_0_q_FullStopFullStopFullStopKeyword_1_q_LeftParenthesisKeyword_2_0_p____q;
	protected AbstractElementAlias match_ParameterDecl_Parameters___LeftParenthesisKeyword_0_IdentifierListParserRuleCall_0_q_FullStopFullStopFullStopKeyword_1_q__q;
	protected AbstractElementAlias match_Parameters_CommaKeyword_1_1_q;
	protected AbstractElementAlias match_Parameters_Type___LeftParenthesisKeyword_0_RightParenthesisKeyword_2___or___LeftParenthesisKeyword_2_0_a_TypeNameParserRuleCall_0__;
	protected AbstractElementAlias match_RangeClause___IdentifierListParserRuleCall_0_1_0_ColonEqualsSignKeyword_0_1_1__q;
	protected AbstractElementAlias match_RecvStmt___IdentifierListParserRuleCall_0_1_0_ColonEqualsSignKeyword_0_1_1__q;
	protected AbstractElementAlias match_ShortVarDecl___IdentifierListParserRuleCall_0_ColonEqualsSignKeyword_1__q;
	protected AbstractElementAlias match_SimpleStmt_EmptyStmtParserRuleCall_0_q;
	protected AbstractElementAlias match_SimpleStmt_SwitchStmt___EmptyStmtParserRuleCall_0_SemicolonKeyword_1_1__q;
	protected AbstractElementAlias match_SouceFile___ImportDeclParserRuleCall_2_0_SemicolonKeyword_2_1__q;
	protected AbstractElementAlias match_TypeDecl_LeftParenthesisKeyword_1_1_0_q;
	protected AbstractElementAlias match_TypeSwitchGuard___IdentifierParserRuleCall_0_0_ColonEqualsSignKeyword_0_1__q;
	protected AbstractElementAlias match_Type_LeftParenthesisKeyword_2_0_a;
	protected AbstractElementAlias match_Type_VarDecl_VarSpec___IdentifierListParserRuleCall_0_LeftParenthesisKeyword_2_0_a_TypeNameParserRuleCall_0___or___LeftParenthesisKeyword_1_1_0_RightParenthesisKeyword_1_1_2__;
	protected AbstractElementAlias match_VarDecl_LeftParenthesisKeyword_1_1_0_q;
	protected AbstractElementAlias match_topLevelDeclLinha_FunctionNameParserRuleCall_0_0_q;
	
	@Inject
	protected void init(IGrammarAccess access) {
		grammarAccess = (GoGrammarAccess) access;
		match_AliasDecl_ConstDecl_ConstSpec_ParameterDecl_Parameters_SouceFile_TopLevelDecl_Type_TypeDecl_TypeDef_VarDecl_VarSpec_topLevelDeclLinha_____ImportDeclParserRuleCall_2_0_SemicolonKeyword_2_1__q_FuncKeyword_1_0_FunctionNameParserRuleCall_0_0_q_LeftParenthesisKeyword_0_IdentifierListParserRuleCall_0_q_FullStopFullStopFullStopKeyword_1_q_LeftParenthesisKeyword_2_0_a___or_______ConstKeyword_0_LeftParenthesisKeyword_1_1_0_q_IdentifierListParserRuleCall_0___or___TypeKeyword_0_LeftParenthesisKeyword_1_1_0_q___IdentifierParserRuleCall_0_or___IdentifierParserRuleCall_0_EqualsSignKeyword_1_______or___VarKeyword_0_LeftParenthesisKeyword_1_1_0_q_IdentifierListParserRuleCall_0_____LeftParenthesisKeyword_2_0_a__ = new AlternativeAlias(false, false, new GroupAlias(false, false, new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getConstDeclAccess().getConstKeyword_0()), new TokenAlias(false, true, grammarAccess.getConstDeclAccess().getLeftParenthesisKeyword_1_1_0()), new TokenAlias(false, false, grammarAccess.getConstSpecAccess().getIdentifierListParserRuleCall_0())), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getTypeDeclAccess().getTypeKeyword_0()), new TokenAlias(false, true, grammarAccess.getTypeDeclAccess().getLeftParenthesisKeyword_1_1_0()), new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getAliasDeclAccess().getIdentifierParserRuleCall_0()), new TokenAlias(false, false, grammarAccess.getAliasDeclAccess().getEqualsSignKeyword_1())), new TokenAlias(false, false, grammarAccess.getTypeDefAccess().getIdentifierParserRuleCall_0()))), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getVarDeclAccess().getVarKeyword_0()), new TokenAlias(false, true, grammarAccess.getVarDeclAccess().getLeftParenthesisKeyword_1_1_0()), new TokenAlias(false, false, grammarAccess.getVarSpecAccess().getIdentifierListParserRuleCall_0()))), new TokenAlias(true, true, grammarAccess.getTypeAccess().getLeftParenthesisKeyword_2_0())), new GroupAlias(false, false, new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getSouceFileAccess().getImportDeclParserRuleCall_2_0()), new TokenAlias(false, false, grammarAccess.getSouceFileAccess().getSemicolonKeyword_2_1())), new TokenAlias(false, false, grammarAccess.getTopLevelDeclAccess().getFuncKeyword_1_0()), new TokenAlias(false, true, grammarAccess.getTopLevelDeclLinhaAccess().getFunctionNameParserRuleCall_0_0()), new TokenAlias(false, false, grammarAccess.getParametersAccess().getLeftParenthesisKeyword_0()), new TokenAlias(false, true, grammarAccess.getParameterDeclAccess().getIdentifierListParserRuleCall_0()), new TokenAlias(false, true, grammarAccess.getParameterDeclAccess().getFullStopFullStopFullStopKeyword_1()), new TokenAlias(true, true, grammarAccess.getTypeAccess().getLeftParenthesisKeyword_2_0())));
		match_AliasDecl_ConstDecl_ConstSpec_ParameterDecl_Parameters_SouceFile_TopLevelDecl_Type_TypeDecl_TypeDef_VarDecl_VarSpec_topLevelDeclLinha_____ImportDeclParserRuleCall_2_0_SemicolonKeyword_2_1__q_____FuncKeyword_1_0_FunctionNameParserRuleCall_0_0_q_LeftParenthesisKeyword_0_IdentifierListParserRuleCall_0_q_FullStopFullStopFullStopKeyword_1_q_LeftParenthesisKeyword_2_0_a___or___VarKeyword_0_LeftParenthesisKeyword_1_1_0_q_IdentifierListParserRuleCall_0_LeftParenthesisKeyword_2_0_a_______or_______ConstKeyword_0_LeftParenthesisKeyword_1_1_0_q_IdentifierListParserRuleCall_0___or___TypeKeyword_0_LeftParenthesisKeyword_1_1_0_q___IdentifierParserRuleCall_0_or___IdentifierParserRuleCall_0_EqualsSignKeyword_1_________LeftParenthesisKeyword_2_0_a__ = new AlternativeAlias(false, false, new GroupAlias(false, false, new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getConstDeclAccess().getConstKeyword_0()), new TokenAlias(false, true, grammarAccess.getConstDeclAccess().getLeftParenthesisKeyword_1_1_0()), new TokenAlias(false, false, grammarAccess.getConstSpecAccess().getIdentifierListParserRuleCall_0())), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getTypeDeclAccess().getTypeKeyword_0()), new TokenAlias(false, true, grammarAccess.getTypeDeclAccess().getLeftParenthesisKeyword_1_1_0()), new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getAliasDeclAccess().getIdentifierParserRuleCall_0()), new TokenAlias(false, false, grammarAccess.getAliasDeclAccess().getEqualsSignKeyword_1())), new TokenAlias(false, false, grammarAccess.getTypeDefAccess().getIdentifierParserRuleCall_0())))), new TokenAlias(true, true, grammarAccess.getTypeAccess().getLeftParenthesisKeyword_2_0())), new GroupAlias(false, false, new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getSouceFileAccess().getImportDeclParserRuleCall_2_0()), new TokenAlias(false, false, grammarAccess.getSouceFileAccess().getSemicolonKeyword_2_1())), new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getTopLevelDeclAccess().getFuncKeyword_1_0()), new TokenAlias(false, true, grammarAccess.getTopLevelDeclLinhaAccess().getFunctionNameParserRuleCall_0_0()), new TokenAlias(false, false, grammarAccess.getParametersAccess().getLeftParenthesisKeyword_0()), new TokenAlias(false, true, grammarAccess.getParameterDeclAccess().getIdentifierListParserRuleCall_0()), new TokenAlias(false, true, grammarAccess.getParameterDeclAccess().getFullStopFullStopFullStopKeyword_1()), new TokenAlias(true, true, grammarAccess.getTypeAccess().getLeftParenthesisKeyword_2_0())), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getVarDeclAccess().getVarKeyword_0()), new TokenAlias(false, true, grammarAccess.getVarDeclAccess().getLeftParenthesisKeyword_1_1_0()), new TokenAlias(false, false, grammarAccess.getVarSpecAccess().getIdentifierListParserRuleCall_0()), new TokenAlias(true, true, grammarAccess.getTypeAccess().getLeftParenthesisKeyword_2_0())))));
		match_AliasDecl_ConstDecl_ConstSpec_ParameterDecl_Parameters_TopLevelDecl_TypeDecl_TypeDef_VarDecl_VarSpec_topLevelDeclLinha___ConstKeyword_0_LeftParenthesisKeyword_1_1_0_q_IdentifierListParserRuleCall_0___or___FuncKeyword_1_0_FunctionNameParserRuleCall_0_0_q_LeftParenthesisKeyword_0_IdentifierListParserRuleCall_0_q_FullStopFullStopFullStopKeyword_1_q___or___TypeKeyword_0_LeftParenthesisKeyword_1_1_0_q___IdentifierParserRuleCall_0_or___IdentifierParserRuleCall_0_EqualsSignKeyword_1_______or___VarKeyword_0_LeftParenthesisKeyword_1_1_0_q_IdentifierListParserRuleCall_0__ = new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getConstDeclAccess().getConstKeyword_0()), new TokenAlias(false, true, grammarAccess.getConstDeclAccess().getLeftParenthesisKeyword_1_1_0()), new TokenAlias(false, false, grammarAccess.getConstSpecAccess().getIdentifierListParserRuleCall_0())), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getTopLevelDeclAccess().getFuncKeyword_1_0()), new TokenAlias(false, true, grammarAccess.getTopLevelDeclLinhaAccess().getFunctionNameParserRuleCall_0_0()), new TokenAlias(false, false, grammarAccess.getParametersAccess().getLeftParenthesisKeyword_0()), new TokenAlias(false, true, grammarAccess.getParameterDeclAccess().getIdentifierListParserRuleCall_0()), new TokenAlias(false, true, grammarAccess.getParameterDeclAccess().getFullStopFullStopFullStopKeyword_1())), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getTypeDeclAccess().getTypeKeyword_0()), new TokenAlias(false, true, grammarAccess.getTypeDeclAccess().getLeftParenthesisKeyword_1_1_0()), new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getAliasDeclAccess().getIdentifierParserRuleCall_0()), new TokenAlias(false, false, grammarAccess.getAliasDeclAccess().getEqualsSignKeyword_1())), new TokenAlias(false, false, grammarAccess.getTypeDefAccess().getIdentifierParserRuleCall_0()))), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getVarDeclAccess().getVarKeyword_0()), new TokenAlias(false, true, grammarAccess.getVarDeclAccess().getLeftParenthesisKeyword_1_1_0()), new TokenAlias(false, false, grammarAccess.getVarSpecAccess().getIdentifierListParserRuleCall_0())));
		match_AliasDecl_ConstDecl_ConstSpec_ParameterDecl_Parameters_TopLevelDecl_Type_TypeDecl_TypeDef_VarDecl_VarSpec_topLevelDeclLinha___ConstKeyword_0_LeftParenthesisKeyword_1_1_0_q_IdentifierListParserRuleCall_0___or_______FuncKeyword_1_0_FunctionNameParserRuleCall_0_0_q_LeftParenthesisKeyword_0_IdentifierListParserRuleCall_0_q_FullStopFullStopFullStopKeyword_1_q___or___TypeKeyword_0_LeftParenthesisKeyword_1_1_0_q___IdentifierParserRuleCall_0_or___IdentifierParserRuleCall_0_EqualsSignKeyword_1_______or___VarKeyword_0_LeftParenthesisKeyword_1_1_0_q_IdentifierListParserRuleCall_0_____LeftParenthesisKeyword_2_0_p_TypeNameParserRuleCall_0__ = new AlternativeAlias(false, false, new GroupAlias(false, false, new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getTopLevelDeclAccess().getFuncKeyword_1_0()), new TokenAlias(false, true, grammarAccess.getTopLevelDeclLinhaAccess().getFunctionNameParserRuleCall_0_0()), new TokenAlias(false, false, grammarAccess.getParametersAccess().getLeftParenthesisKeyword_0()), new TokenAlias(false, true, grammarAccess.getParameterDeclAccess().getIdentifierListParserRuleCall_0()), new TokenAlias(false, true, grammarAccess.getParameterDeclAccess().getFullStopFullStopFullStopKeyword_1())), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getTypeDeclAccess().getTypeKeyword_0()), new TokenAlias(false, true, grammarAccess.getTypeDeclAccess().getLeftParenthesisKeyword_1_1_0()), new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getAliasDeclAccess().getIdentifierParserRuleCall_0()), new TokenAlias(false, false, grammarAccess.getAliasDeclAccess().getEqualsSignKeyword_1())), new TokenAlias(false, false, grammarAccess.getTypeDefAccess().getIdentifierParserRuleCall_0()))), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getVarDeclAccess().getVarKeyword_0()), new TokenAlias(false, true, grammarAccess.getVarDeclAccess().getLeftParenthesisKeyword_1_1_0()), new TokenAlias(false, false, grammarAccess.getVarSpecAccess().getIdentifierListParserRuleCall_0()))), new TokenAlias(true, false, grammarAccess.getTypeAccess().getLeftParenthesisKeyword_2_0()), new TokenAlias(false, false, grammarAccess.getTypeAccess().getTypeNameParserRuleCall_0())), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getConstDeclAccess().getConstKeyword_0()), new TokenAlias(false, true, grammarAccess.getConstDeclAccess().getLeftParenthesisKeyword_1_1_0()), new TokenAlias(false, false, grammarAccess.getConstSpecAccess().getIdentifierListParserRuleCall_0())));
		match_AliasDecl_ConstDecl_ConstSpec_TypeDecl_TypeDef_VarDecl_VarSpec___ConstKeyword_0_LeftParenthesisKeyword_1_1_0_q_IdentifierListParserRuleCall_0___or___TypeKeyword_0_LeftParenthesisKeyword_1_1_0_q___IdentifierParserRuleCall_0_or___IdentifierParserRuleCall_0_EqualsSignKeyword_1_______or___VarKeyword_0_LeftParenthesisKeyword_1_1_0_q_IdentifierListParserRuleCall_0__ = new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getConstDeclAccess().getConstKeyword_0()), new TokenAlias(false, true, grammarAccess.getConstDeclAccess().getLeftParenthesisKeyword_1_1_0()), new TokenAlias(false, false, grammarAccess.getConstSpecAccess().getIdentifierListParserRuleCall_0())), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getTypeDeclAccess().getTypeKeyword_0()), new TokenAlias(false, true, grammarAccess.getTypeDeclAccess().getLeftParenthesisKeyword_1_1_0()), new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getAliasDeclAccess().getIdentifierParserRuleCall_0()), new TokenAlias(false, false, grammarAccess.getAliasDeclAccess().getEqualsSignKeyword_1())), new TokenAlias(false, false, grammarAccess.getTypeDefAccess().getIdentifierParserRuleCall_0()))), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getVarDeclAccess().getVarKeyword_0()), new TokenAlias(false, true, grammarAccess.getVarDeclAccess().getLeftParenthesisKeyword_1_1_0()), new TokenAlias(false, false, grammarAccess.getVarSpecAccess().getIdentifierListParserRuleCall_0())));
		match_AliasDecl_ConstDecl_ConstSpec_Type_TypeDecl_TypeDef_VarDecl_VarSpec___ConstKeyword_0_LeftParenthesisKeyword_1_1_0_q_IdentifierListParserRuleCall_0___or_______TypeKeyword_0_LeftParenthesisKeyword_1_1_0_q___IdentifierParserRuleCall_0_or___IdentifierParserRuleCall_0_EqualsSignKeyword_1_______or___VarKeyword_0_LeftParenthesisKeyword_1_1_0_q_IdentifierListParserRuleCall_0_____LeftParenthesisKeyword_2_0_p_TypeNameParserRuleCall_0__ = new AlternativeAlias(false, false, new GroupAlias(false, false, new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getTypeDeclAccess().getTypeKeyword_0()), new TokenAlias(false, true, grammarAccess.getTypeDeclAccess().getLeftParenthesisKeyword_1_1_0()), new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getAliasDeclAccess().getIdentifierParserRuleCall_0()), new TokenAlias(false, false, grammarAccess.getAliasDeclAccess().getEqualsSignKeyword_1())), new TokenAlias(false, false, grammarAccess.getTypeDefAccess().getIdentifierParserRuleCall_0()))), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getVarDeclAccess().getVarKeyword_0()), new TokenAlias(false, true, grammarAccess.getVarDeclAccess().getLeftParenthesisKeyword_1_1_0()), new TokenAlias(false, false, grammarAccess.getVarSpecAccess().getIdentifierListParserRuleCall_0()))), new TokenAlias(true, false, grammarAccess.getTypeAccess().getLeftParenthesisKeyword_2_0()), new TokenAlias(false, false, grammarAccess.getTypeAccess().getTypeNameParserRuleCall_0())), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getConstDeclAccess().getConstKeyword_0()), new TokenAlias(false, true, grammarAccess.getConstDeclAccess().getLeftParenthesisKeyword_1_1_0()), new TokenAlias(false, false, grammarAccess.getConstSpecAccess().getIdentifierListParserRuleCall_0())));
		match_AliasDecl_TypeDef_IdentifierParserRuleCall_0_or___IdentifierParserRuleCall_0_EqualsSignKeyword_1__ = new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getAliasDeclAccess().getIdentifierParserRuleCall_0()), new TokenAlias(false, false, grammarAccess.getAliasDeclAccess().getEqualsSignKeyword_1())), new TokenAlias(false, false, grammarAccess.getTypeDefAccess().getIdentifierParserRuleCall_0()));
		match_AliasDecl_Type_TypeDecl_TypeDef___LeftParenthesisKeyword_1_1_0_RightParenthesisKeyword_1_1_2___or_____IdentifierParserRuleCall_0_or___IdentifierParserRuleCall_0_EqualsSignKeyword_1_____LeftParenthesisKeyword_2_0_a_TypeNameParserRuleCall_0__ = new AlternativeAlias(false, false, new GroupAlias(false, false, new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getAliasDeclAccess().getIdentifierParserRuleCall_0()), new TokenAlias(false, false, grammarAccess.getAliasDeclAccess().getEqualsSignKeyword_1())), new TokenAlias(false, false, grammarAccess.getTypeDefAccess().getIdentifierParserRuleCall_0())), new TokenAlias(true, true, grammarAccess.getTypeAccess().getLeftParenthesisKeyword_2_0()), new TokenAlias(false, false, grammarAccess.getTypeAccess().getTypeNameParserRuleCall_0())), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getTypeDeclAccess().getLeftParenthesisKeyword_1_1_0()), new TokenAlias(false, false, grammarAccess.getTypeDeclAccess().getRightParenthesisKeyword_1_1_2())));
		match_Arguments_CommaKeyword_1_2_q = new TokenAlias(false, true, grammarAccess.getArgumentsAccess().getCommaKeyword_1_2());
		match_Arguments_FullStopFullStopFullStopKeyword_1_1_q = new TokenAlias(false, true, grammarAccess.getArgumentsAccess().getFullStopFullStopFullStopKeyword_1_1());
		match_Arguments_FunctionLit_LiteralType_LiteralTypeLinha_MapType_ParameterDecl_Parameters_PrimaryExprLinha_TypeAssertion_LeftParenthesisKeyword_0_or___FullStopKeyword_0_LeftParenthesisKeyword_1___or___SelectorParserRuleCall_0_0_____FuncKeyword_0_LeftParenthesisKeyword_0_IdentifierListParserRuleCall_0_q_FullStopFullStopFullStopKeyword_1_q___or___LeftSquareBracketKeyword_1_0_RightSquareBracketKeyword_1_0___or___MapKeyword_0_LeftSquareBracketKeyword_1____q__ = new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getPrimaryExprLinhaAccess().getSelectorParserRuleCall_0_0()), new AlternativeAlias(false, true, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getFunctionLitAccess().getFuncKeyword_0()), new TokenAlias(false, false, grammarAccess.getParametersAccess().getLeftParenthesisKeyword_0()), new TokenAlias(false, true, grammarAccess.getParameterDeclAccess().getIdentifierListParserRuleCall_0()), new TokenAlias(false, true, grammarAccess.getParameterDeclAccess().getFullStopFullStopFullStopKeyword_1())), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getLiteralTypeAccess().getLeftSquareBracketKeyword_1_0()), new TokenAlias(false, false, grammarAccess.getLiteralTypeLinhaAccess().getRightSquareBracketKeyword_1_0())), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getMapTypeAccess().getMapKeyword_0()), new TokenAlias(false, false, grammarAccess.getMapTypeAccess().getLeftSquareBracketKeyword_1())))), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getTypeAssertionAccess().getFullStopKeyword_0()), new TokenAlias(false, false, grammarAccess.getTypeAssertionAccess().getLeftParenthesisKeyword_1())), new TokenAlias(false, false, grammarAccess.getArgumentsAccess().getLeftParenthesisKeyword_0()));
		match_Arguments_FunctionLit_LiteralType_LiteralTypeLinha_MapType_ParameterDecl_Parameters_PrimaryExprLinha_Type_TypeAssertion_LeftParenthesisKeyword_0_or_______FullStopKeyword_0_LeftParenthesisKeyword_1_LeftParenthesisKeyword_2_0_a___or___SelectorParserRuleCall_0_0_____FuncKeyword_0_LeftParenthesisKeyword_0_IdentifierListParserRuleCall_0_q_FullStopFullStopFullStopKeyword_1_q___or___LeftSquareBracketKeyword_1_0_RightSquareBracketKeyword_1_0___or___MapKeyword_0_LeftSquareBracketKeyword_1____q_LeftParenthesisKeyword_2_0_a_____TypeNameParserRuleCall_0_FullStopFullStopFullStopKeyword_1_1_q_CommaKeyword_1_2_q__ = new AlternativeAlias(false, false, new GroupAlias(false, false, new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getPrimaryExprLinhaAccess().getSelectorParserRuleCall_0_0()), new AlternativeAlias(false, true, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getFunctionLitAccess().getFuncKeyword_0()), new TokenAlias(false, false, grammarAccess.getParametersAccess().getLeftParenthesisKeyword_0()), new TokenAlias(false, true, grammarAccess.getParameterDeclAccess().getIdentifierListParserRuleCall_0()), new TokenAlias(false, true, grammarAccess.getParameterDeclAccess().getFullStopFullStopFullStopKeyword_1())), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getLiteralTypeAccess().getLeftSquareBracketKeyword_1_0()), new TokenAlias(false, false, grammarAccess.getLiteralTypeLinhaAccess().getRightSquareBracketKeyword_1_0())), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getMapTypeAccess().getMapKeyword_0()), new TokenAlias(false, false, grammarAccess.getMapTypeAccess().getLeftSquareBracketKeyword_1()))), new TokenAlias(true, true, grammarAccess.getTypeAccess().getLeftParenthesisKeyword_2_0())), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getTypeAssertionAccess().getFullStopKeyword_0()), new TokenAlias(false, false, grammarAccess.getTypeAssertionAccess().getLeftParenthesisKeyword_1()), new TokenAlias(true, true, grammarAccess.getTypeAccess().getLeftParenthesisKeyword_2_0()))), new TokenAlias(false, false, grammarAccess.getTypeAccess().getTypeNameParserRuleCall_0()), new TokenAlias(false, true, grammarAccess.getArgumentsAccess().getFullStopFullStopFullStopKeyword_1_1()), new TokenAlias(false, true, grammarAccess.getArgumentsAccess().getCommaKeyword_1_2())), new TokenAlias(false, false, grammarAccess.getArgumentsAccess().getLeftParenthesisKeyword_0()));
		match_Arguments_FunctionLit_LiteralType_LiteralTypeLinha_MapType_ParameterDecl_Parameters_PrimaryExprLinha_Type_TypeAssertion___LeftParenthesisKeyword_0_LeftParenthesisKeyword_2_0_a___or_______FullStopKeyword_0_LeftParenthesisKeyword_1___or___SelectorParserRuleCall_0_0_____FuncKeyword_0_LeftParenthesisKeyword_0_IdentifierListParserRuleCall_0_q_FullStopFullStopFullStopKeyword_1_q___or___LeftSquareBracketKeyword_1_0_RightSquareBracketKeyword_1_0___or___MapKeyword_0_LeftSquareBracketKeyword_1____q_____LeftParenthesisKeyword_2_0_a__ = new AlternativeAlias(false, false, new GroupAlias(false, false, new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getPrimaryExprLinhaAccess().getSelectorParserRuleCall_0_0()), new AlternativeAlias(false, true, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getFunctionLitAccess().getFuncKeyword_0()), new TokenAlias(false, false, grammarAccess.getParametersAccess().getLeftParenthesisKeyword_0()), new TokenAlias(false, true, grammarAccess.getParameterDeclAccess().getIdentifierListParserRuleCall_0()), new TokenAlias(false, true, grammarAccess.getParameterDeclAccess().getFullStopFullStopFullStopKeyword_1())), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getLiteralTypeAccess().getLeftSquareBracketKeyword_1_0()), new TokenAlias(false, false, grammarAccess.getLiteralTypeLinhaAccess().getRightSquareBracketKeyword_1_0())), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getMapTypeAccess().getMapKeyword_0()), new TokenAlias(false, false, grammarAccess.getMapTypeAccess().getLeftSquareBracketKeyword_1())))), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getTypeAssertionAccess().getFullStopKeyword_0()), new TokenAlias(false, false, grammarAccess.getTypeAssertionAccess().getLeftParenthesisKeyword_1()))), new TokenAlias(true, true, grammarAccess.getTypeAccess().getLeftParenthesisKeyword_2_0())), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getArgumentsAccess().getLeftParenthesisKeyword_0()), new TokenAlias(true, true, grammarAccess.getTypeAccess().getLeftParenthesisKeyword_2_0())));
		match_Arguments_FunctionLit_LiteralType_LiteralTypeLinha_MapType_ParameterDecl_Parameters_PrimaryExprLinha_Type_TypeAssertion___SelectorParserRuleCall_0_0_____FuncKeyword_0_LeftParenthesisKeyword_0_IdentifierListParserRuleCall_0_q_FullStopFullStopFullStopKeyword_1_q___or___LeftSquareBracketKeyword_1_0_RightSquareBracketKeyword_1_0___or___MapKeyword_0_LeftSquareBracketKeyword_1____q_LeftParenthesisKeyword_2_0_a___or_____LeftParenthesisKeyword_0_or___FullStopKeyword_0_LeftParenthesisKeyword_1_____LeftParenthesisKeyword_2_0_a__ = new AlternativeAlias(false, false, new GroupAlias(false, false, new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getTypeAssertionAccess().getFullStopKeyword_0()), new TokenAlias(false, false, grammarAccess.getTypeAssertionAccess().getLeftParenthesisKeyword_1())), new TokenAlias(false, false, grammarAccess.getArgumentsAccess().getLeftParenthesisKeyword_0())), new TokenAlias(true, true, grammarAccess.getTypeAccess().getLeftParenthesisKeyword_2_0())), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getPrimaryExprLinhaAccess().getSelectorParserRuleCall_0_0()), new AlternativeAlias(false, true, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getFunctionLitAccess().getFuncKeyword_0()), new TokenAlias(false, false, grammarAccess.getParametersAccess().getLeftParenthesisKeyword_0()), new TokenAlias(false, true, grammarAccess.getParameterDeclAccess().getIdentifierListParserRuleCall_0()), new TokenAlias(false, true, grammarAccess.getParameterDeclAccess().getFullStopFullStopFullStopKeyword_1())), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getLiteralTypeAccess().getLeftSquareBracketKeyword_1_0()), new TokenAlias(false, false, grammarAccess.getLiteralTypeLinhaAccess().getRightSquareBracketKeyword_1_0())), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getMapTypeAccess().getMapKeyword_0()), new TokenAlias(false, false, grammarAccess.getMapTypeAccess().getLeftSquareBracketKeyword_1()))), new TokenAlias(true, true, grammarAccess.getTypeAccess().getLeftParenthesisKeyword_2_0())));
		match_Arguments_LiteralType_Operand_PrimaryExprLinha_LeftParenthesisKeyword_0_or_LeftSquareBracketKeyword_1_0_or___SelectorParserRuleCall_0_0___LeftParenthesisKeyword_2_0_or_LeftSquareBracketKeyword_1_0____ = new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getPrimaryExprLinhaAccess().getSelectorParserRuleCall_0_0()), new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getLiteralTypeAccess().getLeftSquareBracketKeyword_1_0()), new TokenAlias(false, false, grammarAccess.getOperandAccess().getLeftParenthesisKeyword_2_0()))), new TokenAlias(false, false, grammarAccess.getArgumentsAccess().getLeftParenthesisKeyword_0()), new TokenAlias(false, false, grammarAccess.getPrimaryExprLinhaAccess().getLeftSquareBracketKeyword_1_0()));
		match_ChannelType_ChanKeyword_0_0_or___ChanKeyword_0_1_0_LessThanSignHyphenMinusKeyword_0_1_1___or___LessThanSignHyphenMinusKeyword_0_2_0_ChanKeyword_0_2_1__ = new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getChannelTypeAccess().getChanKeyword_0_1_0()), new TokenAlias(false, false, grammarAccess.getChannelTypeAccess().getLessThanSignHyphenMinusKeyword_0_1_1())), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getChannelTypeAccess().getLessThanSignHyphenMinusKeyword_0_2_0()), new TokenAlias(false, false, grammarAccess.getChannelTypeAccess().getChanKeyword_0_2_1())), new TokenAlias(false, false, grammarAccess.getChannelTypeAccess().getChanKeyword_0_0()));
		match_ConstDecl_ConstSpec_IdentifierListParserRuleCall_0_or___LeftParenthesisKeyword_1_1_0_RightParenthesisKeyword_1_1_2__ = new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getConstDeclAccess().getLeftParenthesisKeyword_1_1_0()), new TokenAlias(false, false, grammarAccess.getConstDeclAccess().getRightParenthesisKeyword_1_1_2())), new TokenAlias(false, false, grammarAccess.getConstSpecAccess().getIdentifierListParserRuleCall_0()));
		match_ConstDecl_LeftParenthesisKeyword_1_1_0_q = new TokenAlias(false, true, grammarAccess.getConstDeclAccess().getLeftParenthesisKeyword_1_1_0());
		match_Conversion_CommaKeyword_3_q = new TokenAlias(false, true, grammarAccess.getConversionAccess().getCommaKeyword_3());
		match_FieldDecl_TagParserRuleCall_1_q = new TokenAlias(false, true, grammarAccess.getFieldDeclAccess().getTagParserRuleCall_1());
		match_ForClause_RangeClause_SimpleStmt_____EmptyStmtParserRuleCall_0_q_SemicolonKeyword_1_SemicolonKeyword_3___or_____IdentifierListParserRuleCall_0_1_0_ColonEqualsSignKeyword_0_1_1__q_RangeKeyword_1____q = new AlternativeAlias(false, true, new GroupAlias(false, false, new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getRangeClauseAccess().getIdentifierListParserRuleCall_0_1_0()), new TokenAlias(false, false, grammarAccess.getRangeClauseAccess().getColonEqualsSignKeyword_0_1_1())), new TokenAlias(false, false, grammarAccess.getRangeClauseAccess().getRangeKeyword_1())), new GroupAlias(false, false, new TokenAlias(false, true, grammarAccess.getSimpleStmtAccess().getEmptyStmtParserRuleCall_0()), new TokenAlias(false, false, grammarAccess.getForClauseAccess().getSemicolonKeyword_1()), new TokenAlias(false, false, grammarAccess.getForClauseAccess().getSemicolonKeyword_3())));
		match_FunctionLit_LiteralType_LiteralTypeLinha_MapType_ParameterDecl_Parameters_PrimaryExprLinha_Type_TypeAssertion___FullStopKeyword_0_LeftParenthesisKeyword_1_LeftParenthesisKeyword_2_0_p___or___SelectorParserRuleCall_0_0_______FuncKeyword_0_LeftParenthesisKeyword_0_IdentifierListParserRuleCall_0_q_FullStopFullStopFullStopKeyword_1_q___or___LeftSquareBracketKeyword_1_0_RightSquareBracketKeyword_1_0___or___MapKeyword_0_LeftSquareBracketKeyword_1____q_LeftParenthesisKeyword_2_0_p__q__ = new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getPrimaryExprLinhaAccess().getSelectorParserRuleCall_0_0()), new GroupAlias(false, true, new AlternativeAlias(false, true, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getFunctionLitAccess().getFuncKeyword_0()), new TokenAlias(false, false, grammarAccess.getParametersAccess().getLeftParenthesisKeyword_0()), new TokenAlias(false, true, grammarAccess.getParameterDeclAccess().getIdentifierListParserRuleCall_0()), new TokenAlias(false, true, grammarAccess.getParameterDeclAccess().getFullStopFullStopFullStopKeyword_1())), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getLiteralTypeAccess().getLeftSquareBracketKeyword_1_0()), new TokenAlias(false, false, grammarAccess.getLiteralTypeLinhaAccess().getRightSquareBracketKeyword_1_0())), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getMapTypeAccess().getMapKeyword_0()), new TokenAlias(false, false, grammarAccess.getMapTypeAccess().getLeftSquareBracketKeyword_1()))), new TokenAlias(true, false, grammarAccess.getTypeAccess().getLeftParenthesisKeyword_2_0()))), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getTypeAssertionAccess().getFullStopKeyword_0()), new TokenAlias(false, false, grammarAccess.getTypeAssertionAccess().getLeftParenthesisKeyword_1()), new TokenAlias(true, false, grammarAccess.getTypeAccess().getLeftParenthesisKeyword_2_0())));
		match_FunctionLit_LiteralType_LiteralTypeLinha_MapType_ParameterDecl_Parameters_PrimaryExprLinha_Type_TypeAssertion___SelectorParserRuleCall_0_0_FuncKeyword_0_LeftParenthesisKeyword_0_IdentifierListParserRuleCall_0_q_FullStopFullStopFullStopKeyword_1_q_LeftParenthesisKeyword_2_0_a___or_______FullStopKeyword_0_LeftParenthesisKeyword_1___or___SelectorParserRuleCall_0_0_____LeftSquareBracketKeyword_1_0_RightSquareBracketKeyword_1_0___or___MapKeyword_0_LeftSquareBracketKeyword_1____q_____LeftParenthesisKeyword_2_0_a__ = new AlternativeAlias(false, false, new GroupAlias(false, false, new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getPrimaryExprLinhaAccess().getSelectorParserRuleCall_0_0()), new AlternativeAlias(false, true, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getLiteralTypeAccess().getLeftSquareBracketKeyword_1_0()), new TokenAlias(false, false, grammarAccess.getLiteralTypeLinhaAccess().getRightSquareBracketKeyword_1_0())), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getMapTypeAccess().getMapKeyword_0()), new TokenAlias(false, false, grammarAccess.getMapTypeAccess().getLeftSquareBracketKeyword_1())))), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getTypeAssertionAccess().getFullStopKeyword_0()), new TokenAlias(false, false, grammarAccess.getTypeAssertionAccess().getLeftParenthesisKeyword_1()))), new TokenAlias(true, true, grammarAccess.getTypeAccess().getLeftParenthesisKeyword_2_0())), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getPrimaryExprLinhaAccess().getSelectorParserRuleCall_0_0()), new TokenAlias(false, false, grammarAccess.getFunctionLitAccess().getFuncKeyword_0()), new TokenAlias(false, false, grammarAccess.getParametersAccess().getLeftParenthesisKeyword_0()), new TokenAlias(false, true, grammarAccess.getParameterDeclAccess().getIdentifierListParserRuleCall_0()), new TokenAlias(false, true, grammarAccess.getParameterDeclAccess().getFullStopFullStopFullStopKeyword_1()), new TokenAlias(true, true, grammarAccess.getTypeAccess().getLeftParenthesisKeyword_2_0())));
		match_FunctionLit_LiteralType_LiteralTypeLinha_MapType_ParameterDecl_Parameters_Type_TypeSwitchGuard_____IdentifierParserRuleCall_0_0_ColonEqualsSignKeyword_0_1__q_MapKeyword_0_LeftSquareBracketKeyword_1_LeftParenthesisKeyword_2_0_a___or_______FuncKeyword_0_LeftParenthesisKeyword_0_IdentifierListParserRuleCall_0_q_FullStopFullStopFullStopKeyword_1_q___or___LeftSquareBracketKeyword_1_0_RightSquareBracketKeyword_1_0____q_LeftParenthesisKeyword_2_0_a__ = new AlternativeAlias(false, false, new GroupAlias(false, false, new AlternativeAlias(false, true, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getFunctionLitAccess().getFuncKeyword_0()), new TokenAlias(false, false, grammarAccess.getParametersAccess().getLeftParenthesisKeyword_0()), new TokenAlias(false, true, grammarAccess.getParameterDeclAccess().getIdentifierListParserRuleCall_0()), new TokenAlias(false, true, grammarAccess.getParameterDeclAccess().getFullStopFullStopFullStopKeyword_1())), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getLiteralTypeAccess().getLeftSquareBracketKeyword_1_0()), new TokenAlias(false, false, grammarAccess.getLiteralTypeLinhaAccess().getRightSquareBracketKeyword_1_0()))), new TokenAlias(true, true, grammarAccess.getTypeAccess().getLeftParenthesisKeyword_2_0())), new GroupAlias(false, false, new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getTypeSwitchGuardAccess().getIdentifierParserRuleCall_0_0()), new TokenAlias(false, false, grammarAccess.getTypeSwitchGuardAccess().getColonEqualsSignKeyword_0_1())), new TokenAlias(false, false, grammarAccess.getMapTypeAccess().getMapKeyword_0()), new TokenAlias(false, false, grammarAccess.getMapTypeAccess().getLeftSquareBracketKeyword_1()), new TokenAlias(true, true, grammarAccess.getTypeAccess().getLeftParenthesisKeyword_2_0())));
		match_FunctionLit_LiteralType_LiteralTypeLinha_MapType_ParameterDecl_Parameters_Type_TypeSwitchGuard_____IdentifierParserRuleCall_0_0_ColonEqualsSignKeyword_0_1__q_____MapKeyword_0_LeftSquareBracketKeyword_1__q_LeftParenthesisKeyword_2_0_p__q___or_______FuncKeyword_0_LeftParenthesisKeyword_0_IdentifierListParserRuleCall_0_q_FullStopFullStopFullStopKeyword_1_q___or___LeftSquareBracketKeyword_1_0_RightSquareBracketKeyword_1_0____q_LeftParenthesisKeyword_2_0_p__ = new AlternativeAlias(false, false, new GroupAlias(false, false, new AlternativeAlias(false, true, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getFunctionLitAccess().getFuncKeyword_0()), new TokenAlias(false, false, grammarAccess.getParametersAccess().getLeftParenthesisKeyword_0()), new TokenAlias(false, true, grammarAccess.getParameterDeclAccess().getIdentifierListParserRuleCall_0()), new TokenAlias(false, true, grammarAccess.getParameterDeclAccess().getFullStopFullStopFullStopKeyword_1())), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getLiteralTypeAccess().getLeftSquareBracketKeyword_1_0()), new TokenAlias(false, false, grammarAccess.getLiteralTypeLinhaAccess().getRightSquareBracketKeyword_1_0()))), new TokenAlias(true, false, grammarAccess.getTypeAccess().getLeftParenthesisKeyword_2_0())), new GroupAlias(false, false, new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getTypeSwitchGuardAccess().getIdentifierParserRuleCall_0_0()), new TokenAlias(false, false, grammarAccess.getTypeSwitchGuardAccess().getColonEqualsSignKeyword_0_1())), new GroupAlias(false, true, new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getMapTypeAccess().getMapKeyword_0()), new TokenAlias(false, false, grammarAccess.getMapTypeAccess().getLeftSquareBracketKeyword_1())), new TokenAlias(true, false, grammarAccess.getTypeAccess().getLeftParenthesisKeyword_2_0()))));
		match_FunctionLit_LiteralType_LiteralTypeLinha_MapType_ParameterDecl_Parameters_Type___FuncKeyword_0_LeftParenthesisKeyword_0_IdentifierListParserRuleCall_0_q_FullStopFullStopFullStopKeyword_1_q_LeftParenthesisKeyword_2_0_a___or_______LeftSquareBracketKeyword_1_0_RightSquareBracketKeyword_1_0___or___MapKeyword_0_LeftSquareBracketKeyword_1____q_LeftParenthesisKeyword_2_0_a__ = new AlternativeAlias(false, false, new GroupAlias(false, false, new AlternativeAlias(false, true, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getLiteralTypeAccess().getLeftSquareBracketKeyword_1_0()), new TokenAlias(false, false, grammarAccess.getLiteralTypeLinhaAccess().getRightSquareBracketKeyword_1_0())), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getMapTypeAccess().getMapKeyword_0()), new TokenAlias(false, false, grammarAccess.getMapTypeAccess().getLeftSquareBracketKeyword_1()))), new TokenAlias(true, true, grammarAccess.getTypeAccess().getLeftParenthesisKeyword_2_0())), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getFunctionLitAccess().getFuncKeyword_0()), new TokenAlias(false, false, grammarAccess.getParametersAccess().getLeftParenthesisKeyword_0()), new TokenAlias(false, true, grammarAccess.getParameterDeclAccess().getIdentifierListParserRuleCall_0()), new TokenAlias(false, true, grammarAccess.getParameterDeclAccess().getFullStopFullStopFullStopKeyword_1()), new TokenAlias(true, true, grammarAccess.getTypeAccess().getLeftParenthesisKeyword_2_0())));
		match_FunctionLit_LiteralType_LiteralTypeLinha_MapType_ParameterDecl_Parameters_____FuncKeyword_0_LeftParenthesisKeyword_0_IdentifierListParserRuleCall_0_q_FullStopFullStopFullStopKeyword_1_q___or___LeftSquareBracketKeyword_1_0_RightSquareBracketKeyword_1_0___or___MapKeyword_0_LeftSquareBracketKeyword_1____q = new AlternativeAlias(false, true, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getFunctionLitAccess().getFuncKeyword_0()), new TokenAlias(false, false, grammarAccess.getParametersAccess().getLeftParenthesisKeyword_0()), new TokenAlias(false, true, grammarAccess.getParameterDeclAccess().getIdentifierListParserRuleCall_0()), new TokenAlias(false, true, grammarAccess.getParameterDeclAccess().getFullStopFullStopFullStopKeyword_1())), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getLiteralTypeAccess().getLeftSquareBracketKeyword_1_0()), new TokenAlias(false, false, grammarAccess.getLiteralTypeLinhaAccess().getRightSquareBracketKeyword_1_0())), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getMapTypeAccess().getMapKeyword_0()), new TokenAlias(false, false, grammarAccess.getMapTypeAccess().getLeftSquareBracketKeyword_1())));
		match_FunctionLit_LiteralType_LiteralTypeLinha_MapType_Parameters_PrimaryExprLinha_Type_TypeAssertion___SelectorParserRuleCall_0_0_FuncKeyword_0_LeftParenthesisKeyword_0___or_______FullStopKeyword_0_LeftParenthesisKeyword_1___or___SelectorParserRuleCall_0_0_____LeftSquareBracketKeyword_1_0_RightSquareBracketKeyword_1_0___or___MapKeyword_0_LeftSquareBracketKeyword_1____q_____LeftParenthesisKeyword_2_0_p_TypeNameParserRuleCall_0_CommaKeyword_1_1_q__ = new AlternativeAlias(false, false, new GroupAlias(false, false, new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getPrimaryExprLinhaAccess().getSelectorParserRuleCall_0_0()), new AlternativeAlias(false, true, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getLiteralTypeAccess().getLeftSquareBracketKeyword_1_0()), new TokenAlias(false, false, grammarAccess.getLiteralTypeLinhaAccess().getRightSquareBracketKeyword_1_0())), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getMapTypeAccess().getMapKeyword_0()), new TokenAlias(false, false, grammarAccess.getMapTypeAccess().getLeftSquareBracketKeyword_1())))), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getTypeAssertionAccess().getFullStopKeyword_0()), new TokenAlias(false, false, grammarAccess.getTypeAssertionAccess().getLeftParenthesisKeyword_1()))), new TokenAlias(true, false, grammarAccess.getTypeAccess().getLeftParenthesisKeyword_2_0()), new TokenAlias(false, false, grammarAccess.getTypeAccess().getTypeNameParserRuleCall_0()), new TokenAlias(false, true, grammarAccess.getParametersAccess().getCommaKeyword_1_1())), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getPrimaryExprLinhaAccess().getSelectorParserRuleCall_0_0()), new TokenAlias(false, false, grammarAccess.getFunctionLitAccess().getFuncKeyword_0()), new TokenAlias(false, false, grammarAccess.getParametersAccess().getLeftParenthesisKeyword_0())));
		match_FunctionLit_LiteralType_LiteralTypeLinha_MapType_Parameters_Type___FuncKeyword_0_LeftParenthesisKeyword_0___or_______LeftSquareBracketKeyword_1_0_RightSquareBracketKeyword_1_0___or___MapKeyword_0_LeftSquareBracketKeyword_1____q_LeftParenthesisKeyword_2_0_p_TypeNameParserRuleCall_0_CommaKeyword_1_1_q__ = new AlternativeAlias(false, false, new GroupAlias(false, false, new AlternativeAlias(false, true, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getLiteralTypeAccess().getLeftSquareBracketKeyword_1_0()), new TokenAlias(false, false, grammarAccess.getLiteralTypeLinhaAccess().getRightSquareBracketKeyword_1_0())), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getMapTypeAccess().getMapKeyword_0()), new TokenAlias(false, false, grammarAccess.getMapTypeAccess().getLeftSquareBracketKeyword_1()))), new TokenAlias(true, false, grammarAccess.getTypeAccess().getLeftParenthesisKeyword_2_0()), new TokenAlias(false, false, grammarAccess.getTypeAccess().getTypeNameParserRuleCall_0()), new TokenAlias(false, true, grammarAccess.getParametersAccess().getCommaKeyword_1_1())), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getFunctionLitAccess().getFuncKeyword_0()), new TokenAlias(false, false, grammarAccess.getParametersAccess().getLeftParenthesisKeyword_0())));
		match_IfStmt_SimpleStmt___EmptyStmtParserRuleCall_0_SemicolonKeyword_1_1__q = new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getSimpleStmtAccess().getEmptyStmtParserRuleCall_0()), new TokenAlias(false, false, grammarAccess.getIfStmtAccess().getSemicolonKeyword_1_1()));
		match_IncDecStmt_HyphenMinusHyphenMinusKeyword_1_1_or_PlusSignPlusSignKeyword_1_0 = new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getIncDecStmtAccess().getHyphenMinusHyphenMinusKeyword_1_1()), new TokenAlias(false, false, grammarAccess.getIncDecStmtAccess().getPlusSignPlusSignKeyword_1_0()));
		match_InterfaceType_MethodSpec___InterfaceTypeNameParserRuleCall_1_SemicolonKeyword_2_1__q = new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getMethodSpecAccess().getInterfaceTypeNameParserRuleCall_1()), new TokenAlias(false, false, grammarAccess.getInterfaceTypeAccess().getSemicolonKeyword_2_1()));
		match_Key_KeyedElement_LiteralValue_____FieldNameParserRuleCall_0_or___LeftCurlyBracketKeyword_0_RightCurlyBracketKeyword_2_____ColonKeyword_0_1__q = new GroupAlias(false, true, new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getLiteralValueAccess().getLeftCurlyBracketKeyword_0()), new TokenAlias(false, false, grammarAccess.getLiteralValueAccess().getRightCurlyBracketKeyword_2())), new TokenAlias(false, false, grammarAccess.getKeyAccess().getFieldNameParserRuleCall_0())), new TokenAlias(false, false, grammarAccess.getKeyedElementAccess().getColonKeyword_0_1()));
		match_Key_LiteralValue_FieldNameParserRuleCall_0_or___LeftCurlyBracketKeyword_0_RightCurlyBracketKeyword_2__ = new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getLiteralValueAccess().getLeftCurlyBracketKeyword_0()), new TokenAlias(false, false, grammarAccess.getLiteralValueAccess().getRightCurlyBracketKeyword_2())), new TokenAlias(false, false, grammarAccess.getKeyAccess().getFieldNameParserRuleCall_0()));
		match_LiteralType_LiteralTypeLinha_MapType_____LeftSquareBracketKeyword_1_0_RightSquareBracketKeyword_1_0___or___MapKeyword_0_LeftSquareBracketKeyword_1____q = new AlternativeAlias(false, true, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getLiteralTypeAccess().getLeftSquareBracketKeyword_1_0()), new TokenAlias(false, false, grammarAccess.getLiteralTypeLinhaAccess().getRightSquareBracketKeyword_1_0())), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getMapTypeAccess().getMapKeyword_0()), new TokenAlias(false, false, grammarAccess.getMapTypeAccess().getLeftSquareBracketKeyword_1())));
		match_LiteralType_Operand_LeftParenthesisKeyword_2_0_or_LeftSquareBracketKeyword_1_0 = new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getLiteralTypeAccess().getLeftSquareBracketKeyword_1_0()), new TokenAlias(false, false, grammarAccess.getOperandAccess().getLeftParenthesisKeyword_2_0()));
		match_LiteralType_PrimaryExprLinha_StructType_Type_TypeAssertion___FullStopKeyword_0_LeftParenthesisKeyword_1_LeftParenthesisKeyword_2_0_p_TypeNameParserRuleCall_0___or___SelectorParserRuleCall_0_0___TypeNameParserRuleCall_4_or___StructKeyword_0_LeftCurlyBracketKeyword_1_SemicolonKeyword_3______ = new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getPrimaryExprLinhaAccess().getSelectorParserRuleCall_0_0()), new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getStructTypeAccess().getStructKeyword_0()), new TokenAlias(false, false, grammarAccess.getStructTypeAccess().getLeftCurlyBracketKeyword_1()), new TokenAlias(false, false, grammarAccess.getStructTypeAccess().getSemicolonKeyword_3())), new TokenAlias(false, false, grammarAccess.getLiteralTypeAccess().getTypeNameParserRuleCall_4()))), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getTypeAssertionAccess().getFullStopKeyword_0()), new TokenAlias(false, false, grammarAccess.getTypeAssertionAccess().getLeftParenthesisKeyword_1()), new TokenAlias(true, false, grammarAccess.getTypeAccess().getLeftParenthesisKeyword_2_0()), new TokenAlias(false, false, grammarAccess.getTypeAccess().getTypeNameParserRuleCall_0())));
		match_LiteralType_StructType_TypeNameParserRuleCall_4_or___StructKeyword_0_LeftCurlyBracketKeyword_1_SemicolonKeyword_3__ = new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getStructTypeAccess().getStructKeyword_0()), new TokenAlias(false, false, grammarAccess.getStructTypeAccess().getLeftCurlyBracketKeyword_1()), new TokenAlias(false, false, grammarAccess.getStructTypeAccess().getSemicolonKeyword_3())), new TokenAlias(false, false, grammarAccess.getLiteralTypeAccess().getTypeNameParserRuleCall_4()));
		match_LiteralValue_CommaKeyword_1_1_q = new TokenAlias(false, true, grammarAccess.getLiteralValueAccess().getCommaKeyword_1_1());
		match_Literal_Operand_BasicLitParserRuleCall_0_or_OperandNameParserRuleCall_1 = new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getLiteralAccess().getBasicLitParserRuleCall_0()), new TokenAlias(false, false, grammarAccess.getOperandAccess().getOperandNameParserRuleCall_1()));
		match_MapType_PrimaryExprLinha_Type_TypeAssertion___FullStopKeyword_0_LeftParenthesisKeyword_1_LeftParenthesisKeyword_2_0_a___or___SelectorParserRuleCall_0_0_MapKeyword_0_LeftSquareBracketKeyword_1_LeftParenthesisKeyword_2_0_a__ = new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getPrimaryExprLinhaAccess().getSelectorParserRuleCall_0_0()), new TokenAlias(false, false, grammarAccess.getMapTypeAccess().getMapKeyword_0()), new TokenAlias(false, false, grammarAccess.getMapTypeAccess().getLeftSquareBracketKeyword_1()), new TokenAlias(true, true, grammarAccess.getTypeAccess().getLeftParenthesisKeyword_2_0())), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getTypeAssertionAccess().getFullStopKeyword_0()), new TokenAlias(false, false, grammarAccess.getTypeAssertionAccess().getLeftParenthesisKeyword_1()), new TokenAlias(true, true, grammarAccess.getTypeAccess().getLeftParenthesisKeyword_2_0())));
		match_MapType_Type_____MapKeyword_0_LeftSquareBracketKeyword_1__q_LeftParenthesisKeyword_2_0_p__q = new GroupAlias(false, true, new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getMapTypeAccess().getMapKeyword_0()), new TokenAlias(false, false, grammarAccess.getMapTypeAccess().getLeftSquareBracketKeyword_1())), new TokenAlias(true, false, grammarAccess.getTypeAccess().getLeftParenthesisKeyword_2_0()));
		match_ParameterDecl_FullStopFullStopFullStopKeyword_1_q = new TokenAlias(false, true, grammarAccess.getParameterDeclAccess().getFullStopFullStopFullStopKeyword_1());
		match_ParameterDecl_IdentifierListParserRuleCall_0_q = new TokenAlias(false, true, grammarAccess.getParameterDeclAccess().getIdentifierListParserRuleCall_0());
		match_ParameterDecl_Parameters_TopLevelDecl_Type_VarDecl_VarSpec_topLevelDeclLinha___FuncKeyword_1_0_FunctionNameParserRuleCall_0_0_q_LeftParenthesisKeyword_0_IdentifierListParserRuleCall_0_q_FullStopFullStopFullStopKeyword_1_q_LeftParenthesisKeyword_2_0_a___or___VarKeyword_0_LeftParenthesisKeyword_1_1_0_q_IdentifierListParserRuleCall_0_LeftParenthesisKeyword_2_0_a__ = new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getTopLevelDeclAccess().getFuncKeyword_1_0()), new TokenAlias(false, true, grammarAccess.getTopLevelDeclLinhaAccess().getFunctionNameParserRuleCall_0_0()), new TokenAlias(false, false, grammarAccess.getParametersAccess().getLeftParenthesisKeyword_0()), new TokenAlias(false, true, grammarAccess.getParameterDeclAccess().getIdentifierListParserRuleCall_0()), new TokenAlias(false, true, grammarAccess.getParameterDeclAccess().getFullStopFullStopFullStopKeyword_1()), new TokenAlias(true, true, grammarAccess.getTypeAccess().getLeftParenthesisKeyword_2_0())), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getVarDeclAccess().getVarKeyword_0()), new TokenAlias(false, true, grammarAccess.getVarDeclAccess().getLeftParenthesisKeyword_1_1_0()), new TokenAlias(false, false, grammarAccess.getVarSpecAccess().getIdentifierListParserRuleCall_0()), new TokenAlias(true, true, grammarAccess.getTypeAccess().getLeftParenthesisKeyword_2_0())));
		match_ParameterDecl_Parameters_Type___LeftParenthesisKeyword_2_0_p_or___LeftParenthesisKeyword_0_IdentifierListParserRuleCall_0_q_FullStopFullStopFullStopKeyword_1_q_LeftParenthesisKeyword_2_0_p____q = new AlternativeAlias(false, true, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getParametersAccess().getLeftParenthesisKeyword_0()), new TokenAlias(false, true, grammarAccess.getParameterDeclAccess().getIdentifierListParserRuleCall_0()), new TokenAlias(false, true, grammarAccess.getParameterDeclAccess().getFullStopFullStopFullStopKeyword_1()), new TokenAlias(true, false, grammarAccess.getTypeAccess().getLeftParenthesisKeyword_2_0())), new TokenAlias(true, false, grammarAccess.getTypeAccess().getLeftParenthesisKeyword_2_0()));
		match_ParameterDecl_Parameters___LeftParenthesisKeyword_0_IdentifierListParserRuleCall_0_q_FullStopFullStopFullStopKeyword_1_q__q = new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getParametersAccess().getLeftParenthesisKeyword_0()), new TokenAlias(false, true, grammarAccess.getParameterDeclAccess().getIdentifierListParserRuleCall_0()), new TokenAlias(false, true, grammarAccess.getParameterDeclAccess().getFullStopFullStopFullStopKeyword_1()));
		match_Parameters_CommaKeyword_1_1_q = new TokenAlias(false, true, grammarAccess.getParametersAccess().getCommaKeyword_1_1());
		match_Parameters_Type___LeftParenthesisKeyword_0_RightParenthesisKeyword_2___or___LeftParenthesisKeyword_2_0_a_TypeNameParserRuleCall_0__ = new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getParametersAccess().getLeftParenthesisKeyword_0()), new TokenAlias(false, false, grammarAccess.getParametersAccess().getRightParenthesisKeyword_2())), new GroupAlias(false, false, new TokenAlias(true, true, grammarAccess.getTypeAccess().getLeftParenthesisKeyword_2_0()), new TokenAlias(false, false, grammarAccess.getTypeAccess().getTypeNameParserRuleCall_0())));
		match_RangeClause___IdentifierListParserRuleCall_0_1_0_ColonEqualsSignKeyword_0_1_1__q = new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getRangeClauseAccess().getIdentifierListParserRuleCall_0_1_0()), new TokenAlias(false, false, grammarAccess.getRangeClauseAccess().getColonEqualsSignKeyword_0_1_1()));
		match_RecvStmt___IdentifierListParserRuleCall_0_1_0_ColonEqualsSignKeyword_0_1_1__q = new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getRecvStmtAccess().getIdentifierListParserRuleCall_0_1_0()), new TokenAlias(false, false, grammarAccess.getRecvStmtAccess().getColonEqualsSignKeyword_0_1_1()));
		match_ShortVarDecl___IdentifierListParserRuleCall_0_ColonEqualsSignKeyword_1__q = new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getShortVarDeclAccess().getIdentifierListParserRuleCall_0()), new TokenAlias(false, false, grammarAccess.getShortVarDeclAccess().getColonEqualsSignKeyword_1()));
		match_SimpleStmt_EmptyStmtParserRuleCall_0_q = new TokenAlias(false, true, grammarAccess.getSimpleStmtAccess().getEmptyStmtParserRuleCall_0());
		match_SimpleStmt_SwitchStmt___EmptyStmtParserRuleCall_0_SemicolonKeyword_1_1__q = new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getSimpleStmtAccess().getEmptyStmtParserRuleCall_0()), new TokenAlias(false, false, grammarAccess.getSwitchStmtAccess().getSemicolonKeyword_1_1()));
		match_SouceFile___ImportDeclParserRuleCall_2_0_SemicolonKeyword_2_1__q = new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getSouceFileAccess().getImportDeclParserRuleCall_2_0()), new TokenAlias(false, false, grammarAccess.getSouceFileAccess().getSemicolonKeyword_2_1()));
		match_TypeDecl_LeftParenthesisKeyword_1_1_0_q = new TokenAlias(false, true, grammarAccess.getTypeDeclAccess().getLeftParenthesisKeyword_1_1_0());
		match_TypeSwitchGuard___IdentifierParserRuleCall_0_0_ColonEqualsSignKeyword_0_1__q = new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getTypeSwitchGuardAccess().getIdentifierParserRuleCall_0_0()), new TokenAlias(false, false, grammarAccess.getTypeSwitchGuardAccess().getColonEqualsSignKeyword_0_1()));
		match_Type_LeftParenthesisKeyword_2_0_a = new TokenAlias(true, true, grammarAccess.getTypeAccess().getLeftParenthesisKeyword_2_0());
		match_Type_VarDecl_VarSpec___IdentifierListParserRuleCall_0_LeftParenthesisKeyword_2_0_a_TypeNameParserRuleCall_0___or___LeftParenthesisKeyword_1_1_0_RightParenthesisKeyword_1_1_2__ = new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getVarDeclAccess().getLeftParenthesisKeyword_1_1_0()), new TokenAlias(false, false, grammarAccess.getVarDeclAccess().getRightParenthesisKeyword_1_1_2())), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getVarSpecAccess().getIdentifierListParserRuleCall_0()), new TokenAlias(true, true, grammarAccess.getTypeAccess().getLeftParenthesisKeyword_2_0()), new TokenAlias(false, false, grammarAccess.getTypeAccess().getTypeNameParserRuleCall_0())));
		match_VarDecl_LeftParenthesisKeyword_1_1_0_q = new TokenAlias(false, true, grammarAccess.getVarDeclAccess().getLeftParenthesisKeyword_1_1_0());
		match_topLevelDeclLinha_FunctionNameParserRuleCall_0_0_q = new TokenAlias(false, true, grammarAccess.getTopLevelDeclLinhaAccess().getFunctionNameParserRuleCall_0_0());
	}
	
	@Override
	protected String getUnassignedRuleCallToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (ruleCall.getRule() == grammarAccess.getANY_OTHERRule())
			return getANY_OTHERToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getBasicLitRule())
			return getBasicLitToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getEmbeddedFieldRule())
			return getEmbeddedFieldToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getEmptyStmtRule())
			return getEmptyStmtToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getFieldNameRule())
			return getFieldNameToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getFunctionNameRule())
			return getFunctionNameToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getIdentifierListRule())
			return getIdentifierListToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getImportDeclRule())
			return getImportDeclToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getInterfaceTypeNameRule())
			return getInterfaceTypeNameToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getLabelRule())
			return getLabelToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getMethodNameRule())
			return getMethodNameToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getOperandNameRule())
			return getOperandNameToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getPackageClauseRule())
			return getPackageClauseToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getSelectorRule())
			return getSelectorToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getTagRule())
			return getTagToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getTypeNameRule())
			return getTypeNameToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getUnaryExprRule())
			return getUnaryExprToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getAssign_opRule())
			return getassign_opToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getBinary_opRule())
			return getbinary_opToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getIdentifierRule())
			return getidentifierToken(semanticObject, ruleCall, node);
		return "";
	}
	
	/**
	 * terminal ANY_OTHER: .;
	 */
	protected String getANY_OTHERToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "";
	}
	
	/**
	 * BasicLit:
	 * 	int_lit | float_lit | rune_lit | string_lit
	 * ;
	 */
	protected String getBasicLitToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "";
	}
	
	/**
	 * EmbeddedField:
	 * 	("*")? TypeName
	 * ;
	 */
	protected String getEmbeddedFieldToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return ".";
	}
	
	/**
	 * EmptyStmt:
	 * 	ANY_OTHER
	 * ;
	 */
	protected String getEmptyStmtToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "";
	}
	
	/**
	 * FieldName:
	 * 	identifier
	 * ;
	 */
	protected String getFieldNameToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "";
	}
	
	/**
	 * FunctionName:
	 * 	identifier
	 * ;
	 */
	protected String getFunctionNameToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "";
	}
	
	/**
	 * IdentifierList:
	 * 	identifier ("," identifier)?
	 * ;
	 */
	protected String getIdentifierListToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "";
	}
	
	/**
	 * ImportDecl:
	 * 	"import" (ImportSpec | "(" (ImportSpec ";")* ")")
	 *  ;
	 */
	protected String getImportDeclToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "import\'\'";
	}
	
	/**
	 * InterfaceTypeName:
	 * 	TypeName
	 * ;
	 */
	protected String getInterfaceTypeNameToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return ".";
	}
	
	/**
	 * Label:
	 * 	identifier
	 * ;
	 */
	protected String getLabelToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "";
	}
	
	/**
	 * MethodName:
	 * 	identifier
	 * ;
	 */
	protected String getMethodNameToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "";
	}
	
	/**
	 * OperandName:
	 * 	identifier | QualifiedIdent
	 * ;
	 */
	protected String getOperandNameToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "";
	}
	
	/**
	 * PackageClause:
	 *  	"package" PackageName
	 *  ;
	 */
	protected String getPackageClauseToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "package";
	}
	
	/**
	 * Selector:
	 * 	"." identifier
	 * ;
	 */
	protected String getSelectorToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return ".";
	}
	
	/**
	 * Tag:
	 * 	string_lit
	 * ;
	 */
	protected String getTagToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "\'\'";
	}
	
	/**
	 * TypeName:
	 * 	identifier TypeNameLinha
	 * ;
	 */
	protected String getTypeNameToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return ".";
	}
	
	/**
	 * UnaryExpr:
	 * unary_op UnaryExpr
	 * ;
	 */
	protected String getUnaryExprToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "+";
	}
	
	/**
	 * assign_op:
	 * 	(add_op | mul_op)? "="
	 * ;
	 */
	protected String getassign_opToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "=";
	}
	
	/**
	 * binary_op:
	 * 	"||" | "&&" | rel_op | add_op | mul_op
	 * ;
	 */
	protected String getbinary_opToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "||";
	}
	
	/**
	 * identifier:
	 * 	LETTER (LETTER | DECIMAL_DIGIT)*;
	 */
	protected String getidentifierToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "";
	}
	
	@Override
	protected void emitUnassignedTokens(EObject semanticObject, ISynTransition transition, INode fromNode, INode toNode) {
		if (transition.getAmbiguousSyntaxes().isEmpty()) return;
		List<INode> transitionNodes = collectNodes(fromNode, toNode);
		for (AbstractElementAlias syntax : transition.getAmbiguousSyntaxes()) {
			List<INode> syntaxNodes = getNodesFor(transitionNodes, syntax);
			if (match_AliasDecl_ConstDecl_ConstSpec_ParameterDecl_Parameters_SouceFile_TopLevelDecl_Type_TypeDecl_TypeDef_VarDecl_VarSpec_topLevelDeclLinha_____ImportDeclParserRuleCall_2_0_SemicolonKeyword_2_1__q_FuncKeyword_1_0_FunctionNameParserRuleCall_0_0_q_LeftParenthesisKeyword_0_IdentifierListParserRuleCall_0_q_FullStopFullStopFullStopKeyword_1_q_LeftParenthesisKeyword_2_0_a___or_______ConstKeyword_0_LeftParenthesisKeyword_1_1_0_q_IdentifierListParserRuleCall_0___or___TypeKeyword_0_LeftParenthesisKeyword_1_1_0_q___IdentifierParserRuleCall_0_or___IdentifierParserRuleCall_0_EqualsSignKeyword_1_______or___VarKeyword_0_LeftParenthesisKeyword_1_1_0_q_IdentifierListParserRuleCall_0_____LeftParenthesisKeyword_2_0_a__.equals(syntax))
				emit_AliasDecl_ConstDecl_ConstSpec_ParameterDecl_Parameters_SouceFile_TopLevelDecl_Type_TypeDecl_TypeDef_VarDecl_VarSpec_topLevelDeclLinha_____ImportDeclParserRuleCall_2_0_SemicolonKeyword_2_1__q_FuncKeyword_1_0_FunctionNameParserRuleCall_0_0_q_LeftParenthesisKeyword_0_IdentifierListParserRuleCall_0_q_FullStopFullStopFullStopKeyword_1_q_LeftParenthesisKeyword_2_0_a___or_______ConstKeyword_0_LeftParenthesisKeyword_1_1_0_q_IdentifierListParserRuleCall_0___or___TypeKeyword_0_LeftParenthesisKeyword_1_1_0_q___IdentifierParserRuleCall_0_or___IdentifierParserRuleCall_0_EqualsSignKeyword_1_______or___VarKeyword_0_LeftParenthesisKeyword_1_1_0_q_IdentifierListParserRuleCall_0_____LeftParenthesisKeyword_2_0_a__(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_AliasDecl_ConstDecl_ConstSpec_ParameterDecl_Parameters_SouceFile_TopLevelDecl_Type_TypeDecl_TypeDef_VarDecl_VarSpec_topLevelDeclLinha_____ImportDeclParserRuleCall_2_0_SemicolonKeyword_2_1__q_____FuncKeyword_1_0_FunctionNameParserRuleCall_0_0_q_LeftParenthesisKeyword_0_IdentifierListParserRuleCall_0_q_FullStopFullStopFullStopKeyword_1_q_LeftParenthesisKeyword_2_0_a___or___VarKeyword_0_LeftParenthesisKeyword_1_1_0_q_IdentifierListParserRuleCall_0_LeftParenthesisKeyword_2_0_a_______or_______ConstKeyword_0_LeftParenthesisKeyword_1_1_0_q_IdentifierListParserRuleCall_0___or___TypeKeyword_0_LeftParenthesisKeyword_1_1_0_q___IdentifierParserRuleCall_0_or___IdentifierParserRuleCall_0_EqualsSignKeyword_1_________LeftParenthesisKeyword_2_0_a__.equals(syntax))
				emit_AliasDecl_ConstDecl_ConstSpec_ParameterDecl_Parameters_SouceFile_TopLevelDecl_Type_TypeDecl_TypeDef_VarDecl_VarSpec_topLevelDeclLinha_____ImportDeclParserRuleCall_2_0_SemicolonKeyword_2_1__q_____FuncKeyword_1_0_FunctionNameParserRuleCall_0_0_q_LeftParenthesisKeyword_0_IdentifierListParserRuleCall_0_q_FullStopFullStopFullStopKeyword_1_q_LeftParenthesisKeyword_2_0_a___or___VarKeyword_0_LeftParenthesisKeyword_1_1_0_q_IdentifierListParserRuleCall_0_LeftParenthesisKeyword_2_0_a_______or_______ConstKeyword_0_LeftParenthesisKeyword_1_1_0_q_IdentifierListParserRuleCall_0___or___TypeKeyword_0_LeftParenthesisKeyword_1_1_0_q___IdentifierParserRuleCall_0_or___IdentifierParserRuleCall_0_EqualsSignKeyword_1_________LeftParenthesisKeyword_2_0_a__(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_AliasDecl_ConstDecl_ConstSpec_ParameterDecl_Parameters_TopLevelDecl_TypeDecl_TypeDef_VarDecl_VarSpec_topLevelDeclLinha___ConstKeyword_0_LeftParenthesisKeyword_1_1_0_q_IdentifierListParserRuleCall_0___or___FuncKeyword_1_0_FunctionNameParserRuleCall_0_0_q_LeftParenthesisKeyword_0_IdentifierListParserRuleCall_0_q_FullStopFullStopFullStopKeyword_1_q___or___TypeKeyword_0_LeftParenthesisKeyword_1_1_0_q___IdentifierParserRuleCall_0_or___IdentifierParserRuleCall_0_EqualsSignKeyword_1_______or___VarKeyword_0_LeftParenthesisKeyword_1_1_0_q_IdentifierListParserRuleCall_0__.equals(syntax))
				emit_AliasDecl_ConstDecl_ConstSpec_ParameterDecl_Parameters_TopLevelDecl_TypeDecl_TypeDef_VarDecl_VarSpec_topLevelDeclLinha___ConstKeyword_0_LeftParenthesisKeyword_1_1_0_q_IdentifierListParserRuleCall_0___or___FuncKeyword_1_0_FunctionNameParserRuleCall_0_0_q_LeftParenthesisKeyword_0_IdentifierListParserRuleCall_0_q_FullStopFullStopFullStopKeyword_1_q___or___TypeKeyword_0_LeftParenthesisKeyword_1_1_0_q___IdentifierParserRuleCall_0_or___IdentifierParserRuleCall_0_EqualsSignKeyword_1_______or___VarKeyword_0_LeftParenthesisKeyword_1_1_0_q_IdentifierListParserRuleCall_0__(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_AliasDecl_ConstDecl_ConstSpec_ParameterDecl_Parameters_TopLevelDecl_Type_TypeDecl_TypeDef_VarDecl_VarSpec_topLevelDeclLinha___ConstKeyword_0_LeftParenthesisKeyword_1_1_0_q_IdentifierListParserRuleCall_0___or_______FuncKeyword_1_0_FunctionNameParserRuleCall_0_0_q_LeftParenthesisKeyword_0_IdentifierListParserRuleCall_0_q_FullStopFullStopFullStopKeyword_1_q___or___TypeKeyword_0_LeftParenthesisKeyword_1_1_0_q___IdentifierParserRuleCall_0_or___IdentifierParserRuleCall_0_EqualsSignKeyword_1_______or___VarKeyword_0_LeftParenthesisKeyword_1_1_0_q_IdentifierListParserRuleCall_0_____LeftParenthesisKeyword_2_0_p_TypeNameParserRuleCall_0__.equals(syntax))
				emit_AliasDecl_ConstDecl_ConstSpec_ParameterDecl_Parameters_TopLevelDecl_Type_TypeDecl_TypeDef_VarDecl_VarSpec_topLevelDeclLinha___ConstKeyword_0_LeftParenthesisKeyword_1_1_0_q_IdentifierListParserRuleCall_0___or_______FuncKeyword_1_0_FunctionNameParserRuleCall_0_0_q_LeftParenthesisKeyword_0_IdentifierListParserRuleCall_0_q_FullStopFullStopFullStopKeyword_1_q___or___TypeKeyword_0_LeftParenthesisKeyword_1_1_0_q___IdentifierParserRuleCall_0_or___IdentifierParserRuleCall_0_EqualsSignKeyword_1_______or___VarKeyword_0_LeftParenthesisKeyword_1_1_0_q_IdentifierListParserRuleCall_0_____LeftParenthesisKeyword_2_0_p_TypeNameParserRuleCall_0__(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_AliasDecl_ConstDecl_ConstSpec_TypeDecl_TypeDef_VarDecl_VarSpec___ConstKeyword_0_LeftParenthesisKeyword_1_1_0_q_IdentifierListParserRuleCall_0___or___TypeKeyword_0_LeftParenthesisKeyword_1_1_0_q___IdentifierParserRuleCall_0_or___IdentifierParserRuleCall_0_EqualsSignKeyword_1_______or___VarKeyword_0_LeftParenthesisKeyword_1_1_0_q_IdentifierListParserRuleCall_0__.equals(syntax))
				emit_AliasDecl_ConstDecl_ConstSpec_TypeDecl_TypeDef_VarDecl_VarSpec___ConstKeyword_0_LeftParenthesisKeyword_1_1_0_q_IdentifierListParserRuleCall_0___or___TypeKeyword_0_LeftParenthesisKeyword_1_1_0_q___IdentifierParserRuleCall_0_or___IdentifierParserRuleCall_0_EqualsSignKeyword_1_______or___VarKeyword_0_LeftParenthesisKeyword_1_1_0_q_IdentifierListParserRuleCall_0__(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_AliasDecl_ConstDecl_ConstSpec_Type_TypeDecl_TypeDef_VarDecl_VarSpec___ConstKeyword_0_LeftParenthesisKeyword_1_1_0_q_IdentifierListParserRuleCall_0___or_______TypeKeyword_0_LeftParenthesisKeyword_1_1_0_q___IdentifierParserRuleCall_0_or___IdentifierParserRuleCall_0_EqualsSignKeyword_1_______or___VarKeyword_0_LeftParenthesisKeyword_1_1_0_q_IdentifierListParserRuleCall_0_____LeftParenthesisKeyword_2_0_p_TypeNameParserRuleCall_0__.equals(syntax))
				emit_AliasDecl_ConstDecl_ConstSpec_Type_TypeDecl_TypeDef_VarDecl_VarSpec___ConstKeyword_0_LeftParenthesisKeyword_1_1_0_q_IdentifierListParserRuleCall_0___or_______TypeKeyword_0_LeftParenthesisKeyword_1_1_0_q___IdentifierParserRuleCall_0_or___IdentifierParserRuleCall_0_EqualsSignKeyword_1_______or___VarKeyword_0_LeftParenthesisKeyword_1_1_0_q_IdentifierListParserRuleCall_0_____LeftParenthesisKeyword_2_0_p_TypeNameParserRuleCall_0__(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_AliasDecl_TypeDef_IdentifierParserRuleCall_0_or___IdentifierParserRuleCall_0_EqualsSignKeyword_1__.equals(syntax))
				emit_AliasDecl_TypeDef_IdentifierParserRuleCall_0_or___IdentifierParserRuleCall_0_EqualsSignKeyword_1__(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_AliasDecl_Type_TypeDecl_TypeDef___LeftParenthesisKeyword_1_1_0_RightParenthesisKeyword_1_1_2___or_____IdentifierParserRuleCall_0_or___IdentifierParserRuleCall_0_EqualsSignKeyword_1_____LeftParenthesisKeyword_2_0_a_TypeNameParserRuleCall_0__.equals(syntax))
				emit_AliasDecl_Type_TypeDecl_TypeDef___LeftParenthesisKeyword_1_1_0_RightParenthesisKeyword_1_1_2___or_____IdentifierParserRuleCall_0_or___IdentifierParserRuleCall_0_EqualsSignKeyword_1_____LeftParenthesisKeyword_2_0_a_TypeNameParserRuleCall_0__(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Arguments_CommaKeyword_1_2_q.equals(syntax))
				emit_Arguments_CommaKeyword_1_2_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Arguments_FullStopFullStopFullStopKeyword_1_1_q.equals(syntax))
				emit_Arguments_FullStopFullStopFullStopKeyword_1_1_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Arguments_FunctionLit_LiteralType_LiteralTypeLinha_MapType_ParameterDecl_Parameters_PrimaryExprLinha_TypeAssertion_LeftParenthesisKeyword_0_or___FullStopKeyword_0_LeftParenthesisKeyword_1___or___SelectorParserRuleCall_0_0_____FuncKeyword_0_LeftParenthesisKeyword_0_IdentifierListParserRuleCall_0_q_FullStopFullStopFullStopKeyword_1_q___or___LeftSquareBracketKeyword_1_0_RightSquareBracketKeyword_1_0___or___MapKeyword_0_LeftSquareBracketKeyword_1____q__.equals(syntax))
				emit_Arguments_FunctionLit_LiteralType_LiteralTypeLinha_MapType_ParameterDecl_Parameters_PrimaryExprLinha_TypeAssertion_LeftParenthesisKeyword_0_or___FullStopKeyword_0_LeftParenthesisKeyword_1___or___SelectorParserRuleCall_0_0_____FuncKeyword_0_LeftParenthesisKeyword_0_IdentifierListParserRuleCall_0_q_FullStopFullStopFullStopKeyword_1_q___or___LeftSquareBracketKeyword_1_0_RightSquareBracketKeyword_1_0___or___MapKeyword_0_LeftSquareBracketKeyword_1____q__(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Arguments_FunctionLit_LiteralType_LiteralTypeLinha_MapType_ParameterDecl_Parameters_PrimaryExprLinha_Type_TypeAssertion_LeftParenthesisKeyword_0_or_______FullStopKeyword_0_LeftParenthesisKeyword_1_LeftParenthesisKeyword_2_0_a___or___SelectorParserRuleCall_0_0_____FuncKeyword_0_LeftParenthesisKeyword_0_IdentifierListParserRuleCall_0_q_FullStopFullStopFullStopKeyword_1_q___or___LeftSquareBracketKeyword_1_0_RightSquareBracketKeyword_1_0___or___MapKeyword_0_LeftSquareBracketKeyword_1____q_LeftParenthesisKeyword_2_0_a_____TypeNameParserRuleCall_0_FullStopFullStopFullStopKeyword_1_1_q_CommaKeyword_1_2_q__.equals(syntax))
				emit_Arguments_FunctionLit_LiteralType_LiteralTypeLinha_MapType_ParameterDecl_Parameters_PrimaryExprLinha_Type_TypeAssertion_LeftParenthesisKeyword_0_or_______FullStopKeyword_0_LeftParenthesisKeyword_1_LeftParenthesisKeyword_2_0_a___or___SelectorParserRuleCall_0_0_____FuncKeyword_0_LeftParenthesisKeyword_0_IdentifierListParserRuleCall_0_q_FullStopFullStopFullStopKeyword_1_q___or___LeftSquareBracketKeyword_1_0_RightSquareBracketKeyword_1_0___or___MapKeyword_0_LeftSquareBracketKeyword_1____q_LeftParenthesisKeyword_2_0_a_____TypeNameParserRuleCall_0_FullStopFullStopFullStopKeyword_1_1_q_CommaKeyword_1_2_q__(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Arguments_FunctionLit_LiteralType_LiteralTypeLinha_MapType_ParameterDecl_Parameters_PrimaryExprLinha_Type_TypeAssertion___LeftParenthesisKeyword_0_LeftParenthesisKeyword_2_0_a___or_______FullStopKeyword_0_LeftParenthesisKeyword_1___or___SelectorParserRuleCall_0_0_____FuncKeyword_0_LeftParenthesisKeyword_0_IdentifierListParserRuleCall_0_q_FullStopFullStopFullStopKeyword_1_q___or___LeftSquareBracketKeyword_1_0_RightSquareBracketKeyword_1_0___or___MapKeyword_0_LeftSquareBracketKeyword_1____q_____LeftParenthesisKeyword_2_0_a__.equals(syntax))
				emit_Arguments_FunctionLit_LiteralType_LiteralTypeLinha_MapType_ParameterDecl_Parameters_PrimaryExprLinha_Type_TypeAssertion___LeftParenthesisKeyword_0_LeftParenthesisKeyword_2_0_a___or_______FullStopKeyword_0_LeftParenthesisKeyword_1___or___SelectorParserRuleCall_0_0_____FuncKeyword_0_LeftParenthesisKeyword_0_IdentifierListParserRuleCall_0_q_FullStopFullStopFullStopKeyword_1_q___or___LeftSquareBracketKeyword_1_0_RightSquareBracketKeyword_1_0___or___MapKeyword_0_LeftSquareBracketKeyword_1____q_____LeftParenthesisKeyword_2_0_a__(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Arguments_FunctionLit_LiteralType_LiteralTypeLinha_MapType_ParameterDecl_Parameters_PrimaryExprLinha_Type_TypeAssertion___SelectorParserRuleCall_0_0_____FuncKeyword_0_LeftParenthesisKeyword_0_IdentifierListParserRuleCall_0_q_FullStopFullStopFullStopKeyword_1_q___or___LeftSquareBracketKeyword_1_0_RightSquareBracketKeyword_1_0___or___MapKeyword_0_LeftSquareBracketKeyword_1____q_LeftParenthesisKeyword_2_0_a___or_____LeftParenthesisKeyword_0_or___FullStopKeyword_0_LeftParenthesisKeyword_1_____LeftParenthesisKeyword_2_0_a__.equals(syntax))
				emit_Arguments_FunctionLit_LiteralType_LiteralTypeLinha_MapType_ParameterDecl_Parameters_PrimaryExprLinha_Type_TypeAssertion___SelectorParserRuleCall_0_0_____FuncKeyword_0_LeftParenthesisKeyword_0_IdentifierListParserRuleCall_0_q_FullStopFullStopFullStopKeyword_1_q___or___LeftSquareBracketKeyword_1_0_RightSquareBracketKeyword_1_0___or___MapKeyword_0_LeftSquareBracketKeyword_1____q_LeftParenthesisKeyword_2_0_a___or_____LeftParenthesisKeyword_0_or___FullStopKeyword_0_LeftParenthesisKeyword_1_____LeftParenthesisKeyword_2_0_a__(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Arguments_LiteralType_Operand_PrimaryExprLinha_LeftParenthesisKeyword_0_or_LeftSquareBracketKeyword_1_0_or___SelectorParserRuleCall_0_0___LeftParenthesisKeyword_2_0_or_LeftSquareBracketKeyword_1_0____.equals(syntax))
				emit_Arguments_LiteralType_Operand_PrimaryExprLinha_LeftParenthesisKeyword_0_or_LeftSquareBracketKeyword_1_0_or___SelectorParserRuleCall_0_0___LeftParenthesisKeyword_2_0_or_LeftSquareBracketKeyword_1_0____(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_ChannelType_ChanKeyword_0_0_or___ChanKeyword_0_1_0_LessThanSignHyphenMinusKeyword_0_1_1___or___LessThanSignHyphenMinusKeyword_0_2_0_ChanKeyword_0_2_1__.equals(syntax))
				emit_ChannelType_ChanKeyword_0_0_or___ChanKeyword_0_1_0_LessThanSignHyphenMinusKeyword_0_1_1___or___LessThanSignHyphenMinusKeyword_0_2_0_ChanKeyword_0_2_1__(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_ConstDecl_ConstSpec_IdentifierListParserRuleCall_0_or___LeftParenthesisKeyword_1_1_0_RightParenthesisKeyword_1_1_2__.equals(syntax))
				emit_ConstDecl_ConstSpec_IdentifierListParserRuleCall_0_or___LeftParenthesisKeyword_1_1_0_RightParenthesisKeyword_1_1_2__(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_ConstDecl_LeftParenthesisKeyword_1_1_0_q.equals(syntax))
				emit_ConstDecl_LeftParenthesisKeyword_1_1_0_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Conversion_CommaKeyword_3_q.equals(syntax))
				emit_Conversion_CommaKeyword_3_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_FieldDecl_TagParserRuleCall_1_q.equals(syntax))
				emit_FieldDecl_TagParserRuleCall_1_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_ForClause_RangeClause_SimpleStmt_____EmptyStmtParserRuleCall_0_q_SemicolonKeyword_1_SemicolonKeyword_3___or_____IdentifierListParserRuleCall_0_1_0_ColonEqualsSignKeyword_0_1_1__q_RangeKeyword_1____q.equals(syntax))
				emit_ForClause_RangeClause_SimpleStmt_____EmptyStmtParserRuleCall_0_q_SemicolonKeyword_1_SemicolonKeyword_3___or_____IdentifierListParserRuleCall_0_1_0_ColonEqualsSignKeyword_0_1_1__q_RangeKeyword_1____q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_FunctionLit_LiteralType_LiteralTypeLinha_MapType_ParameterDecl_Parameters_PrimaryExprLinha_Type_TypeAssertion___FullStopKeyword_0_LeftParenthesisKeyword_1_LeftParenthesisKeyword_2_0_p___or___SelectorParserRuleCall_0_0_______FuncKeyword_0_LeftParenthesisKeyword_0_IdentifierListParserRuleCall_0_q_FullStopFullStopFullStopKeyword_1_q___or___LeftSquareBracketKeyword_1_0_RightSquareBracketKeyword_1_0___or___MapKeyword_0_LeftSquareBracketKeyword_1____q_LeftParenthesisKeyword_2_0_p__q__.equals(syntax))
				emit_FunctionLit_LiteralType_LiteralTypeLinha_MapType_ParameterDecl_Parameters_PrimaryExprLinha_Type_TypeAssertion___FullStopKeyword_0_LeftParenthesisKeyword_1_LeftParenthesisKeyword_2_0_p___or___SelectorParserRuleCall_0_0_______FuncKeyword_0_LeftParenthesisKeyword_0_IdentifierListParserRuleCall_0_q_FullStopFullStopFullStopKeyword_1_q___or___LeftSquareBracketKeyword_1_0_RightSquareBracketKeyword_1_0___or___MapKeyword_0_LeftSquareBracketKeyword_1____q_LeftParenthesisKeyword_2_0_p__q__(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_FunctionLit_LiteralType_LiteralTypeLinha_MapType_ParameterDecl_Parameters_PrimaryExprLinha_Type_TypeAssertion___SelectorParserRuleCall_0_0_FuncKeyword_0_LeftParenthesisKeyword_0_IdentifierListParserRuleCall_0_q_FullStopFullStopFullStopKeyword_1_q_LeftParenthesisKeyword_2_0_a___or_______FullStopKeyword_0_LeftParenthesisKeyword_1___or___SelectorParserRuleCall_0_0_____LeftSquareBracketKeyword_1_0_RightSquareBracketKeyword_1_0___or___MapKeyword_0_LeftSquareBracketKeyword_1____q_____LeftParenthesisKeyword_2_0_a__.equals(syntax))
				emit_FunctionLit_LiteralType_LiteralTypeLinha_MapType_ParameterDecl_Parameters_PrimaryExprLinha_Type_TypeAssertion___SelectorParserRuleCall_0_0_FuncKeyword_0_LeftParenthesisKeyword_0_IdentifierListParserRuleCall_0_q_FullStopFullStopFullStopKeyword_1_q_LeftParenthesisKeyword_2_0_a___or_______FullStopKeyword_0_LeftParenthesisKeyword_1___or___SelectorParserRuleCall_0_0_____LeftSquareBracketKeyword_1_0_RightSquareBracketKeyword_1_0___or___MapKeyword_0_LeftSquareBracketKeyword_1____q_____LeftParenthesisKeyword_2_0_a__(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_FunctionLit_LiteralType_LiteralTypeLinha_MapType_ParameterDecl_Parameters_Type_TypeSwitchGuard_____IdentifierParserRuleCall_0_0_ColonEqualsSignKeyword_0_1__q_MapKeyword_0_LeftSquareBracketKeyword_1_LeftParenthesisKeyword_2_0_a___or_______FuncKeyword_0_LeftParenthesisKeyword_0_IdentifierListParserRuleCall_0_q_FullStopFullStopFullStopKeyword_1_q___or___LeftSquareBracketKeyword_1_0_RightSquareBracketKeyword_1_0____q_LeftParenthesisKeyword_2_0_a__.equals(syntax))
				emit_FunctionLit_LiteralType_LiteralTypeLinha_MapType_ParameterDecl_Parameters_Type_TypeSwitchGuard_____IdentifierParserRuleCall_0_0_ColonEqualsSignKeyword_0_1__q_MapKeyword_0_LeftSquareBracketKeyword_1_LeftParenthesisKeyword_2_0_a___or_______FuncKeyword_0_LeftParenthesisKeyword_0_IdentifierListParserRuleCall_0_q_FullStopFullStopFullStopKeyword_1_q___or___LeftSquareBracketKeyword_1_0_RightSquareBracketKeyword_1_0____q_LeftParenthesisKeyword_2_0_a__(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_FunctionLit_LiteralType_LiteralTypeLinha_MapType_ParameterDecl_Parameters_Type_TypeSwitchGuard_____IdentifierParserRuleCall_0_0_ColonEqualsSignKeyword_0_1__q_____MapKeyword_0_LeftSquareBracketKeyword_1__q_LeftParenthesisKeyword_2_0_p__q___or_______FuncKeyword_0_LeftParenthesisKeyword_0_IdentifierListParserRuleCall_0_q_FullStopFullStopFullStopKeyword_1_q___or___LeftSquareBracketKeyword_1_0_RightSquareBracketKeyword_1_0____q_LeftParenthesisKeyword_2_0_p__.equals(syntax))
				emit_FunctionLit_LiteralType_LiteralTypeLinha_MapType_ParameterDecl_Parameters_Type_TypeSwitchGuard_____IdentifierParserRuleCall_0_0_ColonEqualsSignKeyword_0_1__q_____MapKeyword_0_LeftSquareBracketKeyword_1__q_LeftParenthesisKeyword_2_0_p__q___or_______FuncKeyword_0_LeftParenthesisKeyword_0_IdentifierListParserRuleCall_0_q_FullStopFullStopFullStopKeyword_1_q___or___LeftSquareBracketKeyword_1_0_RightSquareBracketKeyword_1_0____q_LeftParenthesisKeyword_2_0_p__(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_FunctionLit_LiteralType_LiteralTypeLinha_MapType_ParameterDecl_Parameters_Type___FuncKeyword_0_LeftParenthesisKeyword_0_IdentifierListParserRuleCall_0_q_FullStopFullStopFullStopKeyword_1_q_LeftParenthesisKeyword_2_0_a___or_______LeftSquareBracketKeyword_1_0_RightSquareBracketKeyword_1_0___or___MapKeyword_0_LeftSquareBracketKeyword_1____q_LeftParenthesisKeyword_2_0_a__.equals(syntax))
				emit_FunctionLit_LiteralType_LiteralTypeLinha_MapType_ParameterDecl_Parameters_Type___FuncKeyword_0_LeftParenthesisKeyword_0_IdentifierListParserRuleCall_0_q_FullStopFullStopFullStopKeyword_1_q_LeftParenthesisKeyword_2_0_a___or_______LeftSquareBracketKeyword_1_0_RightSquareBracketKeyword_1_0___or___MapKeyword_0_LeftSquareBracketKeyword_1____q_LeftParenthesisKeyword_2_0_a__(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_FunctionLit_LiteralType_LiteralTypeLinha_MapType_ParameterDecl_Parameters_____FuncKeyword_0_LeftParenthesisKeyword_0_IdentifierListParserRuleCall_0_q_FullStopFullStopFullStopKeyword_1_q___or___LeftSquareBracketKeyword_1_0_RightSquareBracketKeyword_1_0___or___MapKeyword_0_LeftSquareBracketKeyword_1____q.equals(syntax))
				emit_FunctionLit_LiteralType_LiteralTypeLinha_MapType_ParameterDecl_Parameters_____FuncKeyword_0_LeftParenthesisKeyword_0_IdentifierListParserRuleCall_0_q_FullStopFullStopFullStopKeyword_1_q___or___LeftSquareBracketKeyword_1_0_RightSquareBracketKeyword_1_0___or___MapKeyword_0_LeftSquareBracketKeyword_1____q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_FunctionLit_LiteralType_LiteralTypeLinha_MapType_Parameters_PrimaryExprLinha_Type_TypeAssertion___SelectorParserRuleCall_0_0_FuncKeyword_0_LeftParenthesisKeyword_0___or_______FullStopKeyword_0_LeftParenthesisKeyword_1___or___SelectorParserRuleCall_0_0_____LeftSquareBracketKeyword_1_0_RightSquareBracketKeyword_1_0___or___MapKeyword_0_LeftSquareBracketKeyword_1____q_____LeftParenthesisKeyword_2_0_p_TypeNameParserRuleCall_0_CommaKeyword_1_1_q__.equals(syntax))
				emit_FunctionLit_LiteralType_LiteralTypeLinha_MapType_Parameters_PrimaryExprLinha_Type_TypeAssertion___SelectorParserRuleCall_0_0_FuncKeyword_0_LeftParenthesisKeyword_0___or_______FullStopKeyword_0_LeftParenthesisKeyword_1___or___SelectorParserRuleCall_0_0_____LeftSquareBracketKeyword_1_0_RightSquareBracketKeyword_1_0___or___MapKeyword_0_LeftSquareBracketKeyword_1____q_____LeftParenthesisKeyword_2_0_p_TypeNameParserRuleCall_0_CommaKeyword_1_1_q__(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_FunctionLit_LiteralType_LiteralTypeLinha_MapType_Parameters_Type___FuncKeyword_0_LeftParenthesisKeyword_0___or_______LeftSquareBracketKeyword_1_0_RightSquareBracketKeyword_1_0___or___MapKeyword_0_LeftSquareBracketKeyword_1____q_LeftParenthesisKeyword_2_0_p_TypeNameParserRuleCall_0_CommaKeyword_1_1_q__.equals(syntax))
				emit_FunctionLit_LiteralType_LiteralTypeLinha_MapType_Parameters_Type___FuncKeyword_0_LeftParenthesisKeyword_0___or_______LeftSquareBracketKeyword_1_0_RightSquareBracketKeyword_1_0___or___MapKeyword_0_LeftSquareBracketKeyword_1____q_LeftParenthesisKeyword_2_0_p_TypeNameParserRuleCall_0_CommaKeyword_1_1_q__(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_IfStmt_SimpleStmt___EmptyStmtParserRuleCall_0_SemicolonKeyword_1_1__q.equals(syntax))
				emit_IfStmt_SimpleStmt___EmptyStmtParserRuleCall_0_SemicolonKeyword_1_1__q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_IncDecStmt_HyphenMinusHyphenMinusKeyword_1_1_or_PlusSignPlusSignKeyword_1_0.equals(syntax))
				emit_IncDecStmt_HyphenMinusHyphenMinusKeyword_1_1_or_PlusSignPlusSignKeyword_1_0(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_InterfaceType_MethodSpec___InterfaceTypeNameParserRuleCall_1_SemicolonKeyword_2_1__q.equals(syntax))
				emit_InterfaceType_MethodSpec___InterfaceTypeNameParserRuleCall_1_SemicolonKeyword_2_1__q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Key_KeyedElement_LiteralValue_____FieldNameParserRuleCall_0_or___LeftCurlyBracketKeyword_0_RightCurlyBracketKeyword_2_____ColonKeyword_0_1__q.equals(syntax))
				emit_Key_KeyedElement_LiteralValue_____FieldNameParserRuleCall_0_or___LeftCurlyBracketKeyword_0_RightCurlyBracketKeyword_2_____ColonKeyword_0_1__q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Key_LiteralValue_FieldNameParserRuleCall_0_or___LeftCurlyBracketKeyword_0_RightCurlyBracketKeyword_2__.equals(syntax))
				emit_Key_LiteralValue_FieldNameParserRuleCall_0_or___LeftCurlyBracketKeyword_0_RightCurlyBracketKeyword_2__(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_LiteralType_LiteralTypeLinha_MapType_____LeftSquareBracketKeyword_1_0_RightSquareBracketKeyword_1_0___or___MapKeyword_0_LeftSquareBracketKeyword_1____q.equals(syntax))
				emit_LiteralType_LiteralTypeLinha_MapType_____LeftSquareBracketKeyword_1_0_RightSquareBracketKeyword_1_0___or___MapKeyword_0_LeftSquareBracketKeyword_1____q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_LiteralType_Operand_LeftParenthesisKeyword_2_0_or_LeftSquareBracketKeyword_1_0.equals(syntax))
				emit_LiteralType_Operand_LeftParenthesisKeyword_2_0_or_LeftSquareBracketKeyword_1_0(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_LiteralType_PrimaryExprLinha_StructType_Type_TypeAssertion___FullStopKeyword_0_LeftParenthesisKeyword_1_LeftParenthesisKeyword_2_0_p_TypeNameParserRuleCall_0___or___SelectorParserRuleCall_0_0___TypeNameParserRuleCall_4_or___StructKeyword_0_LeftCurlyBracketKeyword_1_SemicolonKeyword_3______.equals(syntax))
				emit_LiteralType_PrimaryExprLinha_StructType_Type_TypeAssertion___FullStopKeyword_0_LeftParenthesisKeyword_1_LeftParenthesisKeyword_2_0_p_TypeNameParserRuleCall_0___or___SelectorParserRuleCall_0_0___TypeNameParserRuleCall_4_or___StructKeyword_0_LeftCurlyBracketKeyword_1_SemicolonKeyword_3______(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_LiteralType_StructType_TypeNameParserRuleCall_4_or___StructKeyword_0_LeftCurlyBracketKeyword_1_SemicolonKeyword_3__.equals(syntax))
				emit_LiteralType_StructType_TypeNameParserRuleCall_4_or___StructKeyword_0_LeftCurlyBracketKeyword_1_SemicolonKeyword_3__(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_LiteralValue_CommaKeyword_1_1_q.equals(syntax))
				emit_LiteralValue_CommaKeyword_1_1_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Literal_Operand_BasicLitParserRuleCall_0_or_OperandNameParserRuleCall_1.equals(syntax))
				emit_Literal_Operand_BasicLitParserRuleCall_0_or_OperandNameParserRuleCall_1(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_MapType_PrimaryExprLinha_Type_TypeAssertion___FullStopKeyword_0_LeftParenthesisKeyword_1_LeftParenthesisKeyword_2_0_a___or___SelectorParserRuleCall_0_0_MapKeyword_0_LeftSquareBracketKeyword_1_LeftParenthesisKeyword_2_0_a__.equals(syntax))
				emit_MapType_PrimaryExprLinha_Type_TypeAssertion___FullStopKeyword_0_LeftParenthesisKeyword_1_LeftParenthesisKeyword_2_0_a___or___SelectorParserRuleCall_0_0_MapKeyword_0_LeftSquareBracketKeyword_1_LeftParenthesisKeyword_2_0_a__(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_MapType_Type_____MapKeyword_0_LeftSquareBracketKeyword_1__q_LeftParenthesisKeyword_2_0_p__q.equals(syntax))
				emit_MapType_Type_____MapKeyword_0_LeftSquareBracketKeyword_1__q_LeftParenthesisKeyword_2_0_p__q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_ParameterDecl_FullStopFullStopFullStopKeyword_1_q.equals(syntax))
				emit_ParameterDecl_FullStopFullStopFullStopKeyword_1_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_ParameterDecl_IdentifierListParserRuleCall_0_q.equals(syntax))
				emit_ParameterDecl_IdentifierListParserRuleCall_0_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_ParameterDecl_Parameters_TopLevelDecl_Type_VarDecl_VarSpec_topLevelDeclLinha___FuncKeyword_1_0_FunctionNameParserRuleCall_0_0_q_LeftParenthesisKeyword_0_IdentifierListParserRuleCall_0_q_FullStopFullStopFullStopKeyword_1_q_LeftParenthesisKeyword_2_0_a___or___VarKeyword_0_LeftParenthesisKeyword_1_1_0_q_IdentifierListParserRuleCall_0_LeftParenthesisKeyword_2_0_a__.equals(syntax))
				emit_ParameterDecl_Parameters_TopLevelDecl_Type_VarDecl_VarSpec_topLevelDeclLinha___FuncKeyword_1_0_FunctionNameParserRuleCall_0_0_q_LeftParenthesisKeyword_0_IdentifierListParserRuleCall_0_q_FullStopFullStopFullStopKeyword_1_q_LeftParenthesisKeyword_2_0_a___or___VarKeyword_0_LeftParenthesisKeyword_1_1_0_q_IdentifierListParserRuleCall_0_LeftParenthesisKeyword_2_0_a__(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_ParameterDecl_Parameters_Type___LeftParenthesisKeyword_2_0_p_or___LeftParenthesisKeyword_0_IdentifierListParserRuleCall_0_q_FullStopFullStopFullStopKeyword_1_q_LeftParenthesisKeyword_2_0_p____q.equals(syntax))
				emit_ParameterDecl_Parameters_Type___LeftParenthesisKeyword_2_0_p_or___LeftParenthesisKeyword_0_IdentifierListParserRuleCall_0_q_FullStopFullStopFullStopKeyword_1_q_LeftParenthesisKeyword_2_0_p____q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_ParameterDecl_Parameters___LeftParenthesisKeyword_0_IdentifierListParserRuleCall_0_q_FullStopFullStopFullStopKeyword_1_q__q.equals(syntax))
				emit_ParameterDecl_Parameters___LeftParenthesisKeyword_0_IdentifierListParserRuleCall_0_q_FullStopFullStopFullStopKeyword_1_q__q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Parameters_CommaKeyword_1_1_q.equals(syntax))
				emit_Parameters_CommaKeyword_1_1_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Parameters_Type___LeftParenthesisKeyword_0_RightParenthesisKeyword_2___or___LeftParenthesisKeyword_2_0_a_TypeNameParserRuleCall_0__.equals(syntax))
				emit_Parameters_Type___LeftParenthesisKeyword_0_RightParenthesisKeyword_2___or___LeftParenthesisKeyword_2_0_a_TypeNameParserRuleCall_0__(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_RangeClause___IdentifierListParserRuleCall_0_1_0_ColonEqualsSignKeyword_0_1_1__q.equals(syntax))
				emit_RangeClause___IdentifierListParserRuleCall_0_1_0_ColonEqualsSignKeyword_0_1_1__q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_RecvStmt___IdentifierListParserRuleCall_0_1_0_ColonEqualsSignKeyword_0_1_1__q.equals(syntax))
				emit_RecvStmt___IdentifierListParserRuleCall_0_1_0_ColonEqualsSignKeyword_0_1_1__q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_ShortVarDecl___IdentifierListParserRuleCall_0_ColonEqualsSignKeyword_1__q.equals(syntax))
				emit_ShortVarDecl___IdentifierListParserRuleCall_0_ColonEqualsSignKeyword_1__q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_SimpleStmt_EmptyStmtParserRuleCall_0_q.equals(syntax))
				emit_SimpleStmt_EmptyStmtParserRuleCall_0_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_SimpleStmt_SwitchStmt___EmptyStmtParserRuleCall_0_SemicolonKeyword_1_1__q.equals(syntax))
				emit_SimpleStmt_SwitchStmt___EmptyStmtParserRuleCall_0_SemicolonKeyword_1_1__q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_SouceFile___ImportDeclParserRuleCall_2_0_SemicolonKeyword_2_1__q.equals(syntax))
				emit_SouceFile___ImportDeclParserRuleCall_2_0_SemicolonKeyword_2_1__q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_TypeDecl_LeftParenthesisKeyword_1_1_0_q.equals(syntax))
				emit_TypeDecl_LeftParenthesisKeyword_1_1_0_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_TypeSwitchGuard___IdentifierParserRuleCall_0_0_ColonEqualsSignKeyword_0_1__q.equals(syntax))
				emit_TypeSwitchGuard___IdentifierParserRuleCall_0_0_ColonEqualsSignKeyword_0_1__q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Type_LeftParenthesisKeyword_2_0_a.equals(syntax))
				emit_Type_LeftParenthesisKeyword_2_0_a(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Type_VarDecl_VarSpec___IdentifierListParserRuleCall_0_LeftParenthesisKeyword_2_0_a_TypeNameParserRuleCall_0___or___LeftParenthesisKeyword_1_1_0_RightParenthesisKeyword_1_1_2__.equals(syntax))
				emit_Type_VarDecl_VarSpec___IdentifierListParserRuleCall_0_LeftParenthesisKeyword_2_0_a_TypeNameParserRuleCall_0___or___LeftParenthesisKeyword_1_1_0_RightParenthesisKeyword_1_1_2__(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_VarDecl_LeftParenthesisKeyword_1_1_0_q.equals(syntax))
				emit_VarDecl_LeftParenthesisKeyword_1_1_0_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_topLevelDeclLinha_FunctionNameParserRuleCall_0_0_q.equals(syntax))
				emit_topLevelDeclLinha_FunctionNameParserRuleCall_0_0_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else acceptNodes(getLastNavigableState(), syntaxNodes);
		}
	}

	/**
	 * Ambiguous syntax:
	 *     (
	  *         (
	  *             (ImportDecl ';')? 
	  *             'func' 
	  *             FunctionName? 
	  *             '(' 
	  *             IdentifierList? 
	  *             '...'? 
	  *             '('*
	  *         ) | 
	  *         ((('const' '('? IdentifierList) | ('type' '('? ((identifier '=') | identifier)) | ('var' '('? IdentifierList)) '('*)
	  *     )
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) PackageClause ';' (ambiguity) TypeName ',' ParameterDecl+=ParameterDecl
	 */
	protected void emit_AliasDecl_ConstDecl_ConstSpec_ParameterDecl_Parameters_SouceFile_TopLevelDecl_Type_TypeDecl_TypeDef_VarDecl_VarSpec_topLevelDeclLinha_____ImportDeclParserRuleCall_2_0_SemicolonKeyword_2_1__q_FuncKeyword_1_0_FunctionNameParserRuleCall_0_0_q_LeftParenthesisKeyword_0_IdentifierListParserRuleCall_0_q_FullStopFullStopFullStopKeyword_1_q_LeftParenthesisKeyword_2_0_a___or_______ConstKeyword_0_LeftParenthesisKeyword_1_1_0_q_IdentifierListParserRuleCall_0___or___TypeKeyword_0_LeftParenthesisKeyword_1_1_0_q___IdentifierParserRuleCall_0_or___IdentifierParserRuleCall_0_EqualsSignKeyword_1_______or___VarKeyword_0_LeftParenthesisKeyword_1_1_0_q_IdentifierListParserRuleCall_0_____LeftParenthesisKeyword_2_0_a__(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     (
	  *         (
	  *             (ImportDecl ';')? 
	  *             (
	  *                 (
	  *                     'func' 
	  *                     FunctionName? 
	  *                     '(' 
	  *                     IdentifierList? 
	  *                     '...'? 
	  *                     '('*
	  *                 ) | 
	  *                 ('var' '('? IdentifierList '('*)
	  *             )
	  *         ) | 
	  *         ((('const' '('? IdentifierList) | ('type' '('? ((identifier '=') | identifier))) '('*)
	  *     )
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) PackageClause ';' (ambiguity) TypeName '=' ExpressionList+=ExpressionList
	 */
	protected void emit_AliasDecl_ConstDecl_ConstSpec_ParameterDecl_Parameters_SouceFile_TopLevelDecl_Type_TypeDecl_TypeDef_VarDecl_VarSpec_topLevelDeclLinha_____ImportDeclParserRuleCall_2_0_SemicolonKeyword_2_1__q_____FuncKeyword_1_0_FunctionNameParserRuleCall_0_0_q_LeftParenthesisKeyword_0_IdentifierListParserRuleCall_0_q_FullStopFullStopFullStopKeyword_1_q_LeftParenthesisKeyword_2_0_a___or___VarKeyword_0_LeftParenthesisKeyword_1_1_0_q_IdentifierListParserRuleCall_0_LeftParenthesisKeyword_2_0_a_______or_______ConstKeyword_0_LeftParenthesisKeyword_1_1_0_q_IdentifierListParserRuleCall_0___or___TypeKeyword_0_LeftParenthesisKeyword_1_1_0_q___IdentifierParserRuleCall_0_or___IdentifierParserRuleCall_0_EqualsSignKeyword_1_________LeftParenthesisKeyword_2_0_a__(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     (
	  *         ('func' FunctionName? '(' IdentifierList? '...'?) | 
	  *         ('const' '('? IdentifierList) | 
	  *         ('type' '('? ((identifier '=') | identifier)) | 
	  *         ('var' '('? IdentifierList)
	  *     )
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) '('* '[' TypeLitLinha+=TypeLitLinha
	 *     (rule start) (ambiguity) '('* ChannelType+=ChannelType
	 *     (rule start) (ambiguity) '('* FunctionType+=FunctionType
	 *     (rule start) (ambiguity) '('* InterfaceType+=InterfaceType
	 *     (rule start) (ambiguity) '('* MapType+=MapType
	 *     (rule start) (ambiguity) '('* PointerType+=PointerType
	 *     (rule start) (ambiguity) '('* StructType+=StructType
	 *     (rule start) PackageClause ';' (ImportDecl ';')? (ambiguity) '('* '[' TypeLitLinha+=TypeLitLinha
	 *     (rule start) PackageClause ';' (ImportDecl ';')? (ambiguity) '('* ChannelType+=ChannelType
	 *     (rule start) PackageClause ';' (ImportDecl ';')? (ambiguity) '('* FunctionType+=FunctionType
	 *     (rule start) PackageClause ';' (ImportDecl ';')? (ambiguity) '('* InterfaceType+=InterfaceType
	 *     (rule start) PackageClause ';' (ImportDecl ';')? (ambiguity) '('* MapType+=MapType
	 *     (rule start) PackageClause ';' (ImportDecl ';')? (ambiguity) '('* PointerType+=PointerType
	 *     (rule start) PackageClause ';' (ImportDecl ';')? (ambiguity) '('* StructType+=StructType
	 */
	protected void emit_AliasDecl_ConstDecl_ConstSpec_ParameterDecl_Parameters_TopLevelDecl_TypeDecl_TypeDef_VarDecl_VarSpec_topLevelDeclLinha___ConstKeyword_0_LeftParenthesisKeyword_1_1_0_q_IdentifierListParserRuleCall_0___or___FuncKeyword_1_0_FunctionNameParserRuleCall_0_0_q_LeftParenthesisKeyword_0_IdentifierListParserRuleCall_0_q_FullStopFullStopFullStopKeyword_1_q___or___TypeKeyword_0_LeftParenthesisKeyword_1_1_0_q___IdentifierParserRuleCall_0_or___IdentifierParserRuleCall_0_EqualsSignKeyword_1_______or___VarKeyword_0_LeftParenthesisKeyword_1_1_0_q_IdentifierListParserRuleCall_0__(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     (
	  *         (
	  *             (('func' FunctionName? '(' IdentifierList? '...'?) | ('type' '('? ((identifier '=') | identifier)) | ('var' '('? IdentifierList)) 
	  *             '('+ 
	  *             TypeName
	  *         ) | 
	  *         ('const' '('? IdentifierList)
	  *     )
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) '=' ExpressionList+=ExpressionList
	 *     (rule start) PackageClause ';' (ImportDecl ';')? (ambiguity) '=' ExpressionList+=ExpressionList
	 */
	protected void emit_AliasDecl_ConstDecl_ConstSpec_ParameterDecl_Parameters_TopLevelDecl_Type_TypeDecl_TypeDef_VarDecl_VarSpec_topLevelDeclLinha___ConstKeyword_0_LeftParenthesisKeyword_1_1_0_q_IdentifierListParserRuleCall_0___or_______FuncKeyword_1_0_FunctionNameParserRuleCall_0_0_q_LeftParenthesisKeyword_0_IdentifierListParserRuleCall_0_q_FullStopFullStopFullStopKeyword_1_q___or___TypeKeyword_0_LeftParenthesisKeyword_1_1_0_q___IdentifierParserRuleCall_0_or___IdentifierParserRuleCall_0_EqualsSignKeyword_1_______or___VarKeyword_0_LeftParenthesisKeyword_1_1_0_q_IdentifierListParserRuleCall_0_____LeftParenthesisKeyword_2_0_p_TypeNameParserRuleCall_0__(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ('const' '('? IdentifierList) | ('type' '('? ((identifier '=') | identifier)) | ('var' '('? IdentifierList)
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) '('* '[' TypeLitLinha+=TypeLitLinha
	 *     (rule start) (ambiguity) '('* ChannelType+=ChannelType
	 *     (rule start) (ambiguity) '('* FunctionType+=FunctionType
	 *     (rule start) (ambiguity) '('* InterfaceType+=InterfaceType
	 *     (rule start) (ambiguity) '('* MapType+=MapType
	 *     (rule start) (ambiguity) '('* PointerType+=PointerType
	 *     (rule start) (ambiguity) '('* StructType+=StructType
	 */
	protected void emit_AliasDecl_ConstDecl_ConstSpec_TypeDecl_TypeDef_VarDecl_VarSpec___ConstKeyword_0_LeftParenthesisKeyword_1_1_0_q_IdentifierListParserRuleCall_0___or___TypeKeyword_0_LeftParenthesisKeyword_1_1_0_q___IdentifierParserRuleCall_0_or___IdentifierParserRuleCall_0_EqualsSignKeyword_1_______or___VarKeyword_0_LeftParenthesisKeyword_1_1_0_q_IdentifierListParserRuleCall_0__(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ('const' '('? IdentifierList) | ((('type' '('? ((identifier '=') | identifier)) | ('var' '('? IdentifierList)) '('+ TypeName)
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) '=' ExpressionList+=ExpressionList
	 */
	protected void emit_AliasDecl_ConstDecl_ConstSpec_Type_TypeDecl_TypeDef_VarDecl_VarSpec___ConstKeyword_0_LeftParenthesisKeyword_1_1_0_q_IdentifierListParserRuleCall_0___or_______TypeKeyword_0_LeftParenthesisKeyword_1_1_0_q___IdentifierParserRuleCall_0_or___IdentifierParserRuleCall_0_EqualsSignKeyword_1_______or___VarKeyword_0_LeftParenthesisKeyword_1_1_0_q_IdentifierListParserRuleCall_0_____LeftParenthesisKeyword_2_0_p_TypeNameParserRuleCall_0__(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     (identifier '=') | identifier
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) 'type' '('? (ambiguity) '('* '[' TypeLitLinha+=TypeLitLinha
	 *     (rule start) 'type' '('? (ambiguity) '('* ChannelType+=ChannelType
	 *     (rule start) 'type' '('? (ambiguity) '('* FunctionType+=FunctionType
	 *     (rule start) 'type' '('? (ambiguity) '('* InterfaceType+=InterfaceType
	 *     (rule start) 'type' '('? (ambiguity) '('* MapType+=MapType
	 *     (rule start) 'type' '('? (ambiguity) '('* PointerType+=PointerType
	 *     (rule start) 'type' '('? (ambiguity) '('* StructType+=StructType
	 *     (rule start) (ambiguity) '('* '[' TypeLitLinha+=TypeLitLinha
	 *     (rule start) (ambiguity) '('* ChannelType+=ChannelType
	 *     (rule start) (ambiguity) '('* FunctionType+=FunctionType
	 *     (rule start) (ambiguity) '('* InterfaceType+=InterfaceType
	 *     (rule start) (ambiguity) '('* MapType+=MapType
	 *     (rule start) (ambiguity) '('* PointerType+=PointerType
	 *     (rule start) (ambiguity) '('* StructType+=StructType
	 *     (rule start) (ambiguity) '('* TypeName (rule start)
	 */
	protected void emit_AliasDecl_TypeDef_IdentifierParserRuleCall_0_or___IdentifierParserRuleCall_0_EqualsSignKeyword_1__(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ('(' ')') | (((identifier '=') | identifier) '('* TypeName)
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) 'type' (ambiguity) (rule start)
	 */
	protected void emit_AliasDecl_Type_TypeDecl_TypeDef___LeftParenthesisKeyword_1_1_0_RightParenthesisKeyword_1_1_2___or_____IdentifierParserRuleCall_0_or___IdentifierParserRuleCall_0_EqualsSignKeyword_1_____LeftParenthesisKeyword_2_0_a_TypeNameParserRuleCall_0__(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ','?
	 *
	 * This ambiguous syntax occurs at:
	 *     ChannelType+=ChannelType '...'? (ambiguity) ')' (rule end)
	 *     ChannelType+=ChannelType '...'? (ambiguity) ')' PrimaryExprLinha+=PrimaryExprLinha
	 *     Expression+=Expression '...'? (ambiguity) ')' (rule end)
	 *     Expression+=Expression '...'? (ambiguity) ')' PrimaryExprLinha+=PrimaryExprLinha
	 *     ExpressionLinha+=ExpressionLinha '...'? (ambiguity) ')' (rule end)
	 *     ExpressionLinha+=ExpressionLinha '...'? (ambiguity) ')' PrimaryExprLinha+=PrimaryExprLinha
	 *     ExpressionList+=ExpressionList '...'? (ambiguity) ')' (rule end)
	 *     ExpressionList+=ExpressionList '...'? (ambiguity) ')' PrimaryExprLinha+=PrimaryExprLinha
	 *     FunctionType+=FunctionType '...'? (ambiguity) ')' (rule end)
	 *     FunctionType+=FunctionType '...'? (ambiguity) ')' PrimaryExprLinha+=PrimaryExprLinha
	 *     InterfaceType+=InterfaceType '...'? (ambiguity) ')' (rule end)
	 *     InterfaceType+=InterfaceType '...'? (ambiguity) ')' PrimaryExprLinha+=PrimaryExprLinha
	 *     MapType+=MapType '...'? (ambiguity) ')' (rule end)
	 *     MapType+=MapType '...'? (ambiguity) ')' PrimaryExprLinha+=PrimaryExprLinha
	 *     PointerType+=PointerType '...'? (ambiguity) ')' (rule end)
	 *     PointerType+=PointerType '...'? (ambiguity) ')' PrimaryExprLinha+=PrimaryExprLinha
	 *     StructType+=StructType '...'? (ambiguity) ')' (rule end)
	 *     StructType+=StructType '...'? (ambiguity) ')' PrimaryExprLinha+=PrimaryExprLinha
	 *     TypeLitLinha+=TypeLitLinha '...'? (ambiguity) ')' (rule end)
	 *     TypeLitLinha+=TypeLitLinha '...'? (ambiguity) ')' PrimaryExprLinha+=PrimaryExprLinha
	 */
	protected void emit_Arguments_CommaKeyword_1_2_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     '...'?
	 *
	 * This ambiguous syntax occurs at:
	 *     ChannelType+=ChannelType (ambiguity) ','? ')' (rule end)
	 *     ChannelType+=ChannelType (ambiguity) ','? ')' PrimaryExprLinha+=PrimaryExprLinha
	 *     Expression+=Expression (ambiguity) ','? ')' (rule end)
	 *     Expression+=Expression (ambiguity) ','? ')' PrimaryExprLinha+=PrimaryExprLinha
	 *     ExpressionLinha+=ExpressionLinha (ambiguity) ','? ')' (rule end)
	 *     ExpressionLinha+=ExpressionLinha (ambiguity) ','? ')' PrimaryExprLinha+=PrimaryExprLinha
	 *     ExpressionList+=ExpressionList (ambiguity) ','? ')' (rule end)
	 *     ExpressionList+=ExpressionList (ambiguity) ','? ')' PrimaryExprLinha+=PrimaryExprLinha
	 *     FunctionType+=FunctionType (ambiguity) ','? ')' (rule end)
	 *     FunctionType+=FunctionType (ambiguity) ','? ')' PrimaryExprLinha+=PrimaryExprLinha
	 *     InterfaceType+=InterfaceType (ambiguity) ','? ')' (rule end)
	 *     InterfaceType+=InterfaceType (ambiguity) ','? ')' PrimaryExprLinha+=PrimaryExprLinha
	 *     MapType+=MapType (ambiguity) ','? ')' (rule end)
	 *     MapType+=MapType (ambiguity) ','? ')' PrimaryExprLinha+=PrimaryExprLinha
	 *     PointerType+=PointerType (ambiguity) ','? ')' (rule end)
	 *     PointerType+=PointerType (ambiguity) ','? ')' PrimaryExprLinha+=PrimaryExprLinha
	 *     StructType+=StructType (ambiguity) ','? ')' (rule end)
	 *     StructType+=StructType (ambiguity) ','? ')' PrimaryExprLinha+=PrimaryExprLinha
	 *     TypeLitLinha+=TypeLitLinha (ambiguity) ','? ')' (rule end)
	 *     TypeLitLinha+=TypeLitLinha (ambiguity) ','? ')' PrimaryExprLinha+=PrimaryExprLinha
	 */
	protected void emit_Arguments_FullStopFullStopFullStopKeyword_1_1_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     (Selector (('map' '[') | ('[' ']') | ('func' '(' IdentifierList? '...'?))?) | ('.' '(') | '('
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) '('* '[' TypeLitLinha+=TypeLitLinha
	 *     (rule start) (ambiguity) '('* ChannelType+=ChannelType
	 *     (rule start) (ambiguity) '('* FunctionType+=FunctionType
	 *     (rule start) (ambiguity) '('* InterfaceType+=InterfaceType
	 *     (rule start) (ambiguity) '('* MapType+=MapType
	 *     (rule start) (ambiguity) '('* PointerType+=PointerType
	 *     (rule start) (ambiguity) '('* StructType+=StructType
	 */
	protected void emit_Arguments_FunctionLit_LiteralType_LiteralTypeLinha_MapType_ParameterDecl_Parameters_PrimaryExprLinha_TypeAssertion_LeftParenthesisKeyword_0_or___FullStopKeyword_0_LeftParenthesisKeyword_1___or___SelectorParserRuleCall_0_0_____FuncKeyword_0_LeftParenthesisKeyword_0_IdentifierListParserRuleCall_0_q_FullStopFullStopFullStopKeyword_1_q___or___LeftSquareBracketKeyword_1_0_RightSquareBracketKeyword_1_0___or___MapKeyword_0_LeftSquareBracketKeyword_1____q__(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     (((Selector (('map' '[') | ('[' ']') | ('func' '(' IdentifierList? '...'?))? '('*) | ('.' '(' '('*)) TypeName '...'? ','?) | '('
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) ')' PrimaryExprLinha+=PrimaryExprLinha
	 */
	protected void emit_Arguments_FunctionLit_LiteralType_LiteralTypeLinha_MapType_ParameterDecl_Parameters_PrimaryExprLinha_Type_TypeAssertion_LeftParenthesisKeyword_0_or_______FullStopKeyword_0_LeftParenthesisKeyword_1_LeftParenthesisKeyword_2_0_a___or___SelectorParserRuleCall_0_0_____FuncKeyword_0_LeftParenthesisKeyword_0_IdentifierListParserRuleCall_0_q_FullStopFullStopFullStopKeyword_1_q___or___LeftSquareBracketKeyword_1_0_RightSquareBracketKeyword_1_0___or___MapKeyword_0_LeftSquareBracketKeyword_1____q_LeftParenthesisKeyword_2_0_a_____TypeNameParserRuleCall_0_FullStopFullStopFullStopKeyword_1_1_q_CommaKeyword_1_2_q__(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     (((Selector (('map' '[') | ('[' ']') | ('func' '(' IdentifierList? '...'?))?) | ('.' '(')) '('*) | ('(' '('*)
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) TypeName ',' ExpressionList+=ExpressionList
	 */
	protected void emit_Arguments_FunctionLit_LiteralType_LiteralTypeLinha_MapType_ParameterDecl_Parameters_PrimaryExprLinha_Type_TypeAssertion___LeftParenthesisKeyword_0_LeftParenthesisKeyword_2_0_a___or_______FullStopKeyword_0_LeftParenthesisKeyword_1___or___SelectorParserRuleCall_0_0_____FuncKeyword_0_LeftParenthesisKeyword_0_IdentifierListParserRuleCall_0_q_FullStopFullStopFullStopKeyword_1_q___or___LeftSquareBracketKeyword_1_0_RightSquareBracketKeyword_1_0___or___MapKeyword_0_LeftSquareBracketKeyword_1____q_____LeftParenthesisKeyword_2_0_a__(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     (Selector (('map' '[') | ('[' ']') | ('func' '(' IdentifierList? '...'?))? '('*) | ((('.' '(') | '(') '('*)
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) TypeName ')' PrimaryExprLinha+=PrimaryExprLinha
	 */
	protected void emit_Arguments_FunctionLit_LiteralType_LiteralTypeLinha_MapType_ParameterDecl_Parameters_PrimaryExprLinha_Type_TypeAssertion___SelectorParserRuleCall_0_0_____FuncKeyword_0_LeftParenthesisKeyword_0_IdentifierListParserRuleCall_0_q_FullStopFullStopFullStopKeyword_1_q___or___LeftSquareBracketKeyword_1_0_RightSquareBracketKeyword_1_0___or___MapKeyword_0_LeftSquareBracketKeyword_1____q_LeftParenthesisKeyword_2_0_a___or_____LeftParenthesisKeyword_0_or___FullStopKeyword_0_LeftParenthesisKeyword_1_____LeftParenthesisKeyword_2_0_a__(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     (Selector ('(' | '[')) | '[' | '('
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) UnaryExpr ExpressionLinha+=ExpressionLinha
	 */
	protected void emit_Arguments_LiteralType_Operand_PrimaryExprLinha_LeftParenthesisKeyword_0_or_LeftSquareBracketKeyword_1_0_or___SelectorParserRuleCall_0_0___LeftParenthesisKeyword_2_0_or_LeftSquareBracketKeyword_1_0____(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'chan' | ('chan' '<-') | ('<-' 'chan')
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) '('* '[' TypeLitLinha+=TypeLitLinha
	 *     (rule start) (ambiguity) '('* ChannelType+=ChannelType
	 *     (rule start) (ambiguity) '('* FunctionType+=FunctionType
	 *     (rule start) (ambiguity) '('* InterfaceType+=InterfaceType
	 *     (rule start) (ambiguity) '('* MapType+=MapType
	 *     (rule start) (ambiguity) '('* PointerType+=PointerType
	 *     (rule start) (ambiguity) '('* StructType+=StructType
	 *     (rule start) (ambiguity) '('* TypeName (rule start)
	 */
	protected void emit_ChannelType_ChanKeyword_0_0_or___ChanKeyword_0_1_0_LessThanSignHyphenMinusKeyword_0_1_1___or___LessThanSignHyphenMinusKeyword_0_2_0_ChanKeyword_0_2_1__(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ('(' ')') | IdentifierList
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) 'const' (ambiguity) (rule start)
	 */
	protected void emit_ConstDecl_ConstSpec_IdentifierListParserRuleCall_0_or___LeftParenthesisKeyword_1_1_0_RightParenthesisKeyword_1_1_2__(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     '('?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) 'const' (ambiguity) IdentifierList '('* '[' TypeLitLinha+=TypeLitLinha
	 *     (rule start) 'const' (ambiguity) IdentifierList '('* ChannelType+=ChannelType
	 *     (rule start) 'const' (ambiguity) IdentifierList '('* FunctionType+=FunctionType
	 *     (rule start) 'const' (ambiguity) IdentifierList '('* InterfaceType+=InterfaceType
	 *     (rule start) 'const' (ambiguity) IdentifierList '('* MapType+=MapType
	 *     (rule start) 'const' (ambiguity) IdentifierList '('* PointerType+=PointerType
	 *     (rule start) 'const' (ambiguity) IdentifierList '('* StructType+=StructType
	 *     (rule start) 'const' (ambiguity) IdentifierList '=' ExpressionList+=ExpressionList
	 */
	protected void emit_ConstDecl_LeftParenthesisKeyword_1_1_0_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ','?
	 *
	 * This ambiguous syntax occurs at:
	 *     Expression+=Expression (ambiguity) ')' (rule end)
	 *     Expression+=Expression (ambiguity) ')' PrimaryExprLinha+=PrimaryExprLinha
	 */
	protected void emit_Conversion_CommaKeyword_3_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     Tag?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) EmbeddedField (ambiguity) (rule start)
	 *     ChannelType+=ChannelType (ambiguity) (rule end)
	 *     FunctionType+=FunctionType (ambiguity) (rule end)
	 *     InterfaceType+=InterfaceType (ambiguity) (rule end)
	 *     MapType+=MapType (ambiguity) (rule end)
	 *     PointerType+=PointerType (ambiguity) (rule end)
	 *     StructType+=StructType (ambiguity) (rule end)
	 *     TypeLitLinha+=TypeLitLinha (ambiguity) (rule end)
	 */
	protected void emit_FieldDecl_TagParserRuleCall_1_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ((EmptyStmt? ';' ';') | ((IdentifierList ':=')? 'range'))?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) 'for' (ambiguity) (rule start)
	 */
	protected void emit_ForClause_RangeClause_SimpleStmt_____EmptyStmtParserRuleCall_0_q_SemicolonKeyword_1_SemicolonKeyword_3___or_____IdentifierListParserRuleCall_0_1_0_ColonEqualsSignKeyword_0_1_1__q_RangeKeyword_1____q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     (Selector ((('map' '[') | ('[' ']') | ('func' '(' IdentifierList? '...'?))? '('+)?) | ('.' '(' '('+)
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) TypeName '(' Expression+=Expression
	 *     (rule start) (ambiguity) TypeName '.' MethodName PrimaryExprLinha+=PrimaryExprLinha
	 */
	protected void emit_FunctionLit_LiteralType_LiteralTypeLinha_MapType_ParameterDecl_Parameters_PrimaryExprLinha_Type_TypeAssertion___FullStopKeyword_0_LeftParenthesisKeyword_1_LeftParenthesisKeyword_2_0_p___or___SelectorParserRuleCall_0_0_______FuncKeyword_0_LeftParenthesisKeyword_0_IdentifierListParserRuleCall_0_q_FullStopFullStopFullStopKeyword_1_q___or___LeftSquareBracketKeyword_1_0_RightSquareBracketKeyword_1_0___or___MapKeyword_0_LeftSquareBracketKeyword_1____q_LeftParenthesisKeyword_2_0_p__q__(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     (
	  *         (
	  *             Selector 
	  *             'func' 
	  *             '(' 
	  *             IdentifierList? 
	  *             '...'? 
	  *             '('*
	  *         ) | 
	  *         (((Selector (('map' '[') | ('[' ']'))?) | ('.' '(')) '('*)
	  *     )
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) TypeName ',' ParameterDecl+=ParameterDecl
	 */
	protected void emit_FunctionLit_LiteralType_LiteralTypeLinha_MapType_ParameterDecl_Parameters_PrimaryExprLinha_Type_TypeAssertion___SelectorParserRuleCall_0_0_FuncKeyword_0_LeftParenthesisKeyword_0_IdentifierListParserRuleCall_0_q_FullStopFullStopFullStopKeyword_1_q_LeftParenthesisKeyword_2_0_a___or_______FullStopKeyword_0_LeftParenthesisKeyword_1___or___SelectorParserRuleCall_0_0_____LeftSquareBracketKeyword_1_0_RightSquareBracketKeyword_1_0___or___MapKeyword_0_LeftSquareBracketKeyword_1____q_____LeftParenthesisKeyword_2_0_a__(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ((('[' ']') | ('func' '(' IdentifierList? '...'?))? '('*) | ((identifier ':=')? 'map' '[' '('*)
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) TypeName ']' ElementType+=ElementType
	 */
	protected void emit_FunctionLit_LiteralType_LiteralTypeLinha_MapType_ParameterDecl_Parameters_Type_TypeSwitchGuard_____IdentifierParserRuleCall_0_0_ColonEqualsSignKeyword_0_1__q_MapKeyword_0_LeftSquareBracketKeyword_1_LeftParenthesisKeyword_2_0_a___or_______FuncKeyword_0_LeftParenthesisKeyword_0_IdentifierListParserRuleCall_0_q_FullStopFullStopFullStopKeyword_1_q___or___LeftSquareBracketKeyword_1_0_RightSquareBracketKeyword_1_0____q_LeftParenthesisKeyword_2_0_a__(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ((('[' ']') | ('func' '(' IdentifierList? '...'?))? '('+) | ((identifier ':=')? (('map' '[')? '('+)?)
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) TypeName '(' Expression+=Expression
	 *     (rule start) (ambiguity) TypeName '.' MethodName PrimaryExprLinha+=PrimaryExprLinha
	 */
	protected void emit_FunctionLit_LiteralType_LiteralTypeLinha_MapType_ParameterDecl_Parameters_Type_TypeSwitchGuard_____IdentifierParserRuleCall_0_0_ColonEqualsSignKeyword_0_1__q_____MapKeyword_0_LeftSquareBracketKeyword_1__q_LeftParenthesisKeyword_2_0_p__q___or_______FuncKeyword_0_LeftParenthesisKeyword_0_IdentifierListParserRuleCall_0_q_FullStopFullStopFullStopKeyword_1_q___or___LeftSquareBracketKeyword_1_0_RightSquareBracketKeyword_1_0____q_LeftParenthesisKeyword_2_0_p__(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ((('map' '[') | ('[' ']'))? '('*) | ('func' '(' IdentifierList? '...'? '('*)
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) TypeName ',' ParameterDecl+=ParameterDecl
	 *     (rule start) (identifier ':=')? (ambiguity) TypeName ',' ParameterDecl+=ParameterDecl
	 */
	protected void emit_FunctionLit_LiteralType_LiteralTypeLinha_MapType_ParameterDecl_Parameters_Type___FuncKeyword_0_LeftParenthesisKeyword_0_IdentifierListParserRuleCall_0_q_FullStopFullStopFullStopKeyword_1_q_LeftParenthesisKeyword_2_0_a___or_______LeftSquareBracketKeyword_1_0_RightSquareBracketKeyword_1_0___or___MapKeyword_0_LeftSquareBracketKeyword_1____q_LeftParenthesisKeyword_2_0_a__(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     (('map' '[') | ('[' ']') | ('func' '(' IdentifierList? '...'?))?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) '('* '[' TypeLitLinha+=TypeLitLinha
	 *     (rule start) (ambiguity) '('* ChannelType+=ChannelType
	 *     (rule start) (ambiguity) '('* FunctionType+=FunctionType
	 *     (rule start) (ambiguity) '('* InterfaceType+=InterfaceType
	 *     (rule start) (ambiguity) '('* MapType+=MapType
	 *     (rule start) (ambiguity) '('* PointerType+=PointerType
	 *     (rule start) (ambiguity) '('* StructType+=StructType
	 *     (rule start) (identifier ':=')? (ambiguity) '('* '[' TypeLitLinha+=TypeLitLinha
	 *     (rule start) (identifier ':=')? (ambiguity) '('* ChannelType+=ChannelType
	 *     (rule start) (identifier ':=')? (ambiguity) '('* FunctionType+=FunctionType
	 *     (rule start) (identifier ':=')? (ambiguity) '('* InterfaceType+=InterfaceType
	 *     (rule start) (identifier ':=')? (ambiguity) '('* MapType+=MapType
	 *     (rule start) (identifier ':=')? (ambiguity) '('* PointerType+=PointerType
	 *     (rule start) (identifier ':=')? (ambiguity) '('* StructType+=StructType
	 */
	protected void emit_FunctionLit_LiteralType_LiteralTypeLinha_MapType_ParameterDecl_Parameters_____FuncKeyword_0_LeftParenthesisKeyword_0_IdentifierListParserRuleCall_0_q_FullStopFullStopFullStopKeyword_1_q___or___LeftSquareBracketKeyword_1_0_RightSquareBracketKeyword_1_0___or___MapKeyword_0_LeftSquareBracketKeyword_1____q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     (Selector 'func' '(') | (((Selector (('map' '[') | ('[' ']'))?) | ('.' '(')) '('+ TypeName ','?)
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) ')' FunctionBody+=FunctionBody
	 *     (rule start) (ambiguity) ')' Result+=Result
	 */
	protected void emit_FunctionLit_LiteralType_LiteralTypeLinha_MapType_Parameters_PrimaryExprLinha_Type_TypeAssertion___SelectorParserRuleCall_0_0_FuncKeyword_0_LeftParenthesisKeyword_0___or_______FullStopKeyword_0_LeftParenthesisKeyword_1___or___SelectorParserRuleCall_0_0_____LeftSquareBracketKeyword_1_0_RightSquareBracketKeyword_1_0___or___MapKeyword_0_LeftSquareBracketKeyword_1____q_____LeftParenthesisKeyword_2_0_p_TypeNameParserRuleCall_0_CommaKeyword_1_1_q__(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ((('map' '[') | ('[' ']'))? '('+ TypeName ','?) | ('func' '(')
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) ')' FunctionBody+=FunctionBody
	 *     (rule start) (ambiguity) ')' Result+=Result
	 *     (rule start) (identifier ':=')? (ambiguity) ')' FunctionBody+=FunctionBody
	 *     (rule start) (identifier ':=')? (ambiguity) ')' Result+=Result
	 */
	protected void emit_FunctionLit_LiteralType_LiteralTypeLinha_MapType_Parameters_Type___FuncKeyword_0_LeftParenthesisKeyword_0___or_______LeftSquareBracketKeyword_1_0_RightSquareBracketKeyword_1_0___or___MapKeyword_0_LeftSquareBracketKeyword_1____q_LeftParenthesisKeyword_2_0_p_TypeNameParserRuleCall_0_CommaKeyword_1_1_q__(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     (EmptyStmt ';')?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) 'if' (ambiguity) Expression+=Expression
	 */
	protected void emit_IfStmt_SimpleStmt___EmptyStmtParserRuleCall_0_SemicolonKeyword_1_1__q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     '++' | '--'
	 *
	 * This ambiguous syntax occurs at:
	 *     ExpressionLinha+=ExpressionLinha (ambiguity) (rule end)
	 */
	protected void emit_IncDecStmt_HyphenMinusHyphenMinusKeyword_1_1_or_PlusSignPlusSignKeyword_1_0(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     (InterfaceTypeName ';')?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) 'interface' '{' (ambiguity) '}' (rule start)
	 */
	protected void emit_InterfaceType_MethodSpec___InterfaceTypeNameParserRuleCall_1_SemicolonKeyword_2_1__q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ((('{' '}') | FieldName) ':')?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) Element+=Element
	 */
	protected void emit_Key_KeyedElement_LiteralValue_____FieldNameParserRuleCall_0_or___LeftCurlyBracketKeyword_0_RightCurlyBracketKeyword_2_____ColonKeyword_0_1__q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ('{' '}') | FieldName
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) (rule start)
	 */
	protected void emit_Key_LiteralValue_FieldNameParserRuleCall_0_or___LeftCurlyBracketKeyword_0_RightCurlyBracketKeyword_2__(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     (('map' '[') | ('[' ']'))?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) '('* '[' TypeLitLinha+=TypeLitLinha
	 *     (rule start) (ambiguity) '('* ChannelType+=ChannelType
	 *     (rule start) (ambiguity) '('* FunctionType+=FunctionType
	 *     (rule start) (ambiguity) '('* InterfaceType+=InterfaceType
	 *     (rule start) (ambiguity) '('* MapType+=MapType
	 *     (rule start) (ambiguity) '('* PointerType+=PointerType
	 *     (rule start) (ambiguity) '('* StructType+=StructType
	 */
	protected void emit_LiteralType_LiteralTypeLinha_MapType_____LeftSquareBracketKeyword_1_0_RightSquareBracketKeyword_1_0___or___MapKeyword_0_LeftSquareBracketKeyword_1____q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     '(' | '['
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) UnaryExpr ExpressionLinha+=ExpressionLinha
	 *     (rule start) (identifier ':=')? (ambiguity) UnaryExpr ExpressionLinha+=ExpressionLinha
	 */
	protected void emit_LiteralType_Operand_LeftParenthesisKeyword_2_0_or_LeftSquareBracketKeyword_1_0(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     (Selector (('struct' '{' ';') | TypeName)) | ('.' '(' '('+ TypeName)
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) LiteralValue+=LiteralValue
	 */
	protected void emit_LiteralType_PrimaryExprLinha_StructType_Type_TypeAssertion___FullStopKeyword_0_LeftParenthesisKeyword_1_LeftParenthesisKeyword_2_0_p_TypeNameParserRuleCall_0___or___SelectorParserRuleCall_0_0___TypeNameParserRuleCall_4_or___StructKeyword_0_LeftCurlyBracketKeyword_1_SemicolonKeyword_3______(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ('struct' '{' ';') | TypeName
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) (rule start)
	 *     (rule start) (ambiguity) LiteralValue+=LiteralValue
	 */
	protected void emit_LiteralType_StructType_TypeNameParserRuleCall_4_or___StructKeyword_0_LeftCurlyBracketKeyword_1_SemicolonKeyword_3__(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ','?
	 *
	 * This ambiguous syntax occurs at:
	 *     ElementList+=ElementList (ambiguity) '}' ':' Element+=Element
	 *     ElementList+=ElementList (ambiguity) '}' (rule end)
	 */
	protected void emit_LiteralValue_CommaKeyword_1_1_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     OperandName | BasicLit
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) (rule start)
	 *     (rule start) (ambiguity) PrimaryExprLinha+=PrimaryExprLinha
	 *     (rule start) (identifier ':=')? (ambiguity) PrimaryExprLinha+=PrimaryExprLinha
	 *     (rule start) Selector (ambiguity) PrimaryExprLinha+=PrimaryExprLinha
	 */
	protected void emit_Literal_Operand_BasicLitParserRuleCall_0_or_OperandNameParserRuleCall_1(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     (Selector 'map' '[' '('*) | ('.' '(' '('*)
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) TypeName ']' ElementType+=ElementType
	 */
	protected void emit_MapType_PrimaryExprLinha_Type_TypeAssertion___FullStopKeyword_0_LeftParenthesisKeyword_1_LeftParenthesisKeyword_2_0_a___or___SelectorParserRuleCall_0_0_MapKeyword_0_LeftSquareBracketKeyword_1_LeftParenthesisKeyword_2_0_a__(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     (('map' '[')? '('+)?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) TypeName '(' Expression+=Expression
	 *     (rule start) (ambiguity) TypeName '.' MethodName PrimaryExprLinha+=PrimaryExprLinha
	 */
	protected void emit_MapType_Type_____MapKeyword_0_LeftSquareBracketKeyword_1__q_LeftParenthesisKeyword_2_0_p__q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     '...'?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) '(' IdentifierList? (ambiguity) '('* '[' TypeLitLinha+=TypeLitLinha
	 *     (rule start) '(' IdentifierList? (ambiguity) '('* ChannelType+=ChannelType
	 *     (rule start) '(' IdentifierList? (ambiguity) '('* FunctionType+=FunctionType
	 *     (rule start) '(' IdentifierList? (ambiguity) '('* InterfaceType+=InterfaceType
	 *     (rule start) '(' IdentifierList? (ambiguity) '('* MapType+=MapType
	 *     (rule start) '(' IdentifierList? (ambiguity) '('* PointerType+=PointerType
	 *     (rule start) '(' IdentifierList? (ambiguity) '('* StructType+=StructType
	 *     (rule start) '(' IdentifierList? (ambiguity) '('* TypeName ',' ParameterDecl+=ParameterDecl
	 *     (rule start) 'func' '(' IdentifierList? (ambiguity) '('* '[' TypeLitLinha+=TypeLitLinha
	 *     (rule start) 'func' '(' IdentifierList? (ambiguity) '('* ChannelType+=ChannelType
	 *     (rule start) 'func' '(' IdentifierList? (ambiguity) '('* FunctionType+=FunctionType
	 *     (rule start) 'func' '(' IdentifierList? (ambiguity) '('* InterfaceType+=InterfaceType
	 *     (rule start) 'func' '(' IdentifierList? (ambiguity) '('* MapType+=MapType
	 *     (rule start) 'func' '(' IdentifierList? (ambiguity) '('* PointerType+=PointerType
	 *     (rule start) 'func' '(' IdentifierList? (ambiguity) '('* StructType+=StructType
	 *     (rule start) 'func' '(' IdentifierList? (ambiguity) '('* TypeName ',' ParameterDecl+=ParameterDecl
	 *     (rule start) 'func' FunctionName '(' IdentifierList? (ambiguity) '('* '[' TypeLitLinha+=TypeLitLinha
	 *     (rule start) 'func' FunctionName '(' IdentifierList? (ambiguity) '('* ChannelType+=ChannelType
	 *     (rule start) 'func' FunctionName '(' IdentifierList? (ambiguity) '('* FunctionType+=FunctionType
	 *     (rule start) 'func' FunctionName '(' IdentifierList? (ambiguity) '('* InterfaceType+=InterfaceType
	 *     (rule start) 'func' FunctionName '(' IdentifierList? (ambiguity) '('* MapType+=MapType
	 *     (rule start) 'func' FunctionName '(' IdentifierList? (ambiguity) '('* PointerType+=PointerType
	 *     (rule start) 'func' FunctionName '(' IdentifierList? (ambiguity) '('* StructType+=StructType
	 *     (rule start) 'func' FunctionName '(' IdentifierList? (ambiguity) '('* TypeName ',' ParameterDecl+=ParameterDecl
	 *     (rule start) 'func' FunctionName? '(' IdentifierList? (ambiguity) '('* TypeName ',' ParameterDecl+=ParameterDecl
	 *     (rule start) 'interface' '{' MethodName '(' IdentifierList? (ambiguity) '('* '[' TypeLitLinha+=TypeLitLinha
	 *     (rule start) 'interface' '{' MethodName '(' IdentifierList? (ambiguity) '('* ChannelType+=ChannelType
	 *     (rule start) 'interface' '{' MethodName '(' IdentifierList? (ambiguity) '('* FunctionType+=FunctionType
	 *     (rule start) 'interface' '{' MethodName '(' IdentifierList? (ambiguity) '('* InterfaceType+=InterfaceType
	 *     (rule start) 'interface' '{' MethodName '(' IdentifierList? (ambiguity) '('* MapType+=MapType
	 *     (rule start) 'interface' '{' MethodName '(' IdentifierList? (ambiguity) '('* PointerType+=PointerType
	 *     (rule start) 'interface' '{' MethodName '(' IdentifierList? (ambiguity) '('* StructType+=StructType
	 *     (rule start) 'interface' '{' MethodName '(' IdentifierList? (ambiguity) '('* TypeName ',' ParameterDecl+=ParameterDecl
	 *     (rule start) FunctionName? '(' IdentifierList? (ambiguity) '('* '[' TypeLitLinha+=TypeLitLinha
	 *     (rule start) FunctionName? '(' IdentifierList? (ambiguity) '('* ChannelType+=ChannelType
	 *     (rule start) FunctionName? '(' IdentifierList? (ambiguity) '('* FunctionType+=FunctionType
	 *     (rule start) FunctionName? '(' IdentifierList? (ambiguity) '('* InterfaceType+=InterfaceType
	 *     (rule start) FunctionName? '(' IdentifierList? (ambiguity) '('* MapType+=MapType
	 *     (rule start) FunctionName? '(' IdentifierList? (ambiguity) '('* PointerType+=PointerType
	 *     (rule start) FunctionName? '(' IdentifierList? (ambiguity) '('* StructType+=StructType
	 *     (rule start) FunctionName? '(' IdentifierList? (ambiguity) '('* TypeName ',' ParameterDecl+=ParameterDecl
	 *     (rule start) IdentifierList? (ambiguity) '('* '[' TypeLitLinha+=TypeLitLinha
	 *     (rule start) IdentifierList? (ambiguity) '('* ChannelType+=ChannelType
	 *     (rule start) IdentifierList? (ambiguity) '('* FunctionType+=FunctionType
	 *     (rule start) IdentifierList? (ambiguity) '('* InterfaceType+=InterfaceType
	 *     (rule start) IdentifierList? (ambiguity) '('* MapType+=MapType
	 *     (rule start) IdentifierList? (ambiguity) '('* PointerType+=PointerType
	 *     (rule start) IdentifierList? (ambiguity) '('* StructType+=StructType
	 *     (rule start) IdentifierList? (ambiguity) '('* TypeName ',' ParameterDecl+=ParameterDecl
	 *     (rule start) IdentifierList? (ambiguity) '('* TypeName (rule start)
	 *     (rule start) MethodName '(' IdentifierList? (ambiguity) '('* '[' TypeLitLinha+=TypeLitLinha
	 *     (rule start) MethodName '(' IdentifierList? (ambiguity) '('* ChannelType+=ChannelType
	 *     (rule start) MethodName '(' IdentifierList? (ambiguity) '('* FunctionType+=FunctionType
	 *     (rule start) MethodName '(' IdentifierList? (ambiguity) '('* InterfaceType+=InterfaceType
	 *     (rule start) MethodName '(' IdentifierList? (ambiguity) '('* MapType+=MapType
	 *     (rule start) MethodName '(' IdentifierList? (ambiguity) '('* PointerType+=PointerType
	 *     (rule start) MethodName '(' IdentifierList? (ambiguity) '('* StructType+=StructType
	 *     (rule start) MethodName '(' IdentifierList? (ambiguity) '('* TypeName ',' ParameterDecl+=ParameterDecl
	 */
	protected void emit_ParameterDecl_FullStopFullStopFullStopKeyword_1_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     IdentifierList?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) '(' (ambiguity) '...'? '('* '[' TypeLitLinha+=TypeLitLinha
	 *     (rule start) '(' (ambiguity) '...'? '('* ChannelType+=ChannelType
	 *     (rule start) '(' (ambiguity) '...'? '('* FunctionType+=FunctionType
	 *     (rule start) '(' (ambiguity) '...'? '('* InterfaceType+=InterfaceType
	 *     (rule start) '(' (ambiguity) '...'? '('* MapType+=MapType
	 *     (rule start) '(' (ambiguity) '...'? '('* PointerType+=PointerType
	 *     (rule start) '(' (ambiguity) '...'? '('* StructType+=StructType
	 *     (rule start) '(' (ambiguity) '...'? '('* TypeName ',' ParameterDecl+=ParameterDecl
	 *     (rule start) 'func' '(' (ambiguity) '...'? '('* '[' TypeLitLinha+=TypeLitLinha
	 *     (rule start) 'func' '(' (ambiguity) '...'? '('* ChannelType+=ChannelType
	 *     (rule start) 'func' '(' (ambiguity) '...'? '('* FunctionType+=FunctionType
	 *     (rule start) 'func' '(' (ambiguity) '...'? '('* InterfaceType+=InterfaceType
	 *     (rule start) 'func' '(' (ambiguity) '...'? '('* MapType+=MapType
	 *     (rule start) 'func' '(' (ambiguity) '...'? '('* PointerType+=PointerType
	 *     (rule start) 'func' '(' (ambiguity) '...'? '('* StructType+=StructType
	 *     (rule start) 'func' '(' (ambiguity) '...'? '('* TypeName ',' ParameterDecl+=ParameterDecl
	 *     (rule start) 'func' FunctionName '(' (ambiguity) '...'? '('* '[' TypeLitLinha+=TypeLitLinha
	 *     (rule start) 'func' FunctionName '(' (ambiguity) '...'? '('* ChannelType+=ChannelType
	 *     (rule start) 'func' FunctionName '(' (ambiguity) '...'? '('* FunctionType+=FunctionType
	 *     (rule start) 'func' FunctionName '(' (ambiguity) '...'? '('* InterfaceType+=InterfaceType
	 *     (rule start) 'func' FunctionName '(' (ambiguity) '...'? '('* MapType+=MapType
	 *     (rule start) 'func' FunctionName '(' (ambiguity) '...'? '('* PointerType+=PointerType
	 *     (rule start) 'func' FunctionName '(' (ambiguity) '...'? '('* StructType+=StructType
	 *     (rule start) 'func' FunctionName '(' (ambiguity) '...'? '('* TypeName ',' ParameterDecl+=ParameterDecl
	 *     (rule start) 'func' FunctionName? '(' (ambiguity) '...'? '('* TypeName ',' ParameterDecl+=ParameterDecl
	 *     (rule start) 'interface' '{' MethodName '(' (ambiguity) '...'? '('* '[' TypeLitLinha+=TypeLitLinha
	 *     (rule start) 'interface' '{' MethodName '(' (ambiguity) '...'? '('* ChannelType+=ChannelType
	 *     (rule start) 'interface' '{' MethodName '(' (ambiguity) '...'? '('* FunctionType+=FunctionType
	 *     (rule start) 'interface' '{' MethodName '(' (ambiguity) '...'? '('* InterfaceType+=InterfaceType
	 *     (rule start) 'interface' '{' MethodName '(' (ambiguity) '...'? '('* MapType+=MapType
	 *     (rule start) 'interface' '{' MethodName '(' (ambiguity) '...'? '('* PointerType+=PointerType
	 *     (rule start) 'interface' '{' MethodName '(' (ambiguity) '...'? '('* StructType+=StructType
	 *     (rule start) 'interface' '{' MethodName '(' (ambiguity) '...'? '('* TypeName ',' ParameterDecl+=ParameterDecl
	 *     (rule start) (ambiguity) '...'? '('* '[' TypeLitLinha+=TypeLitLinha
	 *     (rule start) (ambiguity) '...'? '('* ChannelType+=ChannelType
	 *     (rule start) (ambiguity) '...'? '('* FunctionType+=FunctionType
	 *     (rule start) (ambiguity) '...'? '('* InterfaceType+=InterfaceType
	 *     (rule start) (ambiguity) '...'? '('* MapType+=MapType
	 *     (rule start) (ambiguity) '...'? '('* PointerType+=PointerType
	 *     (rule start) (ambiguity) '...'? '('* StructType+=StructType
	 *     (rule start) (ambiguity) '...'? '('* TypeName ',' ParameterDecl+=ParameterDecl
	 *     (rule start) (ambiguity) '...'? '('* TypeName (rule start)
	 *     (rule start) FunctionName? '(' (ambiguity) '...'? '('* '[' TypeLitLinha+=TypeLitLinha
	 *     (rule start) FunctionName? '(' (ambiguity) '...'? '('* ChannelType+=ChannelType
	 *     (rule start) FunctionName? '(' (ambiguity) '...'? '('* FunctionType+=FunctionType
	 *     (rule start) FunctionName? '(' (ambiguity) '...'? '('* InterfaceType+=InterfaceType
	 *     (rule start) FunctionName? '(' (ambiguity) '...'? '('* MapType+=MapType
	 *     (rule start) FunctionName? '(' (ambiguity) '...'? '('* PointerType+=PointerType
	 *     (rule start) FunctionName? '(' (ambiguity) '...'? '('* StructType+=StructType
	 *     (rule start) FunctionName? '(' (ambiguity) '...'? '('* TypeName ',' ParameterDecl+=ParameterDecl
	 *     (rule start) MethodName '(' (ambiguity) '...'? '('* '[' TypeLitLinha+=TypeLitLinha
	 *     (rule start) MethodName '(' (ambiguity) '...'? '('* ChannelType+=ChannelType
	 *     (rule start) MethodName '(' (ambiguity) '...'? '('* FunctionType+=FunctionType
	 *     (rule start) MethodName '(' (ambiguity) '...'? '('* InterfaceType+=InterfaceType
	 *     (rule start) MethodName '(' (ambiguity) '...'? '('* MapType+=MapType
	 *     (rule start) MethodName '(' (ambiguity) '...'? '('* PointerType+=PointerType
	 *     (rule start) MethodName '(' (ambiguity) '...'? '('* StructType+=StructType
	 *     (rule start) MethodName '(' (ambiguity) '...'? '('* TypeName ',' ParameterDecl+=ParameterDecl
	 */
	protected void emit_ParameterDecl_IdentifierListParserRuleCall_0_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     (
	  *         (
	  *             'func' 
	  *             FunctionName? 
	  *             '(' 
	  *             IdentifierList? 
	  *             '...'? 
	  *             '('*
	  *         ) | 
	  *         ('var' '('? IdentifierList '('*)
	  *     )
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) TypeName '=' ExpressionList+=ExpressionList
	 */
	protected void emit_ParameterDecl_Parameters_TopLevelDecl_Type_VarDecl_VarSpec_topLevelDeclLinha___FuncKeyword_1_0_FunctionNameParserRuleCall_0_0_q_LeftParenthesisKeyword_0_IdentifierListParserRuleCall_0_q_FullStopFullStopFullStopKeyword_1_q_LeftParenthesisKeyword_2_0_a___or___VarKeyword_0_LeftParenthesisKeyword_1_1_0_q_IdentifierListParserRuleCall_0_LeftParenthesisKeyword_2_0_a__(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ('('+ | ('(' IdentifierList? '...'? '('+))?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) TypeName ',' ParameterDecl+=ParameterDecl
	 */
	protected void emit_ParameterDecl_Parameters_Type___LeftParenthesisKeyword_2_0_p_or___LeftParenthesisKeyword_0_IdentifierListParserRuleCall_0_q_FullStopFullStopFullStopKeyword_1_q_LeftParenthesisKeyword_2_0_p____q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ('(' IdentifierList? '...'?)?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) '('* '[' TypeLitLinha+=TypeLitLinha
	 *     (rule start) (ambiguity) '('* ChannelType+=ChannelType
	 *     (rule start) (ambiguity) '('* FunctionType+=FunctionType
	 *     (rule start) (ambiguity) '('* InterfaceType+=InterfaceType
	 *     (rule start) (ambiguity) '('* MapType+=MapType
	 *     (rule start) (ambiguity) '('* PointerType+=PointerType
	 *     (rule start) (ambiguity) '('* StructType+=StructType
	 */
	protected void emit_ParameterDecl_Parameters___LeftParenthesisKeyword_0_IdentifierListParserRuleCall_0_q_FullStopFullStopFullStopKeyword_1_q__q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ','?
	 *
	 * This ambiguous syntax occurs at:
	 *     ChannelType+=ChannelType (ambiguity) ')' ';' '}' (rule end)
	 *     ChannelType+=ChannelType (ambiguity) ')' (rule end)
	 *     ChannelType+=ChannelType (ambiguity) ')' FunctionBody+=FunctionBody
	 *     ChannelType+=ChannelType (ambiguity) ')' MethodName Signature+=Signature
	 *     ChannelType+=ChannelType (ambiguity) ')' Result+=Result
	 *     FunctionType+=FunctionType (ambiguity) ')' ';' '}' (rule end)
	 *     FunctionType+=FunctionType (ambiguity) ')' (rule end)
	 *     FunctionType+=FunctionType (ambiguity) ')' FunctionBody+=FunctionBody
	 *     FunctionType+=FunctionType (ambiguity) ')' MethodName Signature+=Signature
	 *     FunctionType+=FunctionType (ambiguity) ')' Result+=Result
	 *     InterfaceType+=InterfaceType (ambiguity) ')' ';' '}' (rule end)
	 *     InterfaceType+=InterfaceType (ambiguity) ')' (rule end)
	 *     InterfaceType+=InterfaceType (ambiguity) ')' FunctionBody+=FunctionBody
	 *     InterfaceType+=InterfaceType (ambiguity) ')' MethodName Signature+=Signature
	 *     InterfaceType+=InterfaceType (ambiguity) ')' Result+=Result
	 *     MapType+=MapType (ambiguity) ')' ';' '}' (rule end)
	 *     MapType+=MapType (ambiguity) ')' (rule end)
	 *     MapType+=MapType (ambiguity) ')' FunctionBody+=FunctionBody
	 *     MapType+=MapType (ambiguity) ')' MethodName Signature+=Signature
	 *     MapType+=MapType (ambiguity) ')' Result+=Result
	 *     ParameterDecl+=ParameterDecl (ambiguity) ')' ';' '}' (rule end)
	 *     ParameterDecl+=ParameterDecl (ambiguity) ')' ';' (rule end)
	 *     ParameterDecl+=ParameterDecl (ambiguity) ')' (rule end)
	 *     ParameterDecl+=ParameterDecl (ambiguity) ')' FunctionBody+=FunctionBody
	 *     ParameterDecl+=ParameterDecl (ambiguity) ')' MethodName Signature+=Signature
	 *     ParameterDecl+=ParameterDecl (ambiguity) ')' Result+=Result
	 *     PointerType+=PointerType (ambiguity) ')' ';' '}' (rule end)
	 *     PointerType+=PointerType (ambiguity) ')' (rule end)
	 *     PointerType+=PointerType (ambiguity) ')' FunctionBody+=FunctionBody
	 *     PointerType+=PointerType (ambiguity) ')' MethodName Signature+=Signature
	 *     PointerType+=PointerType (ambiguity) ')' Result+=Result
	 *     StructType+=StructType (ambiguity) ')' ';' '}' (rule end)
	 *     StructType+=StructType (ambiguity) ')' (rule end)
	 *     StructType+=StructType (ambiguity) ')' FunctionBody+=FunctionBody
	 *     StructType+=StructType (ambiguity) ')' MethodName Signature+=Signature
	 *     StructType+=StructType (ambiguity) ')' Result+=Result
	 *     TypeLitLinha+=TypeLitLinha (ambiguity) ')' ';' '}' (rule end)
	 *     TypeLitLinha+=TypeLitLinha (ambiguity) ')' (rule end)
	 *     TypeLitLinha+=TypeLitLinha (ambiguity) ')' FunctionBody+=FunctionBody
	 *     TypeLitLinha+=TypeLitLinha (ambiguity) ')' MethodName Signature+=Signature
	 *     TypeLitLinha+=TypeLitLinha (ambiguity) ')' Result+=Result
	 */
	protected void emit_Parameters_CommaKeyword_1_1_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ('('* TypeName) | ('(' ')')
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) (rule start)
	 */
	protected void emit_Parameters_Type___LeftParenthesisKeyword_0_RightParenthesisKeyword_2___or___LeftParenthesisKeyword_2_0_a_TypeNameParserRuleCall_0__(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     (IdentifierList ':=')?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) 'range' (rule start)
	 */
	protected void emit_RangeClause___IdentifierListParserRuleCall_0_1_0_ColonEqualsSignKeyword_0_1_1__q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     (IdentifierList ':=')?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) 'case' (ambiguity) RecvExpr+=RecvExpr
	 *     (rule start) (ambiguity) RecvExpr+=RecvExpr
	 */
	protected void emit_RecvStmt___IdentifierListParserRuleCall_0_1_0_ColonEqualsSignKeyword_0_1_1__q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     (IdentifierList ':=')?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) 'for' (ambiguity) UnaryExpr ExpressionLinha+=ExpressionLinha
	 *     (rule start) 'if' (ambiguity) UnaryExpr ExpressionLinha+=ExpressionLinha
	 *     (rule start) 'switch' (ambiguity) UnaryExpr ExpressionLinha+=ExpressionLinha
	 *     (rule start) (ambiguity) UnaryExpr ExpressionLinha+=ExpressionLinha
	 */
	protected void emit_ShortVarDecl___IdentifierListParserRuleCall_0_ColonEqualsSignKeyword_1__q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     EmptyStmt?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) 'for' (ambiguity) ';' ';' (rule start)
	 *     (rule start) 'for' (ambiguity) ';' ';' PostStmt+=PostStmt
	 *     (rule start) 'for' (ambiguity) ';' Condition+=Condition
	 *     (rule start) (ambiguity) ';' ';' (rule start)
	 *     (rule start) (ambiguity) ';' ';' PostStmt+=PostStmt
	 *     (rule start) (ambiguity) ';' Condition+=Condition
	 */
	protected void emit_SimpleStmt_EmptyStmtParserRuleCall_0_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     (EmptyStmt ';')?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) 'switch' (ambiguity) switch_stmt_linha+=switch_stmt_linha
	 */
	protected void emit_SimpleStmt_SwitchStmt___EmptyStmtParserRuleCall_0_SemicolonKeyword_1_1__q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     (ImportDecl ';')?
	 *
	 * This ambiguous syntax occurs at:
	 *     (
	 *         (rule start) 
	 *         PackageClause 
	 *         ';' 
	 *         (ambiguity) 
	 *         (('func' FunctionName? '(' IdentifierList? '...'?) | ('const' '('? IdentifierList) | ('type' '('? ((identifier '=') | identifier)) | ('var' '('? IdentifierList)) 
	 *         '('* 
	 *         '[' 
	 *         TypeLitLinha+=TypeLitLinha
	 *     )
	 *     (
	 *         (rule start) 
	 *         PackageClause 
	 *         ';' 
	 *         (ambiguity) 
	 *         (('func' FunctionName? '(' IdentifierList? '...'?) | ('const' '('? IdentifierList) | ('type' '('? ((identifier '=') | identifier)) | ('var' '('? IdentifierList)) 
	 *         '('* 
	 *         ChannelType+=ChannelType
	 *     )
	 *     (
	 *         (rule start) 
	 *         PackageClause 
	 *         ';' 
	 *         (ambiguity) 
	 *         (('func' FunctionName? '(' IdentifierList? '...'?) | ('const' '('? IdentifierList) | ('type' '('? ((identifier '=') | identifier)) | ('var' '('? IdentifierList)) 
	 *         '('* 
	 *         FunctionType+=FunctionType
	 *     )
	 *     (
	 *         (rule start) 
	 *         PackageClause 
	 *         ';' 
	 *         (ambiguity) 
	 *         (('func' FunctionName? '(' IdentifierList? '...'?) | ('const' '('? IdentifierList) | ('type' '('? ((identifier '=') | identifier)) | ('var' '('? IdentifierList)) 
	 *         '('* 
	 *         InterfaceType+=InterfaceType
	 *     )
	 *     (
	 *         (rule start) 
	 *         PackageClause 
	 *         ';' 
	 *         (ambiguity) 
	 *         (('func' FunctionName? '(' IdentifierList? '...'?) | ('const' '('? IdentifierList) | ('type' '('? ((identifier '=') | identifier)) | ('var' '('? IdentifierList)) 
	 *         '('* 
	 *         MapType+=MapType
	 *     )
	 *     (
	 *         (rule start) 
	 *         PackageClause 
	 *         ';' 
	 *         (ambiguity) 
	 *         (('func' FunctionName? '(' IdentifierList? '...'?) | ('const' '('? IdentifierList) | ('type' '('? ((identifier '=') | identifier)) | ('var' '('? IdentifierList)) 
	 *         '('* 
	 *         PointerType+=PointerType
	 *     )
	 *     (
	 *         (rule start) 
	 *         PackageClause 
	 *         ';' 
	 *         (ambiguity) 
	 *         (('func' FunctionName? '(' IdentifierList? '...'?) | ('const' '('? IdentifierList) | ('type' '('? ((identifier '=') | identifier)) | ('var' '('? IdentifierList)) 
	 *         '('* 
	 *         StructType+=StructType
	 *     )
	 *     (
	 *         (rule start) 
	 *         PackageClause 
	 *         ';' 
	 *         (ambiguity) 
	 *         (((('func' FunctionName? '(' IdentifierList? '...'?) | ('type' '('? ((identifier '=') | identifier)) | ('var' '('? IdentifierList)) '('+ TypeName) | ('const' '('? IdentifierList)) 
	 *         '=' 
	 *         ExpressionList+=ExpressionList
	 *     )
	 *     (rule start) PackageClause ';' (ambiguity) 'func' FunctionName '(' ')' Result+=Result
	 *     (rule start) PackageClause ';' (ambiguity) 'func' FunctionName? '(' ')' FunctionBody+=FunctionBody
	 *     (rule start) PackageClause ';' (ambiguity) 'func' FunctionName? '(' ')' MethodName Signature+=Signature
	 *     (rule start) PackageClause ';' (ambiguity) 'var' '('? IdentifierList '=' UnaryExpr ExpressionLinha+=ExpressionLinha
	 */
	protected void emit_SouceFile___ImportDeclParserRuleCall_2_0_SemicolonKeyword_2_1__q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     '('?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) 'type' (ambiguity) ((identifier '=') | identifier) '('* '[' TypeLitLinha+=TypeLitLinha
	 *     (rule start) 'type' (ambiguity) ((identifier '=') | identifier) '('* ChannelType+=ChannelType
	 *     (rule start) 'type' (ambiguity) ((identifier '=') | identifier) '('* FunctionType+=FunctionType
	 *     (rule start) 'type' (ambiguity) ((identifier '=') | identifier) '('* InterfaceType+=InterfaceType
	 *     (rule start) 'type' (ambiguity) ((identifier '=') | identifier) '('* MapType+=MapType
	 *     (rule start) 'type' (ambiguity) ((identifier '=') | identifier) '('* PointerType+=PointerType
	 *     (rule start) 'type' (ambiguity) ((identifier '=') | identifier) '('* StructType+=StructType
	 */
	protected void emit_TypeDecl_LeftParenthesisKeyword_1_1_0_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     (identifier ':=')?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) 'struct' '{' FieldDecl+=FieldDecl
	 *     (rule start) (ambiguity) ('(' | '[') UnaryExpr ExpressionLinha+=ExpressionLinha
	 *     (rule start) (ambiguity) (('map' '[') | ('[' ']') | ('func' '(' IdentifierList? '...'?))? '('* '[' TypeLitLinha+=TypeLitLinha
	 *     (rule start) (ambiguity) (('map' '[') | ('[' ']') | ('func' '(' IdentifierList? '...'?))? '('* ChannelType+=ChannelType
	 *     (rule start) (ambiguity) (('map' '[') | ('[' ']') | ('func' '(' IdentifierList? '...'?))? '('* FunctionType+=FunctionType
	 *     (rule start) (ambiguity) (('map' '[') | ('[' ']') | ('func' '(' IdentifierList? '...'?))? '('* InterfaceType+=InterfaceType
	 *     (rule start) (ambiguity) (('map' '[') | ('[' ']') | ('func' '(' IdentifierList? '...'?))? '('* MapType+=MapType
	 *     (rule start) (ambiguity) (('map' '[') | ('[' ']') | ('func' '(' IdentifierList? '...'?))? '('* PointerType+=PointerType
	 *     (rule start) (ambiguity) (('map' '[') | ('[' ']') | ('func' '(' IdentifierList? '...'?))? '('* StructType+=StructType
	 *     (rule start) (ambiguity) (((('map' '[') | ('[' ']'))? '('*) | ('func' '(' IdentifierList? '...'? '('*)) TypeName ',' ParameterDecl+=ParameterDecl
	 *     (rule start) (ambiguity) (((('map' '[') | ('[' ']'))? '('+ TypeName ','?) | ('func' '(')) ')' FunctionBody+=FunctionBody
	 *     (rule start) (ambiguity) (((('map' '[') | ('[' ']'))? '('+ TypeName ','?) | ('func' '(')) ')' Result+=Result
	 *     (rule start) (ambiguity) (OperandName | BasicLit) PrimaryExprLinha+=PrimaryExprLinha
	 */
	protected void emit_TypeSwitchGuard___IdentifierParserRuleCall_0_0_ColonEqualsSignKeyword_0_1__q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     '('*
	 *
	 * This ambiguous syntax occurs at:
	 *     (
	 *         (rule start) 
	 *         (('func' FunctionName? '(' IdentifierList? '...'?) | ('const' '('? IdentifierList) | ('type' '('? ((identifier '=') | identifier)) | ('var' '('? IdentifierList)) 
	 *         (ambiguity) 
	 *         '[' 
	 *         TypeLitLinha+=TypeLitLinha
	 *     )
	 *     (
	 *         (rule start) 
	 *         (('func' FunctionName? '(' IdentifierList? '...'?) | ('const' '('? IdentifierList) | ('type' '('? ((identifier '=') | identifier)) | ('var' '('? IdentifierList)) 
	 *         (ambiguity) 
	 *         ChannelType+=ChannelType
	 *     )
	 *     (
	 *         (rule start) 
	 *         (('func' FunctionName? '(' IdentifierList? '...'?) | ('const' '('? IdentifierList) | ('type' '('? ((identifier '=') | identifier)) | ('var' '('? IdentifierList)) 
	 *         (ambiguity) 
	 *         FunctionType+=FunctionType
	 *     )
	 *     (
	 *         (rule start) 
	 *         (('func' FunctionName? '(' IdentifierList? '...'?) | ('const' '('? IdentifierList) | ('type' '('? ((identifier '=') | identifier)) | ('var' '('? IdentifierList)) 
	 *         (ambiguity) 
	 *         InterfaceType+=InterfaceType
	 *     )
	 *     (
	 *         (rule start) 
	 *         (('func' FunctionName? '(' IdentifierList? '...'?) | ('const' '('? IdentifierList) | ('type' '('? ((identifier '=') | identifier)) | ('var' '('? IdentifierList)) 
	 *         (ambiguity) 
	 *         PointerType+=PointerType
	 *     )
	 *     (
	 *         (rule start) 
	 *         (('func' FunctionName? '(' IdentifierList? '...'?) | ('const' '('? IdentifierList) | ('type' '('? ((identifier '=') | identifier)) | ('var' '('? IdentifierList)) 
	 *         (ambiguity) 
	 *         StructType+=StructType
	 *     )
	 *     (
	 *         (rule start) 
	 *         PackageClause 
	 *         ';' 
	 *         (ImportDecl ';')? 
	 *         (('func' FunctionName? '(' IdentifierList? '...'?) | ('const' '('? IdentifierList) | ('type' '('? ((identifier '=') | identifier)) | ('var' '('? IdentifierList)) 
	 *         (ambiguity) 
	 *         '[' 
	 *         TypeLitLinha+=TypeLitLinha
	 *     )
	 *     (
	 *         (rule start) 
	 *         PackageClause 
	 *         ';' 
	 *         (ImportDecl ';')? 
	 *         (('func' FunctionName? '(' IdentifierList? '...'?) | ('const' '('? IdentifierList) | ('type' '('? ((identifier '=') | identifier)) | ('var' '('? IdentifierList)) 
	 *         (ambiguity) 
	 *         ChannelType+=ChannelType
	 *     )
	 *     (
	 *         (rule start) 
	 *         PackageClause 
	 *         ';' 
	 *         (ImportDecl ';')? 
	 *         (('func' FunctionName? '(' IdentifierList? '...'?) | ('const' '('? IdentifierList) | ('type' '('? ((identifier '=') | identifier)) | ('var' '('? IdentifierList)) 
	 *         (ambiguity) 
	 *         FunctionType+=FunctionType
	 *     )
	 *     (
	 *         (rule start) 
	 *         PackageClause 
	 *         ';' 
	 *         (ImportDecl ';')? 
	 *         (('func' FunctionName? '(' IdentifierList? '...'?) | ('const' '('? IdentifierList) | ('type' '('? ((identifier '=') | identifier)) | ('var' '('? IdentifierList)) 
	 *         (ambiguity) 
	 *         InterfaceType+=InterfaceType
	 *     )
	 *     (
	 *         (rule start) 
	 *         PackageClause 
	 *         ';' 
	 *         (ImportDecl ';')? 
	 *         (('func' FunctionName? '(' IdentifierList? '...'?) | ('const' '('? IdentifierList) | ('type' '('? ((identifier '=') | identifier)) | ('var' '('? IdentifierList)) 
	 *         (ambiguity) 
	 *         MapType+=MapType
	 *     )
	 *     (
	 *         (rule start) 
	 *         PackageClause 
	 *         ';' 
	 *         (ImportDecl ';')? 
	 *         (('func' FunctionName? '(' IdentifierList? '...'?) | ('const' '('? IdentifierList) | ('type' '('? ((identifier '=') | identifier)) | ('var' '('? IdentifierList)) 
	 *         (ambiguity) 
	 *         PointerType+=PointerType
	 *     )
	 *     (
	 *         (rule start) 
	 *         PackageClause 
	 *         ';' 
	 *         (ImportDecl ';')? 
	 *         (('func' FunctionName? '(' IdentifierList? '...'?) | ('const' '('? IdentifierList) | ('type' '('? ((identifier '=') | identifier)) | ('var' '('? IdentifierList)) 
	 *         (ambiguity) 
	 *         StructType+=StructType
	 *     )
	 *     (rule start) '(' (ambiguity) '[' TypeLitLinha+=TypeLitLinha
	 *     (rule start) '(' (ambiguity) ChannelType+=ChannelType
	 *     (rule start) '(' (ambiguity) FunctionType+=FunctionType
	 *     (rule start) '(' (ambiguity) InterfaceType+=InterfaceType
	 *     (rule start) '(' (ambiguity) MapType+=MapType
	 *     (rule start) '(' (ambiguity) PointerType+=PointerType
	 *     (rule start) '(' (ambiguity) StructType+=StructType
	 *     (rule start) '(' (ambiguity) TypeName ',' ExpressionList+=ExpressionList
	 *     (rule start) '(' IdentifierList? '...'? (ambiguity) '[' TypeLitLinha+=TypeLitLinha
	 *     (rule start) '(' IdentifierList? '...'? (ambiguity) ChannelType+=ChannelType
	 *     (rule start) '(' IdentifierList? '...'? (ambiguity) FunctionType+=FunctionType
	 *     (rule start) '(' IdentifierList? '...'? (ambiguity) InterfaceType+=InterfaceType
	 *     (rule start) '(' IdentifierList? '...'? (ambiguity) MapType+=MapType
	 *     (rule start) '(' IdentifierList? '...'? (ambiguity) PointerType+=PointerType
	 *     (rule start) '(' IdentifierList? '...'? (ambiguity) StructType+=StructType
	 *     (rule start) '(' IdentifierList? '...'? (ambiguity) TypeName ',' ParameterDecl+=ParameterDecl
	 *     (rule start) '*' (ambiguity) '[' TypeLitLinha+=TypeLitLinha
	 *     (rule start) '*' (ambiguity) ChannelType+=ChannelType
	 *     (rule start) '*' (ambiguity) FunctionType+=FunctionType
	 *     (rule start) '*' (ambiguity) InterfaceType+=InterfaceType
	 *     (rule start) '*' (ambiguity) MapType+=MapType
	 *     (rule start) '*' (ambiguity) PointerType+=PointerType
	 *     (rule start) '*' (ambiguity) StructType+=StructType
	 *     (rule start) '*' (ambiguity) TypeName (rule start)
	 *     (rule start) '.' '(' (ambiguity) '[' TypeLitLinha+=TypeLitLinha
	 *     (rule start) '.' '(' (ambiguity) ChannelType+=ChannelType
	 *     (rule start) '.' '(' (ambiguity) FunctionType+=FunctionType
	 *     (rule start) '.' '(' (ambiguity) InterfaceType+=InterfaceType
	 *     (rule start) '.' '(' (ambiguity) MapType+=MapType
	 *     (rule start) '.' '(' (ambiguity) PointerType+=PointerType
	 *     (rule start) '.' '(' (ambiguity) StructType+=StructType
	 *     (rule start) '.' '(' (ambiguity) TypeName ')' (rule start)
	 *     (rule start) ']' (ambiguity) '[' TypeLitLinha+=TypeLitLinha
	 *     (rule start) ']' (ambiguity) ChannelType+=ChannelType
	 *     (rule start) ']' (ambiguity) FunctionType+=FunctionType
	 *     (rule start) ']' (ambiguity) InterfaceType+=InterfaceType
	 *     (rule start) ']' (ambiguity) MapType+=MapType
	 *     (rule start) ']' (ambiguity) PointerType+=PointerType
	 *     (rule start) ']' (ambiguity) StructType+=StructType
	 *     (rule start) ']' (ambiguity) TypeName (rule start)
	 *     (rule start) 'case' (ambiguity) '[' TypeLitLinha+=TypeLitLinha
	 *     (rule start) 'case' (ambiguity) ChannelType+=ChannelType
	 *     (rule start) 'case' (ambiguity) FunctionType+=FunctionType
	 *     (rule start) 'case' (ambiguity) InterfaceType+=InterfaceType
	 *     (rule start) 'case' (ambiguity) MapType+=MapType
	 *     (rule start) 'case' (ambiguity) PointerType+=PointerType
	 *     (rule start) 'case' (ambiguity) StructType+=StructType
	 *     (rule start) 'case' (ambiguity) TypeName ',' Type+=Type
	 *     (rule start) 'const' '('? IdentifierList (ambiguity) '[' TypeLitLinha+=TypeLitLinha
	 *     (rule start) 'const' '('? IdentifierList (ambiguity) ChannelType+=ChannelType
	 *     (rule start) 'const' '('? IdentifierList (ambiguity) FunctionType+=FunctionType
	 *     (rule start) 'const' '('? IdentifierList (ambiguity) InterfaceType+=InterfaceType
	 *     (rule start) 'const' '('? IdentifierList (ambiguity) MapType+=MapType
	 *     (rule start) 'const' '('? IdentifierList (ambiguity) PointerType+=PointerType
	 *     (rule start) 'const' '('? IdentifierList (ambiguity) StructType+=StructType
	 *     (rule start) 'func' '(' IdentifierList? '...'? (ambiguity) '[' TypeLitLinha+=TypeLitLinha
	 *     (rule start) 'func' '(' IdentifierList? '...'? (ambiguity) ChannelType+=ChannelType
	 *     (rule start) 'func' '(' IdentifierList? '...'? (ambiguity) FunctionType+=FunctionType
	 *     (rule start) 'func' '(' IdentifierList? '...'? (ambiguity) InterfaceType+=InterfaceType
	 *     (rule start) 'func' '(' IdentifierList? '...'? (ambiguity) MapType+=MapType
	 *     (rule start) 'func' '(' IdentifierList? '...'? (ambiguity) PointerType+=PointerType
	 *     (rule start) 'func' '(' IdentifierList? '...'? (ambiguity) StructType+=StructType
	 *     (rule start) 'func' '(' IdentifierList? '...'? (ambiguity) TypeName ',' ParameterDecl+=ParameterDecl
	 *     (rule start) 'func' FunctionName '(' IdentifierList? '...'? (ambiguity) '[' TypeLitLinha+=TypeLitLinha
	 *     (rule start) 'func' FunctionName '(' IdentifierList? '...'? (ambiguity) ChannelType+=ChannelType
	 *     (rule start) 'func' FunctionName '(' IdentifierList? '...'? (ambiguity) FunctionType+=FunctionType
	 *     (rule start) 'func' FunctionName '(' IdentifierList? '...'? (ambiguity) InterfaceType+=InterfaceType
	 *     (rule start) 'func' FunctionName '(' IdentifierList? '...'? (ambiguity) MapType+=MapType
	 *     (rule start) 'func' FunctionName '(' IdentifierList? '...'? (ambiguity) PointerType+=PointerType
	 *     (rule start) 'func' FunctionName '(' IdentifierList? '...'? (ambiguity) StructType+=StructType
	 *     (rule start) 'func' FunctionName '(' IdentifierList? '...'? (ambiguity) TypeName ',' ParameterDecl+=ParameterDecl
	 *     (rule start) 'func' FunctionName? '(' IdentifierList? '...'? (ambiguity) TypeName ',' ParameterDecl+=ParameterDecl
	 *     (rule start) 'interface' '{' MethodName '(' IdentifierList? '...'? (ambiguity) '[' TypeLitLinha+=TypeLitLinha
	 *     (rule start) 'interface' '{' MethodName '(' IdentifierList? '...'? (ambiguity) ChannelType+=ChannelType
	 *     (rule start) 'interface' '{' MethodName '(' IdentifierList? '...'? (ambiguity) FunctionType+=FunctionType
	 *     (rule start) 'interface' '{' MethodName '(' IdentifierList? '...'? (ambiguity) InterfaceType+=InterfaceType
	 *     (rule start) 'interface' '{' MethodName '(' IdentifierList? '...'? (ambiguity) MapType+=MapType
	 *     (rule start) 'interface' '{' MethodName '(' IdentifierList? '...'? (ambiguity) PointerType+=PointerType
	 *     (rule start) 'interface' '{' MethodName '(' IdentifierList? '...'? (ambiguity) StructType+=StructType
	 *     (rule start) 'interface' '{' MethodName '(' IdentifierList? '...'? (ambiguity) TypeName ',' ParameterDecl+=ParameterDecl
	 *     (rule start) 'map' '[' (ambiguity) '[' TypeLitLinha+=TypeLitLinha
	 *     (rule start) 'map' '[' (ambiguity) ChannelType+=ChannelType
	 *     (rule start) 'map' '[' (ambiguity) FunctionType+=FunctionType
	 *     (rule start) 'map' '[' (ambiguity) InterfaceType+=InterfaceType
	 *     (rule start) 'map' '[' (ambiguity) MapType+=MapType
	 *     (rule start) 'map' '[' (ambiguity) PointerType+=PointerType
	 *     (rule start) 'map' '[' (ambiguity) StructType+=StructType
	 *     (rule start) 'map' '[' (ambiguity) TypeName ']' ElementType+=ElementType
	 *     (rule start) 'type' '('? ((identifier '=') | identifier) (ambiguity) '[' TypeLitLinha+=TypeLitLinha
	 *     (rule start) 'type' '('? ((identifier '=') | identifier) (ambiguity) ChannelType+=ChannelType
	 *     (rule start) 'type' '('? ((identifier '=') | identifier) (ambiguity) FunctionType+=FunctionType
	 *     (rule start) 'type' '('? ((identifier '=') | identifier) (ambiguity) InterfaceType+=InterfaceType
	 *     (rule start) 'type' '('? ((identifier '=') | identifier) (ambiguity) MapType+=MapType
	 *     (rule start) 'type' '('? ((identifier '=') | identifier) (ambiguity) PointerType+=PointerType
	 *     (rule start) 'type' '('? ((identifier '=') | identifier) (ambiguity) StructType+=StructType
	 *     (rule start) 'var' '('? IdentifierList (ambiguity) '[' TypeLitLinha+=TypeLitLinha
	 *     (rule start) 'var' '('? IdentifierList (ambiguity) ChannelType+=ChannelType
	 *     (rule start) 'var' '('? IdentifierList (ambiguity) FunctionType+=FunctionType
	 *     (rule start) 'var' '('? IdentifierList (ambiguity) InterfaceType+=InterfaceType
	 *     (rule start) 'var' '('? IdentifierList (ambiguity) MapType+=MapType
	 *     (rule start) 'var' '('? IdentifierList (ambiguity) PointerType+=PointerType
	 *     (rule start) 'var' '('? IdentifierList (ambiguity) StructType+=StructType
	 *     (rule start) 'var' '('? IdentifierList (ambiguity) TypeName '=' ExpressionList+=ExpressionList
	 *     (rule start) ('(' IdentifierList? '...'?)? (ambiguity) '[' TypeLitLinha+=TypeLitLinha
	 *     (rule start) ('(' IdentifierList? '...'?)? (ambiguity) ChannelType+=ChannelType
	 *     (rule start) ('(' IdentifierList? '...'?)? (ambiguity) FunctionType+=FunctionType
	 *     (rule start) ('(' IdentifierList? '...'?)? (ambiguity) InterfaceType+=InterfaceType
	 *     (rule start) ('(' IdentifierList? '...'?)? (ambiguity) MapType+=MapType
	 *     (rule start) ('(' IdentifierList? '...'?)? (ambiguity) PointerType+=PointerType
	 *     (rule start) ('(' IdentifierList? '...'?)? (ambiguity) StructType+=StructType
	 *     (rule start) ('chan' | ('chan' '<-') | ('<-' 'chan')) (ambiguity) '[' TypeLitLinha+=TypeLitLinha
	 *     (rule start) ('chan' | ('chan' '<-') | ('<-' 'chan')) (ambiguity) ChannelType+=ChannelType
	 *     (rule start) ('chan' | ('chan' '<-') | ('<-' 'chan')) (ambiguity) FunctionType+=FunctionType
	 *     (rule start) ('chan' | ('chan' '<-') | ('<-' 'chan')) (ambiguity) InterfaceType+=InterfaceType
	 *     (rule start) ('chan' | ('chan' '<-') | ('<-' 'chan')) (ambiguity) MapType+=MapType
	 *     (rule start) ('chan' | ('chan' '<-') | ('<-' 'chan')) (ambiguity) PointerType+=PointerType
	 *     (rule start) ('chan' | ('chan' '<-') | ('<-' 'chan')) (ambiguity) StructType+=StructType
	 *     (rule start) ('chan' | ('chan' '<-') | ('<-' 'chan')) (ambiguity) TypeName (rule start)
	 *     (rule start) (('const' '('? IdentifierList) | ('type' '('? ((identifier '=') | identifier)) | ('var' '('? IdentifierList)) (ambiguity) '[' TypeLitLinha+=TypeLitLinha
	 *     (rule start) (('const' '('? IdentifierList) | ('type' '('? ((identifier '=') | identifier)) | ('var' '('? IdentifierList)) (ambiguity) ChannelType+=ChannelType
	 *     (rule start) (('const' '('? IdentifierList) | ('type' '('? ((identifier '=') | identifier)) | ('var' '('? IdentifierList)) (ambiguity) FunctionType+=FunctionType
	 *     (rule start) (('const' '('? IdentifierList) | ('type' '('? ((identifier '=') | identifier)) | ('var' '('? IdentifierList)) (ambiguity) InterfaceType+=InterfaceType
	 *     (rule start) (('const' '('? IdentifierList) | ('type' '('? ((identifier '=') | identifier)) | ('var' '('? IdentifierList)) (ambiguity) MapType+=MapType
	 *     (rule start) (('const' '('? IdentifierList) | ('type' '('? ((identifier '=') | identifier)) | ('var' '('? IdentifierList)) (ambiguity) PointerType+=PointerType
	 *     (rule start) (('const' '('? IdentifierList) | ('type' '('? ((identifier '=') | identifier)) | ('var' '('? IdentifierList)) (ambiguity) StructType+=StructType
	 *     (rule start) (('func' FunctionName? '(' IdentifierList? '...'?) | ('const' '('? IdentifierList) | ('type' '('? ((identifier '=') | identifier)) | ('var' '('? IdentifierList)) (ambiguity) MapType+=MapType
	 *     (rule start) (('map' '[') | ('[' ']') | ('func' '(' IdentifierList? '...'?))? (ambiguity) '[' TypeLitLinha+=TypeLitLinha
	 *     (rule start) (('map' '[') | ('[' ']') | ('func' '(' IdentifierList? '...'?))? (ambiguity) ChannelType+=ChannelType
	 *     (rule start) (('map' '[') | ('[' ']') | ('func' '(' IdentifierList? '...'?))? (ambiguity) FunctionType+=FunctionType
	 *     (rule start) (('map' '[') | ('[' ']') | ('func' '(' IdentifierList? '...'?))? (ambiguity) InterfaceType+=InterfaceType
	 *     (rule start) (('map' '[') | ('[' ']') | ('func' '(' IdentifierList? '...'?))? (ambiguity) MapType+=MapType
	 *     (rule start) (('map' '[') | ('[' ']') | ('func' '(' IdentifierList? '...'?))? (ambiguity) PointerType+=PointerType
	 *     (rule start) (('map' '[') | ('[' ']') | ('func' '(' IdentifierList? '...'?))? (ambiguity) StructType+=StructType
	 *     (rule start) (('map' '[') | ('[' ']'))? (ambiguity) '[' TypeLitLinha+=TypeLitLinha
	 *     (rule start) (('map' '[') | ('[' ']'))? (ambiguity) ChannelType+=ChannelType
	 *     (rule start) (('map' '[') | ('[' ']'))? (ambiguity) FunctionType+=FunctionType
	 *     (rule start) (('map' '[') | ('[' ']'))? (ambiguity) InterfaceType+=InterfaceType
	 *     (rule start) (('map' '[') | ('[' ']'))? (ambiguity) MapType+=MapType
	 *     (rule start) (('map' '[') | ('[' ']'))? (ambiguity) PointerType+=PointerType
	 *     (rule start) (('map' '[') | ('[' ']'))? (ambiguity) StructType+=StructType
	 *     (rule start) ((Selector (('map' '[') | ('[' ']') | ('func' '(' IdentifierList? '...'?))?) | ('.' '(') | '(') (ambiguity) '[' TypeLitLinha+=TypeLitLinha
	 *     (rule start) ((Selector (('map' '[') | ('[' ']') | ('func' '(' IdentifierList? '...'?))?) | ('.' '(') | '(') (ambiguity) ChannelType+=ChannelType
	 *     (rule start) ((Selector (('map' '[') | ('[' ']') | ('func' '(' IdentifierList? '...'?))?) | ('.' '(') | '(') (ambiguity) FunctionType+=FunctionType
	 *     (rule start) ((Selector (('map' '[') | ('[' ']') | ('func' '(' IdentifierList? '...'?))?) | ('.' '(') | '(') (ambiguity) InterfaceType+=InterfaceType
	 *     (rule start) ((Selector (('map' '[') | ('[' ']') | ('func' '(' IdentifierList? '...'?))?) | ('.' '(') | '(') (ambiguity) MapType+=MapType
	 *     (rule start) ((Selector (('map' '[') | ('[' ']') | ('func' '(' IdentifierList? '...'?))?) | ('.' '(') | '(') (ambiguity) PointerType+=PointerType
	 *     (rule start) ((Selector (('map' '[') | ('[' ']') | ('func' '(' IdentifierList? '...'?))?) | ('.' '(') | '(') (ambiguity) StructType+=StructType
	 *     (rule start) ((identifier '=') | identifier) (ambiguity) '[' TypeLitLinha+=TypeLitLinha
	 *     (rule start) ((identifier '=') | identifier) (ambiguity) ChannelType+=ChannelType
	 *     (rule start) ((identifier '=') | identifier) (ambiguity) FunctionType+=FunctionType
	 *     (rule start) ((identifier '=') | identifier) (ambiguity) InterfaceType+=InterfaceType
	 *     (rule start) ((identifier '=') | identifier) (ambiguity) MapType+=MapType
	 *     (rule start) ((identifier '=') | identifier) (ambiguity) PointerType+=PointerType
	 *     (rule start) ((identifier '=') | identifier) (ambiguity) StructType+=StructType
	 *     (rule start) ((identifier '=') | identifier) (ambiguity) TypeName (rule start)
	 *     (rule start) (ambiguity) '[' TypeLitLinha+=TypeLitLinha
	 *     (rule start) (ambiguity) ChannelType+=ChannelType
	 *     (rule start) (ambiguity) FunctionType+=FunctionType
	 *     (rule start) (ambiguity) InterfaceType+=InterfaceType
	 *     (rule start) (ambiguity) MapType+=MapType
	 *     (rule start) (ambiguity) PointerType+=PointerType
	 *     (rule start) (ambiguity) StructType+=StructType
	 *     (rule start) (ambiguity) TypeName '(' Expression+=Expression
	 *     (rule start) (ambiguity) TypeName ',' Type+=Type
	 *     (rule start) (ambiguity) TypeName '.' MethodName (rule start)
	 *     (rule start) (ambiguity) TypeName (rule start)
	 *     (rule start) (identifier ':=')? (('map' '[') | ('[' ']') | ('func' '(' IdentifierList? '...'?))? (ambiguity) '[' TypeLitLinha+=TypeLitLinha
	 *     (rule start) (identifier ':=')? (('map' '[') | ('[' ']') | ('func' '(' IdentifierList? '...'?))? (ambiguity) ChannelType+=ChannelType
	 *     (rule start) (identifier ':=')? (('map' '[') | ('[' ']') | ('func' '(' IdentifierList? '...'?))? (ambiguity) FunctionType+=FunctionType
	 *     (rule start) (identifier ':=')? (('map' '[') | ('[' ']') | ('func' '(' IdentifierList? '...'?))? (ambiguity) InterfaceType+=InterfaceType
	 *     (rule start) (identifier ':=')? (('map' '[') | ('[' ']') | ('func' '(' IdentifierList? '...'?))? (ambiguity) MapType+=MapType
	 *     (rule start) (identifier ':=')? (('map' '[') | ('[' ']') | ('func' '(' IdentifierList? '...'?))? (ambiguity) PointerType+=PointerType
	 *     (rule start) (identifier ':=')? (('map' '[') | ('[' ']') | ('func' '(' IdentifierList? '...'?))? (ambiguity) StructType+=StructType
	 *     (rule start) FunctionName? '(' IdentifierList? '...'? (ambiguity) '[' TypeLitLinha+=TypeLitLinha
	 *     (rule start) FunctionName? '(' IdentifierList? '...'? (ambiguity) ChannelType+=ChannelType
	 *     (rule start) FunctionName? '(' IdentifierList? '...'? (ambiguity) FunctionType+=FunctionType
	 *     (rule start) FunctionName? '(' IdentifierList? '...'? (ambiguity) InterfaceType+=InterfaceType
	 *     (rule start) FunctionName? '(' IdentifierList? '...'? (ambiguity) MapType+=MapType
	 *     (rule start) FunctionName? '(' IdentifierList? '...'? (ambiguity) PointerType+=PointerType
	 *     (rule start) FunctionName? '(' IdentifierList? '...'? (ambiguity) StructType+=StructType
	 *     (rule start) FunctionName? '(' IdentifierList? '...'? (ambiguity) TypeName ',' ParameterDecl+=ParameterDecl
	 *     (rule start) IdentifierList (ambiguity) '[' TypeLitLinha+=TypeLitLinha
	 *     (rule start) IdentifierList (ambiguity) ChannelType+=ChannelType
	 *     (rule start) IdentifierList (ambiguity) FunctionType+=FunctionType
	 *     (rule start) IdentifierList (ambiguity) InterfaceType+=InterfaceType
	 *     (rule start) IdentifierList (ambiguity) MapType+=MapType
	 *     (rule start) IdentifierList (ambiguity) PointerType+=PointerType
	 *     (rule start) IdentifierList (ambiguity) StructType+=StructType
	 *     (rule start) IdentifierList (ambiguity) TypeName '=' ExpressionList+=ExpressionList
	 *     (rule start) IdentifierList (ambiguity) TypeName (rule start)
	 *     (rule start) IdentifierList? '...'? (ambiguity) '[' TypeLitLinha+=TypeLitLinha
	 *     (rule start) IdentifierList? '...'? (ambiguity) ChannelType+=ChannelType
	 *     (rule start) IdentifierList? '...'? (ambiguity) FunctionType+=FunctionType
	 *     (rule start) IdentifierList? '...'? (ambiguity) InterfaceType+=InterfaceType
	 *     (rule start) IdentifierList? '...'? (ambiguity) MapType+=MapType
	 *     (rule start) IdentifierList? '...'? (ambiguity) PointerType+=PointerType
	 *     (rule start) IdentifierList? '...'? (ambiguity) StructType+=StructType
	 *     (rule start) IdentifierList? '...'? (ambiguity) TypeName ',' ParameterDecl+=ParameterDecl
	 *     (rule start) IdentifierList? '...'? (ambiguity) TypeName (rule start)
	 *     (rule start) MethodName '(' IdentifierList? '...'? (ambiguity) '[' TypeLitLinha+=TypeLitLinha
	 *     (rule start) MethodName '(' IdentifierList? '...'? (ambiguity) ChannelType+=ChannelType
	 *     (rule start) MethodName '(' IdentifierList? '...'? (ambiguity) FunctionType+=FunctionType
	 *     (rule start) MethodName '(' IdentifierList? '...'? (ambiguity) InterfaceType+=InterfaceType
	 *     (rule start) MethodName '(' IdentifierList? '...'? (ambiguity) MapType+=MapType
	 *     (rule start) MethodName '(' IdentifierList? '...'? (ambiguity) PointerType+=PointerType
	 *     (rule start) MethodName '(' IdentifierList? '...'? (ambiguity) StructType+=StructType
	 *     (rule start) MethodName '(' IdentifierList? '...'? (ambiguity) TypeName ',' ParameterDecl+=ParameterDecl
	 *     (rule start) identifier '=' (ambiguity) '[' TypeLitLinha+=TypeLitLinha
	 *     (rule start) identifier '=' (ambiguity) ChannelType+=ChannelType
	 *     (rule start) identifier '=' (ambiguity) FunctionType+=FunctionType
	 *     (rule start) identifier '=' (ambiguity) InterfaceType+=InterfaceType
	 *     (rule start) identifier '=' (ambiguity) MapType+=MapType
	 *     (rule start) identifier '=' (ambiguity) PointerType+=PointerType
	 *     (rule start) identifier '=' (ambiguity) StructType+=StructType
	 *     (rule start) identifier '=' (ambiguity) TypeName (rule start)
	 *     (rule start) identifier (ambiguity) '[' TypeLitLinha+=TypeLitLinha
	 *     (rule start) identifier (ambiguity) ChannelType+=ChannelType
	 *     (rule start) identifier (ambiguity) FunctionType+=FunctionType
	 *     (rule start) identifier (ambiguity) InterfaceType+=InterfaceType
	 *     (rule start) identifier (ambiguity) MapType+=MapType
	 *     (rule start) identifier (ambiguity) PointerType+=PointerType
	 *     (rule start) identifier (ambiguity) StructType+=StructType
	 *     (rule start) identifier (ambiguity) TypeName (rule start)
	 */
	protected void emit_Type_LeftParenthesisKeyword_2_0_a(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ('(' ')') | (IdentifierList '('* TypeName)
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) 'var' (ambiguity) (rule start)
	 */
	protected void emit_Type_VarDecl_VarSpec___IdentifierListParserRuleCall_0_LeftParenthesisKeyword_2_0_a_TypeNameParserRuleCall_0___or___LeftParenthesisKeyword_1_1_0_RightParenthesisKeyword_1_1_2__(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     '('?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) 'var' (ambiguity) IdentifierList '('* '[' TypeLitLinha+=TypeLitLinha
	 *     (rule start) 'var' (ambiguity) IdentifierList '('* ChannelType+=ChannelType
	 *     (rule start) 'var' (ambiguity) IdentifierList '('* FunctionType+=FunctionType
	 *     (rule start) 'var' (ambiguity) IdentifierList '('* InterfaceType+=InterfaceType
	 *     (rule start) 'var' (ambiguity) IdentifierList '('* MapType+=MapType
	 *     (rule start) 'var' (ambiguity) IdentifierList '('* PointerType+=PointerType
	 *     (rule start) 'var' (ambiguity) IdentifierList '('* StructType+=StructType
	 *     (rule start) 'var' (ambiguity) IdentifierList '('* TypeName '=' ExpressionList+=ExpressionList
	 *     (rule start) 'var' (ambiguity) IdentifierList '=' UnaryExpr ExpressionLinha+=ExpressionLinha
	 *     (rule start) PackageClause ';' (ImportDecl ';')? 'var' (ambiguity) IdentifierList '=' UnaryExpr ExpressionLinha+=ExpressionLinha
	 */
	protected void emit_VarDecl_LeftParenthesisKeyword_1_1_0_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     FunctionName?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) 'func' (ambiguity) '(' ')' FunctionBody+=FunctionBody
	 *     (rule start) 'func' (ambiguity) '(' ')' MethodName Signature+=Signature
	 *     (rule start) 'func' (ambiguity) '(' IdentifierList? '...'? '('* TypeName ',' ParameterDecl+=ParameterDecl
	 *     (rule start) (ambiguity) '(' ')' FunctionBody+=FunctionBody
	 *     (rule start) (ambiguity) '(' ')' MethodName Signature+=Signature
	 *     (rule start) (ambiguity) '(' IdentifierList? '...'? '('* '[' TypeLitLinha+=TypeLitLinha
	 *     (rule start) (ambiguity) '(' IdentifierList? '...'? '('* ChannelType+=ChannelType
	 *     (rule start) (ambiguity) '(' IdentifierList? '...'? '('* FunctionType+=FunctionType
	 *     (rule start) (ambiguity) '(' IdentifierList? '...'? '('* InterfaceType+=InterfaceType
	 *     (rule start) (ambiguity) '(' IdentifierList? '...'? '('* MapType+=MapType
	 *     (rule start) (ambiguity) '(' IdentifierList? '...'? '('* PointerType+=PointerType
	 *     (rule start) (ambiguity) '(' IdentifierList? '...'? '('* StructType+=StructType
	 *     (rule start) (ambiguity) '(' IdentifierList? '...'? '('* TypeName ',' ParameterDecl+=ParameterDecl
	 *     (rule start) PackageClause ';' (ImportDecl ';')? 'func' (ambiguity) '(' ')' FunctionBody+=FunctionBody
	 *     (rule start) PackageClause ';' (ImportDecl ';')? 'func' (ambiguity) '(' ')' MethodName Signature+=Signature
	 */
	protected void emit_topLevelDeclLinha_FunctionNameParserRuleCall_0_0_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
}
