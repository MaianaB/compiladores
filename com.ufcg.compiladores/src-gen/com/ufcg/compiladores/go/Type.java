/**
 * generated by Xtext 2.14.0
 */
package com.ufcg.compiladores.go;

import org.eclipse.emf.common.util.EList;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Type</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link com.ufcg.compiladores.go.Type#getExpression <em>Expression</em>}</li>
 *   <li>{@link com.ufcg.compiladores.go.Type#getType <em>Type</em>}</li>
 * </ul>
 *
 * @see com.ufcg.compiladores.go.GoPackage#getType()
 * @model
 * @generated
 */
public interface Type extends ElementType, FieldDecl, PointerType, Result, ParameterDecl, KeyType, ConstSpec, AliasDecl, TypeDef, VarSpec, TypeAssertion, Arguments, ReceiverType, Conversion, TypeList
{
  /**
   * Returns the value of the '<em><b>Expression</b></em>' containment reference list.
   * The list contents are of type {@link com.ufcg.compiladores.go.Expression}.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Expression</em>' containment reference list isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Expression</em>' containment reference list.
   * @see com.ufcg.compiladores.go.GoPackage#getType_Expression()
   * @model containment="true"
   * @generated
   */
  EList<Expression> getExpression();

  /**
   * Returns the value of the '<em><b>Type</b></em>' containment reference list.
   * The list contents are of type {@link com.ufcg.compiladores.go.Type}.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Type</em>' containment reference list isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Type</em>' containment reference list.
   * @see com.ufcg.compiladores.go.GoPackage#getType_Type()
   * @model containment="true"
   * @generated
   */
  EList<Type> getType();

} // Type
