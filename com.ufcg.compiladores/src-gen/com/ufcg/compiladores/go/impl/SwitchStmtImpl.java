/**
 * generated by Xtext 2.14.0
 */
package com.ufcg.compiladores.go.impl;

import com.ufcg.compiladores.go.GoPackage;
import com.ufcg.compiladores.go.SwitchStmt;
import com.ufcg.compiladores.go.switch_stmt_linha;

import java.util.Collection;

import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Switch Stmt</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link com.ufcg.compiladores.go.impl.SwitchStmtImpl#getSwitch_stmt_linha <em>Switch stmt linha</em>}</li>
 * </ul>
 *
 * @generated
 */
public class SwitchStmtImpl extends MinimalEObjectImpl.Container implements SwitchStmt
{
  /**
   * The cached value of the '{@link #getSwitch_stmt_linha() <em>Switch stmt linha</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSwitch_stmt_linha()
   * @generated
   * @ordered
   */
  protected EList<switch_stmt_linha> switch_stmt_linha;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SwitchStmtImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return GoPackage.Literals.SWITCH_STMT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<switch_stmt_linha> getSwitch_stmt_linha()
  {
    if (switch_stmt_linha == null)
    {
      switch_stmt_linha = new EObjectContainmentEList<switch_stmt_linha>(switch_stmt_linha.class, this, GoPackage.SWITCH_STMT__SWITCH_STMT_LINHA);
    }
    return switch_stmt_linha;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case GoPackage.SWITCH_STMT__SWITCH_STMT_LINHA:
        return ((InternalEList<?>)getSwitch_stmt_linha()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case GoPackage.SWITCH_STMT__SWITCH_STMT_LINHA:
        return getSwitch_stmt_linha();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case GoPackage.SWITCH_STMT__SWITCH_STMT_LINHA:
        getSwitch_stmt_linha().clear();
        getSwitch_stmt_linha().addAll((Collection<? extends switch_stmt_linha>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case GoPackage.SWITCH_STMT__SWITCH_STMT_LINHA:
        getSwitch_stmt_linha().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case GoPackage.SWITCH_STMT__SWITCH_STMT_LINHA:
        return switch_stmt_linha != null && !switch_stmt_linha.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //SwitchStmtImpl
