/**
 * generated by Xtext 2.14.0
 */
package com.ufcg.compiladores.go.impl;

import com.ufcg.compiladores.go.GoPackage;
import com.ufcg.compiladores.go.Index;
import com.ufcg.compiladores.go.PrimaryExprLinha;
import com.ufcg.compiladores.go.Slice;
import com.ufcg.compiladores.go.cochetes;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>cochetes</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link com.ufcg.compiladores.go.impl.cochetesImpl#getIndex <em>Index</em>}</li>
 *   <li>{@link com.ufcg.compiladores.go.impl.cochetesImpl#getPrimaryExprLinha <em>Primary Expr Linha</em>}</li>
 *   <li>{@link com.ufcg.compiladores.go.impl.cochetesImpl#getSlice <em>Slice</em>}</li>
 * </ul>
 *
 * @generated
 */
public class cochetesImpl extends MinimalEObjectImpl.Container implements cochetes
{
  /**
   * The cached value of the '{@link #getIndex() <em>Index</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIndex()
   * @generated
   * @ordered
   */
  protected Index index;

  /**
   * The cached value of the '{@link #getPrimaryExprLinha() <em>Primary Expr Linha</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPrimaryExprLinha()
   * @generated
   * @ordered
   */
  protected PrimaryExprLinha primaryExprLinha;

  /**
   * The cached value of the '{@link #getSlice() <em>Slice</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSlice()
   * @generated
   * @ordered
   */
  protected Slice slice;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected cochetesImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return GoPackage.Literals.COCHETES;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Index getIndex()
  {
    return index;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetIndex(Index newIndex, NotificationChain msgs)
  {
    Index oldIndex = index;
    index = newIndex;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GoPackage.COCHETES__INDEX, oldIndex, newIndex);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setIndex(Index newIndex)
  {
    if (newIndex != index)
    {
      NotificationChain msgs = null;
      if (index != null)
        msgs = ((InternalEObject)index).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GoPackage.COCHETES__INDEX, null, msgs);
      if (newIndex != null)
        msgs = ((InternalEObject)newIndex).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GoPackage.COCHETES__INDEX, null, msgs);
      msgs = basicSetIndex(newIndex, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GoPackage.COCHETES__INDEX, newIndex, newIndex));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public PrimaryExprLinha getPrimaryExprLinha()
  {
    return primaryExprLinha;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetPrimaryExprLinha(PrimaryExprLinha newPrimaryExprLinha, NotificationChain msgs)
  {
    PrimaryExprLinha oldPrimaryExprLinha = primaryExprLinha;
    primaryExprLinha = newPrimaryExprLinha;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GoPackage.COCHETES__PRIMARY_EXPR_LINHA, oldPrimaryExprLinha, newPrimaryExprLinha);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setPrimaryExprLinha(PrimaryExprLinha newPrimaryExprLinha)
  {
    if (newPrimaryExprLinha != primaryExprLinha)
    {
      NotificationChain msgs = null;
      if (primaryExprLinha != null)
        msgs = ((InternalEObject)primaryExprLinha).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GoPackage.COCHETES__PRIMARY_EXPR_LINHA, null, msgs);
      if (newPrimaryExprLinha != null)
        msgs = ((InternalEObject)newPrimaryExprLinha).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GoPackage.COCHETES__PRIMARY_EXPR_LINHA, null, msgs);
      msgs = basicSetPrimaryExprLinha(newPrimaryExprLinha, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GoPackage.COCHETES__PRIMARY_EXPR_LINHA, newPrimaryExprLinha, newPrimaryExprLinha));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Slice getSlice()
  {
    return slice;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetSlice(Slice newSlice, NotificationChain msgs)
  {
    Slice oldSlice = slice;
    slice = newSlice;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GoPackage.COCHETES__SLICE, oldSlice, newSlice);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setSlice(Slice newSlice)
  {
    if (newSlice != slice)
    {
      NotificationChain msgs = null;
      if (slice != null)
        msgs = ((InternalEObject)slice).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GoPackage.COCHETES__SLICE, null, msgs);
      if (newSlice != null)
        msgs = ((InternalEObject)newSlice).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GoPackage.COCHETES__SLICE, null, msgs);
      msgs = basicSetSlice(newSlice, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GoPackage.COCHETES__SLICE, newSlice, newSlice));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case GoPackage.COCHETES__INDEX:
        return basicSetIndex(null, msgs);
      case GoPackage.COCHETES__PRIMARY_EXPR_LINHA:
        return basicSetPrimaryExprLinha(null, msgs);
      case GoPackage.COCHETES__SLICE:
        return basicSetSlice(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case GoPackage.COCHETES__INDEX:
        return getIndex();
      case GoPackage.COCHETES__PRIMARY_EXPR_LINHA:
        return getPrimaryExprLinha();
      case GoPackage.COCHETES__SLICE:
        return getSlice();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case GoPackage.COCHETES__INDEX:
        setIndex((Index)newValue);
        return;
      case GoPackage.COCHETES__PRIMARY_EXPR_LINHA:
        setPrimaryExprLinha((PrimaryExprLinha)newValue);
        return;
      case GoPackage.COCHETES__SLICE:
        setSlice((Slice)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case GoPackage.COCHETES__INDEX:
        setIndex((Index)null);
        return;
      case GoPackage.COCHETES__PRIMARY_EXPR_LINHA:
        setPrimaryExprLinha((PrimaryExprLinha)null);
        return;
      case GoPackage.COCHETES__SLICE:
        setSlice((Slice)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case GoPackage.COCHETES__INDEX:
        return index != null;
      case GoPackage.COCHETES__PRIMARY_EXPR_LINHA:
        return primaryExprLinha != null;
      case GoPackage.COCHETES__SLICE:
        return slice != null;
    }
    return super.eIsSet(featureID);
  }

} //cochetesImpl
