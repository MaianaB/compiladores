/**
 * generated by Xtext 2.14.0
 */
package com.ufcg.compiladores.go.impl;

import com.ufcg.compiladores.go.GoPackage;
import com.ufcg.compiladores.go.ImportPath;
import com.ufcg.compiladores.go.string_lit;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Import Path</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link com.ufcg.compiladores.go.impl.ImportPathImpl#getString_lit <em>String lit</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ImportPathImpl extends MinimalEObjectImpl.Container implements ImportPath
{
  /**
   * The cached value of the '{@link #getString_lit() <em>String lit</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getString_lit()
   * @generated
   * @ordered
   */
  protected string_lit string_lit;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ImportPathImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return GoPackage.Literals.IMPORT_PATH;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public string_lit getString_lit()
  {
    return string_lit;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetString_lit(string_lit newString_lit, NotificationChain msgs)
  {
    string_lit oldString_lit = string_lit;
    string_lit = newString_lit;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GoPackage.IMPORT_PATH__STRING_LIT, oldString_lit, newString_lit);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setString_lit(string_lit newString_lit)
  {
    if (newString_lit != string_lit)
    {
      NotificationChain msgs = null;
      if (string_lit != null)
        msgs = ((InternalEObject)string_lit).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GoPackage.IMPORT_PATH__STRING_LIT, null, msgs);
      if (newString_lit != null)
        msgs = ((InternalEObject)newString_lit).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GoPackage.IMPORT_PATH__STRING_LIT, null, msgs);
      msgs = basicSetString_lit(newString_lit, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GoPackage.IMPORT_PATH__STRING_LIT, newString_lit, newString_lit));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case GoPackage.IMPORT_PATH__STRING_LIT:
        return basicSetString_lit(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case GoPackage.IMPORT_PATH__STRING_LIT:
        return getString_lit();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case GoPackage.IMPORT_PATH__STRING_LIT:
        setString_lit((string_lit)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case GoPackage.IMPORT_PATH__STRING_LIT:
        setString_lit((string_lit)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case GoPackage.IMPORT_PATH__STRING_LIT:
        return string_lit != null;
    }
    return super.eIsSet(featureID);
  }

} //ImportPathImpl
