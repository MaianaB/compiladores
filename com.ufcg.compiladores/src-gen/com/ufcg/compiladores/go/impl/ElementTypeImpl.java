/**
 * generated by Xtext 2.14.0
 */
package com.ufcg.compiladores.go.impl;

import com.ufcg.compiladores.go.ChannelType;
import com.ufcg.compiladores.go.CompositeLit;
import com.ufcg.compiladores.go.ElementType;
import com.ufcg.compiladores.go.GoPackage;
import com.ufcg.compiladores.go.Literal;
import com.ufcg.compiladores.go.LiteralType;
import com.ufcg.compiladores.go.LiteralTypeLinha;
import com.ufcg.compiladores.go.LiteralValue;
import com.ufcg.compiladores.go.Operand;
import com.ufcg.compiladores.go.PrimaryExpr;
import com.ufcg.compiladores.go.PrimaryExprLinha;
import com.ufcg.compiladores.go.TypeSwitchGuard;

import java.util.Collection;

import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.util.EDataTypeEList;
import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Element Type</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link com.ufcg.compiladores.go.impl.ElementTypeImpl#getIndexLinha <em>Index Linha</em>}</li>
 *   <li>{@link com.ufcg.compiladores.go.impl.ElementTypeImpl#getPrimaryExprLinha <em>Primary Expr Linha</em>}</li>
 *   <li>{@link com.ufcg.compiladores.go.impl.ElementTypeImpl#getLiteralValue <em>Literal Value</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ElementTypeImpl extends TypeLitLinhaImpl implements ElementType
{
  /**
   * The cached value of the '{@link #getIndexLinha() <em>Index Linha</em>}' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIndexLinha()
   * @generated
   * @ordered
   */
  protected EList<String> indexLinha;

  /**
   * The cached value of the '{@link #getPrimaryExprLinha() <em>Primary Expr Linha</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPrimaryExprLinha()
   * @generated
   * @ordered
   */
  protected EList<PrimaryExprLinha> primaryExprLinha;

  /**
   * The cached value of the '{@link #getLiteralValue() <em>Literal Value</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLiteralValue()
   * @generated
   * @ordered
   */
  protected EList<LiteralValue> literalValue;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ElementTypeImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return GoPackage.Literals.ELEMENT_TYPE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<String> getIndexLinha()
  {
    if (indexLinha == null)
    {
      indexLinha = new EDataTypeEList<String>(String.class, this, GoPackage.ELEMENT_TYPE__INDEX_LINHA);
    }
    return indexLinha;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<PrimaryExprLinha> getPrimaryExprLinha()
  {
    if (primaryExprLinha == null)
    {
      primaryExprLinha = new EObjectContainmentEList<PrimaryExprLinha>(PrimaryExprLinha.class, this, GoPackage.ELEMENT_TYPE__PRIMARY_EXPR_LINHA);
    }
    return primaryExprLinha;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<LiteralValue> getLiteralValue()
  {
    if (literalValue == null)
    {
      literalValue = new EObjectContainmentEList<LiteralValue>(LiteralValue.class, this, GoPackage.ELEMENT_TYPE__LITERAL_VALUE);
    }
    return literalValue;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case GoPackage.ELEMENT_TYPE__PRIMARY_EXPR_LINHA:
        return ((InternalEList<?>)getPrimaryExprLinha()).basicRemove(otherEnd, msgs);
      case GoPackage.ELEMENT_TYPE__LITERAL_VALUE:
        return ((InternalEList<?>)getLiteralValue()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case GoPackage.ELEMENT_TYPE__INDEX_LINHA:
        return getIndexLinha();
      case GoPackage.ELEMENT_TYPE__PRIMARY_EXPR_LINHA:
        return getPrimaryExprLinha();
      case GoPackage.ELEMENT_TYPE__LITERAL_VALUE:
        return getLiteralValue();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case GoPackage.ELEMENT_TYPE__INDEX_LINHA:
        getIndexLinha().clear();
        getIndexLinha().addAll((Collection<? extends String>)newValue);
        return;
      case GoPackage.ELEMENT_TYPE__PRIMARY_EXPR_LINHA:
        getPrimaryExprLinha().clear();
        getPrimaryExprLinha().addAll((Collection<? extends PrimaryExprLinha>)newValue);
        return;
      case GoPackage.ELEMENT_TYPE__LITERAL_VALUE:
        getLiteralValue().clear();
        getLiteralValue().addAll((Collection<? extends LiteralValue>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case GoPackage.ELEMENT_TYPE__INDEX_LINHA:
        getIndexLinha().clear();
        return;
      case GoPackage.ELEMENT_TYPE__PRIMARY_EXPR_LINHA:
        getPrimaryExprLinha().clear();
        return;
      case GoPackage.ELEMENT_TYPE__LITERAL_VALUE:
        getLiteralValue().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case GoPackage.ELEMENT_TYPE__INDEX_LINHA:
        return indexLinha != null && !indexLinha.isEmpty();
      case GoPackage.ELEMENT_TYPE__PRIMARY_EXPR_LINHA:
        return primaryExprLinha != null && !primaryExprLinha.isEmpty();
      case GoPackage.ELEMENT_TYPE__LITERAL_VALUE:
        return literalValue != null && !literalValue.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int eBaseStructuralFeatureID(int derivedFeatureID, Class<?> baseClass)
  {
    if (baseClass == ChannelType.class)
    {
      switch (derivedFeatureID)
      {
        default: return -1;
      }
    }
    if (baseClass == PrimaryExprLinha.class)
    {
      switch (derivedFeatureID)
      {
        case GoPackage.ELEMENT_TYPE__INDEX_LINHA: return GoPackage.PRIMARY_EXPR_LINHA__INDEX_LINHA;
        case GoPackage.ELEMENT_TYPE__PRIMARY_EXPR_LINHA: return GoPackage.PRIMARY_EXPR_LINHA__PRIMARY_EXPR_LINHA;
        default: return -1;
      }
    }
    if (baseClass == TypeSwitchGuard.class)
    {
      switch (derivedFeatureID)
      {
        default: return -1;
      }
    }
    if (baseClass == PrimaryExpr.class)
    {
      switch (derivedFeatureID)
      {
        default: return -1;
      }
    }
    if (baseClass == Operand.class)
    {
      switch (derivedFeatureID)
      {
        default: return -1;
      }
    }
    if (baseClass == Literal.class)
    {
      switch (derivedFeatureID)
      {
        default: return -1;
      }
    }
    if (baseClass == CompositeLit.class)
    {
      switch (derivedFeatureID)
      {
        default: return -1;
      }
    }
    if (baseClass == LiteralType.class)
    {
      switch (derivedFeatureID)
      {
        case GoPackage.ELEMENT_TYPE__LITERAL_VALUE: return GoPackage.LITERAL_TYPE__LITERAL_VALUE;
        default: return -1;
      }
    }
    if (baseClass == LiteralTypeLinha.class)
    {
      switch (derivedFeatureID)
      {
        default: return -1;
      }
    }
    return super.eBaseStructuralFeatureID(derivedFeatureID, baseClass);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int eDerivedStructuralFeatureID(int baseFeatureID, Class<?> baseClass)
  {
    if (baseClass == ChannelType.class)
    {
      switch (baseFeatureID)
      {
        default: return -1;
      }
    }
    if (baseClass == PrimaryExprLinha.class)
    {
      switch (baseFeatureID)
      {
        case GoPackage.PRIMARY_EXPR_LINHA__INDEX_LINHA: return GoPackage.ELEMENT_TYPE__INDEX_LINHA;
        case GoPackage.PRIMARY_EXPR_LINHA__PRIMARY_EXPR_LINHA: return GoPackage.ELEMENT_TYPE__PRIMARY_EXPR_LINHA;
        default: return -1;
      }
    }
    if (baseClass == TypeSwitchGuard.class)
    {
      switch (baseFeatureID)
      {
        default: return -1;
      }
    }
    if (baseClass == PrimaryExpr.class)
    {
      switch (baseFeatureID)
      {
        default: return -1;
      }
    }
    if (baseClass == Operand.class)
    {
      switch (baseFeatureID)
      {
        default: return -1;
      }
    }
    if (baseClass == Literal.class)
    {
      switch (baseFeatureID)
      {
        default: return -1;
      }
    }
    if (baseClass == CompositeLit.class)
    {
      switch (baseFeatureID)
      {
        default: return -1;
      }
    }
    if (baseClass == LiteralType.class)
    {
      switch (baseFeatureID)
      {
        case GoPackage.LITERAL_TYPE__LITERAL_VALUE: return GoPackage.ELEMENT_TYPE__LITERAL_VALUE;
        default: return -1;
      }
    }
    if (baseClass == LiteralTypeLinha.class)
    {
      switch (baseFeatureID)
      {
        default: return -1;
      }
    }
    return super.eDerivedStructuralFeatureID(baseFeatureID, baseClass);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (IndexLinha: ");
    result.append(indexLinha);
    result.append(')');
    return result.toString();
  }

} //ElementTypeImpl
