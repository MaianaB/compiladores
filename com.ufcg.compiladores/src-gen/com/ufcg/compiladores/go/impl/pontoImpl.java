/**
 * generated by Xtext 2.14.0
 */
package com.ufcg.compiladores.go.impl;

import com.ufcg.compiladores.go.GoPackage;
import com.ufcg.compiladores.go.PrimaryExprLinha;
import com.ufcg.compiladores.go.Selector;
import com.ufcg.compiladores.go.TypeAssertion;
import com.ufcg.compiladores.go.ponto;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>ponto</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link com.ufcg.compiladores.go.impl.pontoImpl#getSelector <em>Selector</em>}</li>
 *   <li>{@link com.ufcg.compiladores.go.impl.pontoImpl#getPrimaryExprLinha <em>Primary Expr Linha</em>}</li>
 *   <li>{@link com.ufcg.compiladores.go.impl.pontoImpl#getTypeAssertion <em>Type Assertion</em>}</li>
 * </ul>
 *
 * @generated
 */
public class pontoImpl extends MinimalEObjectImpl.Container implements ponto
{
  /**
   * The cached value of the '{@link #getSelector() <em>Selector</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSelector()
   * @generated
   * @ordered
   */
  protected Selector selector;

  /**
   * The cached value of the '{@link #getPrimaryExprLinha() <em>Primary Expr Linha</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPrimaryExprLinha()
   * @generated
   * @ordered
   */
  protected PrimaryExprLinha primaryExprLinha;

  /**
   * The cached value of the '{@link #getTypeAssertion() <em>Type Assertion</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTypeAssertion()
   * @generated
   * @ordered
   */
  protected TypeAssertion typeAssertion;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected pontoImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return GoPackage.Literals.PONTO;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Selector getSelector()
  {
    return selector;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetSelector(Selector newSelector, NotificationChain msgs)
  {
    Selector oldSelector = selector;
    selector = newSelector;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GoPackage.PONTO__SELECTOR, oldSelector, newSelector);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setSelector(Selector newSelector)
  {
    if (newSelector != selector)
    {
      NotificationChain msgs = null;
      if (selector != null)
        msgs = ((InternalEObject)selector).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GoPackage.PONTO__SELECTOR, null, msgs);
      if (newSelector != null)
        msgs = ((InternalEObject)newSelector).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GoPackage.PONTO__SELECTOR, null, msgs);
      msgs = basicSetSelector(newSelector, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GoPackage.PONTO__SELECTOR, newSelector, newSelector));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public PrimaryExprLinha getPrimaryExprLinha()
  {
    return primaryExprLinha;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetPrimaryExprLinha(PrimaryExprLinha newPrimaryExprLinha, NotificationChain msgs)
  {
    PrimaryExprLinha oldPrimaryExprLinha = primaryExprLinha;
    primaryExprLinha = newPrimaryExprLinha;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GoPackage.PONTO__PRIMARY_EXPR_LINHA, oldPrimaryExprLinha, newPrimaryExprLinha);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setPrimaryExprLinha(PrimaryExprLinha newPrimaryExprLinha)
  {
    if (newPrimaryExprLinha != primaryExprLinha)
    {
      NotificationChain msgs = null;
      if (primaryExprLinha != null)
        msgs = ((InternalEObject)primaryExprLinha).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GoPackage.PONTO__PRIMARY_EXPR_LINHA, null, msgs);
      if (newPrimaryExprLinha != null)
        msgs = ((InternalEObject)newPrimaryExprLinha).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GoPackage.PONTO__PRIMARY_EXPR_LINHA, null, msgs);
      msgs = basicSetPrimaryExprLinha(newPrimaryExprLinha, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GoPackage.PONTO__PRIMARY_EXPR_LINHA, newPrimaryExprLinha, newPrimaryExprLinha));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public TypeAssertion getTypeAssertion()
  {
    return typeAssertion;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetTypeAssertion(TypeAssertion newTypeAssertion, NotificationChain msgs)
  {
    TypeAssertion oldTypeAssertion = typeAssertion;
    typeAssertion = newTypeAssertion;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GoPackage.PONTO__TYPE_ASSERTION, oldTypeAssertion, newTypeAssertion);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setTypeAssertion(TypeAssertion newTypeAssertion)
  {
    if (newTypeAssertion != typeAssertion)
    {
      NotificationChain msgs = null;
      if (typeAssertion != null)
        msgs = ((InternalEObject)typeAssertion).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GoPackage.PONTO__TYPE_ASSERTION, null, msgs);
      if (newTypeAssertion != null)
        msgs = ((InternalEObject)newTypeAssertion).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GoPackage.PONTO__TYPE_ASSERTION, null, msgs);
      msgs = basicSetTypeAssertion(newTypeAssertion, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GoPackage.PONTO__TYPE_ASSERTION, newTypeAssertion, newTypeAssertion));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case GoPackage.PONTO__SELECTOR:
        return basicSetSelector(null, msgs);
      case GoPackage.PONTO__PRIMARY_EXPR_LINHA:
        return basicSetPrimaryExprLinha(null, msgs);
      case GoPackage.PONTO__TYPE_ASSERTION:
        return basicSetTypeAssertion(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case GoPackage.PONTO__SELECTOR:
        return getSelector();
      case GoPackage.PONTO__PRIMARY_EXPR_LINHA:
        return getPrimaryExprLinha();
      case GoPackage.PONTO__TYPE_ASSERTION:
        return getTypeAssertion();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case GoPackage.PONTO__SELECTOR:
        setSelector((Selector)newValue);
        return;
      case GoPackage.PONTO__PRIMARY_EXPR_LINHA:
        setPrimaryExprLinha((PrimaryExprLinha)newValue);
        return;
      case GoPackage.PONTO__TYPE_ASSERTION:
        setTypeAssertion((TypeAssertion)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case GoPackage.PONTO__SELECTOR:
        setSelector((Selector)null);
        return;
      case GoPackage.PONTO__PRIMARY_EXPR_LINHA:
        setPrimaryExprLinha((PrimaryExprLinha)null);
        return;
      case GoPackage.PONTO__TYPE_ASSERTION:
        setTypeAssertion((TypeAssertion)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case GoPackage.PONTO__SELECTOR:
        return selector != null;
      case GoPackage.PONTO__PRIMARY_EXPR_LINHA:
        return primaryExprLinha != null;
      case GoPackage.PONTO__TYPE_ASSERTION:
        return typeAssertion != null;
    }
    return super.eIsSet(featureID);
  }

} //pontoImpl
