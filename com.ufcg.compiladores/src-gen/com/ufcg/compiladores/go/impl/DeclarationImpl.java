/**
 * generated by Xtext 2.14.0
 */
package com.ufcg.compiladores.go.impl;

import com.ufcg.compiladores.go.ConstDecl;
import com.ufcg.compiladores.go.Declaration;
import com.ufcg.compiladores.go.GoPackage;
import com.ufcg.compiladores.go.TypeDecl;
import com.ufcg.compiladores.go.VarDecl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Declaration</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link com.ufcg.compiladores.go.impl.DeclarationImpl#getConstDecl <em>Const Decl</em>}</li>
 *   <li>{@link com.ufcg.compiladores.go.impl.DeclarationImpl#getTypeDecl <em>Type Decl</em>}</li>
 *   <li>{@link com.ufcg.compiladores.go.impl.DeclarationImpl#getVarDecl <em>Var Decl</em>}</li>
 * </ul>
 *
 * @generated
 */
public class DeclarationImpl extends MinimalEObjectImpl.Container implements Declaration
{
  /**
   * The cached value of the '{@link #getConstDecl() <em>Const Decl</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getConstDecl()
   * @generated
   * @ordered
   */
  protected ConstDecl constDecl;

  /**
   * The cached value of the '{@link #getTypeDecl() <em>Type Decl</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTypeDecl()
   * @generated
   * @ordered
   */
  protected TypeDecl typeDecl;

  /**
   * The cached value of the '{@link #getVarDecl() <em>Var Decl</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVarDecl()
   * @generated
   * @ordered
   */
  protected VarDecl varDecl;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected DeclarationImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return GoPackage.Literals.DECLARATION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ConstDecl getConstDecl()
  {
    return constDecl;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetConstDecl(ConstDecl newConstDecl, NotificationChain msgs)
  {
    ConstDecl oldConstDecl = constDecl;
    constDecl = newConstDecl;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GoPackage.DECLARATION__CONST_DECL, oldConstDecl, newConstDecl);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setConstDecl(ConstDecl newConstDecl)
  {
    if (newConstDecl != constDecl)
    {
      NotificationChain msgs = null;
      if (constDecl != null)
        msgs = ((InternalEObject)constDecl).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GoPackage.DECLARATION__CONST_DECL, null, msgs);
      if (newConstDecl != null)
        msgs = ((InternalEObject)newConstDecl).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GoPackage.DECLARATION__CONST_DECL, null, msgs);
      msgs = basicSetConstDecl(newConstDecl, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GoPackage.DECLARATION__CONST_DECL, newConstDecl, newConstDecl));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public TypeDecl getTypeDecl()
  {
    return typeDecl;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetTypeDecl(TypeDecl newTypeDecl, NotificationChain msgs)
  {
    TypeDecl oldTypeDecl = typeDecl;
    typeDecl = newTypeDecl;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GoPackage.DECLARATION__TYPE_DECL, oldTypeDecl, newTypeDecl);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setTypeDecl(TypeDecl newTypeDecl)
  {
    if (newTypeDecl != typeDecl)
    {
      NotificationChain msgs = null;
      if (typeDecl != null)
        msgs = ((InternalEObject)typeDecl).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GoPackage.DECLARATION__TYPE_DECL, null, msgs);
      if (newTypeDecl != null)
        msgs = ((InternalEObject)newTypeDecl).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GoPackage.DECLARATION__TYPE_DECL, null, msgs);
      msgs = basicSetTypeDecl(newTypeDecl, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GoPackage.DECLARATION__TYPE_DECL, newTypeDecl, newTypeDecl));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public VarDecl getVarDecl()
  {
    return varDecl;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetVarDecl(VarDecl newVarDecl, NotificationChain msgs)
  {
    VarDecl oldVarDecl = varDecl;
    varDecl = newVarDecl;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GoPackage.DECLARATION__VAR_DECL, oldVarDecl, newVarDecl);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setVarDecl(VarDecl newVarDecl)
  {
    if (newVarDecl != varDecl)
    {
      NotificationChain msgs = null;
      if (varDecl != null)
        msgs = ((InternalEObject)varDecl).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GoPackage.DECLARATION__VAR_DECL, null, msgs);
      if (newVarDecl != null)
        msgs = ((InternalEObject)newVarDecl).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GoPackage.DECLARATION__VAR_DECL, null, msgs);
      msgs = basicSetVarDecl(newVarDecl, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GoPackage.DECLARATION__VAR_DECL, newVarDecl, newVarDecl));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case GoPackage.DECLARATION__CONST_DECL:
        return basicSetConstDecl(null, msgs);
      case GoPackage.DECLARATION__TYPE_DECL:
        return basicSetTypeDecl(null, msgs);
      case GoPackage.DECLARATION__VAR_DECL:
        return basicSetVarDecl(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case GoPackage.DECLARATION__CONST_DECL:
        return getConstDecl();
      case GoPackage.DECLARATION__TYPE_DECL:
        return getTypeDecl();
      case GoPackage.DECLARATION__VAR_DECL:
        return getVarDecl();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case GoPackage.DECLARATION__CONST_DECL:
        setConstDecl((ConstDecl)newValue);
        return;
      case GoPackage.DECLARATION__TYPE_DECL:
        setTypeDecl((TypeDecl)newValue);
        return;
      case GoPackage.DECLARATION__VAR_DECL:
        setVarDecl((VarDecl)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case GoPackage.DECLARATION__CONST_DECL:
        setConstDecl((ConstDecl)null);
        return;
      case GoPackage.DECLARATION__TYPE_DECL:
        setTypeDecl((TypeDecl)null);
        return;
      case GoPackage.DECLARATION__VAR_DECL:
        setVarDecl((VarDecl)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case GoPackage.DECLARATION__CONST_DECL:
        return constDecl != null;
      case GoPackage.DECLARATION__TYPE_DECL:
        return typeDecl != null;
      case GoPackage.DECLARATION__VAR_DECL:
        return varDecl != null;
    }
    return super.eIsSet(featureID);
  }

} //DeclarationImpl
