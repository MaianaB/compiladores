/**
 * generated by Xtext 2.14.0
 */
package com.ufcg.compiladores.go.util;

import com.ufcg.compiladores.go.*;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.common.notify.impl.AdapterFactoryImpl;

import org.eclipse.emf.ecore.EObject;

/**
 * <!-- begin-user-doc -->
 * The <b>Adapter Factory</b> for the model.
 * It provides an adapter <code>createXXX</code> method for each class of the model.
 * <!-- end-user-doc -->
 * @see com.ufcg.compiladores.go.GoPackage
 * @generated
 */
public class GoAdapterFactory extends AdapterFactoryImpl
{
  /**
   * The cached model package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static GoPackage modelPackage;

  /**
   * Creates an instance of the adapter factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public GoAdapterFactory()
  {
    if (modelPackage == null)
    {
      modelPackage = GoPackage.eINSTANCE;
    }
  }

  /**
   * Returns whether this factory is applicable for the type of the object.
   * <!-- begin-user-doc -->
   * This implementation returns <code>true</code> if the object is either the model's package or is an instance object of the model.
   * <!-- end-user-doc -->
   * @return whether this factory is applicable for the type of the object.
   * @generated
   */
  @Override
  public boolean isFactoryForType(Object object)
  {
    if (object == modelPackage)
    {
      return true;
    }
    if (object instanceof EObject)
    {
      return ((EObject)object).eClass().getEPackage() == modelPackage;
    }
    return false;
  }

  /**
   * The switch that delegates to the <code>createXXX</code> methods.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected GoSwitch<Adapter> modelSwitch =
    new GoSwitch<Adapter>()
    {
      @Override
      public Adapter caseSouceFile(SouceFile object)
      {
        return createSouceFileAdapter();
      }
      @Override
      public Adapter caseType(Type object)
      {
        return createTypeAdapter();
      }
      @Override
      public Adapter caseTypeName(TypeName object)
      {
        return createTypeNameAdapter();
      }
      @Override
      public Adapter caseTypeNameLinha(TypeNameLinha object)
      {
        return createTypeNameLinhaAdapter();
      }
      @Override
      public Adapter caseTypeLit(TypeLit object)
      {
        return createTypeLitAdapter();
      }
      @Override
      public Adapter caseTypeLitLinha(TypeLitLinha object)
      {
        return createTypeLitLinhaAdapter();
      }
      @Override
      public Adapter caseArrayLength(ArrayLength object)
      {
        return createArrayLengthAdapter();
      }
      @Override
      public Adapter caseElementType(ElementType object)
      {
        return createElementTypeAdapter();
      }
      @Override
      public Adapter caseStructType(StructType object)
      {
        return createStructTypeAdapter();
      }
      @Override
      public Adapter caseFieldDecl(FieldDecl object)
      {
        return createFieldDeclAdapter();
      }
      @Override
      public Adapter caseEmbeddedField(EmbeddedField object)
      {
        return createEmbeddedFieldAdapter();
      }
      @Override
      public Adapter caseTag(Tag object)
      {
        return createTagAdapter();
      }
      @Override
      public Adapter casePointerType(PointerType object)
      {
        return createPointerTypeAdapter();
      }
      @Override
      public Adapter caseFunctionType(FunctionType object)
      {
        return createFunctionTypeAdapter();
      }
      @Override
      public Adapter caseSignature(Signature object)
      {
        return createSignatureAdapter();
      }
      @Override
      public Adapter caseResult(Result object)
      {
        return createResultAdapter();
      }
      @Override
      public Adapter caseParameters(Parameters object)
      {
        return createParametersAdapter();
      }
      @Override
      public Adapter caseParameterList(ParameterList object)
      {
        return createParameterListAdapter();
      }
      @Override
      public Adapter caseParameterDecl(ParameterDecl object)
      {
        return createParameterDeclAdapter();
      }
      @Override
      public Adapter caseInterfaceType(InterfaceType object)
      {
        return createInterfaceTypeAdapter();
      }
      @Override
      public Adapter caseMethodSpec(MethodSpec object)
      {
        return createMethodSpecAdapter();
      }
      @Override
      public Adapter caseMethodName(MethodName object)
      {
        return createMethodNameAdapter();
      }
      @Override
      public Adapter caseInterfaceTypeName(InterfaceTypeName object)
      {
        return createInterfaceTypeNameAdapter();
      }
      @Override
      public Adapter caseMapType(MapType object)
      {
        return createMapTypeAdapter();
      }
      @Override
      public Adapter caseKeyType(KeyType object)
      {
        return createKeyTypeAdapter();
      }
      @Override
      public Adapter caseChannelType(ChannelType object)
      {
        return createChannelTypeAdapter();
      }
      @Override
      public Adapter caseBlock(Block object)
      {
        return createBlockAdapter();
      }
      @Override
      public Adapter caseStatementList(StatementList object)
      {
        return createStatementListAdapter();
      }
      @Override
      public Adapter caseDeclaration(Declaration object)
      {
        return createDeclarationAdapter();
      }
      @Override
      public Adapter caseTopLevelDecl(TopLevelDecl object)
      {
        return createTopLevelDeclAdapter();
      }
      @Override
      public Adapter casetopLevelDeclLinha(topLevelDeclLinha object)
      {
        return createtopLevelDeclLinhaAdapter();
      }
      @Override
      public Adapter caseConstDecl(ConstDecl object)
      {
        return createConstDeclAdapter();
      }
      @Override
      public Adapter caseConstSpec(ConstSpec object)
      {
        return createConstSpecAdapter();
      }
      @Override
      public Adapter caseIdentifierList(IdentifierList object)
      {
        return createIdentifierListAdapter();
      }
      @Override
      public Adapter caseExpressionList(ExpressionList object)
      {
        return createExpressionListAdapter();
      }
      @Override
      public Adapter caseTypeDecl(TypeDecl object)
      {
        return createTypeDeclAdapter();
      }
      @Override
      public Adapter caseTypeSpec(TypeSpec object)
      {
        return createTypeSpecAdapter();
      }
      @Override
      public Adapter caseAliasDecl(AliasDecl object)
      {
        return createAliasDeclAdapter();
      }
      @Override
      public Adapter caseTypeDef(TypeDef object)
      {
        return createTypeDefAdapter();
      }
      @Override
      public Adapter caseVarDecl(VarDecl object)
      {
        return createVarDeclAdapter();
      }
      @Override
      public Adapter caseVarSpec(VarSpec object)
      {
        return createVarSpecAdapter();
      }
      @Override
      public Adapter caseShortVarDecl(ShortVarDecl object)
      {
        return createShortVarDeclAdapter();
      }
      @Override
      public Adapter caseFunctionDecl(FunctionDecl object)
      {
        return createFunctionDeclAdapter();
      }
      @Override
      public Adapter caseFunctionName(FunctionName object)
      {
        return createFunctionNameAdapter();
      }
      @Override
      public Adapter caseFunctionBody(FunctionBody object)
      {
        return createFunctionBodyAdapter();
      }
      @Override
      public Adapter caseMethodDecl(MethodDecl object)
      {
        return createMethodDeclAdapter();
      }
      @Override
      public Adapter caseReceiver(Receiver object)
      {
        return createReceiverAdapter();
      }
      @Override
      public Adapter caseOperand(Operand object)
      {
        return createOperandAdapter();
      }
      @Override
      public Adapter caseLiteral(Literal object)
      {
        return createLiteralAdapter();
      }
      @Override
      public Adapter caseBasicLit(BasicLit object)
      {
        return createBasicLitAdapter();
      }
      @Override
      public Adapter caseOperandName(OperandName object)
      {
        return createOperandNameAdapter();
      }
      @Override
      public Adapter caseQualifiedIdent(QualifiedIdent object)
      {
        return createQualifiedIdentAdapter();
      }
      @Override
      public Adapter caseCompositeLit(CompositeLit object)
      {
        return createCompositeLitAdapter();
      }
      @Override
      public Adapter caseLiteralType(LiteralType object)
      {
        return createLiteralTypeAdapter();
      }
      @Override
      public Adapter caseLiteralTypeLinha(LiteralTypeLinha object)
      {
        return createLiteralTypeLinhaAdapter();
      }
      @Override
      public Adapter caseLiteralValue(LiteralValue object)
      {
        return createLiteralValueAdapter();
      }
      @Override
      public Adapter caseElementList(ElementList object)
      {
        return createElementListAdapter();
      }
      @Override
      public Adapter caseElement(Element object)
      {
        return createElementAdapter();
      }
      @Override
      public Adapter caseKeyedElement(KeyedElement object)
      {
        return createKeyedElementAdapter();
      }
      @Override
      public Adapter caseKey(Key object)
      {
        return createKeyAdapter();
      }
      @Override
      public Adapter caseFieldName(FieldName object)
      {
        return createFieldNameAdapter();
      }
      @Override
      public Adapter caseFunctionLit(FunctionLit object)
      {
        return createFunctionLitAdapter();
      }
      @Override
      public Adapter casePrimaryExpr(PrimaryExpr object)
      {
        return createPrimaryExprAdapter();
      }
      @Override
      public Adapter casePrimaryExprLinha(PrimaryExprLinha object)
      {
        return createPrimaryExprLinhaAdapter();
      }
      @Override
      public Adapter caseponto(ponto object)
      {
        return createpontoAdapter();
      }
      @Override
      public Adapter casecochetes(cochetes object)
      {
        return createcochetesAdapter();
      }
      @Override
      public Adapter caseSelector(Selector object)
      {
        return createSelectorAdapter();
      }
      @Override
      public Adapter caseIndex(Index object)
      {
        return createIndexAdapter();
      }
      @Override
      public Adapter caseSlice(Slice object)
      {
        return createSliceAdapter();
      }
      @Override
      public Adapter caseTypeAssertion(TypeAssertion object)
      {
        return createTypeAssertionAdapter();
      }
      @Override
      public Adapter caseArguments(Arguments object)
      {
        return createArgumentsAdapter();
      }
      @Override
      public Adapter caseMethodExpr(MethodExpr object)
      {
        return createMethodExprAdapter();
      }
      @Override
      public Adapter caseReceiverType(ReceiverType object)
      {
        return createReceiverTypeAdapter();
      }
      @Override
      public Adapter caseExpression(Expression object)
      {
        return createExpressionAdapter();
      }
      @Override
      public Adapter caseExpressionLinha(ExpressionLinha object)
      {
        return createExpressionLinhaAdapter();
      }
      @Override
      public Adapter caseUnaryExpr(UnaryExpr object)
      {
        return createUnaryExprAdapter();
      }
      @Override
      public Adapter casebinary_op(binary_op object)
      {
        return createbinary_opAdapter();
      }
      @Override
      public Adapter caseConversion(Conversion object)
      {
        return createConversionAdapter();
      }
      @Override
      public Adapter caseStatement(Statement object)
      {
        return createStatementAdapter();
      }
      @Override
      public Adapter caseSimpleStmt(SimpleStmt object)
      {
        return createSimpleStmtAdapter();
      }
      @Override
      public Adapter caseLabeledStmt(LabeledStmt object)
      {
        return createLabeledStmtAdapter();
      }
      @Override
      public Adapter caseLabel(Label object)
      {
        return createLabelAdapter();
      }
      @Override
      public Adapter caseExpressionStmt(ExpressionStmt object)
      {
        return createExpressionStmtAdapter();
      }
      @Override
      public Adapter caseSendStmt(SendStmt object)
      {
        return createSendStmtAdapter();
      }
      @Override
      public Adapter caseChannel(Channel object)
      {
        return createChannelAdapter();
      }
      @Override
      public Adapter caseIncDecStmt(IncDecStmt object)
      {
        return createIncDecStmtAdapter();
      }
      @Override
      public Adapter caseAssignment(Assignment object)
      {
        return createAssignmentAdapter();
      }
      @Override
      public Adapter caseIfStmt(IfStmt object)
      {
        return createIfStmtAdapter();
      }
      @Override
      public Adapter caseSwitchStmt(SwitchStmt object)
      {
        return createSwitchStmtAdapter();
      }
      @Override
      public Adapter caseExprCaseClause(ExprCaseClause object)
      {
        return createExprCaseClauseAdapter();
      }
      @Override
      public Adapter caseExprSwitchCase(ExprSwitchCase object)
      {
        return createExprSwitchCaseAdapter();
      }
      @Override
      public Adapter caseswitch_stmt_linha(switch_stmt_linha object)
      {
        return createswitch_stmt_linhaAdapter();
      }
      @Override
      public Adapter caseTypeSwitchGuard(TypeSwitchGuard object)
      {
        return createTypeSwitchGuardAdapter();
      }
      @Override
      public Adapter caseTypeCaseClause(TypeCaseClause object)
      {
        return createTypeCaseClauseAdapter();
      }
      @Override
      public Adapter caseTypeSwitchCase(TypeSwitchCase object)
      {
        return createTypeSwitchCaseAdapter();
      }
      @Override
      public Adapter caseTypeList(TypeList object)
      {
        return createTypeListAdapter();
      }
      @Override
      public Adapter caseForStmt(ForStmt object)
      {
        return createForStmtAdapter();
      }
      @Override
      public Adapter caseCondition(Condition object)
      {
        return createConditionAdapter();
      }
      @Override
      public Adapter caseForClause(ForClause object)
      {
        return createForClauseAdapter();
      }
      @Override
      public Adapter caseInitStmt(InitStmt object)
      {
        return createInitStmtAdapter();
      }
      @Override
      public Adapter casePostStmt(PostStmt object)
      {
        return createPostStmtAdapter();
      }
      @Override
      public Adapter caseRangeClause(RangeClause object)
      {
        return createRangeClauseAdapter();
      }
      @Override
      public Adapter caseGoStmt(GoStmt object)
      {
        return createGoStmtAdapter();
      }
      @Override
      public Adapter caseSelectStmt(SelectStmt object)
      {
        return createSelectStmtAdapter();
      }
      @Override
      public Adapter caseCommClause(CommClause object)
      {
        return createCommClauseAdapter();
      }
      @Override
      public Adapter caseCommCase(CommCase object)
      {
        return createCommCaseAdapter();
      }
      @Override
      public Adapter caseRecvStmt(RecvStmt object)
      {
        return createRecvStmtAdapter();
      }
      @Override
      public Adapter caseRecvExpr(RecvExpr object)
      {
        return createRecvExprAdapter();
      }
      @Override
      public Adapter caseReturnStmt(ReturnStmt object)
      {
        return createReturnStmtAdapter();
      }
      @Override
      public Adapter caseBreakStmt(BreakStmt object)
      {
        return createBreakStmtAdapter();
      }
      @Override
      public Adapter caseContinueStmt(ContinueStmt object)
      {
        return createContinueStmtAdapter();
      }
      @Override
      public Adapter caseGotoStmt(GotoStmt object)
      {
        return createGotoStmtAdapter();
      }
      @Override
      public Adapter caseDeferStmt(DeferStmt object)
      {
        return createDeferStmtAdapter();
      }
      @Override
      public Adapter casePackageClause(PackageClause object)
      {
        return createPackageClauseAdapter();
      }
      @Override
      public Adapter casePackageName(PackageName object)
      {
        return createPackageNameAdapter();
      }
      @Override
      public Adapter caseImportDecl(ImportDecl object)
      {
        return createImportDeclAdapter();
      }
      @Override
      public Adapter caseImportSpec(ImportSpec object)
      {
        return createImportSpecAdapter();
      }
      @Override
      public Adapter caseImportPath(ImportPath object)
      {
        return createImportPathAdapter();
      }
      @Override
      public Adapter caseidentifier(identifier object)
      {
        return createidentifierAdapter();
      }
      @Override
      public Adapter casefloat_lit(float_lit object)
      {
        return createfloat_litAdapter();
      }
      @Override
      public Adapter casestring_lit(string_lit object)
      {
        return createstring_litAdapter();
      }
      @Override
      public Adapter casedecimals(decimals object)
      {
        return createdecimalsAdapter();
      }
      @Override
      public Adapter caseexponent(exponent object)
      {
        return createexponentAdapter();
      }
      @Override
      public Adapter caseimaginary_lit(imaginary_lit object)
      {
        return createimaginary_litAdapter();
      }
      @Override
      public Adapter caserune_lit(rune_lit object)
      {
        return createrune_litAdapter();
      }
      @Override
      public Adapter defaultCase(EObject object)
      {
        return createEObjectAdapter();
      }
    };

  /**
   * Creates an adapter for the <code>target</code>.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param target the object to adapt.
   * @return the adapter for the <code>target</code>.
   * @generated
   */
  @Override
  public Adapter createAdapter(Notifier target)
  {
    return modelSwitch.doSwitch((EObject)target);
  }


  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.SouceFile <em>Souce File</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.SouceFile
   * @generated
   */
  public Adapter createSouceFileAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.Type <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.Type
   * @generated
   */
  public Adapter createTypeAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.TypeName <em>Type Name</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.TypeName
   * @generated
   */
  public Adapter createTypeNameAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.TypeNameLinha <em>Type Name Linha</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.TypeNameLinha
   * @generated
   */
  public Adapter createTypeNameLinhaAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.TypeLit <em>Type Lit</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.TypeLit
   * @generated
   */
  public Adapter createTypeLitAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.TypeLitLinha <em>Type Lit Linha</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.TypeLitLinha
   * @generated
   */
  public Adapter createTypeLitLinhaAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.ArrayLength <em>Array Length</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.ArrayLength
   * @generated
   */
  public Adapter createArrayLengthAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.ElementType <em>Element Type</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.ElementType
   * @generated
   */
  public Adapter createElementTypeAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.StructType <em>Struct Type</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.StructType
   * @generated
   */
  public Adapter createStructTypeAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.FieldDecl <em>Field Decl</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.FieldDecl
   * @generated
   */
  public Adapter createFieldDeclAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.EmbeddedField <em>Embedded Field</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.EmbeddedField
   * @generated
   */
  public Adapter createEmbeddedFieldAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.Tag <em>Tag</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.Tag
   * @generated
   */
  public Adapter createTagAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.PointerType <em>Pointer Type</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.PointerType
   * @generated
   */
  public Adapter createPointerTypeAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.FunctionType <em>Function Type</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.FunctionType
   * @generated
   */
  public Adapter createFunctionTypeAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.Signature <em>Signature</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.Signature
   * @generated
   */
  public Adapter createSignatureAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.Result <em>Result</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.Result
   * @generated
   */
  public Adapter createResultAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.Parameters <em>Parameters</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.Parameters
   * @generated
   */
  public Adapter createParametersAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.ParameterList <em>Parameter List</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.ParameterList
   * @generated
   */
  public Adapter createParameterListAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.ParameterDecl <em>Parameter Decl</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.ParameterDecl
   * @generated
   */
  public Adapter createParameterDeclAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.InterfaceType <em>Interface Type</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.InterfaceType
   * @generated
   */
  public Adapter createInterfaceTypeAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.MethodSpec <em>Method Spec</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.MethodSpec
   * @generated
   */
  public Adapter createMethodSpecAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.MethodName <em>Method Name</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.MethodName
   * @generated
   */
  public Adapter createMethodNameAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.InterfaceTypeName <em>Interface Type Name</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.InterfaceTypeName
   * @generated
   */
  public Adapter createInterfaceTypeNameAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.MapType <em>Map Type</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.MapType
   * @generated
   */
  public Adapter createMapTypeAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.KeyType <em>Key Type</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.KeyType
   * @generated
   */
  public Adapter createKeyTypeAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.ChannelType <em>Channel Type</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.ChannelType
   * @generated
   */
  public Adapter createChannelTypeAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.Block <em>Block</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.Block
   * @generated
   */
  public Adapter createBlockAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.StatementList <em>Statement List</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.StatementList
   * @generated
   */
  public Adapter createStatementListAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.Declaration <em>Declaration</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.Declaration
   * @generated
   */
  public Adapter createDeclarationAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.TopLevelDecl <em>Top Level Decl</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.TopLevelDecl
   * @generated
   */
  public Adapter createTopLevelDeclAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.topLevelDeclLinha <em>top Level Decl Linha</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.topLevelDeclLinha
   * @generated
   */
  public Adapter createtopLevelDeclLinhaAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.ConstDecl <em>Const Decl</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.ConstDecl
   * @generated
   */
  public Adapter createConstDeclAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.ConstSpec <em>Const Spec</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.ConstSpec
   * @generated
   */
  public Adapter createConstSpecAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.IdentifierList <em>Identifier List</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.IdentifierList
   * @generated
   */
  public Adapter createIdentifierListAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.ExpressionList <em>Expression List</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.ExpressionList
   * @generated
   */
  public Adapter createExpressionListAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.TypeDecl <em>Type Decl</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.TypeDecl
   * @generated
   */
  public Adapter createTypeDeclAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.TypeSpec <em>Type Spec</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.TypeSpec
   * @generated
   */
  public Adapter createTypeSpecAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.AliasDecl <em>Alias Decl</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.AliasDecl
   * @generated
   */
  public Adapter createAliasDeclAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.TypeDef <em>Type Def</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.TypeDef
   * @generated
   */
  public Adapter createTypeDefAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.VarDecl <em>Var Decl</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.VarDecl
   * @generated
   */
  public Adapter createVarDeclAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.VarSpec <em>Var Spec</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.VarSpec
   * @generated
   */
  public Adapter createVarSpecAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.ShortVarDecl <em>Short Var Decl</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.ShortVarDecl
   * @generated
   */
  public Adapter createShortVarDeclAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.FunctionDecl <em>Function Decl</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.FunctionDecl
   * @generated
   */
  public Adapter createFunctionDeclAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.FunctionName <em>Function Name</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.FunctionName
   * @generated
   */
  public Adapter createFunctionNameAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.FunctionBody <em>Function Body</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.FunctionBody
   * @generated
   */
  public Adapter createFunctionBodyAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.MethodDecl <em>Method Decl</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.MethodDecl
   * @generated
   */
  public Adapter createMethodDeclAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.Receiver <em>Receiver</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.Receiver
   * @generated
   */
  public Adapter createReceiverAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.Operand <em>Operand</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.Operand
   * @generated
   */
  public Adapter createOperandAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.Literal <em>Literal</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.Literal
   * @generated
   */
  public Adapter createLiteralAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.BasicLit <em>Basic Lit</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.BasicLit
   * @generated
   */
  public Adapter createBasicLitAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.OperandName <em>Operand Name</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.OperandName
   * @generated
   */
  public Adapter createOperandNameAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.QualifiedIdent <em>Qualified Ident</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.QualifiedIdent
   * @generated
   */
  public Adapter createQualifiedIdentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.CompositeLit <em>Composite Lit</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.CompositeLit
   * @generated
   */
  public Adapter createCompositeLitAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.LiteralType <em>Literal Type</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.LiteralType
   * @generated
   */
  public Adapter createLiteralTypeAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.LiteralTypeLinha <em>Literal Type Linha</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.LiteralTypeLinha
   * @generated
   */
  public Adapter createLiteralTypeLinhaAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.LiteralValue <em>Literal Value</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.LiteralValue
   * @generated
   */
  public Adapter createLiteralValueAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.ElementList <em>Element List</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.ElementList
   * @generated
   */
  public Adapter createElementListAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.Element <em>Element</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.Element
   * @generated
   */
  public Adapter createElementAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.KeyedElement <em>Keyed Element</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.KeyedElement
   * @generated
   */
  public Adapter createKeyedElementAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.Key <em>Key</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.Key
   * @generated
   */
  public Adapter createKeyAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.FieldName <em>Field Name</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.FieldName
   * @generated
   */
  public Adapter createFieldNameAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.FunctionLit <em>Function Lit</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.FunctionLit
   * @generated
   */
  public Adapter createFunctionLitAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.PrimaryExpr <em>Primary Expr</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.PrimaryExpr
   * @generated
   */
  public Adapter createPrimaryExprAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.PrimaryExprLinha <em>Primary Expr Linha</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.PrimaryExprLinha
   * @generated
   */
  public Adapter createPrimaryExprLinhaAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.ponto <em>ponto</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.ponto
   * @generated
   */
  public Adapter createpontoAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.cochetes <em>cochetes</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.cochetes
   * @generated
   */
  public Adapter createcochetesAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.Selector <em>Selector</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.Selector
   * @generated
   */
  public Adapter createSelectorAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.Index <em>Index</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.Index
   * @generated
   */
  public Adapter createIndexAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.Slice <em>Slice</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.Slice
   * @generated
   */
  public Adapter createSliceAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.TypeAssertion <em>Type Assertion</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.TypeAssertion
   * @generated
   */
  public Adapter createTypeAssertionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.Arguments <em>Arguments</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.Arguments
   * @generated
   */
  public Adapter createArgumentsAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.MethodExpr <em>Method Expr</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.MethodExpr
   * @generated
   */
  public Adapter createMethodExprAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.ReceiverType <em>Receiver Type</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.ReceiverType
   * @generated
   */
  public Adapter createReceiverTypeAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.Expression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.Expression
   * @generated
   */
  public Adapter createExpressionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.ExpressionLinha <em>Expression Linha</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.ExpressionLinha
   * @generated
   */
  public Adapter createExpressionLinhaAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.UnaryExpr <em>Unary Expr</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.UnaryExpr
   * @generated
   */
  public Adapter createUnaryExprAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.binary_op <em>binary op</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.binary_op
   * @generated
   */
  public Adapter createbinary_opAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.Conversion <em>Conversion</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.Conversion
   * @generated
   */
  public Adapter createConversionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.Statement <em>Statement</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.Statement
   * @generated
   */
  public Adapter createStatementAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.SimpleStmt <em>Simple Stmt</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.SimpleStmt
   * @generated
   */
  public Adapter createSimpleStmtAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.LabeledStmt <em>Labeled Stmt</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.LabeledStmt
   * @generated
   */
  public Adapter createLabeledStmtAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.Label <em>Label</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.Label
   * @generated
   */
  public Adapter createLabelAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.ExpressionStmt <em>Expression Stmt</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.ExpressionStmt
   * @generated
   */
  public Adapter createExpressionStmtAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.SendStmt <em>Send Stmt</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.SendStmt
   * @generated
   */
  public Adapter createSendStmtAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.Channel <em>Channel</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.Channel
   * @generated
   */
  public Adapter createChannelAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.IncDecStmt <em>Inc Dec Stmt</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.IncDecStmt
   * @generated
   */
  public Adapter createIncDecStmtAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.Assignment <em>Assignment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.Assignment
   * @generated
   */
  public Adapter createAssignmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.IfStmt <em>If Stmt</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.IfStmt
   * @generated
   */
  public Adapter createIfStmtAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.SwitchStmt <em>Switch Stmt</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.SwitchStmt
   * @generated
   */
  public Adapter createSwitchStmtAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.ExprCaseClause <em>Expr Case Clause</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.ExprCaseClause
   * @generated
   */
  public Adapter createExprCaseClauseAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.ExprSwitchCase <em>Expr Switch Case</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.ExprSwitchCase
   * @generated
   */
  public Adapter createExprSwitchCaseAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.switch_stmt_linha <em>switch stmt linha</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.switch_stmt_linha
   * @generated
   */
  public Adapter createswitch_stmt_linhaAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.TypeSwitchGuard <em>Type Switch Guard</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.TypeSwitchGuard
   * @generated
   */
  public Adapter createTypeSwitchGuardAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.TypeCaseClause <em>Type Case Clause</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.TypeCaseClause
   * @generated
   */
  public Adapter createTypeCaseClauseAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.TypeSwitchCase <em>Type Switch Case</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.TypeSwitchCase
   * @generated
   */
  public Adapter createTypeSwitchCaseAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.TypeList <em>Type List</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.TypeList
   * @generated
   */
  public Adapter createTypeListAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.ForStmt <em>For Stmt</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.ForStmt
   * @generated
   */
  public Adapter createForStmtAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.Condition <em>Condition</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.Condition
   * @generated
   */
  public Adapter createConditionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.ForClause <em>For Clause</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.ForClause
   * @generated
   */
  public Adapter createForClauseAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.InitStmt <em>Init Stmt</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.InitStmt
   * @generated
   */
  public Adapter createInitStmtAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.PostStmt <em>Post Stmt</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.PostStmt
   * @generated
   */
  public Adapter createPostStmtAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.RangeClause <em>Range Clause</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.RangeClause
   * @generated
   */
  public Adapter createRangeClauseAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.GoStmt <em>Stmt</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.GoStmt
   * @generated
   */
  public Adapter createGoStmtAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.SelectStmt <em>Select Stmt</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.SelectStmt
   * @generated
   */
  public Adapter createSelectStmtAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.CommClause <em>Comm Clause</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.CommClause
   * @generated
   */
  public Adapter createCommClauseAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.CommCase <em>Comm Case</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.CommCase
   * @generated
   */
  public Adapter createCommCaseAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.RecvStmt <em>Recv Stmt</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.RecvStmt
   * @generated
   */
  public Adapter createRecvStmtAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.RecvExpr <em>Recv Expr</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.RecvExpr
   * @generated
   */
  public Adapter createRecvExprAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.ReturnStmt <em>Return Stmt</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.ReturnStmt
   * @generated
   */
  public Adapter createReturnStmtAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.BreakStmt <em>Break Stmt</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.BreakStmt
   * @generated
   */
  public Adapter createBreakStmtAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.ContinueStmt <em>Continue Stmt</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.ContinueStmt
   * @generated
   */
  public Adapter createContinueStmtAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.GotoStmt <em>Goto Stmt</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.GotoStmt
   * @generated
   */
  public Adapter createGotoStmtAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.DeferStmt <em>Defer Stmt</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.DeferStmt
   * @generated
   */
  public Adapter createDeferStmtAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.PackageClause <em>Package Clause</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.PackageClause
   * @generated
   */
  public Adapter createPackageClauseAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.PackageName <em>Package Name</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.PackageName
   * @generated
   */
  public Adapter createPackageNameAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.ImportDecl <em>Import Decl</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.ImportDecl
   * @generated
   */
  public Adapter createImportDeclAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.ImportSpec <em>Import Spec</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.ImportSpec
   * @generated
   */
  public Adapter createImportSpecAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.ImportPath <em>Import Path</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.ImportPath
   * @generated
   */
  public Adapter createImportPathAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.identifier <em>identifier</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.identifier
   * @generated
   */
  public Adapter createidentifierAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.float_lit <em>float lit</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.float_lit
   * @generated
   */
  public Adapter createfloat_litAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.string_lit <em>string lit</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.string_lit
   * @generated
   */
  public Adapter createstring_litAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.decimals <em>decimals</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.decimals
   * @generated
   */
  public Adapter createdecimalsAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.exponent <em>exponent</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.exponent
   * @generated
   */
  public Adapter createexponentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.imaginary_lit <em>imaginary lit</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.imaginary_lit
   * @generated
   */
  public Adapter createimaginary_litAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.ufcg.compiladores.go.rune_lit <em>rune lit</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.ufcg.compiladores.go.rune_lit
   * @generated
   */
  public Adapter createrune_litAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for the default case.
   * <!-- begin-user-doc -->
   * This default implementation returns null.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @generated
   */
  public Adapter createEObjectAdapter()
  {
    return null;
  }

} //GoAdapterFactory
