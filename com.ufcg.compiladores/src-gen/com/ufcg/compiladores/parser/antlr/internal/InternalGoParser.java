package com.ufcg.compiladores.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import com.ufcg.compiladores.services.GoGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
@SuppressWarnings("all")
public class InternalGoParser extends AbstractInternalAntlrParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "RULE_ANY_OTHER", "RULE_LETTER", "RULE_DECIMAL_DIGIT", "RULE_OCTAL_DIGIT", "RULE_HEX_DIGIT", "RULE_SEVEN_TO_NINE", "RULE_A_TO_F", "RULE_ID", "RULE_INT", "RULE_STRING", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS", "';'", "'('", "')'", "'.'", "'['", "']'", "'struct'", "'{'", "'*'", "'func'", "','", "'...'", "'interface'", "'}'", "'map'", "'chan'", "'<-'", "'const'", "'='", "'type'", "'var'", "':='", "':'", "'||'", "'&&'", "'=='", "'!='", "'<'", "'<='", "'>'", "'>='", "'+'", "'-'", "'|'", "'\\u02C6'", "'/'", "'%'", "'<<'", "'>>'", "'&'", "'&^'", "'!'", "'^'", "'++'", "'--'", "'if'", "'else'", "'switch'", "'case'", "'default'", "'for'", "'range'", "'go'", "'select'", "'return'", "'break'", "'continue'", "'goto'", "'fallthrough'", "'defer'", "'package'", "'import'", "'0'", "'x'", "'X'", "'\\''", "'\"'", "'?'", "'U+000A'", "'e'", "'E'", "'u'", "'U'", "'a'", "'b'", "'f'", "'n'", "'r'", "'t'", "'v'"
    };
    public static final int RULE_A_TO_F=10;
    public static final int T__50=50;
    public static final int RULE_DECIMAL_DIGIT=6;
    public static final int T__59=59;
    public static final int T__55=55;
    public static final int T__56=56;
    public static final int T__57=57;
    public static final int T__58=58;
    public static final int T__51=51;
    public static final int T__52=52;
    public static final int T__53=53;
    public static final int T__54=54;
    public static final int T__60=60;
    public static final int T__61=61;
    public static final int RULE_ID=11;
    public static final int RULE_INT=12;
    public static final int T__66=66;
    public static final int RULE_ML_COMMENT=14;
    public static final int T__67=67;
    public static final int T__68=68;
    public static final int T__69=69;
    public static final int T__62=62;
    public static final int T__63=63;
    public static final int T__64=64;
    public static final int T__65=65;
    public static final int T__37=37;
    public static final int T__38=38;
    public static final int T__39=39;
    public static final int T__33=33;
    public static final int T__34=34;
    public static final int T__35=35;
    public static final int T__36=36;
    public static final int T__30=30;
    public static final int RULE_OCTAL_DIGIT=7;
    public static final int T__31=31;
    public static final int RULE_SEVEN_TO_NINE=9;
    public static final int T__32=32;
    public static final int RULE_LETTER=5;
    public static final int T__48=48;
    public static final int T__49=49;
    public static final int T__44=44;
    public static final int T__45=45;
    public static final int RULE_HEX_DIGIT=8;
    public static final int T__46=46;
    public static final int T__47=47;
    public static final int T__40=40;
    public static final int T__41=41;
    public static final int T__42=42;
    public static final int T__43=43;
    public static final int T__91=91;
    public static final int T__92=92;
    public static final int T__93=93;
    public static final int T__94=94;
    public static final int T__90=90;
    public static final int T__19=19;
    public static final int T__17=17;
    public static final int T__18=18;
    public static final int T__95=95;
    public static final int T__96=96;
    public static final int T__26=26;
    public static final int T__27=27;
    public static final int T__28=28;
    public static final int T__29=29;
    public static final int T__22=22;
    public static final int T__23=23;
    public static final int T__24=24;
    public static final int T__25=25;
    public static final int T__20=20;
    public static final int T__21=21;
    public static final int T__70=70;
    public static final int T__71=71;
    public static final int T__72=72;
    public static final int RULE_STRING=13;
    public static final int RULE_SL_COMMENT=15;
    public static final int T__77=77;
    public static final int T__78=78;
    public static final int T__79=79;
    public static final int T__73=73;
    public static final int EOF=-1;
    public static final int T__74=74;
    public static final int T__75=75;
    public static final int T__76=76;
    public static final int T__80=80;
    public static final int T__81=81;
    public static final int T__82=82;
    public static final int T__83=83;
    public static final int RULE_WS=16;
    public static final int RULE_ANY_OTHER=4;
    public static final int T__88=88;
    public static final int T__89=89;
    public static final int T__84=84;
    public static final int T__85=85;
    public static final int T__86=86;
    public static final int T__87=87;

    // delegates
    // delegators


        public InternalGoParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalGoParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalGoParser.tokenNames; }
    public String getGrammarFileName() { return "InternalGo.g"; }



    /*
      This grammar contains a lot of empty actions to work around a bug in ANTLR.
      Otherwise the ANTLR tool will create synpreds that cannot be compiled in some rare cases.
    */

     	private GoGrammarAccess grammarAccess;

        public InternalGoParser(TokenStream input, GoGrammarAccess grammarAccess) {
            this(input);
            this.grammarAccess = grammarAccess;
            registerRules(grammarAccess.getGrammar());
        }

        @Override
        protected String getFirstRuleName() {
        	return "SouceFile";
       	}

       	@Override
       	protected GoGrammarAccess getGrammarAccess() {
       		return grammarAccess;
       	}




    // $ANTLR start "entryRuleSouceFile"
    // InternalGo.g:70:1: entryRuleSouceFile returns [EObject current=null] : iv_ruleSouceFile= ruleSouceFile EOF ;
    public final EObject entryRuleSouceFile() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSouceFile = null;


        try {
            // InternalGo.g:70:50: (iv_ruleSouceFile= ruleSouceFile EOF )
            // InternalGo.g:71:2: iv_ruleSouceFile= ruleSouceFile EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSouceFileRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSouceFile=ruleSouceFile();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSouceFile; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSouceFile"


    // $ANTLR start "ruleSouceFile"
    // InternalGo.g:77:1: ruleSouceFile returns [EObject current=null] : ( ( (lv_PackageClause_0_0= rulePackageClause ) ) otherlv_1= ';' ( ( (lv_ImportDecl_2_0= ruleImportDecl ) ) otherlv_3= ';' )* ( ( (lv_TopLevelDecl_4_0= ruleTopLevelDecl ) ) otherlv_5= ';' )? ) ;
    public final EObject ruleSouceFile() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_PackageClause_0_0 = null;

        EObject lv_ImportDecl_2_0 = null;

        EObject lv_TopLevelDecl_4_0 = null;



        	enterRule();

        try {
            // InternalGo.g:83:2: ( ( ( (lv_PackageClause_0_0= rulePackageClause ) ) otherlv_1= ';' ( ( (lv_ImportDecl_2_0= ruleImportDecl ) ) otherlv_3= ';' )* ( ( (lv_TopLevelDecl_4_0= ruleTopLevelDecl ) ) otherlv_5= ';' )? ) )
            // InternalGo.g:84:2: ( ( (lv_PackageClause_0_0= rulePackageClause ) ) otherlv_1= ';' ( ( (lv_ImportDecl_2_0= ruleImportDecl ) ) otherlv_3= ';' )* ( ( (lv_TopLevelDecl_4_0= ruleTopLevelDecl ) ) otherlv_5= ';' )? )
            {
            // InternalGo.g:84:2: ( ( (lv_PackageClause_0_0= rulePackageClause ) ) otherlv_1= ';' ( ( (lv_ImportDecl_2_0= ruleImportDecl ) ) otherlv_3= ';' )* ( ( (lv_TopLevelDecl_4_0= ruleTopLevelDecl ) ) otherlv_5= ';' )? )
            // InternalGo.g:85:3: ( (lv_PackageClause_0_0= rulePackageClause ) ) otherlv_1= ';' ( ( (lv_ImportDecl_2_0= ruleImportDecl ) ) otherlv_3= ';' )* ( ( (lv_TopLevelDecl_4_0= ruleTopLevelDecl ) ) otherlv_5= ';' )?
            {
            // InternalGo.g:85:3: ( (lv_PackageClause_0_0= rulePackageClause ) )
            // InternalGo.g:86:4: (lv_PackageClause_0_0= rulePackageClause )
            {
            // InternalGo.g:86:4: (lv_PackageClause_0_0= rulePackageClause )
            // InternalGo.g:87:5: lv_PackageClause_0_0= rulePackageClause
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSouceFileAccess().getPackageClausePackageClauseParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_3);
            lv_PackageClause_0_0=rulePackageClause();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSouceFileRule());
              					}
              					set(
              						current,
              						"PackageClause",
              						lv_PackageClause_0_0,
              						"com.ufcg.compiladores.Go.PackageClause");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_1=(Token)match(input,17,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getSouceFileAccess().getSemicolonKeyword_1());
              		
            }
            // InternalGo.g:108:3: ( ( (lv_ImportDecl_2_0= ruleImportDecl ) ) otherlv_3= ';' )*
            loop1:
            do {
                int alt1=2;
                int LA1_0 = input.LA(1);

                if ( (LA1_0==78) ) {
                    alt1=1;
                }


                switch (alt1) {
            	case 1 :
            	    // InternalGo.g:109:4: ( (lv_ImportDecl_2_0= ruleImportDecl ) ) otherlv_3= ';'
            	    {
            	    // InternalGo.g:109:4: ( (lv_ImportDecl_2_0= ruleImportDecl ) )
            	    // InternalGo.g:110:5: (lv_ImportDecl_2_0= ruleImportDecl )
            	    {
            	    // InternalGo.g:110:5: (lv_ImportDecl_2_0= ruleImportDecl )
            	    // InternalGo.g:111:6: lv_ImportDecl_2_0= ruleImportDecl
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getSouceFileAccess().getImportDeclImportDeclParserRuleCall_2_0_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_3);
            	    lv_ImportDecl_2_0=ruleImportDecl();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getSouceFileRule());
            	      						}
            	      						add(
            	      							current,
            	      							"ImportDecl",
            	      							lv_ImportDecl_2_0,
            	      							"com.ufcg.compiladores.Go.ImportDecl");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    otherlv_3=(Token)match(input,17,FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_3, grammarAccess.getSouceFileAccess().getSemicolonKeyword_2_1());
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop1;
                }
            } while (true);

            // InternalGo.g:133:3: ( ( (lv_TopLevelDecl_4_0= ruleTopLevelDecl ) ) otherlv_5= ';' )?
            int alt2=2;
            int LA2_0 = input.LA(1);

            if ( (LA2_0==26||LA2_0==34||(LA2_0>=36 && LA2_0<=37)) ) {
                alt2=1;
            }
            switch (alt2) {
                case 1 :
                    // InternalGo.g:134:4: ( (lv_TopLevelDecl_4_0= ruleTopLevelDecl ) ) otherlv_5= ';'
                    {
                    // InternalGo.g:134:4: ( (lv_TopLevelDecl_4_0= ruleTopLevelDecl ) )
                    // InternalGo.g:135:5: (lv_TopLevelDecl_4_0= ruleTopLevelDecl )
                    {
                    // InternalGo.g:135:5: (lv_TopLevelDecl_4_0= ruleTopLevelDecl )
                    // InternalGo.g:136:6: lv_TopLevelDecl_4_0= ruleTopLevelDecl
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSouceFileAccess().getTopLevelDeclTopLevelDeclParserRuleCall_3_0_0());
                      					
                    }
                    pushFollow(FOLLOW_3);
                    lv_TopLevelDecl_4_0=ruleTopLevelDecl();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSouceFileRule());
                      						}
                      						set(
                      							current,
                      							"TopLevelDecl",
                      							lv_TopLevelDecl_4_0,
                      							"com.ufcg.compiladores.Go.TopLevelDecl");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_5=(Token)match(input,17,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getSouceFileAccess().getSemicolonKeyword_3_1());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSouceFile"


    // $ANTLR start "entryRuleType"
    // InternalGo.g:162:1: entryRuleType returns [EObject current=null] : iv_ruleType= ruleType EOF ;
    public final EObject entryRuleType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleType = null;


        try {
            // InternalGo.g:162:45: (iv_ruleType= ruleType EOF )
            // InternalGo.g:163:2: iv_ruleType= ruleType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleType=ruleType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleType"


    // $ANTLR start "ruleType"
    // InternalGo.g:169:1: ruleType returns [EObject current=null] : ( ( (lv_TypeName_0_0= ruleTypeName ) ) | ( (lv_TypeLit_1_0= ruleTypeLit ) ) | (otherlv_2= '(' ( (lv_Type_3_0= ruleType ) ) otherlv_4= ')' ) ) ;
    public final EObject ruleType() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_TypeName_0_0 = null;

        EObject lv_TypeLit_1_0 = null;

        EObject lv_Type_3_0 = null;



        	enterRule();

        try {
            // InternalGo.g:175:2: ( ( ( (lv_TypeName_0_0= ruleTypeName ) ) | ( (lv_TypeLit_1_0= ruleTypeLit ) ) | (otherlv_2= '(' ( (lv_Type_3_0= ruleType ) ) otherlv_4= ')' ) ) )
            // InternalGo.g:176:2: ( ( (lv_TypeName_0_0= ruleTypeName ) ) | ( (lv_TypeLit_1_0= ruleTypeLit ) ) | (otherlv_2= '(' ( (lv_Type_3_0= ruleType ) ) otherlv_4= ')' ) )
            {
            // InternalGo.g:176:2: ( ( (lv_TypeName_0_0= ruleTypeName ) ) | ( (lv_TypeLit_1_0= ruleTypeLit ) ) | (otherlv_2= '(' ( (lv_Type_3_0= ruleType ) ) otherlv_4= ')' ) )
            int alt3=3;
            switch ( input.LA(1) ) {
            case RULE_LETTER:
                {
                alt3=1;
                }
                break;
            case 21:
            case 23:
            case 25:
            case 26:
            case 29:
            case 31:
            case 32:
            case 33:
                {
                alt3=2;
                }
                break;
            case 18:
                {
                alt3=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 3, 0, input);

                throw nvae;
            }

            switch (alt3) {
                case 1 :
                    // InternalGo.g:177:3: ( (lv_TypeName_0_0= ruleTypeName ) )
                    {
                    // InternalGo.g:177:3: ( (lv_TypeName_0_0= ruleTypeName ) )
                    // InternalGo.g:178:4: (lv_TypeName_0_0= ruleTypeName )
                    {
                    // InternalGo.g:178:4: (lv_TypeName_0_0= ruleTypeName )
                    // InternalGo.g:179:5: lv_TypeName_0_0= ruleTypeName
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getTypeAccess().getTypeNameTypeNameParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_TypeName_0_0=ruleTypeName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getTypeRule());
                      					}
                      					set(
                      						current,
                      						"TypeName",
                      						lv_TypeName_0_0,
                      						"com.ufcg.compiladores.Go.TypeName");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:197:3: ( (lv_TypeLit_1_0= ruleTypeLit ) )
                    {
                    // InternalGo.g:197:3: ( (lv_TypeLit_1_0= ruleTypeLit ) )
                    // InternalGo.g:198:4: (lv_TypeLit_1_0= ruleTypeLit )
                    {
                    // InternalGo.g:198:4: (lv_TypeLit_1_0= ruleTypeLit )
                    // InternalGo.g:199:5: lv_TypeLit_1_0= ruleTypeLit
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getTypeAccess().getTypeLitTypeLitParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_TypeLit_1_0=ruleTypeLit();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getTypeRule());
                      					}
                      					set(
                      						current,
                      						"TypeLit",
                      						lv_TypeLit_1_0,
                      						"com.ufcg.compiladores.Go.TypeLit");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalGo.g:217:3: (otherlv_2= '(' ( (lv_Type_3_0= ruleType ) ) otherlv_4= ')' )
                    {
                    // InternalGo.g:217:3: (otherlv_2= '(' ( (lv_Type_3_0= ruleType ) ) otherlv_4= ')' )
                    // InternalGo.g:218:4: otherlv_2= '(' ( (lv_Type_3_0= ruleType ) ) otherlv_4= ')'
                    {
                    otherlv_2=(Token)match(input,18,FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getTypeAccess().getLeftParenthesisKeyword_2_0());
                      			
                    }
                    // InternalGo.g:222:4: ( (lv_Type_3_0= ruleType ) )
                    // InternalGo.g:223:5: (lv_Type_3_0= ruleType )
                    {
                    // InternalGo.g:223:5: (lv_Type_3_0= ruleType )
                    // InternalGo.g:224:6: lv_Type_3_0= ruleType
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTypeAccess().getTypeTypeParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_6);
                    lv_Type_3_0=ruleType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTypeRule());
                      						}
                      						set(
                      							current,
                      							"Type",
                      							lv_Type_3_0,
                      							"com.ufcg.compiladores.Go.Type");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_4=(Token)match(input,19,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getTypeAccess().getRightParenthesisKeyword_2_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleType"


    // $ANTLR start "entryRuleTypeName"
    // InternalGo.g:250:1: entryRuleTypeName returns [EObject current=null] : iv_ruleTypeName= ruleTypeName EOF ;
    public final EObject entryRuleTypeName() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeName = null;


        try {
            // InternalGo.g:250:49: (iv_ruleTypeName= ruleTypeName EOF )
            // InternalGo.g:251:2: iv_ruleTypeName= ruleTypeName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeNameRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeName=ruleTypeName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeName; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeName"


    // $ANTLR start "ruleTypeName"
    // InternalGo.g:257:1: ruleTypeName returns [EObject current=null] : ( ( (lv_identifier_0_0= ruleidentifier ) ) ( (lv_TypeNameLinha_1_0= ruleTypeNameLinha ) ) ) ;
    public final EObject ruleTypeName() throws RecognitionException {
        EObject current = null;

        EObject lv_identifier_0_0 = null;

        EObject lv_TypeNameLinha_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:263:2: ( ( ( (lv_identifier_0_0= ruleidentifier ) ) ( (lv_TypeNameLinha_1_0= ruleTypeNameLinha ) ) ) )
            // InternalGo.g:264:2: ( ( (lv_identifier_0_0= ruleidentifier ) ) ( (lv_TypeNameLinha_1_0= ruleTypeNameLinha ) ) )
            {
            // InternalGo.g:264:2: ( ( (lv_identifier_0_0= ruleidentifier ) ) ( (lv_TypeNameLinha_1_0= ruleTypeNameLinha ) ) )
            // InternalGo.g:265:3: ( (lv_identifier_0_0= ruleidentifier ) ) ( (lv_TypeNameLinha_1_0= ruleTypeNameLinha ) )
            {
            // InternalGo.g:265:3: ( (lv_identifier_0_0= ruleidentifier ) )
            // InternalGo.g:266:4: (lv_identifier_0_0= ruleidentifier )
            {
            // InternalGo.g:266:4: (lv_identifier_0_0= ruleidentifier )
            // InternalGo.g:267:5: lv_identifier_0_0= ruleidentifier
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTypeNameAccess().getIdentifierIdentifierParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_7);
            lv_identifier_0_0=ruleidentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTypeNameRule());
              					}
              					set(
              						current,
              						"identifier",
              						lv_identifier_0_0,
              						"com.ufcg.compiladores.Go.identifier");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:284:3: ( (lv_TypeNameLinha_1_0= ruleTypeNameLinha ) )
            // InternalGo.g:285:4: (lv_TypeNameLinha_1_0= ruleTypeNameLinha )
            {
            // InternalGo.g:285:4: (lv_TypeNameLinha_1_0= ruleTypeNameLinha )
            // InternalGo.g:286:5: lv_TypeNameLinha_1_0= ruleTypeNameLinha
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTypeNameAccess().getTypeNameLinhaTypeNameLinhaParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_TypeNameLinha_1_0=ruleTypeNameLinha();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTypeNameRule());
              					}
              					set(
              						current,
              						"TypeNameLinha",
              						lv_TypeNameLinha_1_0,
              						"com.ufcg.compiladores.Go.TypeNameLinha");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeName"


    // $ANTLR start "entryRuleTypeNameLinha"
    // InternalGo.g:307:1: entryRuleTypeNameLinha returns [EObject current=null] : iv_ruleTypeNameLinha= ruleTypeNameLinha EOF ;
    public final EObject entryRuleTypeNameLinha() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeNameLinha = null;


        try {
            // InternalGo.g:307:54: (iv_ruleTypeNameLinha= ruleTypeNameLinha EOF )
            // InternalGo.g:308:2: iv_ruleTypeNameLinha= ruleTypeNameLinha EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeNameLinhaRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeNameLinha=ruleTypeNameLinha();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeNameLinha; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeNameLinha"


    // $ANTLR start "ruleTypeNameLinha"
    // InternalGo.g:314:1: ruleTypeNameLinha returns [EObject current=null] : ( (otherlv_0= '.' ( (lv_identifier_1_0= ruleidentifier ) ) ( (lv_TypeNameLinha_2_0= ruleTypeNameLinha ) ) ) | ( ( (lv_QualifiedIdent_3_0= ruleQualifiedIdent ) ) ( (lv_TypeNameLinha_4_0= ruleTypeNameLinha ) ) ) | ( () this_ANY_OTHER_6= RULE_ANY_OTHER ) ) ;
    public final EObject ruleTypeNameLinha() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token this_ANY_OTHER_6=null;
        EObject lv_identifier_1_0 = null;

        EObject lv_TypeNameLinha_2_0 = null;

        EObject lv_QualifiedIdent_3_0 = null;

        EObject lv_TypeNameLinha_4_0 = null;



        	enterRule();

        try {
            // InternalGo.g:320:2: ( ( (otherlv_0= '.' ( (lv_identifier_1_0= ruleidentifier ) ) ( (lv_TypeNameLinha_2_0= ruleTypeNameLinha ) ) ) | ( ( (lv_QualifiedIdent_3_0= ruleQualifiedIdent ) ) ( (lv_TypeNameLinha_4_0= ruleTypeNameLinha ) ) ) | ( () this_ANY_OTHER_6= RULE_ANY_OTHER ) ) )
            // InternalGo.g:321:2: ( (otherlv_0= '.' ( (lv_identifier_1_0= ruleidentifier ) ) ( (lv_TypeNameLinha_2_0= ruleTypeNameLinha ) ) ) | ( ( (lv_QualifiedIdent_3_0= ruleQualifiedIdent ) ) ( (lv_TypeNameLinha_4_0= ruleTypeNameLinha ) ) ) | ( () this_ANY_OTHER_6= RULE_ANY_OTHER ) )
            {
            // InternalGo.g:321:2: ( (otherlv_0= '.' ( (lv_identifier_1_0= ruleidentifier ) ) ( (lv_TypeNameLinha_2_0= ruleTypeNameLinha ) ) ) | ( ( (lv_QualifiedIdent_3_0= ruleQualifiedIdent ) ) ( (lv_TypeNameLinha_4_0= ruleTypeNameLinha ) ) ) | ( () this_ANY_OTHER_6= RULE_ANY_OTHER ) )
            int alt4=3;
            switch ( input.LA(1) ) {
            case 20:
                {
                alt4=1;
                }
                break;
            case RULE_LETTER:
                {
                alt4=2;
                }
                break;
            case RULE_ANY_OTHER:
                {
                alt4=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 4, 0, input);

                throw nvae;
            }

            switch (alt4) {
                case 1 :
                    // InternalGo.g:322:3: (otherlv_0= '.' ( (lv_identifier_1_0= ruleidentifier ) ) ( (lv_TypeNameLinha_2_0= ruleTypeNameLinha ) ) )
                    {
                    // InternalGo.g:322:3: (otherlv_0= '.' ( (lv_identifier_1_0= ruleidentifier ) ) ( (lv_TypeNameLinha_2_0= ruleTypeNameLinha ) ) )
                    // InternalGo.g:323:4: otherlv_0= '.' ( (lv_identifier_1_0= ruleidentifier ) ) ( (lv_TypeNameLinha_2_0= ruleTypeNameLinha ) )
                    {
                    otherlv_0=(Token)match(input,20,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getTypeNameLinhaAccess().getFullStopKeyword_0_0());
                      			
                    }
                    // InternalGo.g:327:4: ( (lv_identifier_1_0= ruleidentifier ) )
                    // InternalGo.g:328:5: (lv_identifier_1_0= ruleidentifier )
                    {
                    // InternalGo.g:328:5: (lv_identifier_1_0= ruleidentifier )
                    // InternalGo.g:329:6: lv_identifier_1_0= ruleidentifier
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTypeNameLinhaAccess().getIdentifierIdentifierParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_7);
                    lv_identifier_1_0=ruleidentifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTypeNameLinhaRule());
                      						}
                      						set(
                      							current,
                      							"identifier",
                      							lv_identifier_1_0,
                      							"com.ufcg.compiladores.Go.identifier");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalGo.g:346:4: ( (lv_TypeNameLinha_2_0= ruleTypeNameLinha ) )
                    // InternalGo.g:347:5: (lv_TypeNameLinha_2_0= ruleTypeNameLinha )
                    {
                    // InternalGo.g:347:5: (lv_TypeNameLinha_2_0= ruleTypeNameLinha )
                    // InternalGo.g:348:6: lv_TypeNameLinha_2_0= ruleTypeNameLinha
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTypeNameLinhaAccess().getTypeNameLinhaTypeNameLinhaParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_TypeNameLinha_2_0=ruleTypeNameLinha();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTypeNameLinhaRule());
                      						}
                      						set(
                      							current,
                      							"TypeNameLinha",
                      							lv_TypeNameLinha_2_0,
                      							"com.ufcg.compiladores.Go.TypeNameLinha");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:367:3: ( ( (lv_QualifiedIdent_3_0= ruleQualifiedIdent ) ) ( (lv_TypeNameLinha_4_0= ruleTypeNameLinha ) ) )
                    {
                    // InternalGo.g:367:3: ( ( (lv_QualifiedIdent_3_0= ruleQualifiedIdent ) ) ( (lv_TypeNameLinha_4_0= ruleTypeNameLinha ) ) )
                    // InternalGo.g:368:4: ( (lv_QualifiedIdent_3_0= ruleQualifiedIdent ) ) ( (lv_TypeNameLinha_4_0= ruleTypeNameLinha ) )
                    {
                    // InternalGo.g:368:4: ( (lv_QualifiedIdent_3_0= ruleQualifiedIdent ) )
                    // InternalGo.g:369:5: (lv_QualifiedIdent_3_0= ruleQualifiedIdent )
                    {
                    // InternalGo.g:369:5: (lv_QualifiedIdent_3_0= ruleQualifiedIdent )
                    // InternalGo.g:370:6: lv_QualifiedIdent_3_0= ruleQualifiedIdent
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTypeNameLinhaAccess().getQualifiedIdentQualifiedIdentParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_7);
                    lv_QualifiedIdent_3_0=ruleQualifiedIdent();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTypeNameLinhaRule());
                      						}
                      						set(
                      							current,
                      							"QualifiedIdent",
                      							lv_QualifiedIdent_3_0,
                      							"com.ufcg.compiladores.Go.QualifiedIdent");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalGo.g:387:4: ( (lv_TypeNameLinha_4_0= ruleTypeNameLinha ) )
                    // InternalGo.g:388:5: (lv_TypeNameLinha_4_0= ruleTypeNameLinha )
                    {
                    // InternalGo.g:388:5: (lv_TypeNameLinha_4_0= ruleTypeNameLinha )
                    // InternalGo.g:389:6: lv_TypeNameLinha_4_0= ruleTypeNameLinha
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTypeNameLinhaAccess().getTypeNameLinhaTypeNameLinhaParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_TypeNameLinha_4_0=ruleTypeNameLinha();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTypeNameLinhaRule());
                      						}
                      						set(
                      							current,
                      							"TypeNameLinha",
                      							lv_TypeNameLinha_4_0,
                      							"com.ufcg.compiladores.Go.TypeNameLinha");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalGo.g:408:3: ( () this_ANY_OTHER_6= RULE_ANY_OTHER )
                    {
                    // InternalGo.g:408:3: ( () this_ANY_OTHER_6= RULE_ANY_OTHER )
                    // InternalGo.g:409:4: () this_ANY_OTHER_6= RULE_ANY_OTHER
                    {
                    // InternalGo.g:409:4: ()
                    // InternalGo.g:410:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getTypeNameLinhaAccess().getTypeNameLinhaAction_2_0(),
                      						current);
                      				
                    }

                    }

                    this_ANY_OTHER_6=(Token)match(input,RULE_ANY_OTHER,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_ANY_OTHER_6, grammarAccess.getTypeNameLinhaAccess().getANY_OTHERTerminalRuleCall_2_1());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeNameLinha"


    // $ANTLR start "entryRuleTypeLit"
    // InternalGo.g:428:1: entryRuleTypeLit returns [EObject current=null] : iv_ruleTypeLit= ruleTypeLit EOF ;
    public final EObject entryRuleTypeLit() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeLit = null;


        try {
            // InternalGo.g:428:48: (iv_ruleTypeLit= ruleTypeLit EOF )
            // InternalGo.g:429:2: iv_ruleTypeLit= ruleTypeLit EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeLitRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeLit=ruleTypeLit();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeLit; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeLit"


    // $ANTLR start "ruleTypeLit"
    // InternalGo.g:435:1: ruleTypeLit returns [EObject current=null] : ( (otherlv_0= '[' ( (lv_TypeLitLinha_1_0= ruleTypeLitLinha ) ) ) | ( (lv_StructType_2_0= ruleStructType ) ) | ( (lv_PointerType_3_0= rulePointerType ) ) | ( (lv_FunctionType_4_0= ruleFunctionType ) ) | ( (lv_InterfaceType_5_0= ruleInterfaceType ) ) | ( (lv_MapType_6_0= ruleMapType ) ) | ( (lv_ChannelType_7_0= ruleChannelType ) ) ) ;
    public final EObject ruleTypeLit() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_TypeLitLinha_1_0 = null;

        EObject lv_StructType_2_0 = null;

        EObject lv_PointerType_3_0 = null;

        EObject lv_FunctionType_4_0 = null;

        EObject lv_InterfaceType_5_0 = null;

        EObject lv_MapType_6_0 = null;

        EObject lv_ChannelType_7_0 = null;



        	enterRule();

        try {
            // InternalGo.g:441:2: ( ( (otherlv_0= '[' ( (lv_TypeLitLinha_1_0= ruleTypeLitLinha ) ) ) | ( (lv_StructType_2_0= ruleStructType ) ) | ( (lv_PointerType_3_0= rulePointerType ) ) | ( (lv_FunctionType_4_0= ruleFunctionType ) ) | ( (lv_InterfaceType_5_0= ruleInterfaceType ) ) | ( (lv_MapType_6_0= ruleMapType ) ) | ( (lv_ChannelType_7_0= ruleChannelType ) ) ) )
            // InternalGo.g:442:2: ( (otherlv_0= '[' ( (lv_TypeLitLinha_1_0= ruleTypeLitLinha ) ) ) | ( (lv_StructType_2_0= ruleStructType ) ) | ( (lv_PointerType_3_0= rulePointerType ) ) | ( (lv_FunctionType_4_0= ruleFunctionType ) ) | ( (lv_InterfaceType_5_0= ruleInterfaceType ) ) | ( (lv_MapType_6_0= ruleMapType ) ) | ( (lv_ChannelType_7_0= ruleChannelType ) ) )
            {
            // InternalGo.g:442:2: ( (otherlv_0= '[' ( (lv_TypeLitLinha_1_0= ruleTypeLitLinha ) ) ) | ( (lv_StructType_2_0= ruleStructType ) ) | ( (lv_PointerType_3_0= rulePointerType ) ) | ( (lv_FunctionType_4_0= ruleFunctionType ) ) | ( (lv_InterfaceType_5_0= ruleInterfaceType ) ) | ( (lv_MapType_6_0= ruleMapType ) ) | ( (lv_ChannelType_7_0= ruleChannelType ) ) )
            int alt5=7;
            switch ( input.LA(1) ) {
            case 21:
                {
                alt5=1;
                }
                break;
            case 23:
                {
                alt5=2;
                }
                break;
            case 25:
                {
                alt5=3;
                }
                break;
            case 26:
                {
                alt5=4;
                }
                break;
            case 29:
                {
                alt5=5;
                }
                break;
            case 31:
                {
                alt5=6;
                }
                break;
            case 32:
            case 33:
                {
                alt5=7;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 5, 0, input);

                throw nvae;
            }

            switch (alt5) {
                case 1 :
                    // InternalGo.g:443:3: (otherlv_0= '[' ( (lv_TypeLitLinha_1_0= ruleTypeLitLinha ) ) )
                    {
                    // InternalGo.g:443:3: (otherlv_0= '[' ( (lv_TypeLitLinha_1_0= ruleTypeLitLinha ) ) )
                    // InternalGo.g:444:4: otherlv_0= '[' ( (lv_TypeLitLinha_1_0= ruleTypeLitLinha ) )
                    {
                    otherlv_0=(Token)match(input,21,FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getTypeLitAccess().getLeftSquareBracketKeyword_0_0());
                      			
                    }
                    // InternalGo.g:448:4: ( (lv_TypeLitLinha_1_0= ruleTypeLitLinha ) )
                    // InternalGo.g:449:5: (lv_TypeLitLinha_1_0= ruleTypeLitLinha )
                    {
                    // InternalGo.g:449:5: (lv_TypeLitLinha_1_0= ruleTypeLitLinha )
                    // InternalGo.g:450:6: lv_TypeLitLinha_1_0= ruleTypeLitLinha
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTypeLitAccess().getTypeLitLinhaTypeLitLinhaParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_TypeLitLinha_1_0=ruleTypeLitLinha();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTypeLitRule());
                      						}
                      						set(
                      							current,
                      							"TypeLitLinha",
                      							lv_TypeLitLinha_1_0,
                      							"com.ufcg.compiladores.Go.TypeLitLinha");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:469:3: ( (lv_StructType_2_0= ruleStructType ) )
                    {
                    // InternalGo.g:469:3: ( (lv_StructType_2_0= ruleStructType ) )
                    // InternalGo.g:470:4: (lv_StructType_2_0= ruleStructType )
                    {
                    // InternalGo.g:470:4: (lv_StructType_2_0= ruleStructType )
                    // InternalGo.g:471:5: lv_StructType_2_0= ruleStructType
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getTypeLitAccess().getStructTypeStructTypeParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_StructType_2_0=ruleStructType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getTypeLitRule());
                      					}
                      					set(
                      						current,
                      						"StructType",
                      						lv_StructType_2_0,
                      						"com.ufcg.compiladores.Go.StructType");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalGo.g:489:3: ( (lv_PointerType_3_0= rulePointerType ) )
                    {
                    // InternalGo.g:489:3: ( (lv_PointerType_3_0= rulePointerType ) )
                    // InternalGo.g:490:4: (lv_PointerType_3_0= rulePointerType )
                    {
                    // InternalGo.g:490:4: (lv_PointerType_3_0= rulePointerType )
                    // InternalGo.g:491:5: lv_PointerType_3_0= rulePointerType
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getTypeLitAccess().getPointerTypePointerTypeParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_PointerType_3_0=rulePointerType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getTypeLitRule());
                      					}
                      					set(
                      						current,
                      						"PointerType",
                      						lv_PointerType_3_0,
                      						"com.ufcg.compiladores.Go.PointerType");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalGo.g:509:3: ( (lv_FunctionType_4_0= ruleFunctionType ) )
                    {
                    // InternalGo.g:509:3: ( (lv_FunctionType_4_0= ruleFunctionType ) )
                    // InternalGo.g:510:4: (lv_FunctionType_4_0= ruleFunctionType )
                    {
                    // InternalGo.g:510:4: (lv_FunctionType_4_0= ruleFunctionType )
                    // InternalGo.g:511:5: lv_FunctionType_4_0= ruleFunctionType
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getTypeLitAccess().getFunctionTypeFunctionTypeParserRuleCall_3_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_FunctionType_4_0=ruleFunctionType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getTypeLitRule());
                      					}
                      					set(
                      						current,
                      						"FunctionType",
                      						lv_FunctionType_4_0,
                      						"com.ufcg.compiladores.Go.FunctionType");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalGo.g:529:3: ( (lv_InterfaceType_5_0= ruleInterfaceType ) )
                    {
                    // InternalGo.g:529:3: ( (lv_InterfaceType_5_0= ruleInterfaceType ) )
                    // InternalGo.g:530:4: (lv_InterfaceType_5_0= ruleInterfaceType )
                    {
                    // InternalGo.g:530:4: (lv_InterfaceType_5_0= ruleInterfaceType )
                    // InternalGo.g:531:5: lv_InterfaceType_5_0= ruleInterfaceType
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getTypeLitAccess().getInterfaceTypeInterfaceTypeParserRuleCall_4_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_InterfaceType_5_0=ruleInterfaceType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getTypeLitRule());
                      					}
                      					set(
                      						current,
                      						"InterfaceType",
                      						lv_InterfaceType_5_0,
                      						"com.ufcg.compiladores.Go.InterfaceType");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalGo.g:549:3: ( (lv_MapType_6_0= ruleMapType ) )
                    {
                    // InternalGo.g:549:3: ( (lv_MapType_6_0= ruleMapType ) )
                    // InternalGo.g:550:4: (lv_MapType_6_0= ruleMapType )
                    {
                    // InternalGo.g:550:4: (lv_MapType_6_0= ruleMapType )
                    // InternalGo.g:551:5: lv_MapType_6_0= ruleMapType
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getTypeLitAccess().getMapTypeMapTypeParserRuleCall_5_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_MapType_6_0=ruleMapType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getTypeLitRule());
                      					}
                      					set(
                      						current,
                      						"MapType",
                      						lv_MapType_6_0,
                      						"com.ufcg.compiladores.Go.MapType");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalGo.g:569:3: ( (lv_ChannelType_7_0= ruleChannelType ) )
                    {
                    // InternalGo.g:569:3: ( (lv_ChannelType_7_0= ruleChannelType ) )
                    // InternalGo.g:570:4: (lv_ChannelType_7_0= ruleChannelType )
                    {
                    // InternalGo.g:570:4: (lv_ChannelType_7_0= ruleChannelType )
                    // InternalGo.g:571:5: lv_ChannelType_7_0= ruleChannelType
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getTypeLitAccess().getChannelTypeChannelTypeParserRuleCall_6_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_ChannelType_7_0=ruleChannelType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getTypeLitRule());
                      					}
                      					set(
                      						current,
                      						"ChannelType",
                      						lv_ChannelType_7_0,
                      						"com.ufcg.compiladores.Go.ChannelType");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeLit"


    // $ANTLR start "entryRuleTypeLitLinha"
    // InternalGo.g:592:1: entryRuleTypeLitLinha returns [EObject current=null] : iv_ruleTypeLitLinha= ruleTypeLitLinha EOF ;
    public final EObject entryRuleTypeLitLinha() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeLitLinha = null;


        try {
            // InternalGo.g:592:53: (iv_ruleTypeLitLinha= ruleTypeLitLinha EOF )
            // InternalGo.g:593:2: iv_ruleTypeLitLinha= ruleTypeLitLinha EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeLitLinhaRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeLitLinha=ruleTypeLitLinha();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeLitLinha; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeLitLinha"


    // $ANTLR start "ruleTypeLitLinha"
    // InternalGo.g:599:1: ruleTypeLitLinha returns [EObject current=null] : ( ( ( (lv_ArrayLength_0_0= ruleArrayLength ) ) otherlv_1= ']' ( (lv_ElementType_2_0= ruleElementType ) ) ( (lv_TypeLitLinha_3_0= ruleTypeLitLinha ) ) ) | (otherlv_4= ']' ( (lv_ElementType_5_0= ruleElementType ) ) ( (lv_TypeLitLinha_6_0= ruleTypeLitLinha ) ) ) | ( () this_ANY_OTHER_8= RULE_ANY_OTHER ) ) ;
    public final EObject ruleTypeLitLinha() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_4=null;
        Token this_ANY_OTHER_8=null;
        EObject lv_ArrayLength_0_0 = null;

        EObject lv_ElementType_2_0 = null;

        EObject lv_TypeLitLinha_3_0 = null;

        EObject lv_ElementType_5_0 = null;

        EObject lv_TypeLitLinha_6_0 = null;



        	enterRule();

        try {
            // InternalGo.g:605:2: ( ( ( ( (lv_ArrayLength_0_0= ruleArrayLength ) ) otherlv_1= ']' ( (lv_ElementType_2_0= ruleElementType ) ) ( (lv_TypeLitLinha_3_0= ruleTypeLitLinha ) ) ) | (otherlv_4= ']' ( (lv_ElementType_5_0= ruleElementType ) ) ( (lv_TypeLitLinha_6_0= ruleTypeLitLinha ) ) ) | ( () this_ANY_OTHER_8= RULE_ANY_OTHER ) ) )
            // InternalGo.g:606:2: ( ( ( (lv_ArrayLength_0_0= ruleArrayLength ) ) otherlv_1= ']' ( (lv_ElementType_2_0= ruleElementType ) ) ( (lv_TypeLitLinha_3_0= ruleTypeLitLinha ) ) ) | (otherlv_4= ']' ( (lv_ElementType_5_0= ruleElementType ) ) ( (lv_TypeLitLinha_6_0= ruleTypeLitLinha ) ) ) | ( () this_ANY_OTHER_8= RULE_ANY_OTHER ) )
            {
            // InternalGo.g:606:2: ( ( ( (lv_ArrayLength_0_0= ruleArrayLength ) ) otherlv_1= ']' ( (lv_ElementType_2_0= ruleElementType ) ) ( (lv_TypeLitLinha_3_0= ruleTypeLitLinha ) ) ) | (otherlv_4= ']' ( (lv_ElementType_5_0= ruleElementType ) ) ( (lv_TypeLitLinha_6_0= ruleTypeLitLinha ) ) ) | ( () this_ANY_OTHER_8= RULE_ANY_OTHER ) )
            int alt6=3;
            switch ( input.LA(1) ) {
            case RULE_LETTER:
            case RULE_DECIMAL_DIGIT:
            case 18:
            case 20:
            case 21:
            case 23:
            case 25:
            case 26:
            case 29:
            case 31:
            case 32:
            case 33:
            case 48:
            case 49:
            case 56:
            case 58:
            case 59:
            case 79:
            case 82:
            case 83:
                {
                alt6=1;
                }
                break;
            case 22:
                {
                alt6=2;
                }
                break;
            case RULE_ANY_OTHER:
                {
                alt6=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 6, 0, input);

                throw nvae;
            }

            switch (alt6) {
                case 1 :
                    // InternalGo.g:607:3: ( ( (lv_ArrayLength_0_0= ruleArrayLength ) ) otherlv_1= ']' ( (lv_ElementType_2_0= ruleElementType ) ) ( (lv_TypeLitLinha_3_0= ruleTypeLitLinha ) ) )
                    {
                    // InternalGo.g:607:3: ( ( (lv_ArrayLength_0_0= ruleArrayLength ) ) otherlv_1= ']' ( (lv_ElementType_2_0= ruleElementType ) ) ( (lv_TypeLitLinha_3_0= ruleTypeLitLinha ) ) )
                    // InternalGo.g:608:4: ( (lv_ArrayLength_0_0= ruleArrayLength ) ) otherlv_1= ']' ( (lv_ElementType_2_0= ruleElementType ) ) ( (lv_TypeLitLinha_3_0= ruleTypeLitLinha ) )
                    {
                    // InternalGo.g:608:4: ( (lv_ArrayLength_0_0= ruleArrayLength ) )
                    // InternalGo.g:609:5: (lv_ArrayLength_0_0= ruleArrayLength )
                    {
                    // InternalGo.g:609:5: (lv_ArrayLength_0_0= ruleArrayLength )
                    // InternalGo.g:610:6: lv_ArrayLength_0_0= ruleArrayLength
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTypeLitLinhaAccess().getArrayLengthArrayLengthParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_10);
                    lv_ArrayLength_0_0=ruleArrayLength();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTypeLitLinhaRule());
                      						}
                      						set(
                      							current,
                      							"ArrayLength",
                      							lv_ArrayLength_0_0,
                      							"com.ufcg.compiladores.Go.ArrayLength");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_1=(Token)match(input,22,FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getTypeLitLinhaAccess().getRightSquareBracketKeyword_0_1());
                      			
                    }
                    // InternalGo.g:631:4: ( (lv_ElementType_2_0= ruleElementType ) )
                    // InternalGo.g:632:5: (lv_ElementType_2_0= ruleElementType )
                    {
                    // InternalGo.g:632:5: (lv_ElementType_2_0= ruleElementType )
                    // InternalGo.g:633:6: lv_ElementType_2_0= ruleElementType
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTypeLitLinhaAccess().getElementTypeElementTypeParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FOLLOW_9);
                    lv_ElementType_2_0=ruleElementType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTypeLitLinhaRule());
                      						}
                      						set(
                      							current,
                      							"ElementType",
                      							lv_ElementType_2_0,
                      							"com.ufcg.compiladores.Go.ElementType");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalGo.g:650:4: ( (lv_TypeLitLinha_3_0= ruleTypeLitLinha ) )
                    // InternalGo.g:651:5: (lv_TypeLitLinha_3_0= ruleTypeLitLinha )
                    {
                    // InternalGo.g:651:5: (lv_TypeLitLinha_3_0= ruleTypeLitLinha )
                    // InternalGo.g:652:6: lv_TypeLitLinha_3_0= ruleTypeLitLinha
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTypeLitLinhaAccess().getTypeLitLinhaTypeLitLinhaParserRuleCall_0_3_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_TypeLitLinha_3_0=ruleTypeLitLinha();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTypeLitLinhaRule());
                      						}
                      						set(
                      							current,
                      							"TypeLitLinha",
                      							lv_TypeLitLinha_3_0,
                      							"com.ufcg.compiladores.Go.TypeLitLinha");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:671:3: (otherlv_4= ']' ( (lv_ElementType_5_0= ruleElementType ) ) ( (lv_TypeLitLinha_6_0= ruleTypeLitLinha ) ) )
                    {
                    // InternalGo.g:671:3: (otherlv_4= ']' ( (lv_ElementType_5_0= ruleElementType ) ) ( (lv_TypeLitLinha_6_0= ruleTypeLitLinha ) ) )
                    // InternalGo.g:672:4: otherlv_4= ']' ( (lv_ElementType_5_0= ruleElementType ) ) ( (lv_TypeLitLinha_6_0= ruleTypeLitLinha ) )
                    {
                    otherlv_4=(Token)match(input,22,FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getTypeLitLinhaAccess().getRightSquareBracketKeyword_1_0());
                      			
                    }
                    // InternalGo.g:676:4: ( (lv_ElementType_5_0= ruleElementType ) )
                    // InternalGo.g:677:5: (lv_ElementType_5_0= ruleElementType )
                    {
                    // InternalGo.g:677:5: (lv_ElementType_5_0= ruleElementType )
                    // InternalGo.g:678:6: lv_ElementType_5_0= ruleElementType
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTypeLitLinhaAccess().getElementTypeElementTypeParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_9);
                    lv_ElementType_5_0=ruleElementType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTypeLitLinhaRule());
                      						}
                      						set(
                      							current,
                      							"ElementType",
                      							lv_ElementType_5_0,
                      							"com.ufcg.compiladores.Go.ElementType");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalGo.g:695:4: ( (lv_TypeLitLinha_6_0= ruleTypeLitLinha ) )
                    // InternalGo.g:696:5: (lv_TypeLitLinha_6_0= ruleTypeLitLinha )
                    {
                    // InternalGo.g:696:5: (lv_TypeLitLinha_6_0= ruleTypeLitLinha )
                    // InternalGo.g:697:6: lv_TypeLitLinha_6_0= ruleTypeLitLinha
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTypeLitLinhaAccess().getTypeLitLinhaTypeLitLinhaParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_TypeLitLinha_6_0=ruleTypeLitLinha();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTypeLitLinhaRule());
                      						}
                      						set(
                      							current,
                      							"TypeLitLinha",
                      							lv_TypeLitLinha_6_0,
                      							"com.ufcg.compiladores.Go.TypeLitLinha");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalGo.g:716:3: ( () this_ANY_OTHER_8= RULE_ANY_OTHER )
                    {
                    // InternalGo.g:716:3: ( () this_ANY_OTHER_8= RULE_ANY_OTHER )
                    // InternalGo.g:717:4: () this_ANY_OTHER_8= RULE_ANY_OTHER
                    {
                    // InternalGo.g:717:4: ()
                    // InternalGo.g:718:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getTypeLitLinhaAccess().getTypeLitLinhaAction_2_0(),
                      						current);
                      				
                    }

                    }

                    this_ANY_OTHER_8=(Token)match(input,RULE_ANY_OTHER,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_ANY_OTHER_8, grammarAccess.getTypeLitLinhaAccess().getANY_OTHERTerminalRuleCall_2_1());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeLitLinha"


    // $ANTLR start "entryRuleArrayLength"
    // InternalGo.g:736:1: entryRuleArrayLength returns [EObject current=null] : iv_ruleArrayLength= ruleArrayLength EOF ;
    public final EObject entryRuleArrayLength() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleArrayLength = null;


        try {
            // InternalGo.g:736:52: (iv_ruleArrayLength= ruleArrayLength EOF )
            // InternalGo.g:737:2: iv_ruleArrayLength= ruleArrayLength EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getArrayLengthRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleArrayLength=ruleArrayLength();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleArrayLength; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleArrayLength"


    // $ANTLR start "ruleArrayLength"
    // InternalGo.g:743:1: ruleArrayLength returns [EObject current=null] : ( (lv_Expression_0_0= ruleExpression ) ) ;
    public final EObject ruleArrayLength() throws RecognitionException {
        EObject current = null;

        EObject lv_Expression_0_0 = null;



        	enterRule();

        try {
            // InternalGo.g:749:2: ( ( (lv_Expression_0_0= ruleExpression ) ) )
            // InternalGo.g:750:2: ( (lv_Expression_0_0= ruleExpression ) )
            {
            // InternalGo.g:750:2: ( (lv_Expression_0_0= ruleExpression ) )
            // InternalGo.g:751:3: (lv_Expression_0_0= ruleExpression )
            {
            // InternalGo.g:751:3: (lv_Expression_0_0= ruleExpression )
            // InternalGo.g:752:4: lv_Expression_0_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getArrayLengthAccess().getExpressionExpressionParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_Expression_0_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getArrayLengthRule());
              				}
              				set(
              					current,
              					"Expression",
              					lv_Expression_0_0,
              					"com.ufcg.compiladores.Go.Expression");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleArrayLength"


    // $ANTLR start "entryRuleElementType"
    // InternalGo.g:772:1: entryRuleElementType returns [EObject current=null] : iv_ruleElementType= ruleElementType EOF ;
    public final EObject entryRuleElementType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleElementType = null;


        try {
            // InternalGo.g:772:52: (iv_ruleElementType= ruleElementType EOF )
            // InternalGo.g:773:2: iv_ruleElementType= ruleElementType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getElementTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleElementType=ruleElementType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleElementType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleElementType"


    // $ANTLR start "ruleElementType"
    // InternalGo.g:779:1: ruleElementType returns [EObject current=null] : ( (lv_Type_0_0= ruleType ) ) ;
    public final EObject ruleElementType() throws RecognitionException {
        EObject current = null;

        EObject lv_Type_0_0 = null;



        	enterRule();

        try {
            // InternalGo.g:785:2: ( ( (lv_Type_0_0= ruleType ) ) )
            // InternalGo.g:786:2: ( (lv_Type_0_0= ruleType ) )
            {
            // InternalGo.g:786:2: ( (lv_Type_0_0= ruleType ) )
            // InternalGo.g:787:3: (lv_Type_0_0= ruleType )
            {
            // InternalGo.g:787:3: (lv_Type_0_0= ruleType )
            // InternalGo.g:788:4: lv_Type_0_0= ruleType
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getElementTypeAccess().getTypeTypeParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_Type_0_0=ruleType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getElementTypeRule());
              				}
              				set(
              					current,
              					"Type",
              					lv_Type_0_0,
              					"com.ufcg.compiladores.Go.Type");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleElementType"


    // $ANTLR start "entryRuleStructType"
    // InternalGo.g:808:1: entryRuleStructType returns [EObject current=null] : iv_ruleStructType= ruleStructType EOF ;
    public final EObject entryRuleStructType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStructType = null;


        try {
            // InternalGo.g:808:51: (iv_ruleStructType= ruleStructType EOF )
            // InternalGo.g:809:2: iv_ruleStructType= ruleStructType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStructTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleStructType=ruleStructType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStructType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStructType"


    // $ANTLR start "ruleStructType"
    // InternalGo.g:815:1: ruleStructType returns [EObject current=null] : ( () otherlv_1= 'struct' otherlv_2= '{' ( ( (lv_FieldDecl_3_0= ruleFieldDecl ) ) otherlv_4= ';' )* otherlv_5= ';' ) ;
    public final EObject ruleStructType() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        EObject lv_FieldDecl_3_0 = null;



        	enterRule();

        try {
            // InternalGo.g:821:2: ( ( () otherlv_1= 'struct' otherlv_2= '{' ( ( (lv_FieldDecl_3_0= ruleFieldDecl ) ) otherlv_4= ';' )* otherlv_5= ';' ) )
            // InternalGo.g:822:2: ( () otherlv_1= 'struct' otherlv_2= '{' ( ( (lv_FieldDecl_3_0= ruleFieldDecl ) ) otherlv_4= ';' )* otherlv_5= ';' )
            {
            // InternalGo.g:822:2: ( () otherlv_1= 'struct' otherlv_2= '{' ( ( (lv_FieldDecl_3_0= ruleFieldDecl ) ) otherlv_4= ';' )* otherlv_5= ';' )
            // InternalGo.g:823:3: () otherlv_1= 'struct' otherlv_2= '{' ( ( (lv_FieldDecl_3_0= ruleFieldDecl ) ) otherlv_4= ';' )* otherlv_5= ';'
            {
            // InternalGo.g:823:3: ()
            // InternalGo.g:824:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getStructTypeAccess().getStructTypeAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,23,FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getStructTypeAccess().getStructKeyword_1());
              		
            }
            otherlv_2=(Token)match(input,24,FOLLOW_12); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getStructTypeAccess().getLeftCurlyBracketKeyword_2());
              		
            }
            // InternalGo.g:841:3: ( ( (lv_FieldDecl_3_0= ruleFieldDecl ) ) otherlv_4= ';' )*
            loop7:
            do {
                int alt7=2;
                int LA7_0 = input.LA(1);

                if ( (LA7_0==RULE_LETTER||LA7_0==25) ) {
                    alt7=1;
                }


                switch (alt7) {
            	case 1 :
            	    // InternalGo.g:842:4: ( (lv_FieldDecl_3_0= ruleFieldDecl ) ) otherlv_4= ';'
            	    {
            	    // InternalGo.g:842:4: ( (lv_FieldDecl_3_0= ruleFieldDecl ) )
            	    // InternalGo.g:843:5: (lv_FieldDecl_3_0= ruleFieldDecl )
            	    {
            	    // InternalGo.g:843:5: (lv_FieldDecl_3_0= ruleFieldDecl )
            	    // InternalGo.g:844:6: lv_FieldDecl_3_0= ruleFieldDecl
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getStructTypeAccess().getFieldDeclFieldDeclParserRuleCall_3_0_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_3);
            	    lv_FieldDecl_3_0=ruleFieldDecl();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getStructTypeRule());
            	      						}
            	      						add(
            	      							current,
            	      							"FieldDecl",
            	      							lv_FieldDecl_3_0,
            	      							"com.ufcg.compiladores.Go.FieldDecl");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    otherlv_4=(Token)match(input,17,FOLLOW_12); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_4, grammarAccess.getStructTypeAccess().getSemicolonKeyword_3_1());
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop7;
                }
            } while (true);

            otherlv_5=(Token)match(input,17,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getStructTypeAccess().getSemicolonKeyword_4());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStructType"


    // $ANTLR start "entryRuleFieldDecl"
    // InternalGo.g:874:1: entryRuleFieldDecl returns [EObject current=null] : iv_ruleFieldDecl= ruleFieldDecl EOF ;
    public final EObject entryRuleFieldDecl() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFieldDecl = null;


        try {
            // InternalGo.g:874:50: (iv_ruleFieldDecl= ruleFieldDecl EOF )
            // InternalGo.g:875:2: iv_ruleFieldDecl= ruleFieldDecl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFieldDeclRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFieldDecl=ruleFieldDecl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFieldDecl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFieldDecl"


    // $ANTLR start "ruleFieldDecl"
    // InternalGo.g:881:1: ruleFieldDecl returns [EObject current=null] : ( ( ( ( (lv_IdentifierList_0_0= ruleIdentifierList ) ) ( (lv_Type_1_0= ruleType ) ) ) | ( (lv_EmbeddedField_2_0= ruleEmbeddedField ) ) ) ( (lv_Tag_3_0= ruleTag ) )? ) ;
    public final EObject ruleFieldDecl() throws RecognitionException {
        EObject current = null;

        EObject lv_IdentifierList_0_0 = null;

        EObject lv_Type_1_0 = null;

        EObject lv_EmbeddedField_2_0 = null;

        EObject lv_Tag_3_0 = null;



        	enterRule();

        try {
            // InternalGo.g:887:2: ( ( ( ( ( (lv_IdentifierList_0_0= ruleIdentifierList ) ) ( (lv_Type_1_0= ruleType ) ) ) | ( (lv_EmbeddedField_2_0= ruleEmbeddedField ) ) ) ( (lv_Tag_3_0= ruleTag ) )? ) )
            // InternalGo.g:888:2: ( ( ( ( (lv_IdentifierList_0_0= ruleIdentifierList ) ) ( (lv_Type_1_0= ruleType ) ) ) | ( (lv_EmbeddedField_2_0= ruleEmbeddedField ) ) ) ( (lv_Tag_3_0= ruleTag ) )? )
            {
            // InternalGo.g:888:2: ( ( ( ( (lv_IdentifierList_0_0= ruleIdentifierList ) ) ( (lv_Type_1_0= ruleType ) ) ) | ( (lv_EmbeddedField_2_0= ruleEmbeddedField ) ) ) ( (lv_Tag_3_0= ruleTag ) )? )
            // InternalGo.g:889:3: ( ( ( (lv_IdentifierList_0_0= ruleIdentifierList ) ) ( (lv_Type_1_0= ruleType ) ) ) | ( (lv_EmbeddedField_2_0= ruleEmbeddedField ) ) ) ( (lv_Tag_3_0= ruleTag ) )?
            {
            // InternalGo.g:889:3: ( ( ( (lv_IdentifierList_0_0= ruleIdentifierList ) ) ( (lv_Type_1_0= ruleType ) ) ) | ( (lv_EmbeddedField_2_0= ruleEmbeddedField ) ) )
            int alt8=2;
            int LA8_0 = input.LA(1);

            if ( (LA8_0==RULE_LETTER) ) {
                int LA8_1 = input.LA(2);

                if ( (synpred16_InternalGo()) ) {
                    alt8=1;
                }
                else if ( (true) ) {
                    alt8=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 8, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA8_0==25) ) {
                alt8=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 8, 0, input);

                throw nvae;
            }
            switch (alt8) {
                case 1 :
                    // InternalGo.g:890:4: ( ( (lv_IdentifierList_0_0= ruleIdentifierList ) ) ( (lv_Type_1_0= ruleType ) ) )
                    {
                    // InternalGo.g:890:4: ( ( (lv_IdentifierList_0_0= ruleIdentifierList ) ) ( (lv_Type_1_0= ruleType ) ) )
                    // InternalGo.g:891:5: ( (lv_IdentifierList_0_0= ruleIdentifierList ) ) ( (lv_Type_1_0= ruleType ) )
                    {
                    // InternalGo.g:891:5: ( (lv_IdentifierList_0_0= ruleIdentifierList ) )
                    // InternalGo.g:892:6: (lv_IdentifierList_0_0= ruleIdentifierList )
                    {
                    // InternalGo.g:892:6: (lv_IdentifierList_0_0= ruleIdentifierList )
                    // InternalGo.g:893:7: lv_IdentifierList_0_0= ruleIdentifierList
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getFieldDeclAccess().getIdentifierListIdentifierListParserRuleCall_0_0_0_0());
                      						
                    }
                    pushFollow(FOLLOW_5);
                    lv_IdentifierList_0_0=ruleIdentifierList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getFieldDeclRule());
                      							}
                      							set(
                      								current,
                      								"IdentifierList",
                      								lv_IdentifierList_0_0,
                      								"com.ufcg.compiladores.Go.IdentifierList");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalGo.g:910:5: ( (lv_Type_1_0= ruleType ) )
                    // InternalGo.g:911:6: (lv_Type_1_0= ruleType )
                    {
                    // InternalGo.g:911:6: (lv_Type_1_0= ruleType )
                    // InternalGo.g:912:7: lv_Type_1_0= ruleType
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getFieldDeclAccess().getTypeTypeParserRuleCall_0_0_1_0());
                      						
                    }
                    pushFollow(FOLLOW_13);
                    lv_Type_1_0=ruleType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getFieldDeclRule());
                      							}
                      							set(
                      								current,
                      								"Type",
                      								lv_Type_1_0,
                      								"com.ufcg.compiladores.Go.Type");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:931:4: ( (lv_EmbeddedField_2_0= ruleEmbeddedField ) )
                    {
                    // InternalGo.g:931:4: ( (lv_EmbeddedField_2_0= ruleEmbeddedField ) )
                    // InternalGo.g:932:5: (lv_EmbeddedField_2_0= ruleEmbeddedField )
                    {
                    // InternalGo.g:932:5: (lv_EmbeddedField_2_0= ruleEmbeddedField )
                    // InternalGo.g:933:6: lv_EmbeddedField_2_0= ruleEmbeddedField
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getFieldDeclAccess().getEmbeddedFieldEmbeddedFieldParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_13);
                    lv_EmbeddedField_2_0=ruleEmbeddedField();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getFieldDeclRule());
                      						}
                      						set(
                      							current,
                      							"EmbeddedField",
                      							lv_EmbeddedField_2_0,
                      							"com.ufcg.compiladores.Go.EmbeddedField");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalGo.g:951:3: ( (lv_Tag_3_0= ruleTag ) )?
            int alt9=2;
            int LA9_0 = input.LA(1);

            if ( ((LA9_0>=82 && LA9_0<=83)) ) {
                alt9=1;
            }
            switch (alt9) {
                case 1 :
                    // InternalGo.g:952:4: (lv_Tag_3_0= ruleTag )
                    {
                    // InternalGo.g:952:4: (lv_Tag_3_0= ruleTag )
                    // InternalGo.g:953:5: lv_Tag_3_0= ruleTag
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getFieldDeclAccess().getTagTagParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_Tag_3_0=ruleTag();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getFieldDeclRule());
                      					}
                      					set(
                      						current,
                      						"Tag",
                      						lv_Tag_3_0,
                      						"com.ufcg.compiladores.Go.Tag");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFieldDecl"


    // $ANTLR start "entryRuleEmbeddedField"
    // InternalGo.g:974:1: entryRuleEmbeddedField returns [EObject current=null] : iv_ruleEmbeddedField= ruleEmbeddedField EOF ;
    public final EObject entryRuleEmbeddedField() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEmbeddedField = null;


        try {
            // InternalGo.g:974:54: (iv_ruleEmbeddedField= ruleEmbeddedField EOF )
            // InternalGo.g:975:2: iv_ruleEmbeddedField= ruleEmbeddedField EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEmbeddedFieldRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEmbeddedField=ruleEmbeddedField();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEmbeddedField; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEmbeddedField"


    // $ANTLR start "ruleEmbeddedField"
    // InternalGo.g:981:1: ruleEmbeddedField returns [EObject current=null] : ( (otherlv_0= '*' )? ( (lv_TypeName_1_0= ruleTypeName ) ) ) ;
    public final EObject ruleEmbeddedField() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_TypeName_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:987:2: ( ( (otherlv_0= '*' )? ( (lv_TypeName_1_0= ruleTypeName ) ) ) )
            // InternalGo.g:988:2: ( (otherlv_0= '*' )? ( (lv_TypeName_1_0= ruleTypeName ) ) )
            {
            // InternalGo.g:988:2: ( (otherlv_0= '*' )? ( (lv_TypeName_1_0= ruleTypeName ) ) )
            // InternalGo.g:989:3: (otherlv_0= '*' )? ( (lv_TypeName_1_0= ruleTypeName ) )
            {
            // InternalGo.g:989:3: (otherlv_0= '*' )?
            int alt10=2;
            int LA10_0 = input.LA(1);

            if ( (LA10_0==25) ) {
                alt10=1;
            }
            switch (alt10) {
                case 1 :
                    // InternalGo.g:990:4: otherlv_0= '*'
                    {
                    otherlv_0=(Token)match(input,25,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getEmbeddedFieldAccess().getAsteriskKeyword_0());
                      			
                    }

                    }
                    break;

            }

            // InternalGo.g:995:3: ( (lv_TypeName_1_0= ruleTypeName ) )
            // InternalGo.g:996:4: (lv_TypeName_1_0= ruleTypeName )
            {
            // InternalGo.g:996:4: (lv_TypeName_1_0= ruleTypeName )
            // InternalGo.g:997:5: lv_TypeName_1_0= ruleTypeName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getEmbeddedFieldAccess().getTypeNameTypeNameParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_TypeName_1_0=ruleTypeName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getEmbeddedFieldRule());
              					}
              					set(
              						current,
              						"TypeName",
              						lv_TypeName_1_0,
              						"com.ufcg.compiladores.Go.TypeName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEmbeddedField"


    // $ANTLR start "entryRuleTag"
    // InternalGo.g:1018:1: entryRuleTag returns [EObject current=null] : iv_ruleTag= ruleTag EOF ;
    public final EObject entryRuleTag() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTag = null;


        try {
            // InternalGo.g:1018:44: (iv_ruleTag= ruleTag EOF )
            // InternalGo.g:1019:2: iv_ruleTag= ruleTag EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTagRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTag=ruleTag();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTag; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTag"


    // $ANTLR start "ruleTag"
    // InternalGo.g:1025:1: ruleTag returns [EObject current=null] : ( (lv_string_lit_0_0= rulestring_lit ) ) ;
    public final EObject ruleTag() throws RecognitionException {
        EObject current = null;

        EObject lv_string_lit_0_0 = null;



        	enterRule();

        try {
            // InternalGo.g:1031:2: ( ( (lv_string_lit_0_0= rulestring_lit ) ) )
            // InternalGo.g:1032:2: ( (lv_string_lit_0_0= rulestring_lit ) )
            {
            // InternalGo.g:1032:2: ( (lv_string_lit_0_0= rulestring_lit ) )
            // InternalGo.g:1033:3: (lv_string_lit_0_0= rulestring_lit )
            {
            // InternalGo.g:1033:3: (lv_string_lit_0_0= rulestring_lit )
            // InternalGo.g:1034:4: lv_string_lit_0_0= rulestring_lit
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getTagAccess().getString_litString_litParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_string_lit_0_0=rulestring_lit();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getTagRule());
              				}
              				set(
              					current,
              					"string_lit",
              					lv_string_lit_0_0,
              					"com.ufcg.compiladores.Go.string_lit");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTag"


    // $ANTLR start "entryRulePointerType"
    // InternalGo.g:1054:1: entryRulePointerType returns [EObject current=null] : iv_rulePointerType= rulePointerType EOF ;
    public final EObject entryRulePointerType() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePointerType = null;


        try {
            // InternalGo.g:1054:52: (iv_rulePointerType= rulePointerType EOF )
            // InternalGo.g:1055:2: iv_rulePointerType= rulePointerType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPointerTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePointerType=rulePointerType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePointerType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePointerType"


    // $ANTLR start "rulePointerType"
    // InternalGo.g:1061:1: rulePointerType returns [EObject current=null] : (otherlv_0= '*' ( (lv_Type_1_0= ruleType ) ) ) ;
    public final EObject rulePointerType() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_Type_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:1067:2: ( (otherlv_0= '*' ( (lv_Type_1_0= ruleType ) ) ) )
            // InternalGo.g:1068:2: (otherlv_0= '*' ( (lv_Type_1_0= ruleType ) ) )
            {
            // InternalGo.g:1068:2: (otherlv_0= '*' ( (lv_Type_1_0= ruleType ) ) )
            // InternalGo.g:1069:3: otherlv_0= '*' ( (lv_Type_1_0= ruleType ) )
            {
            otherlv_0=(Token)match(input,25,FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getPointerTypeAccess().getAsteriskKeyword_0());
              		
            }
            // InternalGo.g:1073:3: ( (lv_Type_1_0= ruleType ) )
            // InternalGo.g:1074:4: (lv_Type_1_0= ruleType )
            {
            // InternalGo.g:1074:4: (lv_Type_1_0= ruleType )
            // InternalGo.g:1075:5: lv_Type_1_0= ruleType
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getPointerTypeAccess().getTypeTypeParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_Type_1_0=ruleType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getPointerTypeRule());
              					}
              					set(
              						current,
              						"Type",
              						lv_Type_1_0,
              						"com.ufcg.compiladores.Go.Type");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePointerType"


    // $ANTLR start "entryRuleFunctionType"
    // InternalGo.g:1096:1: entryRuleFunctionType returns [EObject current=null] : iv_ruleFunctionType= ruleFunctionType EOF ;
    public final EObject entryRuleFunctionType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunctionType = null;


        try {
            // InternalGo.g:1096:53: (iv_ruleFunctionType= ruleFunctionType EOF )
            // InternalGo.g:1097:2: iv_ruleFunctionType= ruleFunctionType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFunctionType=ruleFunctionType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunctionType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFunctionType"


    // $ANTLR start "ruleFunctionType"
    // InternalGo.g:1103:1: ruleFunctionType returns [EObject current=null] : (otherlv_0= 'func' ( (lv_Signature_1_0= ruleSignature ) ) ) ;
    public final EObject ruleFunctionType() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_Signature_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:1109:2: ( (otherlv_0= 'func' ( (lv_Signature_1_0= ruleSignature ) ) ) )
            // InternalGo.g:1110:2: (otherlv_0= 'func' ( (lv_Signature_1_0= ruleSignature ) ) )
            {
            // InternalGo.g:1110:2: (otherlv_0= 'func' ( (lv_Signature_1_0= ruleSignature ) ) )
            // InternalGo.g:1111:3: otherlv_0= 'func' ( (lv_Signature_1_0= ruleSignature ) )
            {
            otherlv_0=(Token)match(input,26,FOLLOW_14); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getFunctionTypeAccess().getFuncKeyword_0());
              		
            }
            // InternalGo.g:1115:3: ( (lv_Signature_1_0= ruleSignature ) )
            // InternalGo.g:1116:4: (lv_Signature_1_0= ruleSignature )
            {
            // InternalGo.g:1116:4: (lv_Signature_1_0= ruleSignature )
            // InternalGo.g:1117:5: lv_Signature_1_0= ruleSignature
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getFunctionTypeAccess().getSignatureSignatureParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_Signature_1_0=ruleSignature();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getFunctionTypeRule());
              					}
              					set(
              						current,
              						"Signature",
              						lv_Signature_1_0,
              						"com.ufcg.compiladores.Go.Signature");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFunctionType"


    // $ANTLR start "entryRuleSignature"
    // InternalGo.g:1138:1: entryRuleSignature returns [EObject current=null] : iv_ruleSignature= ruleSignature EOF ;
    public final EObject entryRuleSignature() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSignature = null;


        try {
            // InternalGo.g:1138:50: (iv_ruleSignature= ruleSignature EOF )
            // InternalGo.g:1139:2: iv_ruleSignature= ruleSignature EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSignatureRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSignature=ruleSignature();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSignature; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSignature"


    // $ANTLR start "ruleSignature"
    // InternalGo.g:1145:1: ruleSignature returns [EObject current=null] : ( ( (lv_Parameters_0_0= ruleParameters ) ) ( (lv_Result_1_0= ruleResult ) )? ) ;
    public final EObject ruleSignature() throws RecognitionException {
        EObject current = null;

        EObject lv_Parameters_0_0 = null;

        EObject lv_Result_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:1151:2: ( ( ( (lv_Parameters_0_0= ruleParameters ) ) ( (lv_Result_1_0= ruleResult ) )? ) )
            // InternalGo.g:1152:2: ( ( (lv_Parameters_0_0= ruleParameters ) ) ( (lv_Result_1_0= ruleResult ) )? )
            {
            // InternalGo.g:1152:2: ( ( (lv_Parameters_0_0= ruleParameters ) ) ( (lv_Result_1_0= ruleResult ) )? )
            // InternalGo.g:1153:3: ( (lv_Parameters_0_0= ruleParameters ) ) ( (lv_Result_1_0= ruleResult ) )?
            {
            // InternalGo.g:1153:3: ( (lv_Parameters_0_0= ruleParameters ) )
            // InternalGo.g:1154:4: (lv_Parameters_0_0= ruleParameters )
            {
            // InternalGo.g:1154:4: (lv_Parameters_0_0= ruleParameters )
            // InternalGo.g:1155:5: lv_Parameters_0_0= ruleParameters
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSignatureAccess().getParametersParametersParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_15);
            lv_Parameters_0_0=ruleParameters();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSignatureRule());
              					}
              					set(
              						current,
              						"Parameters",
              						lv_Parameters_0_0,
              						"com.ufcg.compiladores.Go.Parameters");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:1172:3: ( (lv_Result_1_0= ruleResult ) )?
            int alt11=2;
            alt11 = dfa11.predict(input);
            switch (alt11) {
                case 1 :
                    // InternalGo.g:1173:4: (lv_Result_1_0= ruleResult )
                    {
                    // InternalGo.g:1173:4: (lv_Result_1_0= ruleResult )
                    // InternalGo.g:1174:5: lv_Result_1_0= ruleResult
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getSignatureAccess().getResultResultParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_Result_1_0=ruleResult();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getSignatureRule());
                      					}
                      					set(
                      						current,
                      						"Result",
                      						lv_Result_1_0,
                      						"com.ufcg.compiladores.Go.Result");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSignature"


    // $ANTLR start "entryRuleResult"
    // InternalGo.g:1195:1: entryRuleResult returns [EObject current=null] : iv_ruleResult= ruleResult EOF ;
    public final EObject entryRuleResult() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleResult = null;


        try {
            // InternalGo.g:1195:47: (iv_ruleResult= ruleResult EOF )
            // InternalGo.g:1196:2: iv_ruleResult= ruleResult EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getResultRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleResult=ruleResult();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleResult; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleResult"


    // $ANTLR start "ruleResult"
    // InternalGo.g:1202:1: ruleResult returns [EObject current=null] : ( ( (lv_Parameters_0_0= ruleParameters ) ) | ( (lv_Type_1_0= ruleType ) ) ) ;
    public final EObject ruleResult() throws RecognitionException {
        EObject current = null;

        EObject lv_Parameters_0_0 = null;

        EObject lv_Type_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:1208:2: ( ( ( (lv_Parameters_0_0= ruleParameters ) ) | ( (lv_Type_1_0= ruleType ) ) ) )
            // InternalGo.g:1209:2: ( ( (lv_Parameters_0_0= ruleParameters ) ) | ( (lv_Type_1_0= ruleType ) ) )
            {
            // InternalGo.g:1209:2: ( ( (lv_Parameters_0_0= ruleParameters ) ) | ( (lv_Type_1_0= ruleType ) ) )
            int alt12=2;
            alt12 = dfa12.predict(input);
            switch (alt12) {
                case 1 :
                    // InternalGo.g:1210:3: ( (lv_Parameters_0_0= ruleParameters ) )
                    {
                    // InternalGo.g:1210:3: ( (lv_Parameters_0_0= ruleParameters ) )
                    // InternalGo.g:1211:4: (lv_Parameters_0_0= ruleParameters )
                    {
                    // InternalGo.g:1211:4: (lv_Parameters_0_0= ruleParameters )
                    // InternalGo.g:1212:5: lv_Parameters_0_0= ruleParameters
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getResultAccess().getParametersParametersParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_Parameters_0_0=ruleParameters();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getResultRule());
                      					}
                      					set(
                      						current,
                      						"Parameters",
                      						lv_Parameters_0_0,
                      						"com.ufcg.compiladores.Go.Parameters");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:1230:3: ( (lv_Type_1_0= ruleType ) )
                    {
                    // InternalGo.g:1230:3: ( (lv_Type_1_0= ruleType ) )
                    // InternalGo.g:1231:4: (lv_Type_1_0= ruleType )
                    {
                    // InternalGo.g:1231:4: (lv_Type_1_0= ruleType )
                    // InternalGo.g:1232:5: lv_Type_1_0= ruleType
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getResultAccess().getTypeTypeParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_Type_1_0=ruleType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getResultRule());
                      					}
                      					set(
                      						current,
                      						"Type",
                      						lv_Type_1_0,
                      						"com.ufcg.compiladores.Go.Type");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleResult"


    // $ANTLR start "entryRuleParameters"
    // InternalGo.g:1253:1: entryRuleParameters returns [EObject current=null] : iv_ruleParameters= ruleParameters EOF ;
    public final EObject entryRuleParameters() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleParameters = null;


        try {
            // InternalGo.g:1253:51: (iv_ruleParameters= ruleParameters EOF )
            // InternalGo.g:1254:2: iv_ruleParameters= ruleParameters EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getParametersRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleParameters=ruleParameters();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleParameters; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleParameters"


    // $ANTLR start "ruleParameters"
    // InternalGo.g:1260:1: ruleParameters returns [EObject current=null] : ( () otherlv_1= '(' ( ( (lv_ParameterList_2_0= ruleParameterList ) ) (otherlv_3= ',' )? )? otherlv_4= ')' ) ;
    public final EObject ruleParameters() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        EObject lv_ParameterList_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:1266:2: ( ( () otherlv_1= '(' ( ( (lv_ParameterList_2_0= ruleParameterList ) ) (otherlv_3= ',' )? )? otherlv_4= ')' ) )
            // InternalGo.g:1267:2: ( () otherlv_1= '(' ( ( (lv_ParameterList_2_0= ruleParameterList ) ) (otherlv_3= ',' )? )? otherlv_4= ')' )
            {
            // InternalGo.g:1267:2: ( () otherlv_1= '(' ( ( (lv_ParameterList_2_0= ruleParameterList ) ) (otherlv_3= ',' )? )? otherlv_4= ')' )
            // InternalGo.g:1268:3: () otherlv_1= '(' ( ( (lv_ParameterList_2_0= ruleParameterList ) ) (otherlv_3= ',' )? )? otherlv_4= ')'
            {
            // InternalGo.g:1268:3: ()
            // InternalGo.g:1269:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getParametersAccess().getParametersAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,18,FOLLOW_16); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getParametersAccess().getLeftParenthesisKeyword_1());
              		
            }
            // InternalGo.g:1282:3: ( ( (lv_ParameterList_2_0= ruleParameterList ) ) (otherlv_3= ',' )? )?
            int alt14=2;
            int LA14_0 = input.LA(1);

            if ( (LA14_0==RULE_LETTER||LA14_0==18||LA14_0==21||LA14_0==23||(LA14_0>=25 && LA14_0<=26)||(LA14_0>=28 && LA14_0<=29)||(LA14_0>=31 && LA14_0<=33)) ) {
                alt14=1;
            }
            switch (alt14) {
                case 1 :
                    // InternalGo.g:1283:4: ( (lv_ParameterList_2_0= ruleParameterList ) ) (otherlv_3= ',' )?
                    {
                    // InternalGo.g:1283:4: ( (lv_ParameterList_2_0= ruleParameterList ) )
                    // InternalGo.g:1284:5: (lv_ParameterList_2_0= ruleParameterList )
                    {
                    // InternalGo.g:1284:5: (lv_ParameterList_2_0= ruleParameterList )
                    // InternalGo.g:1285:6: lv_ParameterList_2_0= ruleParameterList
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getParametersAccess().getParameterListParameterListParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_17);
                    lv_ParameterList_2_0=ruleParameterList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getParametersRule());
                      						}
                      						set(
                      							current,
                      							"ParameterList",
                      							lv_ParameterList_2_0,
                      							"com.ufcg.compiladores.Go.ParameterList");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalGo.g:1302:4: (otherlv_3= ',' )?
                    int alt13=2;
                    int LA13_0 = input.LA(1);

                    if ( (LA13_0==27) ) {
                        alt13=1;
                    }
                    switch (alt13) {
                        case 1 :
                            // InternalGo.g:1303:5: otherlv_3= ','
                            {
                            otherlv_3=(Token)match(input,27,FOLLOW_6); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_3, grammarAccess.getParametersAccess().getCommaKeyword_2_1());
                              				
                            }

                            }
                            break;

                    }


                    }
                    break;

            }

            otherlv_4=(Token)match(input,19,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getParametersAccess().getRightParenthesisKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleParameters"


    // $ANTLR start "entryRuleParameterList"
    // InternalGo.g:1317:1: entryRuleParameterList returns [EObject current=null] : iv_ruleParameterList= ruleParameterList EOF ;
    public final EObject entryRuleParameterList() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleParameterList = null;


        try {
            // InternalGo.g:1317:54: (iv_ruleParameterList= ruleParameterList EOF )
            // InternalGo.g:1318:2: iv_ruleParameterList= ruleParameterList EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getParameterListRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleParameterList=ruleParameterList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleParameterList; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleParameterList"


    // $ANTLR start "ruleParameterList"
    // InternalGo.g:1324:1: ruleParameterList returns [EObject current=null] : ( ( (lv_ParameterDecl_0_0= ruleParameterDecl ) ) (otherlv_1= ',' ( (lv_ParameterDecl_2_0= ruleParameterDecl ) ) )? ) ;
    public final EObject ruleParameterList() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_ParameterDecl_0_0 = null;

        EObject lv_ParameterDecl_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:1330:2: ( ( ( (lv_ParameterDecl_0_0= ruleParameterDecl ) ) (otherlv_1= ',' ( (lv_ParameterDecl_2_0= ruleParameterDecl ) ) )? ) )
            // InternalGo.g:1331:2: ( ( (lv_ParameterDecl_0_0= ruleParameterDecl ) ) (otherlv_1= ',' ( (lv_ParameterDecl_2_0= ruleParameterDecl ) ) )? )
            {
            // InternalGo.g:1331:2: ( ( (lv_ParameterDecl_0_0= ruleParameterDecl ) ) (otherlv_1= ',' ( (lv_ParameterDecl_2_0= ruleParameterDecl ) ) )? )
            // InternalGo.g:1332:3: ( (lv_ParameterDecl_0_0= ruleParameterDecl ) ) (otherlv_1= ',' ( (lv_ParameterDecl_2_0= ruleParameterDecl ) ) )?
            {
            // InternalGo.g:1332:3: ( (lv_ParameterDecl_0_0= ruleParameterDecl ) )
            // InternalGo.g:1333:4: (lv_ParameterDecl_0_0= ruleParameterDecl )
            {
            // InternalGo.g:1333:4: (lv_ParameterDecl_0_0= ruleParameterDecl )
            // InternalGo.g:1334:5: lv_ParameterDecl_0_0= ruleParameterDecl
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getParameterListAccess().getParameterDeclParameterDeclParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_18);
            lv_ParameterDecl_0_0=ruleParameterDecl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getParameterListRule());
              					}
              					add(
              						current,
              						"ParameterDecl",
              						lv_ParameterDecl_0_0,
              						"com.ufcg.compiladores.Go.ParameterDecl");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:1351:3: (otherlv_1= ',' ( (lv_ParameterDecl_2_0= ruleParameterDecl ) ) )?
            int alt15=2;
            int LA15_0 = input.LA(1);

            if ( (LA15_0==27) ) {
                int LA15_1 = input.LA(2);

                if ( (LA15_1==RULE_LETTER||LA15_1==18||LA15_1==21||LA15_1==23||(LA15_1>=25 && LA15_1<=26)||(LA15_1>=28 && LA15_1<=29)||(LA15_1>=31 && LA15_1<=33)) ) {
                    alt15=1;
                }
            }
            switch (alt15) {
                case 1 :
                    // InternalGo.g:1352:4: otherlv_1= ',' ( (lv_ParameterDecl_2_0= ruleParameterDecl ) )
                    {
                    otherlv_1=(Token)match(input,27,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getParameterListAccess().getCommaKeyword_1_0());
                      			
                    }
                    // InternalGo.g:1356:4: ( (lv_ParameterDecl_2_0= ruleParameterDecl ) )
                    // InternalGo.g:1357:5: (lv_ParameterDecl_2_0= ruleParameterDecl )
                    {
                    // InternalGo.g:1357:5: (lv_ParameterDecl_2_0= ruleParameterDecl )
                    // InternalGo.g:1358:6: lv_ParameterDecl_2_0= ruleParameterDecl
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getParameterListAccess().getParameterDeclParameterDeclParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_ParameterDecl_2_0=ruleParameterDecl();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getParameterListRule());
                      						}
                      						add(
                      							current,
                      							"ParameterDecl",
                      							lv_ParameterDecl_2_0,
                      							"com.ufcg.compiladores.Go.ParameterDecl");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleParameterList"


    // $ANTLR start "entryRuleParameterDecl"
    // InternalGo.g:1380:1: entryRuleParameterDecl returns [EObject current=null] : iv_ruleParameterDecl= ruleParameterDecl EOF ;
    public final EObject entryRuleParameterDecl() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleParameterDecl = null;


        try {
            // InternalGo.g:1380:54: (iv_ruleParameterDecl= ruleParameterDecl EOF )
            // InternalGo.g:1381:2: iv_ruleParameterDecl= ruleParameterDecl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getParameterDeclRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleParameterDecl=ruleParameterDecl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleParameterDecl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleParameterDecl"


    // $ANTLR start "ruleParameterDecl"
    // InternalGo.g:1387:1: ruleParameterDecl returns [EObject current=null] : ( ( (lv_IdentifierList_0_0= ruleIdentifierList ) )? (otherlv_1= '...' )? ( (lv_Type_2_0= ruleType ) ) ) ;
    public final EObject ruleParameterDecl() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_IdentifierList_0_0 = null;

        EObject lv_Type_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:1393:2: ( ( ( (lv_IdentifierList_0_0= ruleIdentifierList ) )? (otherlv_1= '...' )? ( (lv_Type_2_0= ruleType ) ) ) )
            // InternalGo.g:1394:2: ( ( (lv_IdentifierList_0_0= ruleIdentifierList ) )? (otherlv_1= '...' )? ( (lv_Type_2_0= ruleType ) ) )
            {
            // InternalGo.g:1394:2: ( ( (lv_IdentifierList_0_0= ruleIdentifierList ) )? (otherlv_1= '...' )? ( (lv_Type_2_0= ruleType ) ) )
            // InternalGo.g:1395:3: ( (lv_IdentifierList_0_0= ruleIdentifierList ) )? (otherlv_1= '...' )? ( (lv_Type_2_0= ruleType ) )
            {
            // InternalGo.g:1395:3: ( (lv_IdentifierList_0_0= ruleIdentifierList ) )?
            int alt16=2;
            alt16 = dfa16.predict(input);
            switch (alt16) {
                case 1 :
                    // InternalGo.g:1396:4: (lv_IdentifierList_0_0= ruleIdentifierList )
                    {
                    // InternalGo.g:1396:4: (lv_IdentifierList_0_0= ruleIdentifierList )
                    // InternalGo.g:1397:5: lv_IdentifierList_0_0= ruleIdentifierList
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getParameterDeclAccess().getIdentifierListIdentifierListParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_19);
                    lv_IdentifierList_0_0=ruleIdentifierList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getParameterDeclRule());
                      					}
                      					set(
                      						current,
                      						"IdentifierList",
                      						lv_IdentifierList_0_0,
                      						"com.ufcg.compiladores.Go.IdentifierList");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalGo.g:1414:3: (otherlv_1= '...' )?
            int alt17=2;
            int LA17_0 = input.LA(1);

            if ( (LA17_0==28) ) {
                alt17=1;
            }
            switch (alt17) {
                case 1 :
                    // InternalGo.g:1415:4: otherlv_1= '...'
                    {
                    otherlv_1=(Token)match(input,28,FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getParameterDeclAccess().getFullStopFullStopFullStopKeyword_1());
                      			
                    }

                    }
                    break;

            }

            // InternalGo.g:1420:3: ( (lv_Type_2_0= ruleType ) )
            // InternalGo.g:1421:4: (lv_Type_2_0= ruleType )
            {
            // InternalGo.g:1421:4: (lv_Type_2_0= ruleType )
            // InternalGo.g:1422:5: lv_Type_2_0= ruleType
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getParameterDeclAccess().getTypeTypeParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_Type_2_0=ruleType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getParameterDeclRule());
              					}
              					set(
              						current,
              						"Type",
              						lv_Type_2_0,
              						"com.ufcg.compiladores.Go.Type");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleParameterDecl"


    // $ANTLR start "entryRuleInterfaceType"
    // InternalGo.g:1443:1: entryRuleInterfaceType returns [EObject current=null] : iv_ruleInterfaceType= ruleInterfaceType EOF ;
    public final EObject entryRuleInterfaceType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleInterfaceType = null;


        try {
            // InternalGo.g:1443:54: (iv_ruleInterfaceType= ruleInterfaceType EOF )
            // InternalGo.g:1444:2: iv_ruleInterfaceType= ruleInterfaceType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getInterfaceTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleInterfaceType=ruleInterfaceType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleInterfaceType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleInterfaceType"


    // $ANTLR start "ruleInterfaceType"
    // InternalGo.g:1450:1: ruleInterfaceType returns [EObject current=null] : ( () otherlv_1= 'interface' otherlv_2= '{' ( ( (lv_MethodSpec_3_0= ruleMethodSpec ) ) otherlv_4= ';' )? otherlv_5= '}' ) ;
    public final EObject ruleInterfaceType() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        EObject lv_MethodSpec_3_0 = null;



        	enterRule();

        try {
            // InternalGo.g:1456:2: ( ( () otherlv_1= 'interface' otherlv_2= '{' ( ( (lv_MethodSpec_3_0= ruleMethodSpec ) ) otherlv_4= ';' )? otherlv_5= '}' ) )
            // InternalGo.g:1457:2: ( () otherlv_1= 'interface' otherlv_2= '{' ( ( (lv_MethodSpec_3_0= ruleMethodSpec ) ) otherlv_4= ';' )? otherlv_5= '}' )
            {
            // InternalGo.g:1457:2: ( () otherlv_1= 'interface' otherlv_2= '{' ( ( (lv_MethodSpec_3_0= ruleMethodSpec ) ) otherlv_4= ';' )? otherlv_5= '}' )
            // InternalGo.g:1458:3: () otherlv_1= 'interface' otherlv_2= '{' ( ( (lv_MethodSpec_3_0= ruleMethodSpec ) ) otherlv_4= ';' )? otherlv_5= '}'
            {
            // InternalGo.g:1458:3: ()
            // InternalGo.g:1459:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getInterfaceTypeAccess().getInterfaceTypeAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,29,FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getInterfaceTypeAccess().getInterfaceKeyword_1());
              		
            }
            otherlv_2=(Token)match(input,24,FOLLOW_20); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getInterfaceTypeAccess().getLeftCurlyBracketKeyword_2());
              		
            }
            // InternalGo.g:1476:3: ( ( (lv_MethodSpec_3_0= ruleMethodSpec ) ) otherlv_4= ';' )?
            int alt18=2;
            int LA18_0 = input.LA(1);

            if ( (LA18_0==RULE_LETTER) ) {
                alt18=1;
            }
            switch (alt18) {
                case 1 :
                    // InternalGo.g:1477:4: ( (lv_MethodSpec_3_0= ruleMethodSpec ) ) otherlv_4= ';'
                    {
                    // InternalGo.g:1477:4: ( (lv_MethodSpec_3_0= ruleMethodSpec ) )
                    // InternalGo.g:1478:5: (lv_MethodSpec_3_0= ruleMethodSpec )
                    {
                    // InternalGo.g:1478:5: (lv_MethodSpec_3_0= ruleMethodSpec )
                    // InternalGo.g:1479:6: lv_MethodSpec_3_0= ruleMethodSpec
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getInterfaceTypeAccess().getMethodSpecMethodSpecParserRuleCall_3_0_0());
                      					
                    }
                    pushFollow(FOLLOW_3);
                    lv_MethodSpec_3_0=ruleMethodSpec();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getInterfaceTypeRule());
                      						}
                      						set(
                      							current,
                      							"MethodSpec",
                      							lv_MethodSpec_3_0,
                      							"com.ufcg.compiladores.Go.MethodSpec");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_4=(Token)match(input,17,FOLLOW_21); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getInterfaceTypeAccess().getSemicolonKeyword_3_1());
                      			
                    }

                    }
                    break;

            }

            otherlv_5=(Token)match(input,30,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getInterfaceTypeAccess().getRightCurlyBracketKeyword_4());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleInterfaceType"


    // $ANTLR start "entryRuleMethodSpec"
    // InternalGo.g:1509:1: entryRuleMethodSpec returns [EObject current=null] : iv_ruleMethodSpec= ruleMethodSpec EOF ;
    public final EObject entryRuleMethodSpec() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMethodSpec = null;


        try {
            // InternalGo.g:1509:51: (iv_ruleMethodSpec= ruleMethodSpec EOF )
            // InternalGo.g:1510:2: iv_ruleMethodSpec= ruleMethodSpec EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMethodSpecRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMethodSpec=ruleMethodSpec();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMethodSpec; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMethodSpec"


    // $ANTLR start "ruleMethodSpec"
    // InternalGo.g:1516:1: ruleMethodSpec returns [EObject current=null] : ( ( ( (lv_MethodName_0_0= ruleMethodName ) ) ( (lv_Signature_1_0= ruleSignature ) ) ) | ( (lv_InterfaceTypeName_2_0= ruleInterfaceTypeName ) ) ) ;
    public final EObject ruleMethodSpec() throws RecognitionException {
        EObject current = null;

        EObject lv_MethodName_0_0 = null;

        EObject lv_Signature_1_0 = null;

        EObject lv_InterfaceTypeName_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:1522:2: ( ( ( ( (lv_MethodName_0_0= ruleMethodName ) ) ( (lv_Signature_1_0= ruleSignature ) ) ) | ( (lv_InterfaceTypeName_2_0= ruleInterfaceTypeName ) ) ) )
            // InternalGo.g:1523:2: ( ( ( (lv_MethodName_0_0= ruleMethodName ) ) ( (lv_Signature_1_0= ruleSignature ) ) ) | ( (lv_InterfaceTypeName_2_0= ruleInterfaceTypeName ) ) )
            {
            // InternalGo.g:1523:2: ( ( ( (lv_MethodName_0_0= ruleMethodName ) ) ( (lv_Signature_1_0= ruleSignature ) ) ) | ( (lv_InterfaceTypeName_2_0= ruleInterfaceTypeName ) ) )
            int alt19=2;
            alt19 = dfa19.predict(input);
            switch (alt19) {
                case 1 :
                    // InternalGo.g:1524:3: ( ( (lv_MethodName_0_0= ruleMethodName ) ) ( (lv_Signature_1_0= ruleSignature ) ) )
                    {
                    // InternalGo.g:1524:3: ( ( (lv_MethodName_0_0= ruleMethodName ) ) ( (lv_Signature_1_0= ruleSignature ) ) )
                    // InternalGo.g:1525:4: ( (lv_MethodName_0_0= ruleMethodName ) ) ( (lv_Signature_1_0= ruleSignature ) )
                    {
                    // InternalGo.g:1525:4: ( (lv_MethodName_0_0= ruleMethodName ) )
                    // InternalGo.g:1526:5: (lv_MethodName_0_0= ruleMethodName )
                    {
                    // InternalGo.g:1526:5: (lv_MethodName_0_0= ruleMethodName )
                    // InternalGo.g:1527:6: lv_MethodName_0_0= ruleMethodName
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getMethodSpecAccess().getMethodNameMethodNameParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_14);
                    lv_MethodName_0_0=ruleMethodName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getMethodSpecRule());
                      						}
                      						set(
                      							current,
                      							"MethodName",
                      							lv_MethodName_0_0,
                      							"com.ufcg.compiladores.Go.MethodName");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalGo.g:1544:4: ( (lv_Signature_1_0= ruleSignature ) )
                    // InternalGo.g:1545:5: (lv_Signature_1_0= ruleSignature )
                    {
                    // InternalGo.g:1545:5: (lv_Signature_1_0= ruleSignature )
                    // InternalGo.g:1546:6: lv_Signature_1_0= ruleSignature
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getMethodSpecAccess().getSignatureSignatureParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_Signature_1_0=ruleSignature();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getMethodSpecRule());
                      						}
                      						set(
                      							current,
                      							"Signature",
                      							lv_Signature_1_0,
                      							"com.ufcg.compiladores.Go.Signature");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:1565:3: ( (lv_InterfaceTypeName_2_0= ruleInterfaceTypeName ) )
                    {
                    // InternalGo.g:1565:3: ( (lv_InterfaceTypeName_2_0= ruleInterfaceTypeName ) )
                    // InternalGo.g:1566:4: (lv_InterfaceTypeName_2_0= ruleInterfaceTypeName )
                    {
                    // InternalGo.g:1566:4: (lv_InterfaceTypeName_2_0= ruleInterfaceTypeName )
                    // InternalGo.g:1567:5: lv_InterfaceTypeName_2_0= ruleInterfaceTypeName
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getMethodSpecAccess().getInterfaceTypeNameInterfaceTypeNameParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_InterfaceTypeName_2_0=ruleInterfaceTypeName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getMethodSpecRule());
                      					}
                      					set(
                      						current,
                      						"InterfaceTypeName",
                      						lv_InterfaceTypeName_2_0,
                      						"com.ufcg.compiladores.Go.InterfaceTypeName");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMethodSpec"


    // $ANTLR start "entryRuleMethodName"
    // InternalGo.g:1588:1: entryRuleMethodName returns [EObject current=null] : iv_ruleMethodName= ruleMethodName EOF ;
    public final EObject entryRuleMethodName() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMethodName = null;


        try {
            // InternalGo.g:1588:51: (iv_ruleMethodName= ruleMethodName EOF )
            // InternalGo.g:1589:2: iv_ruleMethodName= ruleMethodName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMethodNameRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMethodName=ruleMethodName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMethodName; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMethodName"


    // $ANTLR start "ruleMethodName"
    // InternalGo.g:1595:1: ruleMethodName returns [EObject current=null] : ( (lv_identifier_0_0= ruleidentifier ) ) ;
    public final EObject ruleMethodName() throws RecognitionException {
        EObject current = null;

        EObject lv_identifier_0_0 = null;



        	enterRule();

        try {
            // InternalGo.g:1601:2: ( ( (lv_identifier_0_0= ruleidentifier ) ) )
            // InternalGo.g:1602:2: ( (lv_identifier_0_0= ruleidentifier ) )
            {
            // InternalGo.g:1602:2: ( (lv_identifier_0_0= ruleidentifier ) )
            // InternalGo.g:1603:3: (lv_identifier_0_0= ruleidentifier )
            {
            // InternalGo.g:1603:3: (lv_identifier_0_0= ruleidentifier )
            // InternalGo.g:1604:4: lv_identifier_0_0= ruleidentifier
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getMethodNameAccess().getIdentifierIdentifierParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_identifier_0_0=ruleidentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getMethodNameRule());
              				}
              				set(
              					current,
              					"identifier",
              					lv_identifier_0_0,
              					"com.ufcg.compiladores.Go.identifier");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMethodName"


    // $ANTLR start "entryRuleInterfaceTypeName"
    // InternalGo.g:1624:1: entryRuleInterfaceTypeName returns [EObject current=null] : iv_ruleInterfaceTypeName= ruleInterfaceTypeName EOF ;
    public final EObject entryRuleInterfaceTypeName() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleInterfaceTypeName = null;


        try {
            // InternalGo.g:1624:58: (iv_ruleInterfaceTypeName= ruleInterfaceTypeName EOF )
            // InternalGo.g:1625:2: iv_ruleInterfaceTypeName= ruleInterfaceTypeName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getInterfaceTypeNameRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleInterfaceTypeName=ruleInterfaceTypeName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleInterfaceTypeName; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleInterfaceTypeName"


    // $ANTLR start "ruleInterfaceTypeName"
    // InternalGo.g:1631:1: ruleInterfaceTypeName returns [EObject current=null] : ( (lv_TypeName_0_0= ruleTypeName ) ) ;
    public final EObject ruleInterfaceTypeName() throws RecognitionException {
        EObject current = null;

        EObject lv_TypeName_0_0 = null;



        	enterRule();

        try {
            // InternalGo.g:1637:2: ( ( (lv_TypeName_0_0= ruleTypeName ) ) )
            // InternalGo.g:1638:2: ( (lv_TypeName_0_0= ruleTypeName ) )
            {
            // InternalGo.g:1638:2: ( (lv_TypeName_0_0= ruleTypeName ) )
            // InternalGo.g:1639:3: (lv_TypeName_0_0= ruleTypeName )
            {
            // InternalGo.g:1639:3: (lv_TypeName_0_0= ruleTypeName )
            // InternalGo.g:1640:4: lv_TypeName_0_0= ruleTypeName
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getInterfaceTypeNameAccess().getTypeNameTypeNameParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_TypeName_0_0=ruleTypeName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getInterfaceTypeNameRule());
              				}
              				set(
              					current,
              					"TypeName",
              					lv_TypeName_0_0,
              					"com.ufcg.compiladores.Go.TypeName");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleInterfaceTypeName"


    // $ANTLR start "entryRuleMapType"
    // InternalGo.g:1660:1: entryRuleMapType returns [EObject current=null] : iv_ruleMapType= ruleMapType EOF ;
    public final EObject entryRuleMapType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMapType = null;


        try {
            // InternalGo.g:1660:48: (iv_ruleMapType= ruleMapType EOF )
            // InternalGo.g:1661:2: iv_ruleMapType= ruleMapType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMapTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMapType=ruleMapType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMapType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMapType"


    // $ANTLR start "ruleMapType"
    // InternalGo.g:1667:1: ruleMapType returns [EObject current=null] : (otherlv_0= 'map' otherlv_1= '[' ( (lv_KeyType_2_0= ruleKeyType ) ) otherlv_3= ']' ( (lv_ElementType_4_0= ruleElementType ) ) ) ;
    public final EObject ruleMapType() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_KeyType_2_0 = null;

        EObject lv_ElementType_4_0 = null;



        	enterRule();

        try {
            // InternalGo.g:1673:2: ( (otherlv_0= 'map' otherlv_1= '[' ( (lv_KeyType_2_0= ruleKeyType ) ) otherlv_3= ']' ( (lv_ElementType_4_0= ruleElementType ) ) ) )
            // InternalGo.g:1674:2: (otherlv_0= 'map' otherlv_1= '[' ( (lv_KeyType_2_0= ruleKeyType ) ) otherlv_3= ']' ( (lv_ElementType_4_0= ruleElementType ) ) )
            {
            // InternalGo.g:1674:2: (otherlv_0= 'map' otherlv_1= '[' ( (lv_KeyType_2_0= ruleKeyType ) ) otherlv_3= ']' ( (lv_ElementType_4_0= ruleElementType ) ) )
            // InternalGo.g:1675:3: otherlv_0= 'map' otherlv_1= '[' ( (lv_KeyType_2_0= ruleKeyType ) ) otherlv_3= ']' ( (lv_ElementType_4_0= ruleElementType ) )
            {
            otherlv_0=(Token)match(input,31,FOLLOW_22); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getMapTypeAccess().getMapKeyword_0());
              		
            }
            otherlv_1=(Token)match(input,21,FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getMapTypeAccess().getLeftSquareBracketKeyword_1());
              		
            }
            // InternalGo.g:1683:3: ( (lv_KeyType_2_0= ruleKeyType ) )
            // InternalGo.g:1684:4: (lv_KeyType_2_0= ruleKeyType )
            {
            // InternalGo.g:1684:4: (lv_KeyType_2_0= ruleKeyType )
            // InternalGo.g:1685:5: lv_KeyType_2_0= ruleKeyType
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMapTypeAccess().getKeyTypeKeyTypeParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_10);
            lv_KeyType_2_0=ruleKeyType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMapTypeRule());
              					}
              					set(
              						current,
              						"KeyType",
              						lv_KeyType_2_0,
              						"com.ufcg.compiladores.Go.KeyType");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,22,FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getMapTypeAccess().getRightSquareBracketKeyword_3());
              		
            }
            // InternalGo.g:1706:3: ( (lv_ElementType_4_0= ruleElementType ) )
            // InternalGo.g:1707:4: (lv_ElementType_4_0= ruleElementType )
            {
            // InternalGo.g:1707:4: (lv_ElementType_4_0= ruleElementType )
            // InternalGo.g:1708:5: lv_ElementType_4_0= ruleElementType
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMapTypeAccess().getElementTypeElementTypeParserRuleCall_4_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_ElementType_4_0=ruleElementType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMapTypeRule());
              					}
              					set(
              						current,
              						"ElementType",
              						lv_ElementType_4_0,
              						"com.ufcg.compiladores.Go.ElementType");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMapType"


    // $ANTLR start "entryRuleKeyType"
    // InternalGo.g:1729:1: entryRuleKeyType returns [EObject current=null] : iv_ruleKeyType= ruleKeyType EOF ;
    public final EObject entryRuleKeyType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleKeyType = null;


        try {
            // InternalGo.g:1729:48: (iv_ruleKeyType= ruleKeyType EOF )
            // InternalGo.g:1730:2: iv_ruleKeyType= ruleKeyType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getKeyTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleKeyType=ruleKeyType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleKeyType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleKeyType"


    // $ANTLR start "ruleKeyType"
    // InternalGo.g:1736:1: ruleKeyType returns [EObject current=null] : ( (lv_Type_0_0= ruleType ) ) ;
    public final EObject ruleKeyType() throws RecognitionException {
        EObject current = null;

        EObject lv_Type_0_0 = null;



        	enterRule();

        try {
            // InternalGo.g:1742:2: ( ( (lv_Type_0_0= ruleType ) ) )
            // InternalGo.g:1743:2: ( (lv_Type_0_0= ruleType ) )
            {
            // InternalGo.g:1743:2: ( (lv_Type_0_0= ruleType ) )
            // InternalGo.g:1744:3: (lv_Type_0_0= ruleType )
            {
            // InternalGo.g:1744:3: (lv_Type_0_0= ruleType )
            // InternalGo.g:1745:4: lv_Type_0_0= ruleType
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getKeyTypeAccess().getTypeTypeParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_Type_0_0=ruleType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getKeyTypeRule());
              				}
              				set(
              					current,
              					"Type",
              					lv_Type_0_0,
              					"com.ufcg.compiladores.Go.Type");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleKeyType"


    // $ANTLR start "entryRuleChannelType"
    // InternalGo.g:1765:1: entryRuleChannelType returns [EObject current=null] : iv_ruleChannelType= ruleChannelType EOF ;
    public final EObject entryRuleChannelType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleChannelType = null;


        try {
            // InternalGo.g:1765:52: (iv_ruleChannelType= ruleChannelType EOF )
            // InternalGo.g:1766:2: iv_ruleChannelType= ruleChannelType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getChannelTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleChannelType=ruleChannelType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleChannelType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleChannelType"


    // $ANTLR start "ruleChannelType"
    // InternalGo.g:1772:1: ruleChannelType returns [EObject current=null] : ( (otherlv_0= 'chan' | (otherlv_1= 'chan' otherlv_2= '<-' ) | (otherlv_3= '<-' otherlv_4= 'chan' ) ) ( (lv_ElementType_5_0= ruleElementType ) ) ) ;
    public final EObject ruleChannelType() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        EObject lv_ElementType_5_0 = null;



        	enterRule();

        try {
            // InternalGo.g:1778:2: ( ( (otherlv_0= 'chan' | (otherlv_1= 'chan' otherlv_2= '<-' ) | (otherlv_3= '<-' otherlv_4= 'chan' ) ) ( (lv_ElementType_5_0= ruleElementType ) ) ) )
            // InternalGo.g:1779:2: ( (otherlv_0= 'chan' | (otherlv_1= 'chan' otherlv_2= '<-' ) | (otherlv_3= '<-' otherlv_4= 'chan' ) ) ( (lv_ElementType_5_0= ruleElementType ) ) )
            {
            // InternalGo.g:1779:2: ( (otherlv_0= 'chan' | (otherlv_1= 'chan' otherlv_2= '<-' ) | (otherlv_3= '<-' otherlv_4= 'chan' ) ) ( (lv_ElementType_5_0= ruleElementType ) ) )
            // InternalGo.g:1780:3: (otherlv_0= 'chan' | (otherlv_1= 'chan' otherlv_2= '<-' ) | (otherlv_3= '<-' otherlv_4= 'chan' ) ) ( (lv_ElementType_5_0= ruleElementType ) )
            {
            // InternalGo.g:1780:3: (otherlv_0= 'chan' | (otherlv_1= 'chan' otherlv_2= '<-' ) | (otherlv_3= '<-' otherlv_4= 'chan' ) )
            int alt20=3;
            int LA20_0 = input.LA(1);

            if ( (LA20_0==32) ) {
                int LA20_1 = input.LA(2);

                if ( (synpred28_InternalGo()) ) {
                    alt20=1;
                }
                else if ( (synpred29_InternalGo()) ) {
                    alt20=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 20, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA20_0==33) ) {
                alt20=3;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 20, 0, input);

                throw nvae;
            }
            switch (alt20) {
                case 1 :
                    // InternalGo.g:1781:4: otherlv_0= 'chan'
                    {
                    otherlv_0=(Token)match(input,32,FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getChannelTypeAccess().getChanKeyword_0_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalGo.g:1786:4: (otherlv_1= 'chan' otherlv_2= '<-' )
                    {
                    // InternalGo.g:1786:4: (otherlv_1= 'chan' otherlv_2= '<-' )
                    // InternalGo.g:1787:5: otherlv_1= 'chan' otherlv_2= '<-'
                    {
                    otherlv_1=(Token)match(input,32,FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getChannelTypeAccess().getChanKeyword_0_1_0());
                      				
                    }
                    otherlv_2=(Token)match(input,33,FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_2, grammarAccess.getChannelTypeAccess().getLessThanSignHyphenMinusKeyword_0_1_1());
                      				
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalGo.g:1797:4: (otherlv_3= '<-' otherlv_4= 'chan' )
                    {
                    // InternalGo.g:1797:4: (otherlv_3= '<-' otherlv_4= 'chan' )
                    // InternalGo.g:1798:5: otherlv_3= '<-' otherlv_4= 'chan'
                    {
                    otherlv_3=(Token)match(input,33,FOLLOW_24); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_3, grammarAccess.getChannelTypeAccess().getLessThanSignHyphenMinusKeyword_0_2_0());
                      				
                    }
                    otherlv_4=(Token)match(input,32,FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_4, grammarAccess.getChannelTypeAccess().getChanKeyword_0_2_1());
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalGo.g:1808:3: ( (lv_ElementType_5_0= ruleElementType ) )
            // InternalGo.g:1809:4: (lv_ElementType_5_0= ruleElementType )
            {
            // InternalGo.g:1809:4: (lv_ElementType_5_0= ruleElementType )
            // InternalGo.g:1810:5: lv_ElementType_5_0= ruleElementType
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getChannelTypeAccess().getElementTypeElementTypeParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_ElementType_5_0=ruleElementType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getChannelTypeRule());
              					}
              					set(
              						current,
              						"ElementType",
              						lv_ElementType_5_0,
              						"com.ufcg.compiladores.Go.ElementType");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleChannelType"


    // $ANTLR start "entryRuleBlock"
    // InternalGo.g:1831:1: entryRuleBlock returns [EObject current=null] : iv_ruleBlock= ruleBlock EOF ;
    public final EObject entryRuleBlock() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBlock = null;


        try {
            // InternalGo.g:1831:46: (iv_ruleBlock= ruleBlock EOF )
            // InternalGo.g:1832:2: iv_ruleBlock= ruleBlock EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBlockRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBlock=ruleBlock();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBlock; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBlock"


    // $ANTLR start "ruleBlock"
    // InternalGo.g:1838:1: ruleBlock returns [EObject current=null] : (otherlv_0= '{' ( (lv_StatementList_1_0= ruleStatementList ) ) otherlv_2= '}' ) ;
    public final EObject ruleBlock() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject lv_StatementList_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:1844:2: ( (otherlv_0= '{' ( (lv_StatementList_1_0= ruleStatementList ) ) otherlv_2= '}' ) )
            // InternalGo.g:1845:2: (otherlv_0= '{' ( (lv_StatementList_1_0= ruleStatementList ) ) otherlv_2= '}' )
            {
            // InternalGo.g:1845:2: (otherlv_0= '{' ( (lv_StatementList_1_0= ruleStatementList ) ) otherlv_2= '}' )
            // InternalGo.g:1846:3: otherlv_0= '{' ( (lv_StatementList_1_0= ruleStatementList ) ) otherlv_2= '}'
            {
            otherlv_0=(Token)match(input,24,FOLLOW_25); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getBlockAccess().getLeftCurlyBracketKeyword_0());
              		
            }
            // InternalGo.g:1850:3: ( (lv_StatementList_1_0= ruleStatementList ) )
            // InternalGo.g:1851:4: (lv_StatementList_1_0= ruleStatementList )
            {
            // InternalGo.g:1851:4: (lv_StatementList_1_0= ruleStatementList )
            // InternalGo.g:1852:5: lv_StatementList_1_0= ruleStatementList
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getBlockAccess().getStatementListStatementListParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_21);
            lv_StatementList_1_0=ruleStatementList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getBlockRule());
              					}
              					set(
              						current,
              						"StatementList",
              						lv_StatementList_1_0,
              						"com.ufcg.compiladores.Go.StatementList");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,30,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getBlockAccess().getRightCurlyBracketKeyword_2());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBlock"


    // $ANTLR start "entryRuleStatementList"
    // InternalGo.g:1877:1: entryRuleStatementList returns [EObject current=null] : iv_ruleStatementList= ruleStatementList EOF ;
    public final EObject entryRuleStatementList() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStatementList = null;


        try {
            // InternalGo.g:1877:54: (iv_ruleStatementList= ruleStatementList EOF )
            // InternalGo.g:1878:2: iv_ruleStatementList= ruleStatementList EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStatementListRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleStatementList=ruleStatementList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStatementList; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStatementList"


    // $ANTLR start "ruleStatementList"
    // InternalGo.g:1884:1: ruleStatementList returns [EObject current=null] : ( () ( ( (lv_Statement_1_0= ruleStatement ) ) otherlv_2= ';' )* ) ;
    public final EObject ruleStatementList() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject lv_Statement_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:1890:2: ( ( () ( ( (lv_Statement_1_0= ruleStatement ) ) otherlv_2= ';' )* ) )
            // InternalGo.g:1891:2: ( () ( ( (lv_Statement_1_0= ruleStatement ) ) otherlv_2= ';' )* )
            {
            // InternalGo.g:1891:2: ( () ( ( (lv_Statement_1_0= ruleStatement ) ) otherlv_2= ';' )* )
            // InternalGo.g:1892:3: () ( ( (lv_Statement_1_0= ruleStatement ) ) otherlv_2= ';' )*
            {
            // InternalGo.g:1892:3: ()
            // InternalGo.g:1893:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getStatementListAccess().getStatementListAction_0(),
              					current);
              			
            }

            }

            // InternalGo.g:1902:3: ( ( (lv_Statement_1_0= ruleStatement ) ) otherlv_2= ';' )*
            loop21:
            do {
                int alt21=2;
                int LA21_0 = input.LA(1);

                if ( ((LA21_0>=RULE_ANY_OTHER && LA21_0<=RULE_DECIMAL_DIGIT)||LA21_0==18||(LA21_0>=20 && LA21_0<=21)||(LA21_0>=23 && LA21_0<=26)||LA21_0==29||(LA21_0>=31 && LA21_0<=34)||(LA21_0>=36 && LA21_0<=37)||(LA21_0>=48 && LA21_0<=49)||LA21_0==56||(LA21_0>=58 && LA21_0<=59)||LA21_0==62||LA21_0==64||LA21_0==67||(LA21_0>=69 && LA21_0<=76)||LA21_0==79||(LA21_0>=82 && LA21_0<=83)) ) {
                    alt21=1;
                }


                switch (alt21) {
            	case 1 :
            	    // InternalGo.g:1903:4: ( (lv_Statement_1_0= ruleStatement ) ) otherlv_2= ';'
            	    {
            	    // InternalGo.g:1903:4: ( (lv_Statement_1_0= ruleStatement ) )
            	    // InternalGo.g:1904:5: (lv_Statement_1_0= ruleStatement )
            	    {
            	    // InternalGo.g:1904:5: (lv_Statement_1_0= ruleStatement )
            	    // InternalGo.g:1905:6: lv_Statement_1_0= ruleStatement
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getStatementListAccess().getStatementStatementParserRuleCall_1_0_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_3);
            	    lv_Statement_1_0=ruleStatement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getStatementListRule());
            	      						}
            	      						add(
            	      							current,
            	      							"Statement",
            	      							lv_Statement_1_0,
            	      							"com.ufcg.compiladores.Go.Statement");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    otherlv_2=(Token)match(input,17,FOLLOW_26); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_2, grammarAccess.getStatementListAccess().getSemicolonKeyword_1_1());
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop21;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStatementList"


    // $ANTLR start "entryRuleDeclaration"
    // InternalGo.g:1931:1: entryRuleDeclaration returns [EObject current=null] : iv_ruleDeclaration= ruleDeclaration EOF ;
    public final EObject entryRuleDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDeclaration = null;


        try {
            // InternalGo.g:1931:52: (iv_ruleDeclaration= ruleDeclaration EOF )
            // InternalGo.g:1932:2: iv_ruleDeclaration= ruleDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDeclaration=ruleDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDeclaration"


    // $ANTLR start "ruleDeclaration"
    // InternalGo.g:1938:1: ruleDeclaration returns [EObject current=null] : ( ( (lv_ConstDecl_0_0= ruleConstDecl ) ) | ( (lv_TypeDecl_1_0= ruleTypeDecl ) ) | ( (lv_VarDecl_2_0= ruleVarDecl ) ) ) ;
    public final EObject ruleDeclaration() throws RecognitionException {
        EObject current = null;

        EObject lv_ConstDecl_0_0 = null;

        EObject lv_TypeDecl_1_0 = null;

        EObject lv_VarDecl_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:1944:2: ( ( ( (lv_ConstDecl_0_0= ruleConstDecl ) ) | ( (lv_TypeDecl_1_0= ruleTypeDecl ) ) | ( (lv_VarDecl_2_0= ruleVarDecl ) ) ) )
            // InternalGo.g:1945:2: ( ( (lv_ConstDecl_0_0= ruleConstDecl ) ) | ( (lv_TypeDecl_1_0= ruleTypeDecl ) ) | ( (lv_VarDecl_2_0= ruleVarDecl ) ) )
            {
            // InternalGo.g:1945:2: ( ( (lv_ConstDecl_0_0= ruleConstDecl ) ) | ( (lv_TypeDecl_1_0= ruleTypeDecl ) ) | ( (lv_VarDecl_2_0= ruleVarDecl ) ) )
            int alt22=3;
            switch ( input.LA(1) ) {
            case 34:
                {
                alt22=1;
                }
                break;
            case 36:
                {
                alt22=2;
                }
                break;
            case 37:
                {
                alt22=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 22, 0, input);

                throw nvae;
            }

            switch (alt22) {
                case 1 :
                    // InternalGo.g:1946:3: ( (lv_ConstDecl_0_0= ruleConstDecl ) )
                    {
                    // InternalGo.g:1946:3: ( (lv_ConstDecl_0_0= ruleConstDecl ) )
                    // InternalGo.g:1947:4: (lv_ConstDecl_0_0= ruleConstDecl )
                    {
                    // InternalGo.g:1947:4: (lv_ConstDecl_0_0= ruleConstDecl )
                    // InternalGo.g:1948:5: lv_ConstDecl_0_0= ruleConstDecl
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getDeclarationAccess().getConstDeclConstDeclParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_ConstDecl_0_0=ruleConstDecl();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getDeclarationRule());
                      					}
                      					set(
                      						current,
                      						"ConstDecl",
                      						lv_ConstDecl_0_0,
                      						"com.ufcg.compiladores.Go.ConstDecl");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:1966:3: ( (lv_TypeDecl_1_0= ruleTypeDecl ) )
                    {
                    // InternalGo.g:1966:3: ( (lv_TypeDecl_1_0= ruleTypeDecl ) )
                    // InternalGo.g:1967:4: (lv_TypeDecl_1_0= ruleTypeDecl )
                    {
                    // InternalGo.g:1967:4: (lv_TypeDecl_1_0= ruleTypeDecl )
                    // InternalGo.g:1968:5: lv_TypeDecl_1_0= ruleTypeDecl
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getDeclarationAccess().getTypeDeclTypeDeclParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_TypeDecl_1_0=ruleTypeDecl();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getDeclarationRule());
                      					}
                      					set(
                      						current,
                      						"TypeDecl",
                      						lv_TypeDecl_1_0,
                      						"com.ufcg.compiladores.Go.TypeDecl");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalGo.g:1986:3: ( (lv_VarDecl_2_0= ruleVarDecl ) )
                    {
                    // InternalGo.g:1986:3: ( (lv_VarDecl_2_0= ruleVarDecl ) )
                    // InternalGo.g:1987:4: (lv_VarDecl_2_0= ruleVarDecl )
                    {
                    // InternalGo.g:1987:4: (lv_VarDecl_2_0= ruleVarDecl )
                    // InternalGo.g:1988:5: lv_VarDecl_2_0= ruleVarDecl
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getDeclarationAccess().getVarDeclVarDeclParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_VarDecl_2_0=ruleVarDecl();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getDeclarationRule());
                      					}
                      					set(
                      						current,
                      						"VarDecl",
                      						lv_VarDecl_2_0,
                      						"com.ufcg.compiladores.Go.VarDecl");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDeclaration"


    // $ANTLR start "entryRuleTopLevelDecl"
    // InternalGo.g:2009:1: entryRuleTopLevelDecl returns [EObject current=null] : iv_ruleTopLevelDecl= ruleTopLevelDecl EOF ;
    public final EObject entryRuleTopLevelDecl() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTopLevelDecl = null;


        try {
            // InternalGo.g:2009:53: (iv_ruleTopLevelDecl= ruleTopLevelDecl EOF )
            // InternalGo.g:2010:2: iv_ruleTopLevelDecl= ruleTopLevelDecl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTopLevelDeclRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTopLevelDecl=ruleTopLevelDecl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTopLevelDecl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTopLevelDecl"


    // $ANTLR start "ruleTopLevelDecl"
    // InternalGo.g:2016:1: ruleTopLevelDecl returns [EObject current=null] : ( ( (lv_Declaration_0_0= ruleDeclaration ) ) | (otherlv_1= 'func' ( (lv_topLevelDeclLinha_2_0= ruletopLevelDeclLinha ) ) ) ) ;
    public final EObject ruleTopLevelDecl() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_Declaration_0_0 = null;

        EObject lv_topLevelDeclLinha_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:2022:2: ( ( ( (lv_Declaration_0_0= ruleDeclaration ) ) | (otherlv_1= 'func' ( (lv_topLevelDeclLinha_2_0= ruletopLevelDeclLinha ) ) ) ) )
            // InternalGo.g:2023:2: ( ( (lv_Declaration_0_0= ruleDeclaration ) ) | (otherlv_1= 'func' ( (lv_topLevelDeclLinha_2_0= ruletopLevelDeclLinha ) ) ) )
            {
            // InternalGo.g:2023:2: ( ( (lv_Declaration_0_0= ruleDeclaration ) ) | (otherlv_1= 'func' ( (lv_topLevelDeclLinha_2_0= ruletopLevelDeclLinha ) ) ) )
            int alt23=2;
            int LA23_0 = input.LA(1);

            if ( (LA23_0==34||(LA23_0>=36 && LA23_0<=37)) ) {
                alt23=1;
            }
            else if ( (LA23_0==26) ) {
                alt23=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 23, 0, input);

                throw nvae;
            }
            switch (alt23) {
                case 1 :
                    // InternalGo.g:2024:3: ( (lv_Declaration_0_0= ruleDeclaration ) )
                    {
                    // InternalGo.g:2024:3: ( (lv_Declaration_0_0= ruleDeclaration ) )
                    // InternalGo.g:2025:4: (lv_Declaration_0_0= ruleDeclaration )
                    {
                    // InternalGo.g:2025:4: (lv_Declaration_0_0= ruleDeclaration )
                    // InternalGo.g:2026:5: lv_Declaration_0_0= ruleDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getTopLevelDeclAccess().getDeclarationDeclarationParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_Declaration_0_0=ruleDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getTopLevelDeclRule());
                      					}
                      					set(
                      						current,
                      						"Declaration",
                      						lv_Declaration_0_0,
                      						"com.ufcg.compiladores.Go.Declaration");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:2044:3: (otherlv_1= 'func' ( (lv_topLevelDeclLinha_2_0= ruletopLevelDeclLinha ) ) )
                    {
                    // InternalGo.g:2044:3: (otherlv_1= 'func' ( (lv_topLevelDeclLinha_2_0= ruletopLevelDeclLinha ) ) )
                    // InternalGo.g:2045:4: otherlv_1= 'func' ( (lv_topLevelDeclLinha_2_0= ruletopLevelDeclLinha ) )
                    {
                    otherlv_1=(Token)match(input,26,FOLLOW_27); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getTopLevelDeclAccess().getFuncKeyword_1_0());
                      			
                    }
                    // InternalGo.g:2049:4: ( (lv_topLevelDeclLinha_2_0= ruletopLevelDeclLinha ) )
                    // InternalGo.g:2050:5: (lv_topLevelDeclLinha_2_0= ruletopLevelDeclLinha )
                    {
                    // InternalGo.g:2050:5: (lv_topLevelDeclLinha_2_0= ruletopLevelDeclLinha )
                    // InternalGo.g:2051:6: lv_topLevelDeclLinha_2_0= ruletopLevelDeclLinha
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTopLevelDeclAccess().getTopLevelDeclLinhaTopLevelDeclLinhaParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_topLevelDeclLinha_2_0=ruletopLevelDeclLinha();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTopLevelDeclRule());
                      						}
                      						set(
                      							current,
                      							"topLevelDeclLinha",
                      							lv_topLevelDeclLinha_2_0,
                      							"com.ufcg.compiladores.Go.topLevelDeclLinha");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTopLevelDecl"


    // $ANTLR start "entryRuletopLevelDeclLinha"
    // InternalGo.g:2073:1: entryRuletopLevelDeclLinha returns [EObject current=null] : iv_ruletopLevelDeclLinha= ruletopLevelDeclLinha EOF ;
    public final EObject entryRuletopLevelDeclLinha() throws RecognitionException {
        EObject current = null;

        EObject iv_ruletopLevelDeclLinha = null;


        try {
            // InternalGo.g:2073:58: (iv_ruletopLevelDeclLinha= ruletopLevelDeclLinha EOF )
            // InternalGo.g:2074:2: iv_ruletopLevelDeclLinha= ruletopLevelDeclLinha EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTopLevelDeclLinhaRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruletopLevelDeclLinha=ruletopLevelDeclLinha();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruletopLevelDeclLinha; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuletopLevelDeclLinha"


    // $ANTLR start "ruletopLevelDeclLinha"
    // InternalGo.g:2080:1: ruletopLevelDeclLinha returns [EObject current=null] : ( ( ( (lv_FunctionName_0_0= ruleFunctionName ) ) ( (lv_Signature_1_0= ruleSignature ) ) ( (lv_FunctionBody_2_0= ruleFunctionBody ) )? ) | ( ( (lv_Receiver_3_0= ruleReceiver ) ) ( (lv_MethodName_4_0= ruleMethodName ) ) ( (lv_Signature_5_0= ruleSignature ) ) ( (lv_FunctionBody_6_0= ruleFunctionBody ) )? ) ) ;
    public final EObject ruletopLevelDeclLinha() throws RecognitionException {
        EObject current = null;

        EObject lv_FunctionName_0_0 = null;

        EObject lv_Signature_1_0 = null;

        EObject lv_FunctionBody_2_0 = null;

        EObject lv_Receiver_3_0 = null;

        EObject lv_MethodName_4_0 = null;

        EObject lv_Signature_5_0 = null;

        EObject lv_FunctionBody_6_0 = null;



        	enterRule();

        try {
            // InternalGo.g:2086:2: ( ( ( ( (lv_FunctionName_0_0= ruleFunctionName ) ) ( (lv_Signature_1_0= ruleSignature ) ) ( (lv_FunctionBody_2_0= ruleFunctionBody ) )? ) | ( ( (lv_Receiver_3_0= ruleReceiver ) ) ( (lv_MethodName_4_0= ruleMethodName ) ) ( (lv_Signature_5_0= ruleSignature ) ) ( (lv_FunctionBody_6_0= ruleFunctionBody ) )? ) ) )
            // InternalGo.g:2087:2: ( ( ( (lv_FunctionName_0_0= ruleFunctionName ) ) ( (lv_Signature_1_0= ruleSignature ) ) ( (lv_FunctionBody_2_0= ruleFunctionBody ) )? ) | ( ( (lv_Receiver_3_0= ruleReceiver ) ) ( (lv_MethodName_4_0= ruleMethodName ) ) ( (lv_Signature_5_0= ruleSignature ) ) ( (lv_FunctionBody_6_0= ruleFunctionBody ) )? ) )
            {
            // InternalGo.g:2087:2: ( ( ( (lv_FunctionName_0_0= ruleFunctionName ) ) ( (lv_Signature_1_0= ruleSignature ) ) ( (lv_FunctionBody_2_0= ruleFunctionBody ) )? ) | ( ( (lv_Receiver_3_0= ruleReceiver ) ) ( (lv_MethodName_4_0= ruleMethodName ) ) ( (lv_Signature_5_0= ruleSignature ) ) ( (lv_FunctionBody_6_0= ruleFunctionBody ) )? ) )
            int alt26=2;
            int LA26_0 = input.LA(1);

            if ( (LA26_0==RULE_LETTER) ) {
                alt26=1;
            }
            else if ( (LA26_0==18) ) {
                alt26=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 26, 0, input);

                throw nvae;
            }
            switch (alt26) {
                case 1 :
                    // InternalGo.g:2088:3: ( ( (lv_FunctionName_0_0= ruleFunctionName ) ) ( (lv_Signature_1_0= ruleSignature ) ) ( (lv_FunctionBody_2_0= ruleFunctionBody ) )? )
                    {
                    // InternalGo.g:2088:3: ( ( (lv_FunctionName_0_0= ruleFunctionName ) ) ( (lv_Signature_1_0= ruleSignature ) ) ( (lv_FunctionBody_2_0= ruleFunctionBody ) )? )
                    // InternalGo.g:2089:4: ( (lv_FunctionName_0_0= ruleFunctionName ) ) ( (lv_Signature_1_0= ruleSignature ) ) ( (lv_FunctionBody_2_0= ruleFunctionBody ) )?
                    {
                    // InternalGo.g:2089:4: ( (lv_FunctionName_0_0= ruleFunctionName ) )
                    // InternalGo.g:2090:5: (lv_FunctionName_0_0= ruleFunctionName )
                    {
                    // InternalGo.g:2090:5: (lv_FunctionName_0_0= ruleFunctionName )
                    // InternalGo.g:2091:6: lv_FunctionName_0_0= ruleFunctionName
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTopLevelDeclLinhaAccess().getFunctionNameFunctionNameParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_14);
                    lv_FunctionName_0_0=ruleFunctionName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTopLevelDeclLinhaRule());
                      						}
                      						set(
                      							current,
                      							"FunctionName",
                      							lv_FunctionName_0_0,
                      							"com.ufcg.compiladores.Go.FunctionName");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalGo.g:2108:4: ( (lv_Signature_1_0= ruleSignature ) )
                    // InternalGo.g:2109:5: (lv_Signature_1_0= ruleSignature )
                    {
                    // InternalGo.g:2109:5: (lv_Signature_1_0= ruleSignature )
                    // InternalGo.g:2110:6: lv_Signature_1_0= ruleSignature
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTopLevelDeclLinhaAccess().getSignatureSignatureParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_28);
                    lv_Signature_1_0=ruleSignature();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTopLevelDeclLinhaRule());
                      						}
                      						set(
                      							current,
                      							"Signature",
                      							lv_Signature_1_0,
                      							"com.ufcg.compiladores.Go.Signature");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalGo.g:2127:4: ( (lv_FunctionBody_2_0= ruleFunctionBody ) )?
                    int alt24=2;
                    int LA24_0 = input.LA(1);

                    if ( (LA24_0==24) ) {
                        alt24=1;
                    }
                    switch (alt24) {
                        case 1 :
                            // InternalGo.g:2128:5: (lv_FunctionBody_2_0= ruleFunctionBody )
                            {
                            // InternalGo.g:2128:5: (lv_FunctionBody_2_0= ruleFunctionBody )
                            // InternalGo.g:2129:6: lv_FunctionBody_2_0= ruleFunctionBody
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getTopLevelDeclLinhaAccess().getFunctionBodyFunctionBodyParserRuleCall_0_2_0());
                              					
                            }
                            pushFollow(FOLLOW_2);
                            lv_FunctionBody_2_0=ruleFunctionBody();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getTopLevelDeclLinhaRule());
                              						}
                              						set(
                              							current,
                              							"FunctionBody",
                              							lv_FunctionBody_2_0,
                              							"com.ufcg.compiladores.Go.FunctionBody");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:2148:3: ( ( (lv_Receiver_3_0= ruleReceiver ) ) ( (lv_MethodName_4_0= ruleMethodName ) ) ( (lv_Signature_5_0= ruleSignature ) ) ( (lv_FunctionBody_6_0= ruleFunctionBody ) )? )
                    {
                    // InternalGo.g:2148:3: ( ( (lv_Receiver_3_0= ruleReceiver ) ) ( (lv_MethodName_4_0= ruleMethodName ) ) ( (lv_Signature_5_0= ruleSignature ) ) ( (lv_FunctionBody_6_0= ruleFunctionBody ) )? )
                    // InternalGo.g:2149:4: ( (lv_Receiver_3_0= ruleReceiver ) ) ( (lv_MethodName_4_0= ruleMethodName ) ) ( (lv_Signature_5_0= ruleSignature ) ) ( (lv_FunctionBody_6_0= ruleFunctionBody ) )?
                    {
                    // InternalGo.g:2149:4: ( (lv_Receiver_3_0= ruleReceiver ) )
                    // InternalGo.g:2150:5: (lv_Receiver_3_0= ruleReceiver )
                    {
                    // InternalGo.g:2150:5: (lv_Receiver_3_0= ruleReceiver )
                    // InternalGo.g:2151:6: lv_Receiver_3_0= ruleReceiver
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTopLevelDeclLinhaAccess().getReceiverReceiverParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_8);
                    lv_Receiver_3_0=ruleReceiver();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTopLevelDeclLinhaRule());
                      						}
                      						set(
                      							current,
                      							"Receiver",
                      							lv_Receiver_3_0,
                      							"com.ufcg.compiladores.Go.Receiver");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalGo.g:2168:4: ( (lv_MethodName_4_0= ruleMethodName ) )
                    // InternalGo.g:2169:5: (lv_MethodName_4_0= ruleMethodName )
                    {
                    // InternalGo.g:2169:5: (lv_MethodName_4_0= ruleMethodName )
                    // InternalGo.g:2170:6: lv_MethodName_4_0= ruleMethodName
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTopLevelDeclLinhaAccess().getMethodNameMethodNameParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_14);
                    lv_MethodName_4_0=ruleMethodName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTopLevelDeclLinhaRule());
                      						}
                      						set(
                      							current,
                      							"MethodName",
                      							lv_MethodName_4_0,
                      							"com.ufcg.compiladores.Go.MethodName");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalGo.g:2187:4: ( (lv_Signature_5_0= ruleSignature ) )
                    // InternalGo.g:2188:5: (lv_Signature_5_0= ruleSignature )
                    {
                    // InternalGo.g:2188:5: (lv_Signature_5_0= ruleSignature )
                    // InternalGo.g:2189:6: lv_Signature_5_0= ruleSignature
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTopLevelDeclLinhaAccess().getSignatureSignatureParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_28);
                    lv_Signature_5_0=ruleSignature();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTopLevelDeclLinhaRule());
                      						}
                      						set(
                      							current,
                      							"Signature",
                      							lv_Signature_5_0,
                      							"com.ufcg.compiladores.Go.Signature");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalGo.g:2206:4: ( (lv_FunctionBody_6_0= ruleFunctionBody ) )?
                    int alt25=2;
                    int LA25_0 = input.LA(1);

                    if ( (LA25_0==24) ) {
                        alt25=1;
                    }
                    switch (alt25) {
                        case 1 :
                            // InternalGo.g:2207:5: (lv_FunctionBody_6_0= ruleFunctionBody )
                            {
                            // InternalGo.g:2207:5: (lv_FunctionBody_6_0= ruleFunctionBody )
                            // InternalGo.g:2208:6: lv_FunctionBody_6_0= ruleFunctionBody
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getTopLevelDeclLinhaAccess().getFunctionBodyFunctionBodyParserRuleCall_1_3_0());
                              					
                            }
                            pushFollow(FOLLOW_2);
                            lv_FunctionBody_6_0=ruleFunctionBody();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getTopLevelDeclLinhaRule());
                              						}
                              						set(
                              							current,
                              							"FunctionBody",
                              							lv_FunctionBody_6_0,
                              							"com.ufcg.compiladores.Go.FunctionBody");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruletopLevelDeclLinha"


    // $ANTLR start "entryRuleConstDecl"
    // InternalGo.g:2230:1: entryRuleConstDecl returns [EObject current=null] : iv_ruleConstDecl= ruleConstDecl EOF ;
    public final EObject entryRuleConstDecl() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConstDecl = null;


        try {
            // InternalGo.g:2230:50: (iv_ruleConstDecl= ruleConstDecl EOF )
            // InternalGo.g:2231:2: iv_ruleConstDecl= ruleConstDecl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConstDeclRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConstDecl=ruleConstDecl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConstDecl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConstDecl"


    // $ANTLR start "ruleConstDecl"
    // InternalGo.g:2237:1: ruleConstDecl returns [EObject current=null] : ( () otherlv_1= 'const' ( ( (lv_ConstSpec_2_0= ruleConstSpec ) ) | (otherlv_3= '(' ( ( (lv_ConstSpec_4_0= ruleConstSpec ) ) otherlv_5= ';' )? otherlv_6= ')' ) ) ) ;
    public final EObject ruleConstDecl() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        EObject lv_ConstSpec_2_0 = null;

        EObject lv_ConstSpec_4_0 = null;



        	enterRule();

        try {
            // InternalGo.g:2243:2: ( ( () otherlv_1= 'const' ( ( (lv_ConstSpec_2_0= ruleConstSpec ) ) | (otherlv_3= '(' ( ( (lv_ConstSpec_4_0= ruleConstSpec ) ) otherlv_5= ';' )? otherlv_6= ')' ) ) ) )
            // InternalGo.g:2244:2: ( () otherlv_1= 'const' ( ( (lv_ConstSpec_2_0= ruleConstSpec ) ) | (otherlv_3= '(' ( ( (lv_ConstSpec_4_0= ruleConstSpec ) ) otherlv_5= ';' )? otherlv_6= ')' ) ) )
            {
            // InternalGo.g:2244:2: ( () otherlv_1= 'const' ( ( (lv_ConstSpec_2_0= ruleConstSpec ) ) | (otherlv_3= '(' ( ( (lv_ConstSpec_4_0= ruleConstSpec ) ) otherlv_5= ';' )? otherlv_6= ')' ) ) )
            // InternalGo.g:2245:3: () otherlv_1= 'const' ( ( (lv_ConstSpec_2_0= ruleConstSpec ) ) | (otherlv_3= '(' ( ( (lv_ConstSpec_4_0= ruleConstSpec ) ) otherlv_5= ';' )? otherlv_6= ')' ) )
            {
            // InternalGo.g:2245:3: ()
            // InternalGo.g:2246:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getConstDeclAccess().getConstDeclAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,34,FOLLOW_27); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getConstDeclAccess().getConstKeyword_1());
              		
            }
            // InternalGo.g:2259:3: ( ( (lv_ConstSpec_2_0= ruleConstSpec ) ) | (otherlv_3= '(' ( ( (lv_ConstSpec_4_0= ruleConstSpec ) ) otherlv_5= ';' )? otherlv_6= ')' ) )
            int alt28=2;
            int LA28_0 = input.LA(1);

            if ( (LA28_0==RULE_LETTER) ) {
                alt28=1;
            }
            else if ( (LA28_0==18) ) {
                alt28=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 28, 0, input);

                throw nvae;
            }
            switch (alt28) {
                case 1 :
                    // InternalGo.g:2260:4: ( (lv_ConstSpec_2_0= ruleConstSpec ) )
                    {
                    // InternalGo.g:2260:4: ( (lv_ConstSpec_2_0= ruleConstSpec ) )
                    // InternalGo.g:2261:5: (lv_ConstSpec_2_0= ruleConstSpec )
                    {
                    // InternalGo.g:2261:5: (lv_ConstSpec_2_0= ruleConstSpec )
                    // InternalGo.g:2262:6: lv_ConstSpec_2_0= ruleConstSpec
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConstDeclAccess().getConstSpecConstSpecParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_ConstSpec_2_0=ruleConstSpec();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConstDeclRule());
                      						}
                      						set(
                      							current,
                      							"ConstSpec",
                      							lv_ConstSpec_2_0,
                      							"com.ufcg.compiladores.Go.ConstSpec");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:2280:4: (otherlv_3= '(' ( ( (lv_ConstSpec_4_0= ruleConstSpec ) ) otherlv_5= ';' )? otherlv_6= ')' )
                    {
                    // InternalGo.g:2280:4: (otherlv_3= '(' ( ( (lv_ConstSpec_4_0= ruleConstSpec ) ) otherlv_5= ';' )? otherlv_6= ')' )
                    // InternalGo.g:2281:5: otherlv_3= '(' ( ( (lv_ConstSpec_4_0= ruleConstSpec ) ) otherlv_5= ';' )? otherlv_6= ')'
                    {
                    otherlv_3=(Token)match(input,18,FOLLOW_29); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_3, grammarAccess.getConstDeclAccess().getLeftParenthesisKeyword_2_1_0());
                      				
                    }
                    // InternalGo.g:2285:5: ( ( (lv_ConstSpec_4_0= ruleConstSpec ) ) otherlv_5= ';' )?
                    int alt27=2;
                    int LA27_0 = input.LA(1);

                    if ( (LA27_0==RULE_LETTER) ) {
                        alt27=1;
                    }
                    switch (alt27) {
                        case 1 :
                            // InternalGo.g:2286:6: ( (lv_ConstSpec_4_0= ruleConstSpec ) ) otherlv_5= ';'
                            {
                            // InternalGo.g:2286:6: ( (lv_ConstSpec_4_0= ruleConstSpec ) )
                            // InternalGo.g:2287:7: (lv_ConstSpec_4_0= ruleConstSpec )
                            {
                            // InternalGo.g:2287:7: (lv_ConstSpec_4_0= ruleConstSpec )
                            // InternalGo.g:2288:8: lv_ConstSpec_4_0= ruleConstSpec
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getConstDeclAccess().getConstSpecConstSpecParserRuleCall_2_1_1_0_0());
                              							
                            }
                            pushFollow(FOLLOW_3);
                            lv_ConstSpec_4_0=ruleConstSpec();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getConstDeclRule());
                              								}
                              								set(
                              									current,
                              									"ConstSpec",
                              									lv_ConstSpec_4_0,
                              									"com.ufcg.compiladores.Go.ConstSpec");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            otherlv_5=(Token)match(input,17,FOLLOW_6); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_5, grammarAccess.getConstDeclAccess().getSemicolonKeyword_2_1_1_1());
                              					
                            }

                            }
                            break;

                    }

                    otherlv_6=(Token)match(input,19,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_6, grammarAccess.getConstDeclAccess().getRightParenthesisKeyword_2_1_2());
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConstDecl"


    // $ANTLR start "entryRuleConstSpec"
    // InternalGo.g:2320:1: entryRuleConstSpec returns [EObject current=null] : iv_ruleConstSpec= ruleConstSpec EOF ;
    public final EObject entryRuleConstSpec() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConstSpec = null;


        try {
            // InternalGo.g:2320:50: (iv_ruleConstSpec= ruleConstSpec EOF )
            // InternalGo.g:2321:2: iv_ruleConstSpec= ruleConstSpec EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConstSpecRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConstSpec=ruleConstSpec();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConstSpec; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConstSpec"


    // $ANTLR start "ruleConstSpec"
    // InternalGo.g:2327:1: ruleConstSpec returns [EObject current=null] : ( ( (lv_IdentifierList_0_0= ruleIdentifierList ) ) ( ( (lv_Type_1_0= ruleType ) )? otherlv_2= '=' ( (lv_ExpressionList_3_0= ruleExpressionList ) ) )? ) ;
    public final EObject ruleConstSpec() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject lv_IdentifierList_0_0 = null;

        EObject lv_Type_1_0 = null;

        EObject lv_ExpressionList_3_0 = null;



        	enterRule();

        try {
            // InternalGo.g:2333:2: ( ( ( (lv_IdentifierList_0_0= ruleIdentifierList ) ) ( ( (lv_Type_1_0= ruleType ) )? otherlv_2= '=' ( (lv_ExpressionList_3_0= ruleExpressionList ) ) )? ) )
            // InternalGo.g:2334:2: ( ( (lv_IdentifierList_0_0= ruleIdentifierList ) ) ( ( (lv_Type_1_0= ruleType ) )? otherlv_2= '=' ( (lv_ExpressionList_3_0= ruleExpressionList ) ) )? )
            {
            // InternalGo.g:2334:2: ( ( (lv_IdentifierList_0_0= ruleIdentifierList ) ) ( ( (lv_Type_1_0= ruleType ) )? otherlv_2= '=' ( (lv_ExpressionList_3_0= ruleExpressionList ) ) )? )
            // InternalGo.g:2335:3: ( (lv_IdentifierList_0_0= ruleIdentifierList ) ) ( ( (lv_Type_1_0= ruleType ) )? otherlv_2= '=' ( (lv_ExpressionList_3_0= ruleExpressionList ) ) )?
            {
            // InternalGo.g:2335:3: ( (lv_IdentifierList_0_0= ruleIdentifierList ) )
            // InternalGo.g:2336:4: (lv_IdentifierList_0_0= ruleIdentifierList )
            {
            // InternalGo.g:2336:4: (lv_IdentifierList_0_0= ruleIdentifierList )
            // InternalGo.g:2337:5: lv_IdentifierList_0_0= ruleIdentifierList
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getConstSpecAccess().getIdentifierListIdentifierListParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_30);
            lv_IdentifierList_0_0=ruleIdentifierList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getConstSpecRule());
              					}
              					set(
              						current,
              						"IdentifierList",
              						lv_IdentifierList_0_0,
              						"com.ufcg.compiladores.Go.IdentifierList");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:2354:3: ( ( (lv_Type_1_0= ruleType ) )? otherlv_2= '=' ( (lv_ExpressionList_3_0= ruleExpressionList ) ) )?
            int alt30=2;
            int LA30_0 = input.LA(1);

            if ( (LA30_0==RULE_LETTER||LA30_0==18||LA30_0==21||LA30_0==23||(LA30_0>=25 && LA30_0<=26)||LA30_0==29||(LA30_0>=31 && LA30_0<=33)||LA30_0==35) ) {
                alt30=1;
            }
            switch (alt30) {
                case 1 :
                    // InternalGo.g:2355:4: ( (lv_Type_1_0= ruleType ) )? otherlv_2= '=' ( (lv_ExpressionList_3_0= ruleExpressionList ) )
                    {
                    // InternalGo.g:2355:4: ( (lv_Type_1_0= ruleType ) )?
                    int alt29=2;
                    int LA29_0 = input.LA(1);

                    if ( (LA29_0==RULE_LETTER||LA29_0==18||LA29_0==21||LA29_0==23||(LA29_0>=25 && LA29_0<=26)||LA29_0==29||(LA29_0>=31 && LA29_0<=33)) ) {
                        alt29=1;
                    }
                    switch (alt29) {
                        case 1 :
                            // InternalGo.g:2356:5: (lv_Type_1_0= ruleType )
                            {
                            // InternalGo.g:2356:5: (lv_Type_1_0= ruleType )
                            // InternalGo.g:2357:6: lv_Type_1_0= ruleType
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getConstSpecAccess().getTypeTypeParserRuleCall_1_0_0());
                              					
                            }
                            pushFollow(FOLLOW_31);
                            lv_Type_1_0=ruleType();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getConstSpecRule());
                              						}
                              						set(
                              							current,
                              							"Type",
                              							lv_Type_1_0,
                              							"com.ufcg.compiladores.Go.Type");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    otherlv_2=(Token)match(input,35,FOLLOW_32); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getConstSpecAccess().getEqualsSignKeyword_1_1());
                      			
                    }
                    // InternalGo.g:2378:4: ( (lv_ExpressionList_3_0= ruleExpressionList ) )
                    // InternalGo.g:2379:5: (lv_ExpressionList_3_0= ruleExpressionList )
                    {
                    // InternalGo.g:2379:5: (lv_ExpressionList_3_0= ruleExpressionList )
                    // InternalGo.g:2380:6: lv_ExpressionList_3_0= ruleExpressionList
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConstSpecAccess().getExpressionListExpressionListParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_ExpressionList_3_0=ruleExpressionList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConstSpecRule());
                      						}
                      						set(
                      							current,
                      							"ExpressionList",
                      							lv_ExpressionList_3_0,
                      							"com.ufcg.compiladores.Go.ExpressionList");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConstSpec"


    // $ANTLR start "entryRuleIdentifierList"
    // InternalGo.g:2402:1: entryRuleIdentifierList returns [EObject current=null] : iv_ruleIdentifierList= ruleIdentifierList EOF ;
    public final EObject entryRuleIdentifierList() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIdentifierList = null;


        try {
            // InternalGo.g:2402:55: (iv_ruleIdentifierList= ruleIdentifierList EOF )
            // InternalGo.g:2403:2: iv_ruleIdentifierList= ruleIdentifierList EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIdentifierListRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIdentifierList=ruleIdentifierList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIdentifierList; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIdentifierList"


    // $ANTLR start "ruleIdentifierList"
    // InternalGo.g:2409:1: ruleIdentifierList returns [EObject current=null] : ( ( (lv_identifier_0_0= ruleidentifier ) ) (otherlv_1= ',' ( (lv_identifier_2_0= ruleidentifier ) ) )? ) ;
    public final EObject ruleIdentifierList() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_identifier_0_0 = null;

        EObject lv_identifier_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:2415:2: ( ( ( (lv_identifier_0_0= ruleidentifier ) ) (otherlv_1= ',' ( (lv_identifier_2_0= ruleidentifier ) ) )? ) )
            // InternalGo.g:2416:2: ( ( (lv_identifier_0_0= ruleidentifier ) ) (otherlv_1= ',' ( (lv_identifier_2_0= ruleidentifier ) ) )? )
            {
            // InternalGo.g:2416:2: ( ( (lv_identifier_0_0= ruleidentifier ) ) (otherlv_1= ',' ( (lv_identifier_2_0= ruleidentifier ) ) )? )
            // InternalGo.g:2417:3: ( (lv_identifier_0_0= ruleidentifier ) ) (otherlv_1= ',' ( (lv_identifier_2_0= ruleidentifier ) ) )?
            {
            // InternalGo.g:2417:3: ( (lv_identifier_0_0= ruleidentifier ) )
            // InternalGo.g:2418:4: (lv_identifier_0_0= ruleidentifier )
            {
            // InternalGo.g:2418:4: (lv_identifier_0_0= ruleidentifier )
            // InternalGo.g:2419:5: lv_identifier_0_0= ruleidentifier
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getIdentifierListAccess().getIdentifierIdentifierParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_18);
            lv_identifier_0_0=ruleidentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getIdentifierListRule());
              					}
              					add(
              						current,
              						"identifier",
              						lv_identifier_0_0,
              						"com.ufcg.compiladores.Go.identifier");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:2436:3: (otherlv_1= ',' ( (lv_identifier_2_0= ruleidentifier ) ) )?
            int alt31=2;
            int LA31_0 = input.LA(1);

            if ( (LA31_0==27) ) {
                alt31=1;
            }
            switch (alt31) {
                case 1 :
                    // InternalGo.g:2437:4: otherlv_1= ',' ( (lv_identifier_2_0= ruleidentifier ) )
                    {
                    otherlv_1=(Token)match(input,27,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getIdentifierListAccess().getCommaKeyword_1_0());
                      			
                    }
                    // InternalGo.g:2441:4: ( (lv_identifier_2_0= ruleidentifier ) )
                    // InternalGo.g:2442:5: (lv_identifier_2_0= ruleidentifier )
                    {
                    // InternalGo.g:2442:5: (lv_identifier_2_0= ruleidentifier )
                    // InternalGo.g:2443:6: lv_identifier_2_0= ruleidentifier
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getIdentifierListAccess().getIdentifierIdentifierParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_identifier_2_0=ruleidentifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getIdentifierListRule());
                      						}
                      						add(
                      							current,
                      							"identifier",
                      							lv_identifier_2_0,
                      							"com.ufcg.compiladores.Go.identifier");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIdentifierList"


    // $ANTLR start "entryRuleExpressionList"
    // InternalGo.g:2465:1: entryRuleExpressionList returns [EObject current=null] : iv_ruleExpressionList= ruleExpressionList EOF ;
    public final EObject entryRuleExpressionList() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExpressionList = null;


        try {
            // InternalGo.g:2465:55: (iv_ruleExpressionList= ruleExpressionList EOF )
            // InternalGo.g:2466:2: iv_ruleExpressionList= ruleExpressionList EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExpressionListRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExpressionList=ruleExpressionList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExpressionList; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExpressionList"


    // $ANTLR start "ruleExpressionList"
    // InternalGo.g:2472:1: ruleExpressionList returns [EObject current=null] : ( ( (lv_Expression_0_0= ruleExpression ) ) (otherlv_1= ',' ( (lv_Expression_2_0= ruleExpression ) ) )? ) ;
    public final EObject ruleExpressionList() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_Expression_0_0 = null;

        EObject lv_Expression_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:2478:2: ( ( ( (lv_Expression_0_0= ruleExpression ) ) (otherlv_1= ',' ( (lv_Expression_2_0= ruleExpression ) ) )? ) )
            // InternalGo.g:2479:2: ( ( (lv_Expression_0_0= ruleExpression ) ) (otherlv_1= ',' ( (lv_Expression_2_0= ruleExpression ) ) )? )
            {
            // InternalGo.g:2479:2: ( ( (lv_Expression_0_0= ruleExpression ) ) (otherlv_1= ',' ( (lv_Expression_2_0= ruleExpression ) ) )? )
            // InternalGo.g:2480:3: ( (lv_Expression_0_0= ruleExpression ) ) (otherlv_1= ',' ( (lv_Expression_2_0= ruleExpression ) ) )?
            {
            // InternalGo.g:2480:3: ( (lv_Expression_0_0= ruleExpression ) )
            // InternalGo.g:2481:4: (lv_Expression_0_0= ruleExpression )
            {
            // InternalGo.g:2481:4: (lv_Expression_0_0= ruleExpression )
            // InternalGo.g:2482:5: lv_Expression_0_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getExpressionListAccess().getExpressionExpressionParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_18);
            lv_Expression_0_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getExpressionListRule());
              					}
              					add(
              						current,
              						"Expression",
              						lv_Expression_0_0,
              						"com.ufcg.compiladores.Go.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:2499:3: (otherlv_1= ',' ( (lv_Expression_2_0= ruleExpression ) ) )?
            int alt32=2;
            int LA32_0 = input.LA(1);

            if ( (LA32_0==27) ) {
                int LA32_1 = input.LA(2);

                if ( ((LA32_1>=RULE_LETTER && LA32_1<=RULE_DECIMAL_DIGIT)||LA32_1==18||(LA32_1>=20 && LA32_1<=21)||LA32_1==23||(LA32_1>=25 && LA32_1<=26)||LA32_1==29||(LA32_1>=31 && LA32_1<=33)||(LA32_1>=48 && LA32_1<=49)||LA32_1==56||(LA32_1>=58 && LA32_1<=59)||LA32_1==79||(LA32_1>=82 && LA32_1<=83)) ) {
                    alt32=1;
                }
            }
            switch (alt32) {
                case 1 :
                    // InternalGo.g:2500:4: otherlv_1= ',' ( (lv_Expression_2_0= ruleExpression ) )
                    {
                    otherlv_1=(Token)match(input,27,FOLLOW_32); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getExpressionListAccess().getCommaKeyword_1_0());
                      			
                    }
                    // InternalGo.g:2504:4: ( (lv_Expression_2_0= ruleExpression ) )
                    // InternalGo.g:2505:5: (lv_Expression_2_0= ruleExpression )
                    {
                    // InternalGo.g:2505:5: (lv_Expression_2_0= ruleExpression )
                    // InternalGo.g:2506:6: lv_Expression_2_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getExpressionListAccess().getExpressionExpressionParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_Expression_2_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getExpressionListRule());
                      						}
                      						add(
                      							current,
                      							"Expression",
                      							lv_Expression_2_0,
                      							"com.ufcg.compiladores.Go.Expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExpressionList"


    // $ANTLR start "entryRuleTypeDecl"
    // InternalGo.g:2528:1: entryRuleTypeDecl returns [EObject current=null] : iv_ruleTypeDecl= ruleTypeDecl EOF ;
    public final EObject entryRuleTypeDecl() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeDecl = null;


        try {
            // InternalGo.g:2528:49: (iv_ruleTypeDecl= ruleTypeDecl EOF )
            // InternalGo.g:2529:2: iv_ruleTypeDecl= ruleTypeDecl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeDeclRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeDecl=ruleTypeDecl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeDecl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeDecl"


    // $ANTLR start "ruleTypeDecl"
    // InternalGo.g:2535:1: ruleTypeDecl returns [EObject current=null] : ( () otherlv_1= 'type' ( ( (lv_TypeSpec_2_0= ruleTypeSpec ) ) | (otherlv_3= '(' ( ( (lv_TypeSpec_4_0= ruleTypeSpec ) ) otherlv_5= ';' )? otherlv_6= ')' ) ) ) ;
    public final EObject ruleTypeDecl() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        EObject lv_TypeSpec_2_0 = null;

        EObject lv_TypeSpec_4_0 = null;



        	enterRule();

        try {
            // InternalGo.g:2541:2: ( ( () otherlv_1= 'type' ( ( (lv_TypeSpec_2_0= ruleTypeSpec ) ) | (otherlv_3= '(' ( ( (lv_TypeSpec_4_0= ruleTypeSpec ) ) otherlv_5= ';' )? otherlv_6= ')' ) ) ) )
            // InternalGo.g:2542:2: ( () otherlv_1= 'type' ( ( (lv_TypeSpec_2_0= ruleTypeSpec ) ) | (otherlv_3= '(' ( ( (lv_TypeSpec_4_0= ruleTypeSpec ) ) otherlv_5= ';' )? otherlv_6= ')' ) ) )
            {
            // InternalGo.g:2542:2: ( () otherlv_1= 'type' ( ( (lv_TypeSpec_2_0= ruleTypeSpec ) ) | (otherlv_3= '(' ( ( (lv_TypeSpec_4_0= ruleTypeSpec ) ) otherlv_5= ';' )? otherlv_6= ')' ) ) )
            // InternalGo.g:2543:3: () otherlv_1= 'type' ( ( (lv_TypeSpec_2_0= ruleTypeSpec ) ) | (otherlv_3= '(' ( ( (lv_TypeSpec_4_0= ruleTypeSpec ) ) otherlv_5= ';' )? otherlv_6= ')' ) )
            {
            // InternalGo.g:2543:3: ()
            // InternalGo.g:2544:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getTypeDeclAccess().getTypeDeclAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,36,FOLLOW_27); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getTypeDeclAccess().getTypeKeyword_1());
              		
            }
            // InternalGo.g:2557:3: ( ( (lv_TypeSpec_2_0= ruleTypeSpec ) ) | (otherlv_3= '(' ( ( (lv_TypeSpec_4_0= ruleTypeSpec ) ) otherlv_5= ';' )? otherlv_6= ')' ) )
            int alt34=2;
            int LA34_0 = input.LA(1);

            if ( (LA34_0==RULE_LETTER) ) {
                alt34=1;
            }
            else if ( (LA34_0==18) ) {
                alt34=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 34, 0, input);

                throw nvae;
            }
            switch (alt34) {
                case 1 :
                    // InternalGo.g:2558:4: ( (lv_TypeSpec_2_0= ruleTypeSpec ) )
                    {
                    // InternalGo.g:2558:4: ( (lv_TypeSpec_2_0= ruleTypeSpec ) )
                    // InternalGo.g:2559:5: (lv_TypeSpec_2_0= ruleTypeSpec )
                    {
                    // InternalGo.g:2559:5: (lv_TypeSpec_2_0= ruleTypeSpec )
                    // InternalGo.g:2560:6: lv_TypeSpec_2_0= ruleTypeSpec
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTypeDeclAccess().getTypeSpecTypeSpecParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_TypeSpec_2_0=ruleTypeSpec();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTypeDeclRule());
                      						}
                      						set(
                      							current,
                      							"TypeSpec",
                      							lv_TypeSpec_2_0,
                      							"com.ufcg.compiladores.Go.TypeSpec");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:2578:4: (otherlv_3= '(' ( ( (lv_TypeSpec_4_0= ruleTypeSpec ) ) otherlv_5= ';' )? otherlv_6= ')' )
                    {
                    // InternalGo.g:2578:4: (otherlv_3= '(' ( ( (lv_TypeSpec_4_0= ruleTypeSpec ) ) otherlv_5= ';' )? otherlv_6= ')' )
                    // InternalGo.g:2579:5: otherlv_3= '(' ( ( (lv_TypeSpec_4_0= ruleTypeSpec ) ) otherlv_5= ';' )? otherlv_6= ')'
                    {
                    otherlv_3=(Token)match(input,18,FOLLOW_29); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_3, grammarAccess.getTypeDeclAccess().getLeftParenthesisKeyword_2_1_0());
                      				
                    }
                    // InternalGo.g:2583:5: ( ( (lv_TypeSpec_4_0= ruleTypeSpec ) ) otherlv_5= ';' )?
                    int alt33=2;
                    int LA33_0 = input.LA(1);

                    if ( (LA33_0==RULE_LETTER) ) {
                        alt33=1;
                    }
                    switch (alt33) {
                        case 1 :
                            // InternalGo.g:2584:6: ( (lv_TypeSpec_4_0= ruleTypeSpec ) ) otherlv_5= ';'
                            {
                            // InternalGo.g:2584:6: ( (lv_TypeSpec_4_0= ruleTypeSpec ) )
                            // InternalGo.g:2585:7: (lv_TypeSpec_4_0= ruleTypeSpec )
                            {
                            // InternalGo.g:2585:7: (lv_TypeSpec_4_0= ruleTypeSpec )
                            // InternalGo.g:2586:8: lv_TypeSpec_4_0= ruleTypeSpec
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getTypeDeclAccess().getTypeSpecTypeSpecParserRuleCall_2_1_1_0_0());
                              							
                            }
                            pushFollow(FOLLOW_3);
                            lv_TypeSpec_4_0=ruleTypeSpec();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getTypeDeclRule());
                              								}
                              								set(
                              									current,
                              									"TypeSpec",
                              									lv_TypeSpec_4_0,
                              									"com.ufcg.compiladores.Go.TypeSpec");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            otherlv_5=(Token)match(input,17,FOLLOW_6); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_5, grammarAccess.getTypeDeclAccess().getSemicolonKeyword_2_1_1_1());
                              					
                            }

                            }
                            break;

                    }

                    otherlv_6=(Token)match(input,19,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_6, grammarAccess.getTypeDeclAccess().getRightParenthesisKeyword_2_1_2());
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeDecl"


    // $ANTLR start "entryRuleTypeSpec"
    // InternalGo.g:2618:1: entryRuleTypeSpec returns [EObject current=null] : iv_ruleTypeSpec= ruleTypeSpec EOF ;
    public final EObject entryRuleTypeSpec() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeSpec = null;


        try {
            // InternalGo.g:2618:49: (iv_ruleTypeSpec= ruleTypeSpec EOF )
            // InternalGo.g:2619:2: iv_ruleTypeSpec= ruleTypeSpec EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeSpecRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeSpec=ruleTypeSpec();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeSpec; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeSpec"


    // $ANTLR start "ruleTypeSpec"
    // InternalGo.g:2625:1: ruleTypeSpec returns [EObject current=null] : (this_AliasDecl_0= ruleAliasDecl | this_TypeDef_1= ruleTypeDef ) ;
    public final EObject ruleTypeSpec() throws RecognitionException {
        EObject current = null;

        EObject this_AliasDecl_0 = null;

        EObject this_TypeDef_1 = null;



        	enterRule();

        try {
            // InternalGo.g:2631:2: ( (this_AliasDecl_0= ruleAliasDecl | this_TypeDef_1= ruleTypeDef ) )
            // InternalGo.g:2632:2: (this_AliasDecl_0= ruleAliasDecl | this_TypeDef_1= ruleTypeDef )
            {
            // InternalGo.g:2632:2: (this_AliasDecl_0= ruleAliasDecl | this_TypeDef_1= ruleTypeDef )
            int alt35=2;
            alt35 = dfa35.predict(input);
            switch (alt35) {
                case 1 :
                    // InternalGo.g:2633:3: this_AliasDecl_0= ruleAliasDecl
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTypeSpecAccess().getAliasDeclParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_AliasDecl_0=ruleAliasDecl();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_AliasDecl_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalGo.g:2645:3: this_TypeDef_1= ruleTypeDef
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTypeSpecAccess().getTypeDefParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_TypeDef_1=ruleTypeDef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_TypeDef_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeSpec"


    // $ANTLR start "entryRuleAliasDecl"
    // InternalGo.g:2660:1: entryRuleAliasDecl returns [EObject current=null] : iv_ruleAliasDecl= ruleAliasDecl EOF ;
    public final EObject entryRuleAliasDecl() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAliasDecl = null;


        try {
            // InternalGo.g:2660:50: (iv_ruleAliasDecl= ruleAliasDecl EOF )
            // InternalGo.g:2661:2: iv_ruleAliasDecl= ruleAliasDecl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAliasDeclRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAliasDecl=ruleAliasDecl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAliasDecl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAliasDecl"


    // $ANTLR start "ruleAliasDecl"
    // InternalGo.g:2667:1: ruleAliasDecl returns [EObject current=null] : ( ( (lv_identifier_0_0= ruleidentifier ) ) otherlv_1= '=' ( (lv_Type_2_0= ruleType ) ) ) ;
    public final EObject ruleAliasDecl() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_identifier_0_0 = null;

        EObject lv_Type_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:2673:2: ( ( ( (lv_identifier_0_0= ruleidentifier ) ) otherlv_1= '=' ( (lv_Type_2_0= ruleType ) ) ) )
            // InternalGo.g:2674:2: ( ( (lv_identifier_0_0= ruleidentifier ) ) otherlv_1= '=' ( (lv_Type_2_0= ruleType ) ) )
            {
            // InternalGo.g:2674:2: ( ( (lv_identifier_0_0= ruleidentifier ) ) otherlv_1= '=' ( (lv_Type_2_0= ruleType ) ) )
            // InternalGo.g:2675:3: ( (lv_identifier_0_0= ruleidentifier ) ) otherlv_1= '=' ( (lv_Type_2_0= ruleType ) )
            {
            // InternalGo.g:2675:3: ( (lv_identifier_0_0= ruleidentifier ) )
            // InternalGo.g:2676:4: (lv_identifier_0_0= ruleidentifier )
            {
            // InternalGo.g:2676:4: (lv_identifier_0_0= ruleidentifier )
            // InternalGo.g:2677:5: lv_identifier_0_0= ruleidentifier
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAliasDeclAccess().getIdentifierIdentifierParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_31);
            lv_identifier_0_0=ruleidentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAliasDeclRule());
              					}
              					set(
              						current,
              						"identifier",
              						lv_identifier_0_0,
              						"com.ufcg.compiladores.Go.identifier");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_1=(Token)match(input,35,FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getAliasDeclAccess().getEqualsSignKeyword_1());
              		
            }
            // InternalGo.g:2698:3: ( (lv_Type_2_0= ruleType ) )
            // InternalGo.g:2699:4: (lv_Type_2_0= ruleType )
            {
            // InternalGo.g:2699:4: (lv_Type_2_0= ruleType )
            // InternalGo.g:2700:5: lv_Type_2_0= ruleType
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAliasDeclAccess().getTypeTypeParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_Type_2_0=ruleType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAliasDeclRule());
              					}
              					set(
              						current,
              						"Type",
              						lv_Type_2_0,
              						"com.ufcg.compiladores.Go.Type");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAliasDecl"


    // $ANTLR start "entryRuleTypeDef"
    // InternalGo.g:2721:1: entryRuleTypeDef returns [EObject current=null] : iv_ruleTypeDef= ruleTypeDef EOF ;
    public final EObject entryRuleTypeDef() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeDef = null;


        try {
            // InternalGo.g:2721:48: (iv_ruleTypeDef= ruleTypeDef EOF )
            // InternalGo.g:2722:2: iv_ruleTypeDef= ruleTypeDef EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeDefRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeDef=ruleTypeDef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeDef; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeDef"


    // $ANTLR start "ruleTypeDef"
    // InternalGo.g:2728:1: ruleTypeDef returns [EObject current=null] : ( ( (lv_identifier_0_0= ruleidentifier ) ) ( (lv_Type_1_0= ruleType ) ) ) ;
    public final EObject ruleTypeDef() throws RecognitionException {
        EObject current = null;

        EObject lv_identifier_0_0 = null;

        EObject lv_Type_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:2734:2: ( ( ( (lv_identifier_0_0= ruleidentifier ) ) ( (lv_Type_1_0= ruleType ) ) ) )
            // InternalGo.g:2735:2: ( ( (lv_identifier_0_0= ruleidentifier ) ) ( (lv_Type_1_0= ruleType ) ) )
            {
            // InternalGo.g:2735:2: ( ( (lv_identifier_0_0= ruleidentifier ) ) ( (lv_Type_1_0= ruleType ) ) )
            // InternalGo.g:2736:3: ( (lv_identifier_0_0= ruleidentifier ) ) ( (lv_Type_1_0= ruleType ) )
            {
            // InternalGo.g:2736:3: ( (lv_identifier_0_0= ruleidentifier ) )
            // InternalGo.g:2737:4: (lv_identifier_0_0= ruleidentifier )
            {
            // InternalGo.g:2737:4: (lv_identifier_0_0= ruleidentifier )
            // InternalGo.g:2738:5: lv_identifier_0_0= ruleidentifier
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTypeDefAccess().getIdentifierIdentifierParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_5);
            lv_identifier_0_0=ruleidentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTypeDefRule());
              					}
              					set(
              						current,
              						"identifier",
              						lv_identifier_0_0,
              						"com.ufcg.compiladores.Go.identifier");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:2755:3: ( (lv_Type_1_0= ruleType ) )
            // InternalGo.g:2756:4: (lv_Type_1_0= ruleType )
            {
            // InternalGo.g:2756:4: (lv_Type_1_0= ruleType )
            // InternalGo.g:2757:5: lv_Type_1_0= ruleType
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTypeDefAccess().getTypeTypeParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_Type_1_0=ruleType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTypeDefRule());
              					}
              					set(
              						current,
              						"Type",
              						lv_Type_1_0,
              						"com.ufcg.compiladores.Go.Type");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeDef"


    // $ANTLR start "entryRuleVarDecl"
    // InternalGo.g:2778:1: entryRuleVarDecl returns [EObject current=null] : iv_ruleVarDecl= ruleVarDecl EOF ;
    public final EObject entryRuleVarDecl() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleVarDecl = null;


        try {
            // InternalGo.g:2778:48: (iv_ruleVarDecl= ruleVarDecl EOF )
            // InternalGo.g:2779:2: iv_ruleVarDecl= ruleVarDecl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getVarDeclRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleVarDecl=ruleVarDecl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleVarDecl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleVarDecl"


    // $ANTLR start "ruleVarDecl"
    // InternalGo.g:2785:1: ruleVarDecl returns [EObject current=null] : ( () otherlv_1= 'var' ( ( (lv_VarSpec_2_0= ruleVarSpec ) ) | (otherlv_3= '(' ( ( (lv_VarSpec_4_0= ruleVarSpec ) ) otherlv_5= ';' )? otherlv_6= ')' ) ) ) ;
    public final EObject ruleVarDecl() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        EObject lv_VarSpec_2_0 = null;

        EObject lv_VarSpec_4_0 = null;



        	enterRule();

        try {
            // InternalGo.g:2791:2: ( ( () otherlv_1= 'var' ( ( (lv_VarSpec_2_0= ruleVarSpec ) ) | (otherlv_3= '(' ( ( (lv_VarSpec_4_0= ruleVarSpec ) ) otherlv_5= ';' )? otherlv_6= ')' ) ) ) )
            // InternalGo.g:2792:2: ( () otherlv_1= 'var' ( ( (lv_VarSpec_2_0= ruleVarSpec ) ) | (otherlv_3= '(' ( ( (lv_VarSpec_4_0= ruleVarSpec ) ) otherlv_5= ';' )? otherlv_6= ')' ) ) )
            {
            // InternalGo.g:2792:2: ( () otherlv_1= 'var' ( ( (lv_VarSpec_2_0= ruleVarSpec ) ) | (otherlv_3= '(' ( ( (lv_VarSpec_4_0= ruleVarSpec ) ) otherlv_5= ';' )? otherlv_6= ')' ) ) )
            // InternalGo.g:2793:3: () otherlv_1= 'var' ( ( (lv_VarSpec_2_0= ruleVarSpec ) ) | (otherlv_3= '(' ( ( (lv_VarSpec_4_0= ruleVarSpec ) ) otherlv_5= ';' )? otherlv_6= ')' ) )
            {
            // InternalGo.g:2793:3: ()
            // InternalGo.g:2794:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getVarDeclAccess().getVarDeclAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,37,FOLLOW_27); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getVarDeclAccess().getVarKeyword_1());
              		
            }
            // InternalGo.g:2807:3: ( ( (lv_VarSpec_2_0= ruleVarSpec ) ) | (otherlv_3= '(' ( ( (lv_VarSpec_4_0= ruleVarSpec ) ) otherlv_5= ';' )? otherlv_6= ')' ) )
            int alt37=2;
            int LA37_0 = input.LA(1);

            if ( (LA37_0==RULE_LETTER) ) {
                alt37=1;
            }
            else if ( (LA37_0==18) ) {
                alt37=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 37, 0, input);

                throw nvae;
            }
            switch (alt37) {
                case 1 :
                    // InternalGo.g:2808:4: ( (lv_VarSpec_2_0= ruleVarSpec ) )
                    {
                    // InternalGo.g:2808:4: ( (lv_VarSpec_2_0= ruleVarSpec ) )
                    // InternalGo.g:2809:5: (lv_VarSpec_2_0= ruleVarSpec )
                    {
                    // InternalGo.g:2809:5: (lv_VarSpec_2_0= ruleVarSpec )
                    // InternalGo.g:2810:6: lv_VarSpec_2_0= ruleVarSpec
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getVarDeclAccess().getVarSpecVarSpecParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_VarSpec_2_0=ruleVarSpec();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getVarDeclRule());
                      						}
                      						set(
                      							current,
                      							"VarSpec",
                      							lv_VarSpec_2_0,
                      							"com.ufcg.compiladores.Go.VarSpec");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:2828:4: (otherlv_3= '(' ( ( (lv_VarSpec_4_0= ruleVarSpec ) ) otherlv_5= ';' )? otherlv_6= ')' )
                    {
                    // InternalGo.g:2828:4: (otherlv_3= '(' ( ( (lv_VarSpec_4_0= ruleVarSpec ) ) otherlv_5= ';' )? otherlv_6= ')' )
                    // InternalGo.g:2829:5: otherlv_3= '(' ( ( (lv_VarSpec_4_0= ruleVarSpec ) ) otherlv_5= ';' )? otherlv_6= ')'
                    {
                    otherlv_3=(Token)match(input,18,FOLLOW_29); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_3, grammarAccess.getVarDeclAccess().getLeftParenthesisKeyword_2_1_0());
                      				
                    }
                    // InternalGo.g:2833:5: ( ( (lv_VarSpec_4_0= ruleVarSpec ) ) otherlv_5= ';' )?
                    int alt36=2;
                    int LA36_0 = input.LA(1);

                    if ( (LA36_0==RULE_LETTER) ) {
                        alt36=1;
                    }
                    switch (alt36) {
                        case 1 :
                            // InternalGo.g:2834:6: ( (lv_VarSpec_4_0= ruleVarSpec ) ) otherlv_5= ';'
                            {
                            // InternalGo.g:2834:6: ( (lv_VarSpec_4_0= ruleVarSpec ) )
                            // InternalGo.g:2835:7: (lv_VarSpec_4_0= ruleVarSpec )
                            {
                            // InternalGo.g:2835:7: (lv_VarSpec_4_0= ruleVarSpec )
                            // InternalGo.g:2836:8: lv_VarSpec_4_0= ruleVarSpec
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getVarDeclAccess().getVarSpecVarSpecParserRuleCall_2_1_1_0_0());
                              							
                            }
                            pushFollow(FOLLOW_3);
                            lv_VarSpec_4_0=ruleVarSpec();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getVarDeclRule());
                              								}
                              								set(
                              									current,
                              									"VarSpec",
                              									lv_VarSpec_4_0,
                              									"com.ufcg.compiladores.Go.VarSpec");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            otherlv_5=(Token)match(input,17,FOLLOW_6); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_5, grammarAccess.getVarDeclAccess().getSemicolonKeyword_2_1_1_1());
                              					
                            }

                            }
                            break;

                    }

                    otherlv_6=(Token)match(input,19,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_6, grammarAccess.getVarDeclAccess().getRightParenthesisKeyword_2_1_2());
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleVarDecl"


    // $ANTLR start "entryRuleVarSpec"
    // InternalGo.g:2868:1: entryRuleVarSpec returns [EObject current=null] : iv_ruleVarSpec= ruleVarSpec EOF ;
    public final EObject entryRuleVarSpec() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleVarSpec = null;


        try {
            // InternalGo.g:2868:48: (iv_ruleVarSpec= ruleVarSpec EOF )
            // InternalGo.g:2869:2: iv_ruleVarSpec= ruleVarSpec EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getVarSpecRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleVarSpec=ruleVarSpec();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleVarSpec; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleVarSpec"


    // $ANTLR start "ruleVarSpec"
    // InternalGo.g:2875:1: ruleVarSpec returns [EObject current=null] : ( ( (lv_IdentifierList_0_0= ruleIdentifierList ) ) ( ( ( (lv_Type_1_0= ruleType ) ) (otherlv_2= '=' ( (lv_ExpressionList_3_0= ruleExpressionList ) ) )? ) | (otherlv_4= '=' ( (lv_ExpressionList_5_0= ruleExpressionList ) ) ) ) ) ;
    public final EObject ruleVarSpec() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_IdentifierList_0_0 = null;

        EObject lv_Type_1_0 = null;

        EObject lv_ExpressionList_3_0 = null;

        EObject lv_ExpressionList_5_0 = null;



        	enterRule();

        try {
            // InternalGo.g:2881:2: ( ( ( (lv_IdentifierList_0_0= ruleIdentifierList ) ) ( ( ( (lv_Type_1_0= ruleType ) ) (otherlv_2= '=' ( (lv_ExpressionList_3_0= ruleExpressionList ) ) )? ) | (otherlv_4= '=' ( (lv_ExpressionList_5_0= ruleExpressionList ) ) ) ) ) )
            // InternalGo.g:2882:2: ( ( (lv_IdentifierList_0_0= ruleIdentifierList ) ) ( ( ( (lv_Type_1_0= ruleType ) ) (otherlv_2= '=' ( (lv_ExpressionList_3_0= ruleExpressionList ) ) )? ) | (otherlv_4= '=' ( (lv_ExpressionList_5_0= ruleExpressionList ) ) ) ) )
            {
            // InternalGo.g:2882:2: ( ( (lv_IdentifierList_0_0= ruleIdentifierList ) ) ( ( ( (lv_Type_1_0= ruleType ) ) (otherlv_2= '=' ( (lv_ExpressionList_3_0= ruleExpressionList ) ) )? ) | (otherlv_4= '=' ( (lv_ExpressionList_5_0= ruleExpressionList ) ) ) ) )
            // InternalGo.g:2883:3: ( (lv_IdentifierList_0_0= ruleIdentifierList ) ) ( ( ( (lv_Type_1_0= ruleType ) ) (otherlv_2= '=' ( (lv_ExpressionList_3_0= ruleExpressionList ) ) )? ) | (otherlv_4= '=' ( (lv_ExpressionList_5_0= ruleExpressionList ) ) ) )
            {
            // InternalGo.g:2883:3: ( (lv_IdentifierList_0_0= ruleIdentifierList ) )
            // InternalGo.g:2884:4: (lv_IdentifierList_0_0= ruleIdentifierList )
            {
            // InternalGo.g:2884:4: (lv_IdentifierList_0_0= ruleIdentifierList )
            // InternalGo.g:2885:5: lv_IdentifierList_0_0= ruleIdentifierList
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getVarSpecAccess().getIdentifierListIdentifierListParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_33);
            lv_IdentifierList_0_0=ruleIdentifierList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getVarSpecRule());
              					}
              					set(
              						current,
              						"IdentifierList",
              						lv_IdentifierList_0_0,
              						"com.ufcg.compiladores.Go.IdentifierList");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:2902:3: ( ( ( (lv_Type_1_0= ruleType ) ) (otherlv_2= '=' ( (lv_ExpressionList_3_0= ruleExpressionList ) ) )? ) | (otherlv_4= '=' ( (lv_ExpressionList_5_0= ruleExpressionList ) ) ) )
            int alt39=2;
            int LA39_0 = input.LA(1);

            if ( (LA39_0==RULE_LETTER||LA39_0==18||LA39_0==21||LA39_0==23||(LA39_0>=25 && LA39_0<=26)||LA39_0==29||(LA39_0>=31 && LA39_0<=33)) ) {
                alt39=1;
            }
            else if ( (LA39_0==35) ) {
                alt39=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 39, 0, input);

                throw nvae;
            }
            switch (alt39) {
                case 1 :
                    // InternalGo.g:2903:4: ( ( (lv_Type_1_0= ruleType ) ) (otherlv_2= '=' ( (lv_ExpressionList_3_0= ruleExpressionList ) ) )? )
                    {
                    // InternalGo.g:2903:4: ( ( (lv_Type_1_0= ruleType ) ) (otherlv_2= '=' ( (lv_ExpressionList_3_0= ruleExpressionList ) ) )? )
                    // InternalGo.g:2904:5: ( (lv_Type_1_0= ruleType ) ) (otherlv_2= '=' ( (lv_ExpressionList_3_0= ruleExpressionList ) ) )?
                    {
                    // InternalGo.g:2904:5: ( (lv_Type_1_0= ruleType ) )
                    // InternalGo.g:2905:6: (lv_Type_1_0= ruleType )
                    {
                    // InternalGo.g:2905:6: (lv_Type_1_0= ruleType )
                    // InternalGo.g:2906:7: lv_Type_1_0= ruleType
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getVarSpecAccess().getTypeTypeParserRuleCall_1_0_0_0());
                      						
                    }
                    pushFollow(FOLLOW_34);
                    lv_Type_1_0=ruleType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getVarSpecRule());
                      							}
                      							set(
                      								current,
                      								"Type",
                      								lv_Type_1_0,
                      								"com.ufcg.compiladores.Go.Type");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalGo.g:2923:5: (otherlv_2= '=' ( (lv_ExpressionList_3_0= ruleExpressionList ) ) )?
                    int alt38=2;
                    int LA38_0 = input.LA(1);

                    if ( (LA38_0==35) ) {
                        alt38=1;
                    }
                    switch (alt38) {
                        case 1 :
                            // InternalGo.g:2924:6: otherlv_2= '=' ( (lv_ExpressionList_3_0= ruleExpressionList ) )
                            {
                            otherlv_2=(Token)match(input,35,FOLLOW_32); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_2, grammarAccess.getVarSpecAccess().getEqualsSignKeyword_1_0_1_0());
                              					
                            }
                            // InternalGo.g:2928:6: ( (lv_ExpressionList_3_0= ruleExpressionList ) )
                            // InternalGo.g:2929:7: (lv_ExpressionList_3_0= ruleExpressionList )
                            {
                            // InternalGo.g:2929:7: (lv_ExpressionList_3_0= ruleExpressionList )
                            // InternalGo.g:2930:8: lv_ExpressionList_3_0= ruleExpressionList
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getVarSpecAccess().getExpressionListExpressionListParserRuleCall_1_0_1_1_0());
                              							
                            }
                            pushFollow(FOLLOW_2);
                            lv_ExpressionList_3_0=ruleExpressionList();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getVarSpecRule());
                              								}
                              								set(
                              									current,
                              									"ExpressionList",
                              									lv_ExpressionList_3_0,
                              									"com.ufcg.compiladores.Go.ExpressionList");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:2950:4: (otherlv_4= '=' ( (lv_ExpressionList_5_0= ruleExpressionList ) ) )
                    {
                    // InternalGo.g:2950:4: (otherlv_4= '=' ( (lv_ExpressionList_5_0= ruleExpressionList ) ) )
                    // InternalGo.g:2951:5: otherlv_4= '=' ( (lv_ExpressionList_5_0= ruleExpressionList ) )
                    {
                    otherlv_4=(Token)match(input,35,FOLLOW_32); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_4, grammarAccess.getVarSpecAccess().getEqualsSignKeyword_1_1_0());
                      				
                    }
                    // InternalGo.g:2955:5: ( (lv_ExpressionList_5_0= ruleExpressionList ) )
                    // InternalGo.g:2956:6: (lv_ExpressionList_5_0= ruleExpressionList )
                    {
                    // InternalGo.g:2956:6: (lv_ExpressionList_5_0= ruleExpressionList )
                    // InternalGo.g:2957:7: lv_ExpressionList_5_0= ruleExpressionList
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getVarSpecAccess().getExpressionListExpressionListParserRuleCall_1_1_1_0());
                      						
                    }
                    pushFollow(FOLLOW_2);
                    lv_ExpressionList_5_0=ruleExpressionList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getVarSpecRule());
                      							}
                      							set(
                      								current,
                      								"ExpressionList",
                      								lv_ExpressionList_5_0,
                      								"com.ufcg.compiladores.Go.ExpressionList");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleVarSpec"


    // $ANTLR start "entryRuleShortVarDecl"
    // InternalGo.g:2980:1: entryRuleShortVarDecl returns [EObject current=null] : iv_ruleShortVarDecl= ruleShortVarDecl EOF ;
    public final EObject entryRuleShortVarDecl() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleShortVarDecl = null;


        try {
            // InternalGo.g:2980:53: (iv_ruleShortVarDecl= ruleShortVarDecl EOF )
            // InternalGo.g:2981:2: iv_ruleShortVarDecl= ruleShortVarDecl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getShortVarDeclRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleShortVarDecl=ruleShortVarDecl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleShortVarDecl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleShortVarDecl"


    // $ANTLR start "ruleShortVarDecl"
    // InternalGo.g:2987:1: ruleShortVarDecl returns [EObject current=null] : ( ( (lv_IdentifierList_0_0= ruleIdentifierList ) ) otherlv_1= ':=' ( (lv_ExpressionList_2_0= ruleExpressionList ) ) ) ;
    public final EObject ruleShortVarDecl() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_IdentifierList_0_0 = null;

        EObject lv_ExpressionList_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:2993:2: ( ( ( (lv_IdentifierList_0_0= ruleIdentifierList ) ) otherlv_1= ':=' ( (lv_ExpressionList_2_0= ruleExpressionList ) ) ) )
            // InternalGo.g:2994:2: ( ( (lv_IdentifierList_0_0= ruleIdentifierList ) ) otherlv_1= ':=' ( (lv_ExpressionList_2_0= ruleExpressionList ) ) )
            {
            // InternalGo.g:2994:2: ( ( (lv_IdentifierList_0_0= ruleIdentifierList ) ) otherlv_1= ':=' ( (lv_ExpressionList_2_0= ruleExpressionList ) ) )
            // InternalGo.g:2995:3: ( (lv_IdentifierList_0_0= ruleIdentifierList ) ) otherlv_1= ':=' ( (lv_ExpressionList_2_0= ruleExpressionList ) )
            {
            // InternalGo.g:2995:3: ( (lv_IdentifierList_0_0= ruleIdentifierList ) )
            // InternalGo.g:2996:4: (lv_IdentifierList_0_0= ruleIdentifierList )
            {
            // InternalGo.g:2996:4: (lv_IdentifierList_0_0= ruleIdentifierList )
            // InternalGo.g:2997:5: lv_IdentifierList_0_0= ruleIdentifierList
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getShortVarDeclAccess().getIdentifierListIdentifierListParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_35);
            lv_IdentifierList_0_0=ruleIdentifierList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getShortVarDeclRule());
              					}
              					set(
              						current,
              						"IdentifierList",
              						lv_IdentifierList_0_0,
              						"com.ufcg.compiladores.Go.IdentifierList");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_1=(Token)match(input,38,FOLLOW_32); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getShortVarDeclAccess().getColonEqualsSignKeyword_1());
              		
            }
            // InternalGo.g:3018:3: ( (lv_ExpressionList_2_0= ruleExpressionList ) )
            // InternalGo.g:3019:4: (lv_ExpressionList_2_0= ruleExpressionList )
            {
            // InternalGo.g:3019:4: (lv_ExpressionList_2_0= ruleExpressionList )
            // InternalGo.g:3020:5: lv_ExpressionList_2_0= ruleExpressionList
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getShortVarDeclAccess().getExpressionListExpressionListParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_ExpressionList_2_0=ruleExpressionList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getShortVarDeclRule());
              					}
              					set(
              						current,
              						"ExpressionList",
              						lv_ExpressionList_2_0,
              						"com.ufcg.compiladores.Go.ExpressionList");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleShortVarDecl"


    // $ANTLR start "entryRuleFunctionName"
    // InternalGo.g:3041:1: entryRuleFunctionName returns [EObject current=null] : iv_ruleFunctionName= ruleFunctionName EOF ;
    public final EObject entryRuleFunctionName() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunctionName = null;


        try {
            // InternalGo.g:3041:53: (iv_ruleFunctionName= ruleFunctionName EOF )
            // InternalGo.g:3042:2: iv_ruleFunctionName= ruleFunctionName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionNameRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFunctionName=ruleFunctionName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunctionName; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFunctionName"


    // $ANTLR start "ruleFunctionName"
    // InternalGo.g:3048:1: ruleFunctionName returns [EObject current=null] : ( (lv_identifier_0_0= ruleidentifier ) ) ;
    public final EObject ruleFunctionName() throws RecognitionException {
        EObject current = null;

        EObject lv_identifier_0_0 = null;



        	enterRule();

        try {
            // InternalGo.g:3054:2: ( ( (lv_identifier_0_0= ruleidentifier ) ) )
            // InternalGo.g:3055:2: ( (lv_identifier_0_0= ruleidentifier ) )
            {
            // InternalGo.g:3055:2: ( (lv_identifier_0_0= ruleidentifier ) )
            // InternalGo.g:3056:3: (lv_identifier_0_0= ruleidentifier )
            {
            // InternalGo.g:3056:3: (lv_identifier_0_0= ruleidentifier )
            // InternalGo.g:3057:4: lv_identifier_0_0= ruleidentifier
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getFunctionNameAccess().getIdentifierIdentifierParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_identifier_0_0=ruleidentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getFunctionNameRule());
              				}
              				set(
              					current,
              					"identifier",
              					lv_identifier_0_0,
              					"com.ufcg.compiladores.Go.identifier");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFunctionName"


    // $ANTLR start "entryRuleFunctionBody"
    // InternalGo.g:3077:1: entryRuleFunctionBody returns [EObject current=null] : iv_ruleFunctionBody= ruleFunctionBody EOF ;
    public final EObject entryRuleFunctionBody() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunctionBody = null;


        try {
            // InternalGo.g:3077:53: (iv_ruleFunctionBody= ruleFunctionBody EOF )
            // InternalGo.g:3078:2: iv_ruleFunctionBody= ruleFunctionBody EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionBodyRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFunctionBody=ruleFunctionBody();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunctionBody; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFunctionBody"


    // $ANTLR start "ruleFunctionBody"
    // InternalGo.g:3084:1: ruleFunctionBody returns [EObject current=null] : ( (lv_Block_0_0= ruleBlock ) ) ;
    public final EObject ruleFunctionBody() throws RecognitionException {
        EObject current = null;

        EObject lv_Block_0_0 = null;



        	enterRule();

        try {
            // InternalGo.g:3090:2: ( ( (lv_Block_0_0= ruleBlock ) ) )
            // InternalGo.g:3091:2: ( (lv_Block_0_0= ruleBlock ) )
            {
            // InternalGo.g:3091:2: ( (lv_Block_0_0= ruleBlock ) )
            // InternalGo.g:3092:3: (lv_Block_0_0= ruleBlock )
            {
            // InternalGo.g:3092:3: (lv_Block_0_0= ruleBlock )
            // InternalGo.g:3093:4: lv_Block_0_0= ruleBlock
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getFunctionBodyAccess().getBlockBlockParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_Block_0_0=ruleBlock();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getFunctionBodyRule());
              				}
              				set(
              					current,
              					"Block",
              					lv_Block_0_0,
              					"com.ufcg.compiladores.Go.Block");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFunctionBody"


    // $ANTLR start "entryRuleReceiver"
    // InternalGo.g:3113:1: entryRuleReceiver returns [EObject current=null] : iv_ruleReceiver= ruleReceiver EOF ;
    public final EObject entryRuleReceiver() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleReceiver = null;


        try {
            // InternalGo.g:3113:49: (iv_ruleReceiver= ruleReceiver EOF )
            // InternalGo.g:3114:2: iv_ruleReceiver= ruleReceiver EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getReceiverRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleReceiver=ruleReceiver();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleReceiver; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleReceiver"


    // $ANTLR start "ruleReceiver"
    // InternalGo.g:3120:1: ruleReceiver returns [EObject current=null] : this_Parameters_0= ruleParameters ;
    public final EObject ruleReceiver() throws RecognitionException {
        EObject current = null;

        EObject this_Parameters_0 = null;



        	enterRule();

        try {
            // InternalGo.g:3126:2: (this_Parameters_0= ruleParameters )
            // InternalGo.g:3127:2: this_Parameters_0= ruleParameters
            {
            if ( state.backtracking==0 ) {

              		/* */
              	
            }
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getReceiverAccess().getParametersParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_Parameters_0=ruleParameters();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_Parameters_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleReceiver"


    // $ANTLR start "entryRuleOperand"
    // InternalGo.g:3141:1: entryRuleOperand returns [EObject current=null] : iv_ruleOperand= ruleOperand EOF ;
    public final EObject entryRuleOperand() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOperand = null;


        try {
            // InternalGo.g:3141:48: (iv_ruleOperand= ruleOperand EOF )
            // InternalGo.g:3142:2: iv_ruleOperand= ruleOperand EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOperandRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOperand=ruleOperand();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOperand; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOperand"


    // $ANTLR start "ruleOperand"
    // InternalGo.g:3148:1: ruleOperand returns [EObject current=null] : ( ( (lv_Literal_0_0= ruleLiteral ) ) | ( (lv_OperandName_1_0= ruleOperandName ) ) | (otherlv_2= '(' ( (lv_Expression_3_0= ruleExpression ) ) otherlv_4= ')' ) ) ;
    public final EObject ruleOperand() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_Literal_0_0 = null;

        EObject lv_OperandName_1_0 = null;

        EObject lv_Expression_3_0 = null;



        	enterRule();

        try {
            // InternalGo.g:3154:2: ( ( ( (lv_Literal_0_0= ruleLiteral ) ) | ( (lv_OperandName_1_0= ruleOperandName ) ) | (otherlv_2= '(' ( (lv_Expression_3_0= ruleExpression ) ) otherlv_4= ')' ) ) )
            // InternalGo.g:3155:2: ( ( (lv_Literal_0_0= ruleLiteral ) ) | ( (lv_OperandName_1_0= ruleOperandName ) ) | (otherlv_2= '(' ( (lv_Expression_3_0= ruleExpression ) ) otherlv_4= ')' ) )
            {
            // InternalGo.g:3155:2: ( ( (lv_Literal_0_0= ruleLiteral ) ) | ( (lv_OperandName_1_0= ruleOperandName ) ) | (otherlv_2= '(' ( (lv_Expression_3_0= ruleExpression ) ) otherlv_4= ')' ) )
            int alt40=3;
            alt40 = dfa40.predict(input);
            switch (alt40) {
                case 1 :
                    // InternalGo.g:3156:3: ( (lv_Literal_0_0= ruleLiteral ) )
                    {
                    // InternalGo.g:3156:3: ( (lv_Literal_0_0= ruleLiteral ) )
                    // InternalGo.g:3157:4: (lv_Literal_0_0= ruleLiteral )
                    {
                    // InternalGo.g:3157:4: (lv_Literal_0_0= ruleLiteral )
                    // InternalGo.g:3158:5: lv_Literal_0_0= ruleLiteral
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getOperandAccess().getLiteralLiteralParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_Literal_0_0=ruleLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getOperandRule());
                      					}
                      					set(
                      						current,
                      						"Literal",
                      						lv_Literal_0_0,
                      						"com.ufcg.compiladores.Go.Literal");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:3176:3: ( (lv_OperandName_1_0= ruleOperandName ) )
                    {
                    // InternalGo.g:3176:3: ( (lv_OperandName_1_0= ruleOperandName ) )
                    // InternalGo.g:3177:4: (lv_OperandName_1_0= ruleOperandName )
                    {
                    // InternalGo.g:3177:4: (lv_OperandName_1_0= ruleOperandName )
                    // InternalGo.g:3178:5: lv_OperandName_1_0= ruleOperandName
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getOperandAccess().getOperandNameOperandNameParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_OperandName_1_0=ruleOperandName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getOperandRule());
                      					}
                      					set(
                      						current,
                      						"OperandName",
                      						lv_OperandName_1_0,
                      						"com.ufcg.compiladores.Go.OperandName");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalGo.g:3196:3: (otherlv_2= '(' ( (lv_Expression_3_0= ruleExpression ) ) otherlv_4= ')' )
                    {
                    // InternalGo.g:3196:3: (otherlv_2= '(' ( (lv_Expression_3_0= ruleExpression ) ) otherlv_4= ')' )
                    // InternalGo.g:3197:4: otherlv_2= '(' ( (lv_Expression_3_0= ruleExpression ) ) otherlv_4= ')'
                    {
                    otherlv_2=(Token)match(input,18,FOLLOW_32); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getOperandAccess().getLeftParenthesisKeyword_2_0());
                      			
                    }
                    // InternalGo.g:3201:4: ( (lv_Expression_3_0= ruleExpression ) )
                    // InternalGo.g:3202:5: (lv_Expression_3_0= ruleExpression )
                    {
                    // InternalGo.g:3202:5: (lv_Expression_3_0= ruleExpression )
                    // InternalGo.g:3203:6: lv_Expression_3_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getOperandAccess().getExpressionExpressionParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_6);
                    lv_Expression_3_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getOperandRule());
                      						}
                      						set(
                      							current,
                      							"Expression",
                      							lv_Expression_3_0,
                      							"com.ufcg.compiladores.Go.Expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_4=(Token)match(input,19,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getOperandAccess().getRightParenthesisKeyword_2_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOperand"


    // $ANTLR start "entryRuleLiteral"
    // InternalGo.g:3229:1: entryRuleLiteral returns [EObject current=null] : iv_ruleLiteral= ruleLiteral EOF ;
    public final EObject entryRuleLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLiteral = null;


        try {
            // InternalGo.g:3229:48: (iv_ruleLiteral= ruleLiteral EOF )
            // InternalGo.g:3230:2: iv_ruleLiteral= ruleLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLiteral=ruleLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLiteral"


    // $ANTLR start "ruleLiteral"
    // InternalGo.g:3236:1: ruleLiteral returns [EObject current=null] : ( ( (lv_BasicLit_0_0= ruleBasicLit ) ) | this_CompositeLit_1= ruleCompositeLit | this_FunctionLit_2= ruleFunctionLit ) ;
    public final EObject ruleLiteral() throws RecognitionException {
        EObject current = null;

        EObject lv_BasicLit_0_0 = null;

        EObject this_CompositeLit_1 = null;

        EObject this_FunctionLit_2 = null;



        	enterRule();

        try {
            // InternalGo.g:3242:2: ( ( ( (lv_BasicLit_0_0= ruleBasicLit ) ) | this_CompositeLit_1= ruleCompositeLit | this_FunctionLit_2= ruleFunctionLit ) )
            // InternalGo.g:3243:2: ( ( (lv_BasicLit_0_0= ruleBasicLit ) ) | this_CompositeLit_1= ruleCompositeLit | this_FunctionLit_2= ruleFunctionLit )
            {
            // InternalGo.g:3243:2: ( ( (lv_BasicLit_0_0= ruleBasicLit ) ) | this_CompositeLit_1= ruleCompositeLit | this_FunctionLit_2= ruleFunctionLit )
            int alt41=3;
            alt41 = dfa41.predict(input);
            switch (alt41) {
                case 1 :
                    // InternalGo.g:3244:3: ( (lv_BasicLit_0_0= ruleBasicLit ) )
                    {
                    // InternalGo.g:3244:3: ( (lv_BasicLit_0_0= ruleBasicLit ) )
                    // InternalGo.g:3245:4: (lv_BasicLit_0_0= ruleBasicLit )
                    {
                    // InternalGo.g:3245:4: (lv_BasicLit_0_0= ruleBasicLit )
                    // InternalGo.g:3246:5: lv_BasicLit_0_0= ruleBasicLit
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLiteralAccess().getBasicLitBasicLitParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_BasicLit_0_0=ruleBasicLit();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getLiteralRule());
                      					}
                      					set(
                      						current,
                      						"BasicLit",
                      						lv_BasicLit_0_0,
                      						"com.ufcg.compiladores.Go.BasicLit");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:3264:3: this_CompositeLit_1= ruleCompositeLit
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getLiteralAccess().getCompositeLitParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_CompositeLit_1=ruleCompositeLit();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_CompositeLit_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalGo.g:3276:3: this_FunctionLit_2= ruleFunctionLit
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getLiteralAccess().getFunctionLitParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_FunctionLit_2=ruleFunctionLit();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_FunctionLit_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLiteral"


    // $ANTLR start "entryRuleBasicLit"
    // InternalGo.g:3291:1: entryRuleBasicLit returns [EObject current=null] : iv_ruleBasicLit= ruleBasicLit EOF ;
    public final EObject entryRuleBasicLit() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBasicLit = null;


        try {
            // InternalGo.g:3291:49: (iv_ruleBasicLit= ruleBasicLit EOF )
            // InternalGo.g:3292:2: iv_ruleBasicLit= ruleBasicLit EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBasicLitRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBasicLit=ruleBasicLit();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBasicLit; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBasicLit"


    // $ANTLR start "ruleBasicLit"
    // InternalGo.g:3298:1: ruleBasicLit returns [EObject current=null] : ( ( () ( (lv_int_lit_1_0= ruleint_lit ) ) ) | ( (lv_float_lit_2_0= rulefloat_lit ) ) | ( (lv_rune_lit_3_0= rulerune_lit ) ) | ( (lv_string_lit_4_0= rulestring_lit ) ) ) ;
    public final EObject ruleBasicLit() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_int_lit_1_0 = null;

        EObject lv_float_lit_2_0 = null;

        EObject lv_rune_lit_3_0 = null;

        EObject lv_string_lit_4_0 = null;



        	enterRule();

        try {
            // InternalGo.g:3304:2: ( ( ( () ( (lv_int_lit_1_0= ruleint_lit ) ) ) | ( (lv_float_lit_2_0= rulefloat_lit ) ) | ( (lv_rune_lit_3_0= rulerune_lit ) ) | ( (lv_string_lit_4_0= rulestring_lit ) ) ) )
            // InternalGo.g:3305:2: ( ( () ( (lv_int_lit_1_0= ruleint_lit ) ) ) | ( (lv_float_lit_2_0= rulefloat_lit ) ) | ( (lv_rune_lit_3_0= rulerune_lit ) ) | ( (lv_string_lit_4_0= rulestring_lit ) ) )
            {
            // InternalGo.g:3305:2: ( ( () ( (lv_int_lit_1_0= ruleint_lit ) ) ) | ( (lv_float_lit_2_0= rulefloat_lit ) ) | ( (lv_rune_lit_3_0= rulerune_lit ) ) | ( (lv_string_lit_4_0= rulestring_lit ) ) )
            int alt42=4;
            switch ( input.LA(1) ) {
            case RULE_DECIMAL_DIGIT:
                {
                int LA42_1 = input.LA(2);

                if ( (synpred54_InternalGo()) ) {
                    alt42=1;
                }
                else if ( (synpred55_InternalGo()) ) {
                    alt42=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 42, 1, input);

                    throw nvae;
                }
                }
                break;
            case 79:
                {
                alt42=1;
                }
                break;
            case 20:
                {
                alt42=2;
                }
                break;
            case 82:
                {
                int LA42_4 = input.LA(2);

                if ( (synpred56_InternalGo()) ) {
                    alt42=3;
                }
                else if ( (true) ) {
                    alt42=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 42, 4, input);

                    throw nvae;
                }
                }
                break;
            case 83:
                {
                alt42=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 42, 0, input);

                throw nvae;
            }

            switch (alt42) {
                case 1 :
                    // InternalGo.g:3306:3: ( () ( (lv_int_lit_1_0= ruleint_lit ) ) )
                    {
                    // InternalGo.g:3306:3: ( () ( (lv_int_lit_1_0= ruleint_lit ) ) )
                    // InternalGo.g:3307:4: () ( (lv_int_lit_1_0= ruleint_lit ) )
                    {
                    // InternalGo.g:3307:4: ()
                    // InternalGo.g:3308:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getBasicLitAccess().getBasicLitAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalGo.g:3317:4: ( (lv_int_lit_1_0= ruleint_lit ) )
                    // InternalGo.g:3318:5: (lv_int_lit_1_0= ruleint_lit )
                    {
                    // InternalGo.g:3318:5: (lv_int_lit_1_0= ruleint_lit )
                    // InternalGo.g:3319:6: lv_int_lit_1_0= ruleint_lit
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getBasicLitAccess().getInt_litInt_litParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_int_lit_1_0=ruleint_lit();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getBasicLitRule());
                      						}
                      						set(
                      							current,
                      							"int_lit",
                      							lv_int_lit_1_0,
                      							"com.ufcg.compiladores.Go.int_lit");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:3338:3: ( (lv_float_lit_2_0= rulefloat_lit ) )
                    {
                    // InternalGo.g:3338:3: ( (lv_float_lit_2_0= rulefloat_lit ) )
                    // InternalGo.g:3339:4: (lv_float_lit_2_0= rulefloat_lit )
                    {
                    // InternalGo.g:3339:4: (lv_float_lit_2_0= rulefloat_lit )
                    // InternalGo.g:3340:5: lv_float_lit_2_0= rulefloat_lit
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getBasicLitAccess().getFloat_litFloat_litParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_float_lit_2_0=rulefloat_lit();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getBasicLitRule());
                      					}
                      					set(
                      						current,
                      						"float_lit",
                      						lv_float_lit_2_0,
                      						"com.ufcg.compiladores.Go.float_lit");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalGo.g:3358:3: ( (lv_rune_lit_3_0= rulerune_lit ) )
                    {
                    // InternalGo.g:3358:3: ( (lv_rune_lit_3_0= rulerune_lit ) )
                    // InternalGo.g:3359:4: (lv_rune_lit_3_0= rulerune_lit )
                    {
                    // InternalGo.g:3359:4: (lv_rune_lit_3_0= rulerune_lit )
                    // InternalGo.g:3360:5: lv_rune_lit_3_0= rulerune_lit
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getBasicLitAccess().getRune_litRune_litParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_rune_lit_3_0=rulerune_lit();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getBasicLitRule());
                      					}
                      					set(
                      						current,
                      						"rune_lit",
                      						lv_rune_lit_3_0,
                      						"com.ufcg.compiladores.Go.rune_lit");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalGo.g:3378:3: ( (lv_string_lit_4_0= rulestring_lit ) )
                    {
                    // InternalGo.g:3378:3: ( (lv_string_lit_4_0= rulestring_lit ) )
                    // InternalGo.g:3379:4: (lv_string_lit_4_0= rulestring_lit )
                    {
                    // InternalGo.g:3379:4: (lv_string_lit_4_0= rulestring_lit )
                    // InternalGo.g:3380:5: lv_string_lit_4_0= rulestring_lit
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getBasicLitAccess().getString_litString_litParserRuleCall_3_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_string_lit_4_0=rulestring_lit();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getBasicLitRule());
                      					}
                      					set(
                      						current,
                      						"string_lit",
                      						lv_string_lit_4_0,
                      						"com.ufcg.compiladores.Go.string_lit");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBasicLit"


    // $ANTLR start "entryRuleOperandName"
    // InternalGo.g:3401:1: entryRuleOperandName returns [EObject current=null] : iv_ruleOperandName= ruleOperandName EOF ;
    public final EObject entryRuleOperandName() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOperandName = null;


        try {
            // InternalGo.g:3401:52: (iv_ruleOperandName= ruleOperandName EOF )
            // InternalGo.g:3402:2: iv_ruleOperandName= ruleOperandName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOperandNameRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOperandName=ruleOperandName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOperandName; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOperandName"


    // $ANTLR start "ruleOperandName"
    // InternalGo.g:3408:1: ruleOperandName returns [EObject current=null] : (this_identifier_0= ruleidentifier | this_QualifiedIdent_1= ruleQualifiedIdent ) ;
    public final EObject ruleOperandName() throws RecognitionException {
        EObject current = null;

        EObject this_identifier_0 = null;

        EObject this_QualifiedIdent_1 = null;



        	enterRule();

        try {
            // InternalGo.g:3414:2: ( (this_identifier_0= ruleidentifier | this_QualifiedIdent_1= ruleQualifiedIdent ) )
            // InternalGo.g:3415:2: (this_identifier_0= ruleidentifier | this_QualifiedIdent_1= ruleQualifiedIdent )
            {
            // InternalGo.g:3415:2: (this_identifier_0= ruleidentifier | this_QualifiedIdent_1= ruleQualifiedIdent )
            int alt43=2;
            int LA43_0 = input.LA(1);

            if ( (LA43_0==RULE_LETTER) ) {
                int LA43_1 = input.LA(2);

                if ( (synpred57_InternalGo()) ) {
                    alt43=1;
                }
                else if ( (true) ) {
                    alt43=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 43, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 43, 0, input);

                throw nvae;
            }
            switch (alt43) {
                case 1 :
                    // InternalGo.g:3416:3: this_identifier_0= ruleidentifier
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getOperandNameAccess().getIdentifierParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_identifier_0=ruleidentifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_identifier_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalGo.g:3428:3: this_QualifiedIdent_1= ruleQualifiedIdent
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getOperandNameAccess().getQualifiedIdentParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_QualifiedIdent_1=ruleQualifiedIdent();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_QualifiedIdent_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOperandName"


    // $ANTLR start "entryRuleQualifiedIdent"
    // InternalGo.g:3443:1: entryRuleQualifiedIdent returns [EObject current=null] : iv_ruleQualifiedIdent= ruleQualifiedIdent EOF ;
    public final EObject entryRuleQualifiedIdent() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleQualifiedIdent = null;


        try {
            // InternalGo.g:3443:55: (iv_ruleQualifiedIdent= ruleQualifiedIdent EOF )
            // InternalGo.g:3444:2: iv_ruleQualifiedIdent= ruleQualifiedIdent EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQualifiedIdentRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleQualifiedIdent=ruleQualifiedIdent();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQualifiedIdent; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQualifiedIdent"


    // $ANTLR start "ruleQualifiedIdent"
    // InternalGo.g:3450:1: ruleQualifiedIdent returns [EObject current=null] : ( ( (lv_PackageName_0_0= rulePackageName ) ) otherlv_1= '.' ( (lv_identifier_2_0= ruleidentifier ) ) ) ;
    public final EObject ruleQualifiedIdent() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_PackageName_0_0 = null;

        EObject lv_identifier_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:3456:2: ( ( ( (lv_PackageName_0_0= rulePackageName ) ) otherlv_1= '.' ( (lv_identifier_2_0= ruleidentifier ) ) ) )
            // InternalGo.g:3457:2: ( ( (lv_PackageName_0_0= rulePackageName ) ) otherlv_1= '.' ( (lv_identifier_2_0= ruleidentifier ) ) )
            {
            // InternalGo.g:3457:2: ( ( (lv_PackageName_0_0= rulePackageName ) ) otherlv_1= '.' ( (lv_identifier_2_0= ruleidentifier ) ) )
            // InternalGo.g:3458:3: ( (lv_PackageName_0_0= rulePackageName ) ) otherlv_1= '.' ( (lv_identifier_2_0= ruleidentifier ) )
            {
            // InternalGo.g:3458:3: ( (lv_PackageName_0_0= rulePackageName ) )
            // InternalGo.g:3459:4: (lv_PackageName_0_0= rulePackageName )
            {
            // InternalGo.g:3459:4: (lv_PackageName_0_0= rulePackageName )
            // InternalGo.g:3460:5: lv_PackageName_0_0= rulePackageName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getQualifiedIdentAccess().getPackageNamePackageNameParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_36);
            lv_PackageName_0_0=rulePackageName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getQualifiedIdentRule());
              					}
              					set(
              						current,
              						"PackageName",
              						lv_PackageName_0_0,
              						"com.ufcg.compiladores.Go.PackageName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_1=(Token)match(input,20,FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getQualifiedIdentAccess().getFullStopKeyword_1());
              		
            }
            // InternalGo.g:3481:3: ( (lv_identifier_2_0= ruleidentifier ) )
            // InternalGo.g:3482:4: (lv_identifier_2_0= ruleidentifier )
            {
            // InternalGo.g:3482:4: (lv_identifier_2_0= ruleidentifier )
            // InternalGo.g:3483:5: lv_identifier_2_0= ruleidentifier
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getQualifiedIdentAccess().getIdentifierIdentifierParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_identifier_2_0=ruleidentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getQualifiedIdentRule());
              					}
              					set(
              						current,
              						"identifier",
              						lv_identifier_2_0,
              						"com.ufcg.compiladores.Go.identifier");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQualifiedIdent"


    // $ANTLR start "entryRuleCompositeLit"
    // InternalGo.g:3504:1: entryRuleCompositeLit returns [EObject current=null] : iv_ruleCompositeLit= ruleCompositeLit EOF ;
    public final EObject entryRuleCompositeLit() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCompositeLit = null;


        try {
            // InternalGo.g:3504:53: (iv_ruleCompositeLit= ruleCompositeLit EOF )
            // InternalGo.g:3505:2: iv_ruleCompositeLit= ruleCompositeLit EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCompositeLitRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleCompositeLit=ruleCompositeLit();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCompositeLit; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCompositeLit"


    // $ANTLR start "ruleCompositeLit"
    // InternalGo.g:3511:1: ruleCompositeLit returns [EObject current=null] : ( ( (lv_LiteralType_0_0= ruleLiteralType ) ) ( (lv_LiteralValue_1_0= ruleLiteralValue ) ) ) ;
    public final EObject ruleCompositeLit() throws RecognitionException {
        EObject current = null;

        EObject lv_LiteralType_0_0 = null;

        EObject lv_LiteralValue_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:3517:2: ( ( ( (lv_LiteralType_0_0= ruleLiteralType ) ) ( (lv_LiteralValue_1_0= ruleLiteralValue ) ) ) )
            // InternalGo.g:3518:2: ( ( (lv_LiteralType_0_0= ruleLiteralType ) ) ( (lv_LiteralValue_1_0= ruleLiteralValue ) ) )
            {
            // InternalGo.g:3518:2: ( ( (lv_LiteralType_0_0= ruleLiteralType ) ) ( (lv_LiteralValue_1_0= ruleLiteralValue ) ) )
            // InternalGo.g:3519:3: ( (lv_LiteralType_0_0= ruleLiteralType ) ) ( (lv_LiteralValue_1_0= ruleLiteralValue ) )
            {
            // InternalGo.g:3519:3: ( (lv_LiteralType_0_0= ruleLiteralType ) )
            // InternalGo.g:3520:4: (lv_LiteralType_0_0= ruleLiteralType )
            {
            // InternalGo.g:3520:4: (lv_LiteralType_0_0= ruleLiteralType )
            // InternalGo.g:3521:5: lv_LiteralType_0_0= ruleLiteralType
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getCompositeLitAccess().getLiteralTypeLiteralTypeParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_11);
            lv_LiteralType_0_0=ruleLiteralType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getCompositeLitRule());
              					}
              					set(
              						current,
              						"LiteralType",
              						lv_LiteralType_0_0,
              						"com.ufcg.compiladores.Go.LiteralType");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:3538:3: ( (lv_LiteralValue_1_0= ruleLiteralValue ) )
            // InternalGo.g:3539:4: (lv_LiteralValue_1_0= ruleLiteralValue )
            {
            // InternalGo.g:3539:4: (lv_LiteralValue_1_0= ruleLiteralValue )
            // InternalGo.g:3540:5: lv_LiteralValue_1_0= ruleLiteralValue
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getCompositeLitAccess().getLiteralValueLiteralValueParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_LiteralValue_1_0=ruleLiteralValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getCompositeLitRule());
              					}
              					set(
              						current,
              						"LiteralValue",
              						lv_LiteralValue_1_0,
              						"com.ufcg.compiladores.Go.LiteralValue");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCompositeLit"


    // $ANTLR start "entryRuleLiteralType"
    // InternalGo.g:3561:1: entryRuleLiteralType returns [EObject current=null] : iv_ruleLiteralType= ruleLiteralType EOF ;
    public final EObject entryRuleLiteralType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLiteralType = null;


        try {
            // InternalGo.g:3561:52: (iv_ruleLiteralType= ruleLiteralType EOF )
            // InternalGo.g:3562:2: iv_ruleLiteralType= ruleLiteralType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLiteralTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLiteralType=ruleLiteralType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLiteralType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLiteralType"


    // $ANTLR start "ruleLiteralType"
    // InternalGo.g:3568:1: ruleLiteralType returns [EObject current=null] : ( ( (lv_StructType_0_0= ruleStructType ) ) | (otherlv_1= '[' ( (lv_LiteralTypeLinha_2_0= ruleLiteralTypeLinha ) ) ) | ( (lv_ElementType_3_0= ruleElementType ) ) | ( (lv_MapType_4_0= ruleMapType ) ) | ( (lv_TypeName_5_0= ruleTypeName ) ) ) ;
    public final EObject ruleLiteralType() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_StructType_0_0 = null;

        EObject lv_LiteralTypeLinha_2_0 = null;

        EObject lv_ElementType_3_0 = null;

        EObject lv_MapType_4_0 = null;

        EObject lv_TypeName_5_0 = null;



        	enterRule();

        try {
            // InternalGo.g:3574:2: ( ( ( (lv_StructType_0_0= ruleStructType ) ) | (otherlv_1= '[' ( (lv_LiteralTypeLinha_2_0= ruleLiteralTypeLinha ) ) ) | ( (lv_ElementType_3_0= ruleElementType ) ) | ( (lv_MapType_4_0= ruleMapType ) ) | ( (lv_TypeName_5_0= ruleTypeName ) ) ) )
            // InternalGo.g:3575:2: ( ( (lv_StructType_0_0= ruleStructType ) ) | (otherlv_1= '[' ( (lv_LiteralTypeLinha_2_0= ruleLiteralTypeLinha ) ) ) | ( (lv_ElementType_3_0= ruleElementType ) ) | ( (lv_MapType_4_0= ruleMapType ) ) | ( (lv_TypeName_5_0= ruleTypeName ) ) )
            {
            // InternalGo.g:3575:2: ( ( (lv_StructType_0_0= ruleStructType ) ) | (otherlv_1= '[' ( (lv_LiteralTypeLinha_2_0= ruleLiteralTypeLinha ) ) ) | ( (lv_ElementType_3_0= ruleElementType ) ) | ( (lv_MapType_4_0= ruleMapType ) ) | ( (lv_TypeName_5_0= ruleTypeName ) ) )
            int alt44=5;
            alt44 = dfa44.predict(input);
            switch (alt44) {
                case 1 :
                    // InternalGo.g:3576:3: ( (lv_StructType_0_0= ruleStructType ) )
                    {
                    // InternalGo.g:3576:3: ( (lv_StructType_0_0= ruleStructType ) )
                    // InternalGo.g:3577:4: (lv_StructType_0_0= ruleStructType )
                    {
                    // InternalGo.g:3577:4: (lv_StructType_0_0= ruleStructType )
                    // InternalGo.g:3578:5: lv_StructType_0_0= ruleStructType
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLiteralTypeAccess().getStructTypeStructTypeParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_StructType_0_0=ruleStructType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getLiteralTypeRule());
                      					}
                      					set(
                      						current,
                      						"StructType",
                      						lv_StructType_0_0,
                      						"com.ufcg.compiladores.Go.StructType");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:3596:3: (otherlv_1= '[' ( (lv_LiteralTypeLinha_2_0= ruleLiteralTypeLinha ) ) )
                    {
                    // InternalGo.g:3596:3: (otherlv_1= '[' ( (lv_LiteralTypeLinha_2_0= ruleLiteralTypeLinha ) ) )
                    // InternalGo.g:3597:4: otherlv_1= '[' ( (lv_LiteralTypeLinha_2_0= ruleLiteralTypeLinha ) )
                    {
                    otherlv_1=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getLiteralTypeAccess().getLeftSquareBracketKeyword_1_0());
                      			
                    }
                    // InternalGo.g:3601:4: ( (lv_LiteralTypeLinha_2_0= ruleLiteralTypeLinha ) )
                    // InternalGo.g:3602:5: (lv_LiteralTypeLinha_2_0= ruleLiteralTypeLinha )
                    {
                    // InternalGo.g:3602:5: (lv_LiteralTypeLinha_2_0= ruleLiteralTypeLinha )
                    // InternalGo.g:3603:6: lv_LiteralTypeLinha_2_0= ruleLiteralTypeLinha
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getLiteralTypeAccess().getLiteralTypeLinhaLiteralTypeLinhaParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_LiteralTypeLinha_2_0=ruleLiteralTypeLinha();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getLiteralTypeRule());
                      						}
                      						set(
                      							current,
                      							"LiteralTypeLinha",
                      							lv_LiteralTypeLinha_2_0,
                      							"com.ufcg.compiladores.Go.LiteralTypeLinha");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalGo.g:3622:3: ( (lv_ElementType_3_0= ruleElementType ) )
                    {
                    // InternalGo.g:3622:3: ( (lv_ElementType_3_0= ruleElementType ) )
                    // InternalGo.g:3623:4: (lv_ElementType_3_0= ruleElementType )
                    {
                    // InternalGo.g:3623:4: (lv_ElementType_3_0= ruleElementType )
                    // InternalGo.g:3624:5: lv_ElementType_3_0= ruleElementType
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLiteralTypeAccess().getElementTypeElementTypeParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_ElementType_3_0=ruleElementType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getLiteralTypeRule());
                      					}
                      					set(
                      						current,
                      						"ElementType",
                      						lv_ElementType_3_0,
                      						"com.ufcg.compiladores.Go.ElementType");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalGo.g:3642:3: ( (lv_MapType_4_0= ruleMapType ) )
                    {
                    // InternalGo.g:3642:3: ( (lv_MapType_4_0= ruleMapType ) )
                    // InternalGo.g:3643:4: (lv_MapType_4_0= ruleMapType )
                    {
                    // InternalGo.g:3643:4: (lv_MapType_4_0= ruleMapType )
                    // InternalGo.g:3644:5: lv_MapType_4_0= ruleMapType
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLiteralTypeAccess().getMapTypeMapTypeParserRuleCall_3_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_MapType_4_0=ruleMapType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getLiteralTypeRule());
                      					}
                      					set(
                      						current,
                      						"MapType",
                      						lv_MapType_4_0,
                      						"com.ufcg.compiladores.Go.MapType");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalGo.g:3662:3: ( (lv_TypeName_5_0= ruleTypeName ) )
                    {
                    // InternalGo.g:3662:3: ( (lv_TypeName_5_0= ruleTypeName ) )
                    // InternalGo.g:3663:4: (lv_TypeName_5_0= ruleTypeName )
                    {
                    // InternalGo.g:3663:4: (lv_TypeName_5_0= ruleTypeName )
                    // InternalGo.g:3664:5: lv_TypeName_5_0= ruleTypeName
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLiteralTypeAccess().getTypeNameTypeNameParserRuleCall_4_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_TypeName_5_0=ruleTypeName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getLiteralTypeRule());
                      					}
                      					set(
                      						current,
                      						"TypeName",
                      						lv_TypeName_5_0,
                      						"com.ufcg.compiladores.Go.TypeName");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLiteralType"


    // $ANTLR start "entryRuleLiteralTypeLinha"
    // InternalGo.g:3685:1: entryRuleLiteralTypeLinha returns [EObject current=null] : iv_ruleLiteralTypeLinha= ruleLiteralTypeLinha EOF ;
    public final EObject entryRuleLiteralTypeLinha() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLiteralTypeLinha = null;


        try {
            // InternalGo.g:3685:57: (iv_ruleLiteralTypeLinha= ruleLiteralTypeLinha EOF )
            // InternalGo.g:3686:2: iv_ruleLiteralTypeLinha= ruleLiteralTypeLinha EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLiteralTypeLinhaRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLiteralTypeLinha=ruleLiteralTypeLinha();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLiteralTypeLinha; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLiteralTypeLinha"


    // $ANTLR start "ruleLiteralTypeLinha"
    // InternalGo.g:3692:1: ruleLiteralTypeLinha returns [EObject current=null] : ( ( ( (lv_ArrayLength_0_0= ruleArrayLength ) ) otherlv_1= ']' ( (lv_ElementType_2_0= ruleElementType ) ) ) | (otherlv_3= ']' ( (lv_ElementType_4_0= ruleElementType ) ) ) | ( () otherlv_6= '...' otherlv_7= ']' ) ) ;
    public final EObject ruleLiteralTypeLinha() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        EObject lv_ArrayLength_0_0 = null;

        EObject lv_ElementType_2_0 = null;

        EObject lv_ElementType_4_0 = null;



        	enterRule();

        try {
            // InternalGo.g:3698:2: ( ( ( ( (lv_ArrayLength_0_0= ruleArrayLength ) ) otherlv_1= ']' ( (lv_ElementType_2_0= ruleElementType ) ) ) | (otherlv_3= ']' ( (lv_ElementType_4_0= ruleElementType ) ) ) | ( () otherlv_6= '...' otherlv_7= ']' ) ) )
            // InternalGo.g:3699:2: ( ( ( (lv_ArrayLength_0_0= ruleArrayLength ) ) otherlv_1= ']' ( (lv_ElementType_2_0= ruleElementType ) ) ) | (otherlv_3= ']' ( (lv_ElementType_4_0= ruleElementType ) ) ) | ( () otherlv_6= '...' otherlv_7= ']' ) )
            {
            // InternalGo.g:3699:2: ( ( ( (lv_ArrayLength_0_0= ruleArrayLength ) ) otherlv_1= ']' ( (lv_ElementType_2_0= ruleElementType ) ) ) | (otherlv_3= ']' ( (lv_ElementType_4_0= ruleElementType ) ) ) | ( () otherlv_6= '...' otherlv_7= ']' ) )
            int alt45=3;
            switch ( input.LA(1) ) {
            case RULE_LETTER:
            case RULE_DECIMAL_DIGIT:
            case 18:
            case 20:
            case 21:
            case 23:
            case 25:
            case 26:
            case 29:
            case 31:
            case 32:
            case 33:
            case 48:
            case 49:
            case 56:
            case 58:
            case 59:
            case 79:
            case 82:
            case 83:
                {
                alt45=1;
                }
                break;
            case 22:
                {
                alt45=2;
                }
                break;
            case 28:
                {
                alt45=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 45, 0, input);

                throw nvae;
            }

            switch (alt45) {
                case 1 :
                    // InternalGo.g:3700:3: ( ( (lv_ArrayLength_0_0= ruleArrayLength ) ) otherlv_1= ']' ( (lv_ElementType_2_0= ruleElementType ) ) )
                    {
                    // InternalGo.g:3700:3: ( ( (lv_ArrayLength_0_0= ruleArrayLength ) ) otherlv_1= ']' ( (lv_ElementType_2_0= ruleElementType ) ) )
                    // InternalGo.g:3701:4: ( (lv_ArrayLength_0_0= ruleArrayLength ) ) otherlv_1= ']' ( (lv_ElementType_2_0= ruleElementType ) )
                    {
                    // InternalGo.g:3701:4: ( (lv_ArrayLength_0_0= ruleArrayLength ) )
                    // InternalGo.g:3702:5: (lv_ArrayLength_0_0= ruleArrayLength )
                    {
                    // InternalGo.g:3702:5: (lv_ArrayLength_0_0= ruleArrayLength )
                    // InternalGo.g:3703:6: lv_ArrayLength_0_0= ruleArrayLength
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getLiteralTypeLinhaAccess().getArrayLengthArrayLengthParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_10);
                    lv_ArrayLength_0_0=ruleArrayLength();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getLiteralTypeLinhaRule());
                      						}
                      						set(
                      							current,
                      							"ArrayLength",
                      							lv_ArrayLength_0_0,
                      							"com.ufcg.compiladores.Go.ArrayLength");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_1=(Token)match(input,22,FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getLiteralTypeLinhaAccess().getRightSquareBracketKeyword_0_1());
                      			
                    }
                    // InternalGo.g:3724:4: ( (lv_ElementType_2_0= ruleElementType ) )
                    // InternalGo.g:3725:5: (lv_ElementType_2_0= ruleElementType )
                    {
                    // InternalGo.g:3725:5: (lv_ElementType_2_0= ruleElementType )
                    // InternalGo.g:3726:6: lv_ElementType_2_0= ruleElementType
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getLiteralTypeLinhaAccess().getElementTypeElementTypeParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_ElementType_2_0=ruleElementType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getLiteralTypeLinhaRule());
                      						}
                      						set(
                      							current,
                      							"ElementType",
                      							lv_ElementType_2_0,
                      							"com.ufcg.compiladores.Go.ElementType");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:3745:3: (otherlv_3= ']' ( (lv_ElementType_4_0= ruleElementType ) ) )
                    {
                    // InternalGo.g:3745:3: (otherlv_3= ']' ( (lv_ElementType_4_0= ruleElementType ) ) )
                    // InternalGo.g:3746:4: otherlv_3= ']' ( (lv_ElementType_4_0= ruleElementType ) )
                    {
                    otherlv_3=(Token)match(input,22,FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getLiteralTypeLinhaAccess().getRightSquareBracketKeyword_1_0());
                      			
                    }
                    // InternalGo.g:3750:4: ( (lv_ElementType_4_0= ruleElementType ) )
                    // InternalGo.g:3751:5: (lv_ElementType_4_0= ruleElementType )
                    {
                    // InternalGo.g:3751:5: (lv_ElementType_4_0= ruleElementType )
                    // InternalGo.g:3752:6: lv_ElementType_4_0= ruleElementType
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getLiteralTypeLinhaAccess().getElementTypeElementTypeParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_ElementType_4_0=ruleElementType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getLiteralTypeLinhaRule());
                      						}
                      						set(
                      							current,
                      							"ElementType",
                      							lv_ElementType_4_0,
                      							"com.ufcg.compiladores.Go.ElementType");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalGo.g:3771:3: ( () otherlv_6= '...' otherlv_7= ']' )
                    {
                    // InternalGo.g:3771:3: ( () otherlv_6= '...' otherlv_7= ']' )
                    // InternalGo.g:3772:4: () otherlv_6= '...' otherlv_7= ']'
                    {
                    // InternalGo.g:3772:4: ()
                    // InternalGo.g:3773:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getLiteralTypeLinhaAccess().getLiteralTypeLinhaAction_2_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_6=(Token)match(input,28,FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getLiteralTypeLinhaAccess().getFullStopFullStopFullStopKeyword_2_1());
                      			
                    }
                    otherlv_7=(Token)match(input,22,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getLiteralTypeLinhaAccess().getRightSquareBracketKeyword_2_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLiteralTypeLinha"


    // $ANTLR start "entryRuleLiteralValue"
    // InternalGo.g:3795:1: entryRuleLiteralValue returns [EObject current=null] : iv_ruleLiteralValue= ruleLiteralValue EOF ;
    public final EObject entryRuleLiteralValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLiteralValue = null;


        try {
            // InternalGo.g:3795:53: (iv_ruleLiteralValue= ruleLiteralValue EOF )
            // InternalGo.g:3796:2: iv_ruleLiteralValue= ruleLiteralValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLiteralValueRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLiteralValue=ruleLiteralValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLiteralValue; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLiteralValue"


    // $ANTLR start "ruleLiteralValue"
    // InternalGo.g:3802:1: ruleLiteralValue returns [EObject current=null] : ( () otherlv_1= '{' ( ( (lv_ElementList_2_0= ruleElementList ) ) (otherlv_3= ',' )? )? otherlv_4= '}' ) ;
    public final EObject ruleLiteralValue() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        EObject lv_ElementList_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:3808:2: ( ( () otherlv_1= '{' ( ( (lv_ElementList_2_0= ruleElementList ) ) (otherlv_3= ',' )? )? otherlv_4= '}' ) )
            // InternalGo.g:3809:2: ( () otherlv_1= '{' ( ( (lv_ElementList_2_0= ruleElementList ) ) (otherlv_3= ',' )? )? otherlv_4= '}' )
            {
            // InternalGo.g:3809:2: ( () otherlv_1= '{' ( ( (lv_ElementList_2_0= ruleElementList ) ) (otherlv_3= ',' )? )? otherlv_4= '}' )
            // InternalGo.g:3810:3: () otherlv_1= '{' ( ( (lv_ElementList_2_0= ruleElementList ) ) (otherlv_3= ',' )? )? otherlv_4= '}'
            {
            // InternalGo.g:3810:3: ()
            // InternalGo.g:3811:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getLiteralValueAccess().getLiteralValueAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,24,FOLLOW_38); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getLiteralValueAccess().getLeftCurlyBracketKeyword_1());
              		
            }
            // InternalGo.g:3824:3: ( ( (lv_ElementList_2_0= ruleElementList ) ) (otherlv_3= ',' )? )?
            int alt47=2;
            int LA47_0 = input.LA(1);

            if ( ((LA47_0>=RULE_LETTER && LA47_0<=RULE_DECIMAL_DIGIT)||LA47_0==18||(LA47_0>=20 && LA47_0<=21)||(LA47_0>=23 && LA47_0<=26)||LA47_0==29||(LA47_0>=31 && LA47_0<=33)||(LA47_0>=48 && LA47_0<=49)||LA47_0==56||(LA47_0>=58 && LA47_0<=59)||LA47_0==79||(LA47_0>=82 && LA47_0<=83)) ) {
                alt47=1;
            }
            switch (alt47) {
                case 1 :
                    // InternalGo.g:3825:4: ( (lv_ElementList_2_0= ruleElementList ) ) (otherlv_3= ',' )?
                    {
                    // InternalGo.g:3825:4: ( (lv_ElementList_2_0= ruleElementList ) )
                    // InternalGo.g:3826:5: (lv_ElementList_2_0= ruleElementList )
                    {
                    // InternalGo.g:3826:5: (lv_ElementList_2_0= ruleElementList )
                    // InternalGo.g:3827:6: lv_ElementList_2_0= ruleElementList
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getLiteralValueAccess().getElementListElementListParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_39);
                    lv_ElementList_2_0=ruleElementList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getLiteralValueRule());
                      						}
                      						set(
                      							current,
                      							"ElementList",
                      							lv_ElementList_2_0,
                      							"com.ufcg.compiladores.Go.ElementList");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalGo.g:3844:4: (otherlv_3= ',' )?
                    int alt46=2;
                    int LA46_0 = input.LA(1);

                    if ( (LA46_0==27) ) {
                        alt46=1;
                    }
                    switch (alt46) {
                        case 1 :
                            // InternalGo.g:3845:5: otherlv_3= ','
                            {
                            otherlv_3=(Token)match(input,27,FOLLOW_21); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_3, grammarAccess.getLiteralValueAccess().getCommaKeyword_2_1());
                              				
                            }

                            }
                            break;

                    }


                    }
                    break;

            }

            otherlv_4=(Token)match(input,30,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getLiteralValueAccess().getRightCurlyBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLiteralValue"


    // $ANTLR start "entryRuleElementList"
    // InternalGo.g:3859:1: entryRuleElementList returns [EObject current=null] : iv_ruleElementList= ruleElementList EOF ;
    public final EObject entryRuleElementList() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleElementList = null;


        try {
            // InternalGo.g:3859:52: (iv_ruleElementList= ruleElementList EOF )
            // InternalGo.g:3860:2: iv_ruleElementList= ruleElementList EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getElementListRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleElementList=ruleElementList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleElementList; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleElementList"


    // $ANTLR start "ruleElementList"
    // InternalGo.g:3866:1: ruleElementList returns [EObject current=null] : ( ( (lv_KeyedElement_0_0= ruleKeyedElement ) ) (otherlv_1= ',' ( (lv_KeyedElement_2_0= ruleKeyedElement ) ) )? ) ;
    public final EObject ruleElementList() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_KeyedElement_0_0 = null;

        EObject lv_KeyedElement_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:3872:2: ( ( ( (lv_KeyedElement_0_0= ruleKeyedElement ) ) (otherlv_1= ',' ( (lv_KeyedElement_2_0= ruleKeyedElement ) ) )? ) )
            // InternalGo.g:3873:2: ( ( (lv_KeyedElement_0_0= ruleKeyedElement ) ) (otherlv_1= ',' ( (lv_KeyedElement_2_0= ruleKeyedElement ) ) )? )
            {
            // InternalGo.g:3873:2: ( ( (lv_KeyedElement_0_0= ruleKeyedElement ) ) (otherlv_1= ',' ( (lv_KeyedElement_2_0= ruleKeyedElement ) ) )? )
            // InternalGo.g:3874:3: ( (lv_KeyedElement_0_0= ruleKeyedElement ) ) (otherlv_1= ',' ( (lv_KeyedElement_2_0= ruleKeyedElement ) ) )?
            {
            // InternalGo.g:3874:3: ( (lv_KeyedElement_0_0= ruleKeyedElement ) )
            // InternalGo.g:3875:4: (lv_KeyedElement_0_0= ruleKeyedElement )
            {
            // InternalGo.g:3875:4: (lv_KeyedElement_0_0= ruleKeyedElement )
            // InternalGo.g:3876:5: lv_KeyedElement_0_0= ruleKeyedElement
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getElementListAccess().getKeyedElementKeyedElementParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_18);
            lv_KeyedElement_0_0=ruleKeyedElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getElementListRule());
              					}
              					add(
              						current,
              						"KeyedElement",
              						lv_KeyedElement_0_0,
              						"com.ufcg.compiladores.Go.KeyedElement");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:3893:3: (otherlv_1= ',' ( (lv_KeyedElement_2_0= ruleKeyedElement ) ) )?
            int alt48=2;
            int LA48_0 = input.LA(1);

            if ( (LA48_0==27) ) {
                int LA48_1 = input.LA(2);

                if ( ((LA48_1>=RULE_LETTER && LA48_1<=RULE_DECIMAL_DIGIT)||LA48_1==18||(LA48_1>=20 && LA48_1<=21)||(LA48_1>=23 && LA48_1<=26)||LA48_1==29||(LA48_1>=31 && LA48_1<=33)||(LA48_1>=48 && LA48_1<=49)||LA48_1==56||(LA48_1>=58 && LA48_1<=59)||LA48_1==79||(LA48_1>=82 && LA48_1<=83)) ) {
                    alt48=1;
                }
            }
            switch (alt48) {
                case 1 :
                    // InternalGo.g:3894:4: otherlv_1= ',' ( (lv_KeyedElement_2_0= ruleKeyedElement ) )
                    {
                    otherlv_1=(Token)match(input,27,FOLLOW_40); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getElementListAccess().getCommaKeyword_1_0());
                      			
                    }
                    // InternalGo.g:3898:4: ( (lv_KeyedElement_2_0= ruleKeyedElement ) )
                    // InternalGo.g:3899:5: (lv_KeyedElement_2_0= ruleKeyedElement )
                    {
                    // InternalGo.g:3899:5: (lv_KeyedElement_2_0= ruleKeyedElement )
                    // InternalGo.g:3900:6: lv_KeyedElement_2_0= ruleKeyedElement
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getElementListAccess().getKeyedElementKeyedElementParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_KeyedElement_2_0=ruleKeyedElement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getElementListRule());
                      						}
                      						add(
                      							current,
                      							"KeyedElement",
                      							lv_KeyedElement_2_0,
                      							"com.ufcg.compiladores.Go.KeyedElement");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleElementList"


    // $ANTLR start "entryRuleElement"
    // InternalGo.g:3922:1: entryRuleElement returns [EObject current=null] : iv_ruleElement= ruleElement EOF ;
    public final EObject entryRuleElement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleElement = null;


        try {
            // InternalGo.g:3922:48: (iv_ruleElement= ruleElement EOF )
            // InternalGo.g:3923:2: iv_ruleElement= ruleElement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getElementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleElement=ruleElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleElement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleElement"


    // $ANTLR start "ruleElement"
    // InternalGo.g:3929:1: ruleElement returns [EObject current=null] : ( ( (lv_Expression_0_0= ruleExpression ) ) | ( (lv_LiteralValue_1_0= ruleLiteralValue ) ) ) ;
    public final EObject ruleElement() throws RecognitionException {
        EObject current = null;

        EObject lv_Expression_0_0 = null;

        EObject lv_LiteralValue_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:3935:2: ( ( ( (lv_Expression_0_0= ruleExpression ) ) | ( (lv_LiteralValue_1_0= ruleLiteralValue ) ) ) )
            // InternalGo.g:3936:2: ( ( (lv_Expression_0_0= ruleExpression ) ) | ( (lv_LiteralValue_1_0= ruleLiteralValue ) ) )
            {
            // InternalGo.g:3936:2: ( ( (lv_Expression_0_0= ruleExpression ) ) | ( (lv_LiteralValue_1_0= ruleLiteralValue ) ) )
            int alt49=2;
            int LA49_0 = input.LA(1);

            if ( ((LA49_0>=RULE_LETTER && LA49_0<=RULE_DECIMAL_DIGIT)||LA49_0==18||(LA49_0>=20 && LA49_0<=21)||LA49_0==23||(LA49_0>=25 && LA49_0<=26)||LA49_0==29||(LA49_0>=31 && LA49_0<=33)||(LA49_0>=48 && LA49_0<=49)||LA49_0==56||(LA49_0>=58 && LA49_0<=59)||LA49_0==79||(LA49_0>=82 && LA49_0<=83)) ) {
                alt49=1;
            }
            else if ( (LA49_0==24) ) {
                alt49=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 49, 0, input);

                throw nvae;
            }
            switch (alt49) {
                case 1 :
                    // InternalGo.g:3937:3: ( (lv_Expression_0_0= ruleExpression ) )
                    {
                    // InternalGo.g:3937:3: ( (lv_Expression_0_0= ruleExpression ) )
                    // InternalGo.g:3938:4: (lv_Expression_0_0= ruleExpression )
                    {
                    // InternalGo.g:3938:4: (lv_Expression_0_0= ruleExpression )
                    // InternalGo.g:3939:5: lv_Expression_0_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getElementAccess().getExpressionExpressionParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_Expression_0_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getElementRule());
                      					}
                      					set(
                      						current,
                      						"Expression",
                      						lv_Expression_0_0,
                      						"com.ufcg.compiladores.Go.Expression");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:3957:3: ( (lv_LiteralValue_1_0= ruleLiteralValue ) )
                    {
                    // InternalGo.g:3957:3: ( (lv_LiteralValue_1_0= ruleLiteralValue ) )
                    // InternalGo.g:3958:4: (lv_LiteralValue_1_0= ruleLiteralValue )
                    {
                    // InternalGo.g:3958:4: (lv_LiteralValue_1_0= ruleLiteralValue )
                    // InternalGo.g:3959:5: lv_LiteralValue_1_0= ruleLiteralValue
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getElementAccess().getLiteralValueLiteralValueParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_LiteralValue_1_0=ruleLiteralValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getElementRule());
                      					}
                      					set(
                      						current,
                      						"LiteralValue",
                      						lv_LiteralValue_1_0,
                      						"com.ufcg.compiladores.Go.LiteralValue");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleElement"


    // $ANTLR start "entryRuleKeyedElement"
    // InternalGo.g:3980:1: entryRuleKeyedElement returns [EObject current=null] : iv_ruleKeyedElement= ruleKeyedElement EOF ;
    public final EObject entryRuleKeyedElement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleKeyedElement = null;


        try {
            // InternalGo.g:3980:53: (iv_ruleKeyedElement= ruleKeyedElement EOF )
            // InternalGo.g:3981:2: iv_ruleKeyedElement= ruleKeyedElement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getKeyedElementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleKeyedElement=ruleKeyedElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleKeyedElement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleKeyedElement"


    // $ANTLR start "ruleKeyedElement"
    // InternalGo.g:3987:1: ruleKeyedElement returns [EObject current=null] : ( ( ( (lv_Key_0_0= ruleKey ) ) otherlv_1= ':' )? ( (lv_Element_2_0= ruleElement ) ) ) ;
    public final EObject ruleKeyedElement() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_Key_0_0 = null;

        EObject lv_Element_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:3993:2: ( ( ( ( (lv_Key_0_0= ruleKey ) ) otherlv_1= ':' )? ( (lv_Element_2_0= ruleElement ) ) ) )
            // InternalGo.g:3994:2: ( ( ( (lv_Key_0_0= ruleKey ) ) otherlv_1= ':' )? ( (lv_Element_2_0= ruleElement ) ) )
            {
            // InternalGo.g:3994:2: ( ( ( (lv_Key_0_0= ruleKey ) ) otherlv_1= ':' )? ( (lv_Element_2_0= ruleElement ) ) )
            // InternalGo.g:3995:3: ( ( (lv_Key_0_0= ruleKey ) ) otherlv_1= ':' )? ( (lv_Element_2_0= ruleElement ) )
            {
            // InternalGo.g:3995:3: ( ( (lv_Key_0_0= ruleKey ) ) otherlv_1= ':' )?
            int alt50=2;
            alt50 = dfa50.predict(input);
            switch (alt50) {
                case 1 :
                    // InternalGo.g:3996:4: ( (lv_Key_0_0= ruleKey ) ) otherlv_1= ':'
                    {
                    // InternalGo.g:3996:4: ( (lv_Key_0_0= ruleKey ) )
                    // InternalGo.g:3997:5: (lv_Key_0_0= ruleKey )
                    {
                    // InternalGo.g:3997:5: (lv_Key_0_0= ruleKey )
                    // InternalGo.g:3998:6: lv_Key_0_0= ruleKey
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getKeyedElementAccess().getKeyKeyParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_41);
                    lv_Key_0_0=ruleKey();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getKeyedElementRule());
                      						}
                      						set(
                      							current,
                      							"Key",
                      							lv_Key_0_0,
                      							"com.ufcg.compiladores.Go.Key");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_1=(Token)match(input,39,FOLLOW_40); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getKeyedElementAccess().getColonKeyword_0_1());
                      			
                    }

                    }
                    break;

            }

            // InternalGo.g:4020:3: ( (lv_Element_2_0= ruleElement ) )
            // InternalGo.g:4021:4: (lv_Element_2_0= ruleElement )
            {
            // InternalGo.g:4021:4: (lv_Element_2_0= ruleElement )
            // InternalGo.g:4022:5: lv_Element_2_0= ruleElement
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getKeyedElementAccess().getElementElementParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_Element_2_0=ruleElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getKeyedElementRule());
              					}
              					set(
              						current,
              						"Element",
              						lv_Element_2_0,
              						"com.ufcg.compiladores.Go.Element");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleKeyedElement"


    // $ANTLR start "entryRuleKey"
    // InternalGo.g:4043:1: entryRuleKey returns [EObject current=null] : iv_ruleKey= ruleKey EOF ;
    public final EObject entryRuleKey() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleKey = null;


        try {
            // InternalGo.g:4043:44: (iv_ruleKey= ruleKey EOF )
            // InternalGo.g:4044:2: iv_ruleKey= ruleKey EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getKeyRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleKey=ruleKey();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleKey; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleKey"


    // $ANTLR start "ruleKey"
    // InternalGo.g:4050:1: ruleKey returns [EObject current=null] : ( ( (lv_FieldName_0_0= ruleFieldName ) ) | ( (lv_Expression_1_0= ruleExpression ) ) | ( (lv_LiteralValue_2_0= ruleLiteralValue ) ) ) ;
    public final EObject ruleKey() throws RecognitionException {
        EObject current = null;

        EObject lv_FieldName_0_0 = null;

        EObject lv_Expression_1_0 = null;

        EObject lv_LiteralValue_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:4056:2: ( ( ( (lv_FieldName_0_0= ruleFieldName ) ) | ( (lv_Expression_1_0= ruleExpression ) ) | ( (lv_LiteralValue_2_0= ruleLiteralValue ) ) ) )
            // InternalGo.g:4057:2: ( ( (lv_FieldName_0_0= ruleFieldName ) ) | ( (lv_Expression_1_0= ruleExpression ) ) | ( (lv_LiteralValue_2_0= ruleLiteralValue ) ) )
            {
            // InternalGo.g:4057:2: ( ( (lv_FieldName_0_0= ruleFieldName ) ) | ( (lv_Expression_1_0= ruleExpression ) ) | ( (lv_LiteralValue_2_0= ruleLiteralValue ) ) )
            int alt51=3;
            alt51 = dfa51.predict(input);
            switch (alt51) {
                case 1 :
                    // InternalGo.g:4058:3: ( (lv_FieldName_0_0= ruleFieldName ) )
                    {
                    // InternalGo.g:4058:3: ( (lv_FieldName_0_0= ruleFieldName ) )
                    // InternalGo.g:4059:4: (lv_FieldName_0_0= ruleFieldName )
                    {
                    // InternalGo.g:4059:4: (lv_FieldName_0_0= ruleFieldName )
                    // InternalGo.g:4060:5: lv_FieldName_0_0= ruleFieldName
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getKeyAccess().getFieldNameFieldNameParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_FieldName_0_0=ruleFieldName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getKeyRule());
                      					}
                      					set(
                      						current,
                      						"FieldName",
                      						lv_FieldName_0_0,
                      						"com.ufcg.compiladores.Go.FieldName");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:4078:3: ( (lv_Expression_1_0= ruleExpression ) )
                    {
                    // InternalGo.g:4078:3: ( (lv_Expression_1_0= ruleExpression ) )
                    // InternalGo.g:4079:4: (lv_Expression_1_0= ruleExpression )
                    {
                    // InternalGo.g:4079:4: (lv_Expression_1_0= ruleExpression )
                    // InternalGo.g:4080:5: lv_Expression_1_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getKeyAccess().getExpressionExpressionParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_Expression_1_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getKeyRule());
                      					}
                      					set(
                      						current,
                      						"Expression",
                      						lv_Expression_1_0,
                      						"com.ufcg.compiladores.Go.Expression");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalGo.g:4098:3: ( (lv_LiteralValue_2_0= ruleLiteralValue ) )
                    {
                    // InternalGo.g:4098:3: ( (lv_LiteralValue_2_0= ruleLiteralValue ) )
                    // InternalGo.g:4099:4: (lv_LiteralValue_2_0= ruleLiteralValue )
                    {
                    // InternalGo.g:4099:4: (lv_LiteralValue_2_0= ruleLiteralValue )
                    // InternalGo.g:4100:5: lv_LiteralValue_2_0= ruleLiteralValue
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getKeyAccess().getLiteralValueLiteralValueParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_LiteralValue_2_0=ruleLiteralValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getKeyRule());
                      					}
                      					set(
                      						current,
                      						"LiteralValue",
                      						lv_LiteralValue_2_0,
                      						"com.ufcg.compiladores.Go.LiteralValue");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleKey"


    // $ANTLR start "entryRuleFieldName"
    // InternalGo.g:4121:1: entryRuleFieldName returns [EObject current=null] : iv_ruleFieldName= ruleFieldName EOF ;
    public final EObject entryRuleFieldName() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFieldName = null;


        try {
            // InternalGo.g:4121:50: (iv_ruleFieldName= ruleFieldName EOF )
            // InternalGo.g:4122:2: iv_ruleFieldName= ruleFieldName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFieldNameRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFieldName=ruleFieldName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFieldName; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFieldName"


    // $ANTLR start "ruleFieldName"
    // InternalGo.g:4128:1: ruleFieldName returns [EObject current=null] : ( (lv_identifier_0_0= ruleidentifier ) ) ;
    public final EObject ruleFieldName() throws RecognitionException {
        EObject current = null;

        EObject lv_identifier_0_0 = null;



        	enterRule();

        try {
            // InternalGo.g:4134:2: ( ( (lv_identifier_0_0= ruleidentifier ) ) )
            // InternalGo.g:4135:2: ( (lv_identifier_0_0= ruleidentifier ) )
            {
            // InternalGo.g:4135:2: ( (lv_identifier_0_0= ruleidentifier ) )
            // InternalGo.g:4136:3: (lv_identifier_0_0= ruleidentifier )
            {
            // InternalGo.g:4136:3: (lv_identifier_0_0= ruleidentifier )
            // InternalGo.g:4137:4: lv_identifier_0_0= ruleidentifier
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getFieldNameAccess().getIdentifierIdentifierParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_identifier_0_0=ruleidentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getFieldNameRule());
              				}
              				set(
              					current,
              					"identifier",
              					lv_identifier_0_0,
              					"com.ufcg.compiladores.Go.identifier");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFieldName"


    // $ANTLR start "entryRuleFunctionLit"
    // InternalGo.g:4157:1: entryRuleFunctionLit returns [EObject current=null] : iv_ruleFunctionLit= ruleFunctionLit EOF ;
    public final EObject entryRuleFunctionLit() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunctionLit = null;


        try {
            // InternalGo.g:4157:52: (iv_ruleFunctionLit= ruleFunctionLit EOF )
            // InternalGo.g:4158:2: iv_ruleFunctionLit= ruleFunctionLit EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionLitRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFunctionLit=ruleFunctionLit();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunctionLit; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFunctionLit"


    // $ANTLR start "ruleFunctionLit"
    // InternalGo.g:4164:1: ruleFunctionLit returns [EObject current=null] : (otherlv_0= 'func' ( (lv_Signature_1_0= ruleSignature ) ) ( (lv_FunctionBody_2_0= ruleFunctionBody ) ) ) ;
    public final EObject ruleFunctionLit() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_Signature_1_0 = null;

        EObject lv_FunctionBody_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:4170:2: ( (otherlv_0= 'func' ( (lv_Signature_1_0= ruleSignature ) ) ( (lv_FunctionBody_2_0= ruleFunctionBody ) ) ) )
            // InternalGo.g:4171:2: (otherlv_0= 'func' ( (lv_Signature_1_0= ruleSignature ) ) ( (lv_FunctionBody_2_0= ruleFunctionBody ) ) )
            {
            // InternalGo.g:4171:2: (otherlv_0= 'func' ( (lv_Signature_1_0= ruleSignature ) ) ( (lv_FunctionBody_2_0= ruleFunctionBody ) ) )
            // InternalGo.g:4172:3: otherlv_0= 'func' ( (lv_Signature_1_0= ruleSignature ) ) ( (lv_FunctionBody_2_0= ruleFunctionBody ) )
            {
            otherlv_0=(Token)match(input,26,FOLLOW_14); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getFunctionLitAccess().getFuncKeyword_0());
              		
            }
            // InternalGo.g:4176:3: ( (lv_Signature_1_0= ruleSignature ) )
            // InternalGo.g:4177:4: (lv_Signature_1_0= ruleSignature )
            {
            // InternalGo.g:4177:4: (lv_Signature_1_0= ruleSignature )
            // InternalGo.g:4178:5: lv_Signature_1_0= ruleSignature
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getFunctionLitAccess().getSignatureSignatureParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_11);
            lv_Signature_1_0=ruleSignature();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getFunctionLitRule());
              					}
              					set(
              						current,
              						"Signature",
              						lv_Signature_1_0,
              						"com.ufcg.compiladores.Go.Signature");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:4195:3: ( (lv_FunctionBody_2_0= ruleFunctionBody ) )
            // InternalGo.g:4196:4: (lv_FunctionBody_2_0= ruleFunctionBody )
            {
            // InternalGo.g:4196:4: (lv_FunctionBody_2_0= ruleFunctionBody )
            // InternalGo.g:4197:5: lv_FunctionBody_2_0= ruleFunctionBody
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getFunctionLitAccess().getFunctionBodyFunctionBodyParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_FunctionBody_2_0=ruleFunctionBody();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getFunctionLitRule());
              					}
              					set(
              						current,
              						"FunctionBody",
              						lv_FunctionBody_2_0,
              						"com.ufcg.compiladores.Go.FunctionBody");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFunctionLit"


    // $ANTLR start "entryRulePrimaryExpr"
    // InternalGo.g:4218:1: entryRulePrimaryExpr returns [EObject current=null] : iv_rulePrimaryExpr= rulePrimaryExpr EOF ;
    public final EObject entryRulePrimaryExpr() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePrimaryExpr = null;


        try {
            // InternalGo.g:4218:52: (iv_rulePrimaryExpr= rulePrimaryExpr EOF )
            // InternalGo.g:4219:2: iv_rulePrimaryExpr= rulePrimaryExpr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPrimaryExprRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePrimaryExpr=rulePrimaryExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePrimaryExpr; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePrimaryExpr"


    // $ANTLR start "rulePrimaryExpr"
    // InternalGo.g:4225:1: rulePrimaryExpr returns [EObject current=null] : ( ( ( (lv_Operand_0_0= ruleOperand ) ) ( (lv_PrimaryExprLinha_1_0= rulePrimaryExprLinha ) ) ) | ( ( (lv_Conversion_2_0= ruleConversion ) ) ( (lv_PrimaryExprLinha_3_0= rulePrimaryExprLinha ) ) ) | ( ( (lv_MethodExpr_4_0= ruleMethodExpr ) ) ( (lv_PrimaryExprLinha_5_0= rulePrimaryExprLinha ) ) ) ) ;
    public final EObject rulePrimaryExpr() throws RecognitionException {
        EObject current = null;

        EObject lv_Operand_0_0 = null;

        EObject lv_PrimaryExprLinha_1_0 = null;

        EObject lv_Conversion_2_0 = null;

        EObject lv_PrimaryExprLinha_3_0 = null;

        EObject lv_MethodExpr_4_0 = null;

        EObject lv_PrimaryExprLinha_5_0 = null;



        	enterRule();

        try {
            // InternalGo.g:4231:2: ( ( ( ( (lv_Operand_0_0= ruleOperand ) ) ( (lv_PrimaryExprLinha_1_0= rulePrimaryExprLinha ) ) ) | ( ( (lv_Conversion_2_0= ruleConversion ) ) ( (lv_PrimaryExprLinha_3_0= rulePrimaryExprLinha ) ) ) | ( ( (lv_MethodExpr_4_0= ruleMethodExpr ) ) ( (lv_PrimaryExprLinha_5_0= rulePrimaryExprLinha ) ) ) ) )
            // InternalGo.g:4232:2: ( ( ( (lv_Operand_0_0= ruleOperand ) ) ( (lv_PrimaryExprLinha_1_0= rulePrimaryExprLinha ) ) ) | ( ( (lv_Conversion_2_0= ruleConversion ) ) ( (lv_PrimaryExprLinha_3_0= rulePrimaryExprLinha ) ) ) | ( ( (lv_MethodExpr_4_0= ruleMethodExpr ) ) ( (lv_PrimaryExprLinha_5_0= rulePrimaryExprLinha ) ) ) )
            {
            // InternalGo.g:4232:2: ( ( ( (lv_Operand_0_0= ruleOperand ) ) ( (lv_PrimaryExprLinha_1_0= rulePrimaryExprLinha ) ) ) | ( ( (lv_Conversion_2_0= ruleConversion ) ) ( (lv_PrimaryExprLinha_3_0= rulePrimaryExprLinha ) ) ) | ( ( (lv_MethodExpr_4_0= ruleMethodExpr ) ) ( (lv_PrimaryExprLinha_5_0= rulePrimaryExprLinha ) ) ) )
            int alt52=3;
            alt52 = dfa52.predict(input);
            switch (alt52) {
                case 1 :
                    // InternalGo.g:4233:3: ( ( (lv_Operand_0_0= ruleOperand ) ) ( (lv_PrimaryExprLinha_1_0= rulePrimaryExprLinha ) ) )
                    {
                    // InternalGo.g:4233:3: ( ( (lv_Operand_0_0= ruleOperand ) ) ( (lv_PrimaryExprLinha_1_0= rulePrimaryExprLinha ) ) )
                    // InternalGo.g:4234:4: ( (lv_Operand_0_0= ruleOperand ) ) ( (lv_PrimaryExprLinha_1_0= rulePrimaryExprLinha ) )
                    {
                    // InternalGo.g:4234:4: ( (lv_Operand_0_0= ruleOperand ) )
                    // InternalGo.g:4235:5: (lv_Operand_0_0= ruleOperand )
                    {
                    // InternalGo.g:4235:5: (lv_Operand_0_0= ruleOperand )
                    // InternalGo.g:4236:6: lv_Operand_0_0= ruleOperand
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExprAccess().getOperandOperandParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_42);
                    lv_Operand_0_0=ruleOperand();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExprRule());
                      						}
                      						set(
                      							current,
                      							"Operand",
                      							lv_Operand_0_0,
                      							"com.ufcg.compiladores.Go.Operand");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalGo.g:4253:4: ( (lv_PrimaryExprLinha_1_0= rulePrimaryExprLinha ) )
                    // InternalGo.g:4254:5: (lv_PrimaryExprLinha_1_0= rulePrimaryExprLinha )
                    {
                    // InternalGo.g:4254:5: (lv_PrimaryExprLinha_1_0= rulePrimaryExprLinha )
                    // InternalGo.g:4255:6: lv_PrimaryExprLinha_1_0= rulePrimaryExprLinha
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExprAccess().getPrimaryExprLinhaPrimaryExprLinhaParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_PrimaryExprLinha_1_0=rulePrimaryExprLinha();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExprRule());
                      						}
                      						set(
                      							current,
                      							"PrimaryExprLinha",
                      							lv_PrimaryExprLinha_1_0,
                      							"com.ufcg.compiladores.Go.PrimaryExprLinha");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:4274:3: ( ( (lv_Conversion_2_0= ruleConversion ) ) ( (lv_PrimaryExprLinha_3_0= rulePrimaryExprLinha ) ) )
                    {
                    // InternalGo.g:4274:3: ( ( (lv_Conversion_2_0= ruleConversion ) ) ( (lv_PrimaryExprLinha_3_0= rulePrimaryExprLinha ) ) )
                    // InternalGo.g:4275:4: ( (lv_Conversion_2_0= ruleConversion ) ) ( (lv_PrimaryExprLinha_3_0= rulePrimaryExprLinha ) )
                    {
                    // InternalGo.g:4275:4: ( (lv_Conversion_2_0= ruleConversion ) )
                    // InternalGo.g:4276:5: (lv_Conversion_2_0= ruleConversion )
                    {
                    // InternalGo.g:4276:5: (lv_Conversion_2_0= ruleConversion )
                    // InternalGo.g:4277:6: lv_Conversion_2_0= ruleConversion
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExprAccess().getConversionConversionParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_42);
                    lv_Conversion_2_0=ruleConversion();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExprRule());
                      						}
                      						set(
                      							current,
                      							"Conversion",
                      							lv_Conversion_2_0,
                      							"com.ufcg.compiladores.Go.Conversion");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalGo.g:4294:4: ( (lv_PrimaryExprLinha_3_0= rulePrimaryExprLinha ) )
                    // InternalGo.g:4295:5: (lv_PrimaryExprLinha_3_0= rulePrimaryExprLinha )
                    {
                    // InternalGo.g:4295:5: (lv_PrimaryExprLinha_3_0= rulePrimaryExprLinha )
                    // InternalGo.g:4296:6: lv_PrimaryExprLinha_3_0= rulePrimaryExprLinha
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExprAccess().getPrimaryExprLinhaPrimaryExprLinhaParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_PrimaryExprLinha_3_0=rulePrimaryExprLinha();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExprRule());
                      						}
                      						set(
                      							current,
                      							"PrimaryExprLinha",
                      							lv_PrimaryExprLinha_3_0,
                      							"com.ufcg.compiladores.Go.PrimaryExprLinha");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalGo.g:4315:3: ( ( (lv_MethodExpr_4_0= ruleMethodExpr ) ) ( (lv_PrimaryExprLinha_5_0= rulePrimaryExprLinha ) ) )
                    {
                    // InternalGo.g:4315:3: ( ( (lv_MethodExpr_4_0= ruleMethodExpr ) ) ( (lv_PrimaryExprLinha_5_0= rulePrimaryExprLinha ) ) )
                    // InternalGo.g:4316:4: ( (lv_MethodExpr_4_0= ruleMethodExpr ) ) ( (lv_PrimaryExprLinha_5_0= rulePrimaryExprLinha ) )
                    {
                    // InternalGo.g:4316:4: ( (lv_MethodExpr_4_0= ruleMethodExpr ) )
                    // InternalGo.g:4317:5: (lv_MethodExpr_4_0= ruleMethodExpr )
                    {
                    // InternalGo.g:4317:5: (lv_MethodExpr_4_0= ruleMethodExpr )
                    // InternalGo.g:4318:6: lv_MethodExpr_4_0= ruleMethodExpr
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExprAccess().getMethodExprMethodExprParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_42);
                    lv_MethodExpr_4_0=ruleMethodExpr();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExprRule());
                      						}
                      						set(
                      							current,
                      							"MethodExpr",
                      							lv_MethodExpr_4_0,
                      							"com.ufcg.compiladores.Go.MethodExpr");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalGo.g:4335:4: ( (lv_PrimaryExprLinha_5_0= rulePrimaryExprLinha ) )
                    // InternalGo.g:4336:5: (lv_PrimaryExprLinha_5_0= rulePrimaryExprLinha )
                    {
                    // InternalGo.g:4336:5: (lv_PrimaryExprLinha_5_0= rulePrimaryExprLinha )
                    // InternalGo.g:4337:6: lv_PrimaryExprLinha_5_0= rulePrimaryExprLinha
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExprAccess().getPrimaryExprLinhaPrimaryExprLinhaParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_PrimaryExprLinha_5_0=rulePrimaryExprLinha();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExprRule());
                      						}
                      						set(
                      							current,
                      							"PrimaryExprLinha",
                      							lv_PrimaryExprLinha_5_0,
                      							"com.ufcg.compiladores.Go.PrimaryExprLinha");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePrimaryExpr"


    // $ANTLR start "entryRulePrimaryExprLinha"
    // InternalGo.g:4359:1: entryRulePrimaryExprLinha returns [EObject current=null] : iv_rulePrimaryExprLinha= rulePrimaryExprLinha EOF ;
    public final EObject entryRulePrimaryExprLinha() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePrimaryExprLinha = null;


        try {
            // InternalGo.g:4359:57: (iv_rulePrimaryExprLinha= rulePrimaryExprLinha EOF )
            // InternalGo.g:4360:2: iv_rulePrimaryExprLinha= rulePrimaryExprLinha EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPrimaryExprLinhaRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePrimaryExprLinha=rulePrimaryExprLinha();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePrimaryExprLinha; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePrimaryExprLinha"


    // $ANTLR start "rulePrimaryExprLinha"
    // InternalGo.g:4366:1: rulePrimaryExprLinha returns [EObject current=null] : ( ( ( (lv_Arguments_0_0= ruleArguments ) ) ( (lv_PrimaryExprLinha_1_0= rulePrimaryExprLinha ) ) ) | (otherlv_2= '.' ( (lv_ponto_3_0= ruleponto ) ) ) | (otherlv_4= '[' ( (lv_cochetes_5_0= rulecochetes ) ) ) | ( () this_ANY_OTHER_7= RULE_ANY_OTHER ) ) ;
    public final EObject rulePrimaryExprLinha() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        Token this_ANY_OTHER_7=null;
        EObject lv_Arguments_0_0 = null;

        EObject lv_PrimaryExprLinha_1_0 = null;

        EObject lv_ponto_3_0 = null;

        EObject lv_cochetes_5_0 = null;



        	enterRule();

        try {
            // InternalGo.g:4372:2: ( ( ( ( (lv_Arguments_0_0= ruleArguments ) ) ( (lv_PrimaryExprLinha_1_0= rulePrimaryExprLinha ) ) ) | (otherlv_2= '.' ( (lv_ponto_3_0= ruleponto ) ) ) | (otherlv_4= '[' ( (lv_cochetes_5_0= rulecochetes ) ) ) | ( () this_ANY_OTHER_7= RULE_ANY_OTHER ) ) )
            // InternalGo.g:4373:2: ( ( ( (lv_Arguments_0_0= ruleArguments ) ) ( (lv_PrimaryExprLinha_1_0= rulePrimaryExprLinha ) ) ) | (otherlv_2= '.' ( (lv_ponto_3_0= ruleponto ) ) ) | (otherlv_4= '[' ( (lv_cochetes_5_0= rulecochetes ) ) ) | ( () this_ANY_OTHER_7= RULE_ANY_OTHER ) )
            {
            // InternalGo.g:4373:2: ( ( ( (lv_Arguments_0_0= ruleArguments ) ) ( (lv_PrimaryExprLinha_1_0= rulePrimaryExprLinha ) ) ) | (otherlv_2= '.' ( (lv_ponto_3_0= ruleponto ) ) ) | (otherlv_4= '[' ( (lv_cochetes_5_0= rulecochetes ) ) ) | ( () this_ANY_OTHER_7= RULE_ANY_OTHER ) )
            int alt53=4;
            switch ( input.LA(1) ) {
            case 18:
                {
                alt53=1;
                }
                break;
            case 20:
                {
                alt53=2;
                }
                break;
            case 21:
                {
                alt53=3;
                }
                break;
            case RULE_ANY_OTHER:
                {
                alt53=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 53, 0, input);

                throw nvae;
            }

            switch (alt53) {
                case 1 :
                    // InternalGo.g:4374:3: ( ( (lv_Arguments_0_0= ruleArguments ) ) ( (lv_PrimaryExprLinha_1_0= rulePrimaryExprLinha ) ) )
                    {
                    // InternalGo.g:4374:3: ( ( (lv_Arguments_0_0= ruleArguments ) ) ( (lv_PrimaryExprLinha_1_0= rulePrimaryExprLinha ) ) )
                    // InternalGo.g:4375:4: ( (lv_Arguments_0_0= ruleArguments ) ) ( (lv_PrimaryExprLinha_1_0= rulePrimaryExprLinha ) )
                    {
                    // InternalGo.g:4375:4: ( (lv_Arguments_0_0= ruleArguments ) )
                    // InternalGo.g:4376:5: (lv_Arguments_0_0= ruleArguments )
                    {
                    // InternalGo.g:4376:5: (lv_Arguments_0_0= ruleArguments )
                    // InternalGo.g:4377:6: lv_Arguments_0_0= ruleArguments
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExprLinhaAccess().getArgumentsArgumentsParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_42);
                    lv_Arguments_0_0=ruleArguments();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExprLinhaRule());
                      						}
                      						set(
                      							current,
                      							"Arguments",
                      							lv_Arguments_0_0,
                      							"com.ufcg.compiladores.Go.Arguments");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalGo.g:4394:4: ( (lv_PrimaryExprLinha_1_0= rulePrimaryExprLinha ) )
                    // InternalGo.g:4395:5: (lv_PrimaryExprLinha_1_0= rulePrimaryExprLinha )
                    {
                    // InternalGo.g:4395:5: (lv_PrimaryExprLinha_1_0= rulePrimaryExprLinha )
                    // InternalGo.g:4396:6: lv_PrimaryExprLinha_1_0= rulePrimaryExprLinha
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExprLinhaAccess().getPrimaryExprLinhaPrimaryExprLinhaParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_PrimaryExprLinha_1_0=rulePrimaryExprLinha();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExprLinhaRule());
                      						}
                      						set(
                      							current,
                      							"PrimaryExprLinha",
                      							lv_PrimaryExprLinha_1_0,
                      							"com.ufcg.compiladores.Go.PrimaryExprLinha");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:4415:3: (otherlv_2= '.' ( (lv_ponto_3_0= ruleponto ) ) )
                    {
                    // InternalGo.g:4415:3: (otherlv_2= '.' ( (lv_ponto_3_0= ruleponto ) ) )
                    // InternalGo.g:4416:4: otherlv_2= '.' ( (lv_ponto_3_0= ruleponto ) )
                    {
                    otherlv_2=(Token)match(input,20,FOLLOW_27); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getPrimaryExprLinhaAccess().getFullStopKeyword_1_0());
                      			
                    }
                    // InternalGo.g:4420:4: ( (lv_ponto_3_0= ruleponto ) )
                    // InternalGo.g:4421:5: (lv_ponto_3_0= ruleponto )
                    {
                    // InternalGo.g:4421:5: (lv_ponto_3_0= ruleponto )
                    // InternalGo.g:4422:6: lv_ponto_3_0= ruleponto
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExprLinhaAccess().getPontoPontoParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_ponto_3_0=ruleponto();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExprLinhaRule());
                      						}
                      						set(
                      							current,
                      							"ponto",
                      							lv_ponto_3_0,
                      							"com.ufcg.compiladores.Go.ponto");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalGo.g:4441:3: (otherlv_4= '[' ( (lv_cochetes_5_0= rulecochetes ) ) )
                    {
                    // InternalGo.g:4441:3: (otherlv_4= '[' ( (lv_cochetes_5_0= rulecochetes ) ) )
                    // InternalGo.g:4442:4: otherlv_4= '[' ( (lv_cochetes_5_0= rulecochetes ) )
                    {
                    otherlv_4=(Token)match(input,21,FOLLOW_43); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getPrimaryExprLinhaAccess().getLeftSquareBracketKeyword_2_0());
                      			
                    }
                    // InternalGo.g:4446:4: ( (lv_cochetes_5_0= rulecochetes ) )
                    // InternalGo.g:4447:5: (lv_cochetes_5_0= rulecochetes )
                    {
                    // InternalGo.g:4447:5: (lv_cochetes_5_0= rulecochetes )
                    // InternalGo.g:4448:6: lv_cochetes_5_0= rulecochetes
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExprLinhaAccess().getCochetesCochetesParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_cochetes_5_0=rulecochetes();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExprLinhaRule());
                      						}
                      						set(
                      							current,
                      							"cochetes",
                      							lv_cochetes_5_0,
                      							"com.ufcg.compiladores.Go.cochetes");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalGo.g:4467:3: ( () this_ANY_OTHER_7= RULE_ANY_OTHER )
                    {
                    // InternalGo.g:4467:3: ( () this_ANY_OTHER_7= RULE_ANY_OTHER )
                    // InternalGo.g:4468:4: () this_ANY_OTHER_7= RULE_ANY_OTHER
                    {
                    // InternalGo.g:4468:4: ()
                    // InternalGo.g:4469:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getPrimaryExprLinhaAccess().getPrimaryExprLinhaAction_3_0(),
                      						current);
                      				
                    }

                    }

                    this_ANY_OTHER_7=(Token)match(input,RULE_ANY_OTHER,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_ANY_OTHER_7, grammarAccess.getPrimaryExprLinhaAccess().getANY_OTHERTerminalRuleCall_3_1());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePrimaryExprLinha"


    // $ANTLR start "entryRuleponto"
    // InternalGo.g:4487:1: entryRuleponto returns [EObject current=null] : iv_ruleponto= ruleponto EOF ;
    public final EObject entryRuleponto() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleponto = null;


        try {
            // InternalGo.g:4487:46: (iv_ruleponto= ruleponto EOF )
            // InternalGo.g:4488:2: iv_ruleponto= ruleponto EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPontoRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleponto=ruleponto();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleponto; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleponto"


    // $ANTLR start "ruleponto"
    // InternalGo.g:4494:1: ruleponto returns [EObject current=null] : ( ( ( (lv_Selector_0_0= ruleSelector ) ) ( (lv_PrimaryExprLinha_1_0= rulePrimaryExprLinha ) ) ) | ( ( (lv_TypeAssertion_2_0= ruleTypeAssertion ) ) ( (lv_PrimaryExprLinha_3_0= rulePrimaryExprLinha ) ) ) ) ;
    public final EObject ruleponto() throws RecognitionException {
        EObject current = null;

        EObject lv_Selector_0_0 = null;

        EObject lv_PrimaryExprLinha_1_0 = null;

        EObject lv_TypeAssertion_2_0 = null;

        EObject lv_PrimaryExprLinha_3_0 = null;



        	enterRule();

        try {
            // InternalGo.g:4500:2: ( ( ( ( (lv_Selector_0_0= ruleSelector ) ) ( (lv_PrimaryExprLinha_1_0= rulePrimaryExprLinha ) ) ) | ( ( (lv_TypeAssertion_2_0= ruleTypeAssertion ) ) ( (lv_PrimaryExprLinha_3_0= rulePrimaryExprLinha ) ) ) ) )
            // InternalGo.g:4501:2: ( ( ( (lv_Selector_0_0= ruleSelector ) ) ( (lv_PrimaryExprLinha_1_0= rulePrimaryExprLinha ) ) ) | ( ( (lv_TypeAssertion_2_0= ruleTypeAssertion ) ) ( (lv_PrimaryExprLinha_3_0= rulePrimaryExprLinha ) ) ) )
            {
            // InternalGo.g:4501:2: ( ( ( (lv_Selector_0_0= ruleSelector ) ) ( (lv_PrimaryExprLinha_1_0= rulePrimaryExprLinha ) ) ) | ( ( (lv_TypeAssertion_2_0= ruleTypeAssertion ) ) ( (lv_PrimaryExprLinha_3_0= rulePrimaryExprLinha ) ) ) )
            int alt54=2;
            int LA54_0 = input.LA(1);

            if ( (LA54_0==RULE_LETTER) ) {
                alt54=1;
            }
            else if ( (LA54_0==18) ) {
                alt54=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 54, 0, input);

                throw nvae;
            }
            switch (alt54) {
                case 1 :
                    // InternalGo.g:4502:3: ( ( (lv_Selector_0_0= ruleSelector ) ) ( (lv_PrimaryExprLinha_1_0= rulePrimaryExprLinha ) ) )
                    {
                    // InternalGo.g:4502:3: ( ( (lv_Selector_0_0= ruleSelector ) ) ( (lv_PrimaryExprLinha_1_0= rulePrimaryExprLinha ) ) )
                    // InternalGo.g:4503:4: ( (lv_Selector_0_0= ruleSelector ) ) ( (lv_PrimaryExprLinha_1_0= rulePrimaryExprLinha ) )
                    {
                    // InternalGo.g:4503:4: ( (lv_Selector_0_0= ruleSelector ) )
                    // InternalGo.g:4504:5: (lv_Selector_0_0= ruleSelector )
                    {
                    // InternalGo.g:4504:5: (lv_Selector_0_0= ruleSelector )
                    // InternalGo.g:4505:6: lv_Selector_0_0= ruleSelector
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPontoAccess().getSelectorSelectorParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_42);
                    lv_Selector_0_0=ruleSelector();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPontoRule());
                      						}
                      						set(
                      							current,
                      							"Selector",
                      							lv_Selector_0_0,
                      							"com.ufcg.compiladores.Go.Selector");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalGo.g:4522:4: ( (lv_PrimaryExprLinha_1_0= rulePrimaryExprLinha ) )
                    // InternalGo.g:4523:5: (lv_PrimaryExprLinha_1_0= rulePrimaryExprLinha )
                    {
                    // InternalGo.g:4523:5: (lv_PrimaryExprLinha_1_0= rulePrimaryExprLinha )
                    // InternalGo.g:4524:6: lv_PrimaryExprLinha_1_0= rulePrimaryExprLinha
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPontoAccess().getPrimaryExprLinhaPrimaryExprLinhaParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_PrimaryExprLinha_1_0=rulePrimaryExprLinha();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPontoRule());
                      						}
                      						set(
                      							current,
                      							"PrimaryExprLinha",
                      							lv_PrimaryExprLinha_1_0,
                      							"com.ufcg.compiladores.Go.PrimaryExprLinha");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:4543:3: ( ( (lv_TypeAssertion_2_0= ruleTypeAssertion ) ) ( (lv_PrimaryExprLinha_3_0= rulePrimaryExprLinha ) ) )
                    {
                    // InternalGo.g:4543:3: ( ( (lv_TypeAssertion_2_0= ruleTypeAssertion ) ) ( (lv_PrimaryExprLinha_3_0= rulePrimaryExprLinha ) ) )
                    // InternalGo.g:4544:4: ( (lv_TypeAssertion_2_0= ruleTypeAssertion ) ) ( (lv_PrimaryExprLinha_3_0= rulePrimaryExprLinha ) )
                    {
                    // InternalGo.g:4544:4: ( (lv_TypeAssertion_2_0= ruleTypeAssertion ) )
                    // InternalGo.g:4545:5: (lv_TypeAssertion_2_0= ruleTypeAssertion )
                    {
                    // InternalGo.g:4545:5: (lv_TypeAssertion_2_0= ruleTypeAssertion )
                    // InternalGo.g:4546:6: lv_TypeAssertion_2_0= ruleTypeAssertion
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPontoAccess().getTypeAssertionTypeAssertionParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_42);
                    lv_TypeAssertion_2_0=ruleTypeAssertion();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPontoRule());
                      						}
                      						set(
                      							current,
                      							"TypeAssertion",
                      							lv_TypeAssertion_2_0,
                      							"com.ufcg.compiladores.Go.TypeAssertion");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalGo.g:4563:4: ( (lv_PrimaryExprLinha_3_0= rulePrimaryExprLinha ) )
                    // InternalGo.g:4564:5: (lv_PrimaryExprLinha_3_0= rulePrimaryExprLinha )
                    {
                    // InternalGo.g:4564:5: (lv_PrimaryExprLinha_3_0= rulePrimaryExprLinha )
                    // InternalGo.g:4565:6: lv_PrimaryExprLinha_3_0= rulePrimaryExprLinha
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPontoAccess().getPrimaryExprLinhaPrimaryExprLinhaParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_PrimaryExprLinha_3_0=rulePrimaryExprLinha();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPontoRule());
                      						}
                      						set(
                      							current,
                      							"PrimaryExprLinha",
                      							lv_PrimaryExprLinha_3_0,
                      							"com.ufcg.compiladores.Go.PrimaryExprLinha");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleponto"


    // $ANTLR start "entryRulecochetes"
    // InternalGo.g:4587:1: entryRulecochetes returns [EObject current=null] : iv_rulecochetes= rulecochetes EOF ;
    public final EObject entryRulecochetes() throws RecognitionException {
        EObject current = null;

        EObject iv_rulecochetes = null;


        try {
            // InternalGo.g:4587:49: (iv_rulecochetes= rulecochetes EOF )
            // InternalGo.g:4588:2: iv_rulecochetes= rulecochetes EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCochetesRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulecochetes=rulecochetes();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulecochetes; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulecochetes"


    // $ANTLR start "rulecochetes"
    // InternalGo.g:4594:1: rulecochetes returns [EObject current=null] : ( ( ( (lv_Index_0_0= ruleIndex ) ) ( (lv_PrimaryExprLinha_1_0= rulePrimaryExprLinha ) ) ) | ( ( (lv_Slice_2_0= ruleSlice ) ) ( (lv_PrimaryExprLinha_3_0= rulePrimaryExprLinha ) ) ) ) ;
    public final EObject rulecochetes() throws RecognitionException {
        EObject current = null;

        EObject lv_Index_0_0 = null;

        EObject lv_PrimaryExprLinha_1_0 = null;

        EObject lv_Slice_2_0 = null;

        EObject lv_PrimaryExprLinha_3_0 = null;



        	enterRule();

        try {
            // InternalGo.g:4600:2: ( ( ( ( (lv_Index_0_0= ruleIndex ) ) ( (lv_PrimaryExprLinha_1_0= rulePrimaryExprLinha ) ) ) | ( ( (lv_Slice_2_0= ruleSlice ) ) ( (lv_PrimaryExprLinha_3_0= rulePrimaryExprLinha ) ) ) ) )
            // InternalGo.g:4601:2: ( ( ( (lv_Index_0_0= ruleIndex ) ) ( (lv_PrimaryExprLinha_1_0= rulePrimaryExprLinha ) ) ) | ( ( (lv_Slice_2_0= ruleSlice ) ) ( (lv_PrimaryExprLinha_3_0= rulePrimaryExprLinha ) ) ) )
            {
            // InternalGo.g:4601:2: ( ( ( (lv_Index_0_0= ruleIndex ) ) ( (lv_PrimaryExprLinha_1_0= rulePrimaryExprLinha ) ) ) | ( ( (lv_Slice_2_0= ruleSlice ) ) ( (lv_PrimaryExprLinha_3_0= rulePrimaryExprLinha ) ) ) )
            int alt55=2;
            int LA55_0 = input.LA(1);

            if ( (LA55_0==22) ) {
                alt55=1;
            }
            else if ( (LA55_0==39) ) {
                int LA55_2 = input.LA(2);

                if ( (synpred77_InternalGo()) ) {
                    alt55=1;
                }
                else if ( (true) ) {
                    alt55=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 55, 2, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 55, 0, input);

                throw nvae;
            }
            switch (alt55) {
                case 1 :
                    // InternalGo.g:4602:3: ( ( (lv_Index_0_0= ruleIndex ) ) ( (lv_PrimaryExprLinha_1_0= rulePrimaryExprLinha ) ) )
                    {
                    // InternalGo.g:4602:3: ( ( (lv_Index_0_0= ruleIndex ) ) ( (lv_PrimaryExprLinha_1_0= rulePrimaryExprLinha ) ) )
                    // InternalGo.g:4603:4: ( (lv_Index_0_0= ruleIndex ) ) ( (lv_PrimaryExprLinha_1_0= rulePrimaryExprLinha ) )
                    {
                    // InternalGo.g:4603:4: ( (lv_Index_0_0= ruleIndex ) )
                    // InternalGo.g:4604:5: (lv_Index_0_0= ruleIndex )
                    {
                    // InternalGo.g:4604:5: (lv_Index_0_0= ruleIndex )
                    // InternalGo.g:4605:6: lv_Index_0_0= ruleIndex
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getCochetesAccess().getIndexIndexParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_42);
                    lv_Index_0_0=ruleIndex();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getCochetesRule());
                      						}
                      						set(
                      							current,
                      							"Index",
                      							lv_Index_0_0,
                      							"com.ufcg.compiladores.Go.Index");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalGo.g:4622:4: ( (lv_PrimaryExprLinha_1_0= rulePrimaryExprLinha ) )
                    // InternalGo.g:4623:5: (lv_PrimaryExprLinha_1_0= rulePrimaryExprLinha )
                    {
                    // InternalGo.g:4623:5: (lv_PrimaryExprLinha_1_0= rulePrimaryExprLinha )
                    // InternalGo.g:4624:6: lv_PrimaryExprLinha_1_0= rulePrimaryExprLinha
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getCochetesAccess().getPrimaryExprLinhaPrimaryExprLinhaParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_PrimaryExprLinha_1_0=rulePrimaryExprLinha();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getCochetesRule());
                      						}
                      						set(
                      							current,
                      							"PrimaryExprLinha",
                      							lv_PrimaryExprLinha_1_0,
                      							"com.ufcg.compiladores.Go.PrimaryExprLinha");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:4643:3: ( ( (lv_Slice_2_0= ruleSlice ) ) ( (lv_PrimaryExprLinha_3_0= rulePrimaryExprLinha ) ) )
                    {
                    // InternalGo.g:4643:3: ( ( (lv_Slice_2_0= ruleSlice ) ) ( (lv_PrimaryExprLinha_3_0= rulePrimaryExprLinha ) ) )
                    // InternalGo.g:4644:4: ( (lv_Slice_2_0= ruleSlice ) ) ( (lv_PrimaryExprLinha_3_0= rulePrimaryExprLinha ) )
                    {
                    // InternalGo.g:4644:4: ( (lv_Slice_2_0= ruleSlice ) )
                    // InternalGo.g:4645:5: (lv_Slice_2_0= ruleSlice )
                    {
                    // InternalGo.g:4645:5: (lv_Slice_2_0= ruleSlice )
                    // InternalGo.g:4646:6: lv_Slice_2_0= ruleSlice
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getCochetesAccess().getSliceSliceParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_42);
                    lv_Slice_2_0=ruleSlice();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getCochetesRule());
                      						}
                      						set(
                      							current,
                      							"Slice",
                      							lv_Slice_2_0,
                      							"com.ufcg.compiladores.Go.Slice");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalGo.g:4663:4: ( (lv_PrimaryExprLinha_3_0= rulePrimaryExprLinha ) )
                    // InternalGo.g:4664:5: (lv_PrimaryExprLinha_3_0= rulePrimaryExprLinha )
                    {
                    // InternalGo.g:4664:5: (lv_PrimaryExprLinha_3_0= rulePrimaryExprLinha )
                    // InternalGo.g:4665:6: lv_PrimaryExprLinha_3_0= rulePrimaryExprLinha
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getCochetesAccess().getPrimaryExprLinhaPrimaryExprLinhaParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_PrimaryExprLinha_3_0=rulePrimaryExprLinha();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getCochetesRule());
                      						}
                      						set(
                      							current,
                      							"PrimaryExprLinha",
                      							lv_PrimaryExprLinha_3_0,
                      							"com.ufcg.compiladores.Go.PrimaryExprLinha");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulecochetes"


    // $ANTLR start "entryRuleSelector"
    // InternalGo.g:4687:1: entryRuleSelector returns [EObject current=null] : iv_ruleSelector= ruleSelector EOF ;
    public final EObject entryRuleSelector() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSelector = null;


        try {
            // InternalGo.g:4687:49: (iv_ruleSelector= ruleSelector EOF )
            // InternalGo.g:4688:2: iv_ruleSelector= ruleSelector EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSelectorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSelector=ruleSelector();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSelector; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSelector"


    // $ANTLR start "ruleSelector"
    // InternalGo.g:4694:1: ruleSelector returns [EObject current=null] : ( (lv_identifier_0_0= ruleidentifier ) ) ;
    public final EObject ruleSelector() throws RecognitionException {
        EObject current = null;

        EObject lv_identifier_0_0 = null;



        	enterRule();

        try {
            // InternalGo.g:4700:2: ( ( (lv_identifier_0_0= ruleidentifier ) ) )
            // InternalGo.g:4701:2: ( (lv_identifier_0_0= ruleidentifier ) )
            {
            // InternalGo.g:4701:2: ( (lv_identifier_0_0= ruleidentifier ) )
            // InternalGo.g:4702:3: (lv_identifier_0_0= ruleidentifier )
            {
            // InternalGo.g:4702:3: (lv_identifier_0_0= ruleidentifier )
            // InternalGo.g:4703:4: lv_identifier_0_0= ruleidentifier
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getSelectorAccess().getIdentifierIdentifierParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_identifier_0_0=ruleidentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getSelectorRule());
              				}
              				set(
              					current,
              					"identifier",
              					lv_identifier_0_0,
              					"com.ufcg.compiladores.Go.identifier");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSelector"


    // $ANTLR start "entryRuleIndex"
    // InternalGo.g:4723:1: entryRuleIndex returns [EObject current=null] : iv_ruleIndex= ruleIndex EOF ;
    public final EObject entryRuleIndex() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIndex = null;


        try {
            // InternalGo.g:4723:46: (iv_ruleIndex= ruleIndex EOF )
            // InternalGo.g:4724:2: iv_ruleIndex= ruleIndex EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIndexRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIndex=ruleIndex();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIndex; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIndex"


    // $ANTLR start "ruleIndex"
    // InternalGo.g:4730:1: ruleIndex returns [EObject current=null] : ( ( () otherlv_1= ']' ) | ( (lv_Slice_2_0= ruleSlice ) ) ) ;
    public final EObject ruleIndex() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_Slice_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:4736:2: ( ( ( () otherlv_1= ']' ) | ( (lv_Slice_2_0= ruleSlice ) ) ) )
            // InternalGo.g:4737:2: ( ( () otherlv_1= ']' ) | ( (lv_Slice_2_0= ruleSlice ) ) )
            {
            // InternalGo.g:4737:2: ( ( () otherlv_1= ']' ) | ( (lv_Slice_2_0= ruleSlice ) ) )
            int alt56=2;
            int LA56_0 = input.LA(1);

            if ( (LA56_0==22) ) {
                alt56=1;
            }
            else if ( (LA56_0==39) ) {
                alt56=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 56, 0, input);

                throw nvae;
            }
            switch (alt56) {
                case 1 :
                    // InternalGo.g:4738:3: ( () otherlv_1= ']' )
                    {
                    // InternalGo.g:4738:3: ( () otherlv_1= ']' )
                    // InternalGo.g:4739:4: () otherlv_1= ']'
                    {
                    // InternalGo.g:4739:4: ()
                    // InternalGo.g:4740:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getIndexAccess().getIndexAction_0_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_1=(Token)match(input,22,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getIndexAccess().getRightSquareBracketKeyword_0_1());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:4755:3: ( (lv_Slice_2_0= ruleSlice ) )
                    {
                    // InternalGo.g:4755:3: ( (lv_Slice_2_0= ruleSlice ) )
                    // InternalGo.g:4756:4: (lv_Slice_2_0= ruleSlice )
                    {
                    // InternalGo.g:4756:4: (lv_Slice_2_0= ruleSlice )
                    // InternalGo.g:4757:5: lv_Slice_2_0= ruleSlice
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getIndexAccess().getSliceSliceParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_Slice_2_0=ruleSlice();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getIndexRule());
                      					}
                      					set(
                      						current,
                      						"Slice",
                      						lv_Slice_2_0,
                      						"com.ufcg.compiladores.Go.Slice");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIndex"


    // $ANTLR start "entryRuleSlice"
    // InternalGo.g:4778:1: entryRuleSlice returns [EObject current=null] : iv_ruleSlice= ruleSlice EOF ;
    public final EObject entryRuleSlice() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSlice = null;


        try {
            // InternalGo.g:4778:46: (iv_ruleSlice= ruleSlice EOF )
            // InternalGo.g:4779:2: iv_ruleSlice= ruleSlice EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSliceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSlice=ruleSlice();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSlice; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSlice"


    // $ANTLR start "ruleSlice"
    // InternalGo.g:4785:1: ruleSlice returns [EObject current=null] : (otherlv_0= ':' ( (lv_decimals_1_0= ruledecimals ) )? otherlv_2= ':' ( (lv_decimals_3_0= ruledecimals ) ) otherlv_4= ']' ) ;
    public final EObject ruleSlice() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_decimals_1_0 = null;

        EObject lv_decimals_3_0 = null;



        	enterRule();

        try {
            // InternalGo.g:4791:2: ( (otherlv_0= ':' ( (lv_decimals_1_0= ruledecimals ) )? otherlv_2= ':' ( (lv_decimals_3_0= ruledecimals ) ) otherlv_4= ']' ) )
            // InternalGo.g:4792:2: (otherlv_0= ':' ( (lv_decimals_1_0= ruledecimals ) )? otherlv_2= ':' ( (lv_decimals_3_0= ruledecimals ) ) otherlv_4= ']' )
            {
            // InternalGo.g:4792:2: (otherlv_0= ':' ( (lv_decimals_1_0= ruledecimals ) )? otherlv_2= ':' ( (lv_decimals_3_0= ruledecimals ) ) otherlv_4= ']' )
            // InternalGo.g:4793:3: otherlv_0= ':' ( (lv_decimals_1_0= ruledecimals ) )? otherlv_2= ':' ( (lv_decimals_3_0= ruledecimals ) ) otherlv_4= ']'
            {
            otherlv_0=(Token)match(input,39,FOLLOW_44); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getSliceAccess().getColonKeyword_0());
              		
            }
            // InternalGo.g:4797:3: ( (lv_decimals_1_0= ruledecimals ) )?
            int alt57=2;
            int LA57_0 = input.LA(1);

            if ( (LA57_0==RULE_DECIMAL_DIGIT) ) {
                alt57=1;
            }
            switch (alt57) {
                case 1 :
                    // InternalGo.g:4798:4: (lv_decimals_1_0= ruledecimals )
                    {
                    // InternalGo.g:4798:4: (lv_decimals_1_0= ruledecimals )
                    // InternalGo.g:4799:5: lv_decimals_1_0= ruledecimals
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getSliceAccess().getDecimalsDecimalsParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_41);
                    lv_decimals_1_0=ruledecimals();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getSliceRule());
                      					}
                      					add(
                      						current,
                      						"decimals",
                      						lv_decimals_1_0,
                      						"com.ufcg.compiladores.Go.decimals");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_2=(Token)match(input,39,FOLLOW_45); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getSliceAccess().getColonKeyword_2());
              		
            }
            // InternalGo.g:4820:3: ( (lv_decimals_3_0= ruledecimals ) )
            // InternalGo.g:4821:4: (lv_decimals_3_0= ruledecimals )
            {
            // InternalGo.g:4821:4: (lv_decimals_3_0= ruledecimals )
            // InternalGo.g:4822:5: lv_decimals_3_0= ruledecimals
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSliceAccess().getDecimalsDecimalsParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_10);
            lv_decimals_3_0=ruledecimals();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSliceRule());
              					}
              					add(
              						current,
              						"decimals",
              						lv_decimals_3_0,
              						"com.ufcg.compiladores.Go.decimals");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_4=(Token)match(input,22,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getSliceAccess().getRightSquareBracketKeyword_4());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSlice"


    // $ANTLR start "entryRuleTypeAssertion"
    // InternalGo.g:4847:1: entryRuleTypeAssertion returns [EObject current=null] : iv_ruleTypeAssertion= ruleTypeAssertion EOF ;
    public final EObject entryRuleTypeAssertion() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeAssertion = null;


        try {
            // InternalGo.g:4847:54: (iv_ruleTypeAssertion= ruleTypeAssertion EOF )
            // InternalGo.g:4848:2: iv_ruleTypeAssertion= ruleTypeAssertion EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeAssertionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeAssertion=ruleTypeAssertion();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeAssertion; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeAssertion"


    // $ANTLR start "ruleTypeAssertion"
    // InternalGo.g:4854:1: ruleTypeAssertion returns [EObject current=null] : (otherlv_0= '(' ( (lv_Type_1_0= ruleType ) ) otherlv_2= ')' ) ;
    public final EObject ruleTypeAssertion() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject lv_Type_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:4860:2: ( (otherlv_0= '(' ( (lv_Type_1_0= ruleType ) ) otherlv_2= ')' ) )
            // InternalGo.g:4861:2: (otherlv_0= '(' ( (lv_Type_1_0= ruleType ) ) otherlv_2= ')' )
            {
            // InternalGo.g:4861:2: (otherlv_0= '(' ( (lv_Type_1_0= ruleType ) ) otherlv_2= ')' )
            // InternalGo.g:4862:3: otherlv_0= '(' ( (lv_Type_1_0= ruleType ) ) otherlv_2= ')'
            {
            otherlv_0=(Token)match(input,18,FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getTypeAssertionAccess().getLeftParenthesisKeyword_0());
              		
            }
            // InternalGo.g:4866:3: ( (lv_Type_1_0= ruleType ) )
            // InternalGo.g:4867:4: (lv_Type_1_0= ruleType )
            {
            // InternalGo.g:4867:4: (lv_Type_1_0= ruleType )
            // InternalGo.g:4868:5: lv_Type_1_0= ruleType
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTypeAssertionAccess().getTypeTypeParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_6);
            lv_Type_1_0=ruleType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTypeAssertionRule());
              					}
              					set(
              						current,
              						"Type",
              						lv_Type_1_0,
              						"com.ufcg.compiladores.Go.Type");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,19,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getTypeAssertionAccess().getRightParenthesisKeyword_2());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeAssertion"


    // $ANTLR start "entryRuleArguments"
    // InternalGo.g:4893:1: entryRuleArguments returns [EObject current=null] : iv_ruleArguments= ruleArguments EOF ;
    public final EObject entryRuleArguments() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleArguments = null;


        try {
            // InternalGo.g:4893:50: (iv_ruleArguments= ruleArguments EOF )
            // InternalGo.g:4894:2: iv_ruleArguments= ruleArguments EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getArgumentsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleArguments=ruleArguments();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleArguments; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleArguments"


    // $ANTLR start "ruleArguments"
    // InternalGo.g:4900:1: ruleArguments returns [EObject current=null] : ( () otherlv_1= '(' ( ( ( (lv_ExpressionList_2_0= ruleExpressionList ) ) | ( ( (lv_Type_3_0= ruleType ) ) (otherlv_4= ',' ( (lv_ExpressionList_5_0= ruleExpressionList ) ) )? ) ) (otherlv_6= '...' )? (otherlv_7= ',' )? )? otherlv_8= ')' ) ;
    public final EObject ruleArguments() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        EObject lv_ExpressionList_2_0 = null;

        EObject lv_Type_3_0 = null;

        EObject lv_ExpressionList_5_0 = null;



        	enterRule();

        try {
            // InternalGo.g:4906:2: ( ( () otherlv_1= '(' ( ( ( (lv_ExpressionList_2_0= ruleExpressionList ) ) | ( ( (lv_Type_3_0= ruleType ) ) (otherlv_4= ',' ( (lv_ExpressionList_5_0= ruleExpressionList ) ) )? ) ) (otherlv_6= '...' )? (otherlv_7= ',' )? )? otherlv_8= ')' ) )
            // InternalGo.g:4907:2: ( () otherlv_1= '(' ( ( ( (lv_ExpressionList_2_0= ruleExpressionList ) ) | ( ( (lv_Type_3_0= ruleType ) ) (otherlv_4= ',' ( (lv_ExpressionList_5_0= ruleExpressionList ) ) )? ) ) (otherlv_6= '...' )? (otherlv_7= ',' )? )? otherlv_8= ')' )
            {
            // InternalGo.g:4907:2: ( () otherlv_1= '(' ( ( ( (lv_ExpressionList_2_0= ruleExpressionList ) ) | ( ( (lv_Type_3_0= ruleType ) ) (otherlv_4= ',' ( (lv_ExpressionList_5_0= ruleExpressionList ) ) )? ) ) (otherlv_6= '...' )? (otherlv_7= ',' )? )? otherlv_8= ')' )
            // InternalGo.g:4908:3: () otherlv_1= '(' ( ( ( (lv_ExpressionList_2_0= ruleExpressionList ) ) | ( ( (lv_Type_3_0= ruleType ) ) (otherlv_4= ',' ( (lv_ExpressionList_5_0= ruleExpressionList ) ) )? ) ) (otherlv_6= '...' )? (otherlv_7= ',' )? )? otherlv_8= ')'
            {
            // InternalGo.g:4908:3: ()
            // InternalGo.g:4909:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getArgumentsAccess().getArgumentsAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,18,FOLLOW_46); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getArgumentsAccess().getLeftParenthesisKeyword_1());
              		
            }
            // InternalGo.g:4922:3: ( ( ( (lv_ExpressionList_2_0= ruleExpressionList ) ) | ( ( (lv_Type_3_0= ruleType ) ) (otherlv_4= ',' ( (lv_ExpressionList_5_0= ruleExpressionList ) ) )? ) ) (otherlv_6= '...' )? (otherlv_7= ',' )? )?
            int alt62=2;
            int LA62_0 = input.LA(1);

            if ( ((LA62_0>=RULE_LETTER && LA62_0<=RULE_DECIMAL_DIGIT)||LA62_0==18||(LA62_0>=20 && LA62_0<=21)||LA62_0==23||(LA62_0>=25 && LA62_0<=26)||LA62_0==29||(LA62_0>=31 && LA62_0<=33)||(LA62_0>=48 && LA62_0<=49)||LA62_0==56||(LA62_0>=58 && LA62_0<=59)||LA62_0==79||(LA62_0>=82 && LA62_0<=83)) ) {
                alt62=1;
            }
            switch (alt62) {
                case 1 :
                    // InternalGo.g:4923:4: ( ( (lv_ExpressionList_2_0= ruleExpressionList ) ) | ( ( (lv_Type_3_0= ruleType ) ) (otherlv_4= ',' ( (lv_ExpressionList_5_0= ruleExpressionList ) ) )? ) ) (otherlv_6= '...' )? (otherlv_7= ',' )?
                    {
                    // InternalGo.g:4923:4: ( ( (lv_ExpressionList_2_0= ruleExpressionList ) ) | ( ( (lv_Type_3_0= ruleType ) ) (otherlv_4= ',' ( (lv_ExpressionList_5_0= ruleExpressionList ) ) )? ) )
                    int alt59=2;
                    alt59 = dfa59.predict(input);
                    switch (alt59) {
                        case 1 :
                            // InternalGo.g:4924:5: ( (lv_ExpressionList_2_0= ruleExpressionList ) )
                            {
                            // InternalGo.g:4924:5: ( (lv_ExpressionList_2_0= ruleExpressionList ) )
                            // InternalGo.g:4925:6: (lv_ExpressionList_2_0= ruleExpressionList )
                            {
                            // InternalGo.g:4925:6: (lv_ExpressionList_2_0= ruleExpressionList )
                            // InternalGo.g:4926:7: lv_ExpressionList_2_0= ruleExpressionList
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getArgumentsAccess().getExpressionListExpressionListParserRuleCall_2_0_0_0());
                              						
                            }
                            pushFollow(FOLLOW_47);
                            lv_ExpressionList_2_0=ruleExpressionList();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getArgumentsRule());
                              							}
                              							set(
                              								current,
                              								"ExpressionList",
                              								lv_ExpressionList_2_0,
                              								"com.ufcg.compiladores.Go.ExpressionList");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalGo.g:4944:5: ( ( (lv_Type_3_0= ruleType ) ) (otherlv_4= ',' ( (lv_ExpressionList_5_0= ruleExpressionList ) ) )? )
                            {
                            // InternalGo.g:4944:5: ( ( (lv_Type_3_0= ruleType ) ) (otherlv_4= ',' ( (lv_ExpressionList_5_0= ruleExpressionList ) ) )? )
                            // InternalGo.g:4945:6: ( (lv_Type_3_0= ruleType ) ) (otherlv_4= ',' ( (lv_ExpressionList_5_0= ruleExpressionList ) ) )?
                            {
                            // InternalGo.g:4945:6: ( (lv_Type_3_0= ruleType ) )
                            // InternalGo.g:4946:7: (lv_Type_3_0= ruleType )
                            {
                            // InternalGo.g:4946:7: (lv_Type_3_0= ruleType )
                            // InternalGo.g:4947:8: lv_Type_3_0= ruleType
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getArgumentsAccess().getTypeTypeParserRuleCall_2_0_1_0_0());
                              							
                            }
                            pushFollow(FOLLOW_47);
                            lv_Type_3_0=ruleType();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getArgumentsRule());
                              								}
                              								set(
                              									current,
                              									"Type",
                              									lv_Type_3_0,
                              									"com.ufcg.compiladores.Go.Type");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalGo.g:4964:6: (otherlv_4= ',' ( (lv_ExpressionList_5_0= ruleExpressionList ) ) )?
                            int alt58=2;
                            int LA58_0 = input.LA(1);

                            if ( (LA58_0==27) ) {
                                int LA58_1 = input.LA(2);

                                if ( ((LA58_1>=RULE_LETTER && LA58_1<=RULE_DECIMAL_DIGIT)||LA58_1==18||(LA58_1>=20 && LA58_1<=21)||LA58_1==23||(LA58_1>=25 && LA58_1<=26)||LA58_1==29||(LA58_1>=31 && LA58_1<=33)||(LA58_1>=48 && LA58_1<=49)||LA58_1==56||(LA58_1>=58 && LA58_1<=59)||LA58_1==79||(LA58_1>=82 && LA58_1<=83)) ) {
                                    alt58=1;
                                }
                            }
                            switch (alt58) {
                                case 1 :
                                    // InternalGo.g:4965:7: otherlv_4= ',' ( (lv_ExpressionList_5_0= ruleExpressionList ) )
                                    {
                                    otherlv_4=(Token)match(input,27,FOLLOW_32); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      							newLeafNode(otherlv_4, grammarAccess.getArgumentsAccess().getCommaKeyword_2_0_1_1_0());
                                      						
                                    }
                                    // InternalGo.g:4969:7: ( (lv_ExpressionList_5_0= ruleExpressionList ) )
                                    // InternalGo.g:4970:8: (lv_ExpressionList_5_0= ruleExpressionList )
                                    {
                                    // InternalGo.g:4970:8: (lv_ExpressionList_5_0= ruleExpressionList )
                                    // InternalGo.g:4971:9: lv_ExpressionList_5_0= ruleExpressionList
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getArgumentsAccess().getExpressionListExpressionListParserRuleCall_2_0_1_1_1_0());
                                      								
                                    }
                                    pushFollow(FOLLOW_47);
                                    lv_ExpressionList_5_0=ruleExpressionList();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getArgumentsRule());
                                      									}
                                      									set(
                                      										current,
                                      										"ExpressionList",
                                      										lv_ExpressionList_5_0,
                                      										"com.ufcg.compiladores.Go.ExpressionList");
                                      									afterParserOrEnumRuleCall();
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;

                    }

                    // InternalGo.g:4991:4: (otherlv_6= '...' )?
                    int alt60=2;
                    int LA60_0 = input.LA(1);

                    if ( (LA60_0==28) ) {
                        alt60=1;
                    }
                    switch (alt60) {
                        case 1 :
                            // InternalGo.g:4992:5: otherlv_6= '...'
                            {
                            otherlv_6=(Token)match(input,28,FOLLOW_17); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_6, grammarAccess.getArgumentsAccess().getFullStopFullStopFullStopKeyword_2_1());
                              				
                            }

                            }
                            break;

                    }

                    // InternalGo.g:4997:4: (otherlv_7= ',' )?
                    int alt61=2;
                    int LA61_0 = input.LA(1);

                    if ( (LA61_0==27) ) {
                        alt61=1;
                    }
                    switch (alt61) {
                        case 1 :
                            // InternalGo.g:4998:5: otherlv_7= ','
                            {
                            otherlv_7=(Token)match(input,27,FOLLOW_6); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_7, grammarAccess.getArgumentsAccess().getCommaKeyword_2_2());
                              				
                            }

                            }
                            break;

                    }


                    }
                    break;

            }

            otherlv_8=(Token)match(input,19,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_8, grammarAccess.getArgumentsAccess().getRightParenthesisKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleArguments"


    // $ANTLR start "entryRuleMethodExpr"
    // InternalGo.g:5012:1: entryRuleMethodExpr returns [EObject current=null] : iv_ruleMethodExpr= ruleMethodExpr EOF ;
    public final EObject entryRuleMethodExpr() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMethodExpr = null;


        try {
            // InternalGo.g:5012:51: (iv_ruleMethodExpr= ruleMethodExpr EOF )
            // InternalGo.g:5013:2: iv_ruleMethodExpr= ruleMethodExpr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMethodExprRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMethodExpr=ruleMethodExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMethodExpr; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMethodExpr"


    // $ANTLR start "ruleMethodExpr"
    // InternalGo.g:5019:1: ruleMethodExpr returns [EObject current=null] : ( ( (lv_ReceiverType_0_0= ruleReceiverType ) ) otherlv_1= '.' ( (lv_MethodName_2_0= ruleMethodName ) ) ) ;
    public final EObject ruleMethodExpr() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_ReceiverType_0_0 = null;

        EObject lv_MethodName_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:5025:2: ( ( ( (lv_ReceiverType_0_0= ruleReceiverType ) ) otherlv_1= '.' ( (lv_MethodName_2_0= ruleMethodName ) ) ) )
            // InternalGo.g:5026:2: ( ( (lv_ReceiverType_0_0= ruleReceiverType ) ) otherlv_1= '.' ( (lv_MethodName_2_0= ruleMethodName ) ) )
            {
            // InternalGo.g:5026:2: ( ( (lv_ReceiverType_0_0= ruleReceiverType ) ) otherlv_1= '.' ( (lv_MethodName_2_0= ruleMethodName ) ) )
            // InternalGo.g:5027:3: ( (lv_ReceiverType_0_0= ruleReceiverType ) ) otherlv_1= '.' ( (lv_MethodName_2_0= ruleMethodName ) )
            {
            // InternalGo.g:5027:3: ( (lv_ReceiverType_0_0= ruleReceiverType ) )
            // InternalGo.g:5028:4: (lv_ReceiverType_0_0= ruleReceiverType )
            {
            // InternalGo.g:5028:4: (lv_ReceiverType_0_0= ruleReceiverType )
            // InternalGo.g:5029:5: lv_ReceiverType_0_0= ruleReceiverType
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMethodExprAccess().getReceiverTypeReceiverTypeParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_36);
            lv_ReceiverType_0_0=ruleReceiverType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMethodExprRule());
              					}
              					set(
              						current,
              						"ReceiverType",
              						lv_ReceiverType_0_0,
              						"com.ufcg.compiladores.Go.ReceiverType");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_1=(Token)match(input,20,FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getMethodExprAccess().getFullStopKeyword_1());
              		
            }
            // InternalGo.g:5050:3: ( (lv_MethodName_2_0= ruleMethodName ) )
            // InternalGo.g:5051:4: (lv_MethodName_2_0= ruleMethodName )
            {
            // InternalGo.g:5051:4: (lv_MethodName_2_0= ruleMethodName )
            // InternalGo.g:5052:5: lv_MethodName_2_0= ruleMethodName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMethodExprAccess().getMethodNameMethodNameParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_MethodName_2_0=ruleMethodName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMethodExprRule());
              					}
              					set(
              						current,
              						"MethodName",
              						lv_MethodName_2_0,
              						"com.ufcg.compiladores.Go.MethodName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMethodExpr"


    // $ANTLR start "entryRuleReceiverType"
    // InternalGo.g:5073:1: entryRuleReceiverType returns [EObject current=null] : iv_ruleReceiverType= ruleReceiverType EOF ;
    public final EObject entryRuleReceiverType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleReceiverType = null;


        try {
            // InternalGo.g:5073:53: (iv_ruleReceiverType= ruleReceiverType EOF )
            // InternalGo.g:5074:2: iv_ruleReceiverType= ruleReceiverType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getReceiverTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleReceiverType=ruleReceiverType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleReceiverType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleReceiverType"


    // $ANTLR start "ruleReceiverType"
    // InternalGo.g:5080:1: ruleReceiverType returns [EObject current=null] : ( (lv_Type_0_0= ruleType ) ) ;
    public final EObject ruleReceiverType() throws RecognitionException {
        EObject current = null;

        EObject lv_Type_0_0 = null;



        	enterRule();

        try {
            // InternalGo.g:5086:2: ( ( (lv_Type_0_0= ruleType ) ) )
            // InternalGo.g:5087:2: ( (lv_Type_0_0= ruleType ) )
            {
            // InternalGo.g:5087:2: ( (lv_Type_0_0= ruleType ) )
            // InternalGo.g:5088:3: (lv_Type_0_0= ruleType )
            {
            // InternalGo.g:5088:3: (lv_Type_0_0= ruleType )
            // InternalGo.g:5089:4: lv_Type_0_0= ruleType
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getReceiverTypeAccess().getTypeTypeParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_Type_0_0=ruleType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getReceiverTypeRule());
              				}
              				set(
              					current,
              					"Type",
              					lv_Type_0_0,
              					"com.ufcg.compiladores.Go.Type");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleReceiverType"


    // $ANTLR start "entryRuleExpression"
    // InternalGo.g:5109:1: entryRuleExpression returns [EObject current=null] : iv_ruleExpression= ruleExpression EOF ;
    public final EObject entryRuleExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExpression = null;


        try {
            // InternalGo.g:5109:51: (iv_ruleExpression= ruleExpression EOF )
            // InternalGo.g:5110:2: iv_ruleExpression= ruleExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExpression=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExpression"


    // $ANTLR start "ruleExpression"
    // InternalGo.g:5116:1: ruleExpression returns [EObject current=null] : ( ( (lv_UnaryExpr_0_0= ruleUnaryExpr ) ) ( (lv_ExpressionLinha_1_0= ruleExpressionLinha ) ) ) ;
    public final EObject ruleExpression() throws RecognitionException {
        EObject current = null;

        EObject lv_UnaryExpr_0_0 = null;

        EObject lv_ExpressionLinha_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:5122:2: ( ( ( (lv_UnaryExpr_0_0= ruleUnaryExpr ) ) ( (lv_ExpressionLinha_1_0= ruleExpressionLinha ) ) ) )
            // InternalGo.g:5123:2: ( ( (lv_UnaryExpr_0_0= ruleUnaryExpr ) ) ( (lv_ExpressionLinha_1_0= ruleExpressionLinha ) ) )
            {
            // InternalGo.g:5123:2: ( ( (lv_UnaryExpr_0_0= ruleUnaryExpr ) ) ( (lv_ExpressionLinha_1_0= ruleExpressionLinha ) ) )
            // InternalGo.g:5124:3: ( (lv_UnaryExpr_0_0= ruleUnaryExpr ) ) ( (lv_ExpressionLinha_1_0= ruleExpressionLinha ) )
            {
            // InternalGo.g:5124:3: ( (lv_UnaryExpr_0_0= ruleUnaryExpr ) )
            // InternalGo.g:5125:4: (lv_UnaryExpr_0_0= ruleUnaryExpr )
            {
            // InternalGo.g:5125:4: (lv_UnaryExpr_0_0= ruleUnaryExpr )
            // InternalGo.g:5126:5: lv_UnaryExpr_0_0= ruleUnaryExpr
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getExpressionAccess().getUnaryExprUnaryExprParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_48);
            lv_UnaryExpr_0_0=ruleUnaryExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getExpressionRule());
              					}
              					set(
              						current,
              						"UnaryExpr",
              						lv_UnaryExpr_0_0,
              						"com.ufcg.compiladores.Go.UnaryExpr");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:5143:3: ( (lv_ExpressionLinha_1_0= ruleExpressionLinha ) )
            // InternalGo.g:5144:4: (lv_ExpressionLinha_1_0= ruleExpressionLinha )
            {
            // InternalGo.g:5144:4: (lv_ExpressionLinha_1_0= ruleExpressionLinha )
            // InternalGo.g:5145:5: lv_ExpressionLinha_1_0= ruleExpressionLinha
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getExpressionAccess().getExpressionLinhaExpressionLinhaParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_ExpressionLinha_1_0=ruleExpressionLinha();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getExpressionRule());
              					}
              					set(
              						current,
              						"ExpressionLinha",
              						lv_ExpressionLinha_1_0,
              						"com.ufcg.compiladores.Go.ExpressionLinha");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExpression"


    // $ANTLR start "entryRuleExpressionLinha"
    // InternalGo.g:5166:1: entryRuleExpressionLinha returns [EObject current=null] : iv_ruleExpressionLinha= ruleExpressionLinha EOF ;
    public final EObject entryRuleExpressionLinha() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExpressionLinha = null;


        try {
            // InternalGo.g:5166:56: (iv_ruleExpressionLinha= ruleExpressionLinha EOF )
            // InternalGo.g:5167:2: iv_ruleExpressionLinha= ruleExpressionLinha EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExpressionLinhaRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExpressionLinha=ruleExpressionLinha();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExpressionLinha; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExpressionLinha"


    // $ANTLR start "ruleExpressionLinha"
    // InternalGo.g:5173:1: ruleExpressionLinha returns [EObject current=null] : ( ( ( (lv_binary_op_0_0= rulebinary_op ) ) ( (lv_Expression_1_0= ruleExpression ) ) ( (lv_ExpressionLinha_2_0= ruleExpressionLinha ) ) ) | ( () this_ANY_OTHER_4= RULE_ANY_OTHER ) ) ;
    public final EObject ruleExpressionLinha() throws RecognitionException {
        EObject current = null;

        Token this_ANY_OTHER_4=null;
        EObject lv_binary_op_0_0 = null;

        EObject lv_Expression_1_0 = null;

        EObject lv_ExpressionLinha_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:5179:2: ( ( ( ( (lv_binary_op_0_0= rulebinary_op ) ) ( (lv_Expression_1_0= ruleExpression ) ) ( (lv_ExpressionLinha_2_0= ruleExpressionLinha ) ) ) | ( () this_ANY_OTHER_4= RULE_ANY_OTHER ) ) )
            // InternalGo.g:5180:2: ( ( ( (lv_binary_op_0_0= rulebinary_op ) ) ( (lv_Expression_1_0= ruleExpression ) ) ( (lv_ExpressionLinha_2_0= ruleExpressionLinha ) ) ) | ( () this_ANY_OTHER_4= RULE_ANY_OTHER ) )
            {
            // InternalGo.g:5180:2: ( ( ( (lv_binary_op_0_0= rulebinary_op ) ) ( (lv_Expression_1_0= ruleExpression ) ) ( (lv_ExpressionLinha_2_0= ruleExpressionLinha ) ) ) | ( () this_ANY_OTHER_4= RULE_ANY_OTHER ) )
            int alt63=2;
            int LA63_0 = input.LA(1);

            if ( (LA63_0==25||(LA63_0>=40 && LA63_0<=57)) ) {
                alt63=1;
            }
            else if ( (LA63_0==RULE_ANY_OTHER) ) {
                alt63=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 63, 0, input);

                throw nvae;
            }
            switch (alt63) {
                case 1 :
                    // InternalGo.g:5181:3: ( ( (lv_binary_op_0_0= rulebinary_op ) ) ( (lv_Expression_1_0= ruleExpression ) ) ( (lv_ExpressionLinha_2_0= ruleExpressionLinha ) ) )
                    {
                    // InternalGo.g:5181:3: ( ( (lv_binary_op_0_0= rulebinary_op ) ) ( (lv_Expression_1_0= ruleExpression ) ) ( (lv_ExpressionLinha_2_0= ruleExpressionLinha ) ) )
                    // InternalGo.g:5182:4: ( (lv_binary_op_0_0= rulebinary_op ) ) ( (lv_Expression_1_0= ruleExpression ) ) ( (lv_ExpressionLinha_2_0= ruleExpressionLinha ) )
                    {
                    // InternalGo.g:5182:4: ( (lv_binary_op_0_0= rulebinary_op ) )
                    // InternalGo.g:5183:5: (lv_binary_op_0_0= rulebinary_op )
                    {
                    // InternalGo.g:5183:5: (lv_binary_op_0_0= rulebinary_op )
                    // InternalGo.g:5184:6: lv_binary_op_0_0= rulebinary_op
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getExpressionLinhaAccess().getBinary_opBinary_opParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_32);
                    lv_binary_op_0_0=rulebinary_op();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getExpressionLinhaRule());
                      						}
                      						set(
                      							current,
                      							"binary_op",
                      							lv_binary_op_0_0,
                      							"com.ufcg.compiladores.Go.binary_op");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalGo.g:5201:4: ( (lv_Expression_1_0= ruleExpression ) )
                    // InternalGo.g:5202:5: (lv_Expression_1_0= ruleExpression )
                    {
                    // InternalGo.g:5202:5: (lv_Expression_1_0= ruleExpression )
                    // InternalGo.g:5203:6: lv_Expression_1_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getExpressionLinhaAccess().getExpressionExpressionParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_48);
                    lv_Expression_1_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getExpressionLinhaRule());
                      						}
                      						set(
                      							current,
                      							"Expression",
                      							lv_Expression_1_0,
                      							"com.ufcg.compiladores.Go.Expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalGo.g:5220:4: ( (lv_ExpressionLinha_2_0= ruleExpressionLinha ) )
                    // InternalGo.g:5221:5: (lv_ExpressionLinha_2_0= ruleExpressionLinha )
                    {
                    // InternalGo.g:5221:5: (lv_ExpressionLinha_2_0= ruleExpressionLinha )
                    // InternalGo.g:5222:6: lv_ExpressionLinha_2_0= ruleExpressionLinha
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getExpressionLinhaAccess().getExpressionLinhaExpressionLinhaParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_ExpressionLinha_2_0=ruleExpressionLinha();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getExpressionLinhaRule());
                      						}
                      						set(
                      							current,
                      							"ExpressionLinha",
                      							lv_ExpressionLinha_2_0,
                      							"com.ufcg.compiladores.Go.ExpressionLinha");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:5241:3: ( () this_ANY_OTHER_4= RULE_ANY_OTHER )
                    {
                    // InternalGo.g:5241:3: ( () this_ANY_OTHER_4= RULE_ANY_OTHER )
                    // InternalGo.g:5242:4: () this_ANY_OTHER_4= RULE_ANY_OTHER
                    {
                    // InternalGo.g:5242:4: ()
                    // InternalGo.g:5243:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getExpressionLinhaAccess().getExpressionLinhaAction_1_0(),
                      						current);
                      				
                    }

                    }

                    this_ANY_OTHER_4=(Token)match(input,RULE_ANY_OTHER,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_ANY_OTHER_4, grammarAccess.getExpressionLinhaAccess().getANY_OTHERTerminalRuleCall_1_1());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExpressionLinha"


    // $ANTLR start "entryRuleUnaryExpr"
    // InternalGo.g:5261:1: entryRuleUnaryExpr returns [EObject current=null] : iv_ruleUnaryExpr= ruleUnaryExpr EOF ;
    public final EObject entryRuleUnaryExpr() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUnaryExpr = null;


        try {
            // InternalGo.g:5261:50: (iv_ruleUnaryExpr= ruleUnaryExpr EOF )
            // InternalGo.g:5262:2: iv_ruleUnaryExpr= ruleUnaryExpr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUnaryExprRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUnaryExpr=ruleUnaryExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUnaryExpr; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUnaryExpr"


    // $ANTLR start "ruleUnaryExpr"
    // InternalGo.g:5268:1: ruleUnaryExpr returns [EObject current=null] : ( ( (lv_PrimaryExpr_0_0= rulePrimaryExpr ) ) | ( ( (lv_unary_op_1_0= ruleunary_op ) ) ( (lv_UnaryExpr_2_0= ruleUnaryExpr ) ) ) ) ;
    public final EObject ruleUnaryExpr() throws RecognitionException {
        EObject current = null;

        EObject lv_PrimaryExpr_0_0 = null;

        AntlrDatatypeRuleToken lv_unary_op_1_0 = null;

        EObject lv_UnaryExpr_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:5274:2: ( ( ( (lv_PrimaryExpr_0_0= rulePrimaryExpr ) ) | ( ( (lv_unary_op_1_0= ruleunary_op ) ) ( (lv_UnaryExpr_2_0= ruleUnaryExpr ) ) ) ) )
            // InternalGo.g:5275:2: ( ( (lv_PrimaryExpr_0_0= rulePrimaryExpr ) ) | ( ( (lv_unary_op_1_0= ruleunary_op ) ) ( (lv_UnaryExpr_2_0= ruleUnaryExpr ) ) ) )
            {
            // InternalGo.g:5275:2: ( ( (lv_PrimaryExpr_0_0= rulePrimaryExpr ) ) | ( ( (lv_unary_op_1_0= ruleunary_op ) ) ( (lv_UnaryExpr_2_0= ruleUnaryExpr ) ) ) )
            int alt64=2;
            alt64 = dfa64.predict(input);
            switch (alt64) {
                case 1 :
                    // InternalGo.g:5276:3: ( (lv_PrimaryExpr_0_0= rulePrimaryExpr ) )
                    {
                    // InternalGo.g:5276:3: ( (lv_PrimaryExpr_0_0= rulePrimaryExpr ) )
                    // InternalGo.g:5277:4: (lv_PrimaryExpr_0_0= rulePrimaryExpr )
                    {
                    // InternalGo.g:5277:4: (lv_PrimaryExpr_0_0= rulePrimaryExpr )
                    // InternalGo.g:5278:5: lv_PrimaryExpr_0_0= rulePrimaryExpr
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getUnaryExprAccess().getPrimaryExprPrimaryExprParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_PrimaryExpr_0_0=rulePrimaryExpr();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getUnaryExprRule());
                      					}
                      					set(
                      						current,
                      						"PrimaryExpr",
                      						lv_PrimaryExpr_0_0,
                      						"com.ufcg.compiladores.Go.PrimaryExpr");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:5296:3: ( ( (lv_unary_op_1_0= ruleunary_op ) ) ( (lv_UnaryExpr_2_0= ruleUnaryExpr ) ) )
                    {
                    // InternalGo.g:5296:3: ( ( (lv_unary_op_1_0= ruleunary_op ) ) ( (lv_UnaryExpr_2_0= ruleUnaryExpr ) ) )
                    // InternalGo.g:5297:4: ( (lv_unary_op_1_0= ruleunary_op ) ) ( (lv_UnaryExpr_2_0= ruleUnaryExpr ) )
                    {
                    // InternalGo.g:5297:4: ( (lv_unary_op_1_0= ruleunary_op ) )
                    // InternalGo.g:5298:5: (lv_unary_op_1_0= ruleunary_op )
                    {
                    // InternalGo.g:5298:5: (lv_unary_op_1_0= ruleunary_op )
                    // InternalGo.g:5299:6: lv_unary_op_1_0= ruleunary_op
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getUnaryExprAccess().getUnary_opUnary_opParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_32);
                    lv_unary_op_1_0=ruleunary_op();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getUnaryExprRule());
                      						}
                      						set(
                      							current,
                      							"unary_op",
                      							lv_unary_op_1_0,
                      							"com.ufcg.compiladores.Go.unary_op");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalGo.g:5316:4: ( (lv_UnaryExpr_2_0= ruleUnaryExpr ) )
                    // InternalGo.g:5317:5: (lv_UnaryExpr_2_0= ruleUnaryExpr )
                    {
                    // InternalGo.g:5317:5: (lv_UnaryExpr_2_0= ruleUnaryExpr )
                    // InternalGo.g:5318:6: lv_UnaryExpr_2_0= ruleUnaryExpr
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getUnaryExprAccess().getUnaryExprUnaryExprParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_UnaryExpr_2_0=ruleUnaryExpr();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getUnaryExprRule());
                      						}
                      						set(
                      							current,
                      							"UnaryExpr",
                      							lv_UnaryExpr_2_0,
                      							"com.ufcg.compiladores.Go.UnaryExpr");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUnaryExpr"


    // $ANTLR start "entryRulebinary_op"
    // InternalGo.g:5340:1: entryRulebinary_op returns [EObject current=null] : iv_rulebinary_op= rulebinary_op EOF ;
    public final EObject entryRulebinary_op() throws RecognitionException {
        EObject current = null;

        EObject iv_rulebinary_op = null;


        try {
            // InternalGo.g:5340:50: (iv_rulebinary_op= rulebinary_op EOF )
            // InternalGo.g:5341:2: iv_rulebinary_op= rulebinary_op EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBinary_opRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulebinary_op=rulebinary_op();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulebinary_op; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulebinary_op"


    // $ANTLR start "rulebinary_op"
    // InternalGo.g:5347:1: rulebinary_op returns [EObject current=null] : ( ( () otherlv_1= '||' ) | ( () otherlv_3= '&&' ) | ( (lv_rel_op_4_0= rulerel_op ) ) | ( (lv_add_op_5_0= ruleadd_op ) ) | ( (lv_mul_op_6_0= rulemul_op ) ) ) ;
    public final EObject rulebinary_op() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        AntlrDatatypeRuleToken lv_rel_op_4_0 = null;

        AntlrDatatypeRuleToken lv_add_op_5_0 = null;

        AntlrDatatypeRuleToken lv_mul_op_6_0 = null;



        	enterRule();

        try {
            // InternalGo.g:5353:2: ( ( ( () otherlv_1= '||' ) | ( () otherlv_3= '&&' ) | ( (lv_rel_op_4_0= rulerel_op ) ) | ( (lv_add_op_5_0= ruleadd_op ) ) | ( (lv_mul_op_6_0= rulemul_op ) ) ) )
            // InternalGo.g:5354:2: ( ( () otherlv_1= '||' ) | ( () otherlv_3= '&&' ) | ( (lv_rel_op_4_0= rulerel_op ) ) | ( (lv_add_op_5_0= ruleadd_op ) ) | ( (lv_mul_op_6_0= rulemul_op ) ) )
            {
            // InternalGo.g:5354:2: ( ( () otherlv_1= '||' ) | ( () otherlv_3= '&&' ) | ( (lv_rel_op_4_0= rulerel_op ) ) | ( (lv_add_op_5_0= ruleadd_op ) ) | ( (lv_mul_op_6_0= rulemul_op ) ) )
            int alt65=5;
            switch ( input.LA(1) ) {
            case 40:
                {
                alt65=1;
                }
                break;
            case 41:
                {
                alt65=2;
                }
                break;
            case 42:
            case 43:
            case 44:
            case 45:
            case 46:
            case 47:
                {
                alt65=3;
                }
                break;
            case 48:
            case 49:
            case 50:
            case 51:
                {
                alt65=4;
                }
                break;
            case 25:
            case 52:
            case 53:
            case 54:
            case 55:
            case 56:
            case 57:
                {
                alt65=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 65, 0, input);

                throw nvae;
            }

            switch (alt65) {
                case 1 :
                    // InternalGo.g:5355:3: ( () otherlv_1= '||' )
                    {
                    // InternalGo.g:5355:3: ( () otherlv_1= '||' )
                    // InternalGo.g:5356:4: () otherlv_1= '||'
                    {
                    // InternalGo.g:5356:4: ()
                    // InternalGo.g:5357:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getBinary_opAccess().getBinary_opAction_0_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_1=(Token)match(input,40,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getBinary_opAccess().getVerticalLineVerticalLineKeyword_0_1());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:5372:3: ( () otherlv_3= '&&' )
                    {
                    // InternalGo.g:5372:3: ( () otherlv_3= '&&' )
                    // InternalGo.g:5373:4: () otherlv_3= '&&'
                    {
                    // InternalGo.g:5373:4: ()
                    // InternalGo.g:5374:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getBinary_opAccess().getBinary_opAction_1_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_3=(Token)match(input,41,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getBinary_opAccess().getAmpersandAmpersandKeyword_1_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalGo.g:5389:3: ( (lv_rel_op_4_0= rulerel_op ) )
                    {
                    // InternalGo.g:5389:3: ( (lv_rel_op_4_0= rulerel_op ) )
                    // InternalGo.g:5390:4: (lv_rel_op_4_0= rulerel_op )
                    {
                    // InternalGo.g:5390:4: (lv_rel_op_4_0= rulerel_op )
                    // InternalGo.g:5391:5: lv_rel_op_4_0= rulerel_op
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getBinary_opAccess().getRel_opRel_opParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_rel_op_4_0=rulerel_op();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getBinary_opRule());
                      					}
                      					set(
                      						current,
                      						"rel_op",
                      						lv_rel_op_4_0,
                      						"com.ufcg.compiladores.Go.rel_op");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalGo.g:5409:3: ( (lv_add_op_5_0= ruleadd_op ) )
                    {
                    // InternalGo.g:5409:3: ( (lv_add_op_5_0= ruleadd_op ) )
                    // InternalGo.g:5410:4: (lv_add_op_5_0= ruleadd_op )
                    {
                    // InternalGo.g:5410:4: (lv_add_op_5_0= ruleadd_op )
                    // InternalGo.g:5411:5: lv_add_op_5_0= ruleadd_op
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getBinary_opAccess().getAdd_opAdd_opParserRuleCall_3_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_add_op_5_0=ruleadd_op();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getBinary_opRule());
                      					}
                      					set(
                      						current,
                      						"add_op",
                      						lv_add_op_5_0,
                      						"com.ufcg.compiladores.Go.add_op");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalGo.g:5429:3: ( (lv_mul_op_6_0= rulemul_op ) )
                    {
                    // InternalGo.g:5429:3: ( (lv_mul_op_6_0= rulemul_op ) )
                    // InternalGo.g:5430:4: (lv_mul_op_6_0= rulemul_op )
                    {
                    // InternalGo.g:5430:4: (lv_mul_op_6_0= rulemul_op )
                    // InternalGo.g:5431:5: lv_mul_op_6_0= rulemul_op
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getBinary_opAccess().getMul_opMul_opParserRuleCall_4_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_mul_op_6_0=rulemul_op();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getBinary_opRule());
                      					}
                      					set(
                      						current,
                      						"mul_op",
                      						lv_mul_op_6_0,
                      						"com.ufcg.compiladores.Go.mul_op");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulebinary_op"


    // $ANTLR start "entryRulerel_op"
    // InternalGo.g:5452:1: entryRulerel_op returns [String current=null] : iv_rulerel_op= rulerel_op EOF ;
    public final String entryRulerel_op() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_rulerel_op = null;


        try {
            // InternalGo.g:5452:46: (iv_rulerel_op= rulerel_op EOF )
            // InternalGo.g:5453:2: iv_rulerel_op= rulerel_op EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRel_opRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulerel_op=rulerel_op();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulerel_op.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulerel_op"


    // $ANTLR start "rulerel_op"
    // InternalGo.g:5459:1: rulerel_op returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '==' | kw= '!=' | kw= '<' | kw= '<=' | kw= '>' | kw= '>=' ) ;
    public final AntlrDatatypeRuleToken rulerel_op() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalGo.g:5465:2: ( (kw= '==' | kw= '!=' | kw= '<' | kw= '<=' | kw= '>' | kw= '>=' ) )
            // InternalGo.g:5466:2: (kw= '==' | kw= '!=' | kw= '<' | kw= '<=' | kw= '>' | kw= '>=' )
            {
            // InternalGo.g:5466:2: (kw= '==' | kw= '!=' | kw= '<' | kw= '<=' | kw= '>' | kw= '>=' )
            int alt66=6;
            switch ( input.LA(1) ) {
            case 42:
                {
                alt66=1;
                }
                break;
            case 43:
                {
                alt66=2;
                }
                break;
            case 44:
                {
                alt66=3;
                }
                break;
            case 45:
                {
                alt66=4;
                }
                break;
            case 46:
                {
                alt66=5;
                }
                break;
            case 47:
                {
                alt66=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 66, 0, input);

                throw nvae;
            }

            switch (alt66) {
                case 1 :
                    // InternalGo.g:5467:3: kw= '=='
                    {
                    kw=(Token)match(input,42,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getRel_opAccess().getEqualsSignEqualsSignKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalGo.g:5473:3: kw= '!='
                    {
                    kw=(Token)match(input,43,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getRel_opAccess().getExclamationMarkEqualsSignKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalGo.g:5479:3: kw= '<'
                    {
                    kw=(Token)match(input,44,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getRel_opAccess().getLessThanSignKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalGo.g:5485:3: kw= '<='
                    {
                    kw=(Token)match(input,45,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getRel_opAccess().getLessThanSignEqualsSignKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalGo.g:5491:3: kw= '>'
                    {
                    kw=(Token)match(input,46,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getRel_opAccess().getGreaterThanSignKeyword_4());
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalGo.g:5497:3: kw= '>='
                    {
                    kw=(Token)match(input,47,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getRel_opAccess().getGreaterThanSignEqualsSignKeyword_5());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulerel_op"


    // $ANTLR start "entryRuleadd_op"
    // InternalGo.g:5506:1: entryRuleadd_op returns [String current=null] : iv_ruleadd_op= ruleadd_op EOF ;
    public final String entryRuleadd_op() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleadd_op = null;


        try {
            // InternalGo.g:5506:46: (iv_ruleadd_op= ruleadd_op EOF )
            // InternalGo.g:5507:2: iv_ruleadd_op= ruleadd_op EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAdd_opRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleadd_op=ruleadd_op();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleadd_op.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleadd_op"


    // $ANTLR start "ruleadd_op"
    // InternalGo.g:5513:1: ruleadd_op returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '+' | kw= '-' | kw= '|' | kw= '\\u02C6' ) ;
    public final AntlrDatatypeRuleToken ruleadd_op() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalGo.g:5519:2: ( (kw= '+' | kw= '-' | kw= '|' | kw= '\\u02C6' ) )
            // InternalGo.g:5520:2: (kw= '+' | kw= '-' | kw= '|' | kw= '\\u02C6' )
            {
            // InternalGo.g:5520:2: (kw= '+' | kw= '-' | kw= '|' | kw= '\\u02C6' )
            int alt67=4;
            switch ( input.LA(1) ) {
            case 48:
                {
                alt67=1;
                }
                break;
            case 49:
                {
                alt67=2;
                }
                break;
            case 50:
                {
                alt67=3;
                }
                break;
            case 51:
                {
                alt67=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 67, 0, input);

                throw nvae;
            }

            switch (alt67) {
                case 1 :
                    // InternalGo.g:5521:3: kw= '+'
                    {
                    kw=(Token)match(input,48,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getAdd_opAccess().getPlusSignKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalGo.g:5527:3: kw= '-'
                    {
                    kw=(Token)match(input,49,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getAdd_opAccess().getHyphenMinusKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalGo.g:5533:3: kw= '|'
                    {
                    kw=(Token)match(input,50,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getAdd_opAccess().getVerticalLineKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalGo.g:5539:3: kw= '\\u02C6'
                    {
                    kw=(Token)match(input,51,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getAdd_opAccess().getModifierLetterCircumflexAccentKeyword_3());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleadd_op"


    // $ANTLR start "entryRulemul_op"
    // InternalGo.g:5548:1: entryRulemul_op returns [String current=null] : iv_rulemul_op= rulemul_op EOF ;
    public final String entryRulemul_op() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_rulemul_op = null;


        try {
            // InternalGo.g:5548:46: (iv_rulemul_op= rulemul_op EOF )
            // InternalGo.g:5549:2: iv_rulemul_op= rulemul_op EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMul_opRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulemul_op=rulemul_op();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulemul_op.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulemul_op"


    // $ANTLR start "rulemul_op"
    // InternalGo.g:5555:1: rulemul_op returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '*' | kw= '/' | kw= '%' | kw= '<<' | kw= '>>' | kw= '&' | kw= '&^' ) ;
    public final AntlrDatatypeRuleToken rulemul_op() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalGo.g:5561:2: ( (kw= '*' | kw= '/' | kw= '%' | kw= '<<' | kw= '>>' | kw= '&' | kw= '&^' ) )
            // InternalGo.g:5562:2: (kw= '*' | kw= '/' | kw= '%' | kw= '<<' | kw= '>>' | kw= '&' | kw= '&^' )
            {
            // InternalGo.g:5562:2: (kw= '*' | kw= '/' | kw= '%' | kw= '<<' | kw= '>>' | kw= '&' | kw= '&^' )
            int alt68=7;
            switch ( input.LA(1) ) {
            case 25:
                {
                alt68=1;
                }
                break;
            case 52:
                {
                alt68=2;
                }
                break;
            case 53:
                {
                alt68=3;
                }
                break;
            case 54:
                {
                alt68=4;
                }
                break;
            case 55:
                {
                alt68=5;
                }
                break;
            case 56:
                {
                alt68=6;
                }
                break;
            case 57:
                {
                alt68=7;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 68, 0, input);

                throw nvae;
            }

            switch (alt68) {
                case 1 :
                    // InternalGo.g:5563:3: kw= '*'
                    {
                    kw=(Token)match(input,25,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getMul_opAccess().getAsteriskKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalGo.g:5569:3: kw= '/'
                    {
                    kw=(Token)match(input,52,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getMul_opAccess().getSolidusKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalGo.g:5575:3: kw= '%'
                    {
                    kw=(Token)match(input,53,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getMul_opAccess().getPercentSignKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalGo.g:5581:3: kw= '<<'
                    {
                    kw=(Token)match(input,54,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getMul_opAccess().getLessThanSignLessThanSignKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalGo.g:5587:3: kw= '>>'
                    {
                    kw=(Token)match(input,55,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getMul_opAccess().getGreaterThanSignGreaterThanSignKeyword_4());
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalGo.g:5593:3: kw= '&'
                    {
                    kw=(Token)match(input,56,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getMul_opAccess().getAmpersandKeyword_5());
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalGo.g:5599:3: kw= '&^'
                    {
                    kw=(Token)match(input,57,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getMul_opAccess().getAmpersandCircumflexAccentKeyword_6());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulemul_op"


    // $ANTLR start "entryRuleunary_op"
    // InternalGo.g:5608:1: entryRuleunary_op returns [String current=null] : iv_ruleunary_op= ruleunary_op EOF ;
    public final String entryRuleunary_op() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleunary_op = null;


        try {
            // InternalGo.g:5608:48: (iv_ruleunary_op= ruleunary_op EOF )
            // InternalGo.g:5609:2: iv_ruleunary_op= ruleunary_op EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUnary_opRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleunary_op=ruleunary_op();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleunary_op.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleunary_op"


    // $ANTLR start "ruleunary_op"
    // InternalGo.g:5615:1: ruleunary_op returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '+' | kw= '-' | kw= '!' | kw= '^' | kw= '*' | kw= '&' | kw= '<-' ) ;
    public final AntlrDatatypeRuleToken ruleunary_op() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalGo.g:5621:2: ( (kw= '+' | kw= '-' | kw= '!' | kw= '^' | kw= '*' | kw= '&' | kw= '<-' ) )
            // InternalGo.g:5622:2: (kw= '+' | kw= '-' | kw= '!' | kw= '^' | kw= '*' | kw= '&' | kw= '<-' )
            {
            // InternalGo.g:5622:2: (kw= '+' | kw= '-' | kw= '!' | kw= '^' | kw= '*' | kw= '&' | kw= '<-' )
            int alt69=7;
            switch ( input.LA(1) ) {
            case 48:
                {
                alt69=1;
                }
                break;
            case 49:
                {
                alt69=2;
                }
                break;
            case 58:
                {
                alt69=3;
                }
                break;
            case 59:
                {
                alt69=4;
                }
                break;
            case 25:
                {
                alt69=5;
                }
                break;
            case 56:
                {
                alt69=6;
                }
                break;
            case 33:
                {
                alt69=7;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 69, 0, input);

                throw nvae;
            }

            switch (alt69) {
                case 1 :
                    // InternalGo.g:5623:3: kw= '+'
                    {
                    kw=(Token)match(input,48,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUnary_opAccess().getPlusSignKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalGo.g:5629:3: kw= '-'
                    {
                    kw=(Token)match(input,49,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUnary_opAccess().getHyphenMinusKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalGo.g:5635:3: kw= '!'
                    {
                    kw=(Token)match(input,58,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUnary_opAccess().getExclamationMarkKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalGo.g:5641:3: kw= '^'
                    {
                    kw=(Token)match(input,59,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUnary_opAccess().getCircumflexAccentKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalGo.g:5647:3: kw= '*'
                    {
                    kw=(Token)match(input,25,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUnary_opAccess().getAsteriskKeyword_4());
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalGo.g:5653:3: kw= '&'
                    {
                    kw=(Token)match(input,56,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUnary_opAccess().getAmpersandKeyword_5());
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalGo.g:5659:3: kw= '<-'
                    {
                    kw=(Token)match(input,33,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUnary_opAccess().getLessThanSignHyphenMinusKeyword_6());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleunary_op"


    // $ANTLR start "entryRuleConversion"
    // InternalGo.g:5668:1: entryRuleConversion returns [EObject current=null] : iv_ruleConversion= ruleConversion EOF ;
    public final EObject entryRuleConversion() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConversion = null;


        try {
            // InternalGo.g:5668:51: (iv_ruleConversion= ruleConversion EOF )
            // InternalGo.g:5669:2: iv_ruleConversion= ruleConversion EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConversionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConversion=ruleConversion();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConversion; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConversion"


    // $ANTLR start "ruleConversion"
    // InternalGo.g:5675:1: ruleConversion returns [EObject current=null] : ( ( (lv_Type_0_0= ruleType ) ) otherlv_1= '(' ( (lv_Expression_2_0= ruleExpression ) ) (otherlv_3= ',' )? otherlv_4= ')' ) ;
    public final EObject ruleConversion() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        EObject lv_Type_0_0 = null;

        EObject lv_Expression_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:5681:2: ( ( ( (lv_Type_0_0= ruleType ) ) otherlv_1= '(' ( (lv_Expression_2_0= ruleExpression ) ) (otherlv_3= ',' )? otherlv_4= ')' ) )
            // InternalGo.g:5682:2: ( ( (lv_Type_0_0= ruleType ) ) otherlv_1= '(' ( (lv_Expression_2_0= ruleExpression ) ) (otherlv_3= ',' )? otherlv_4= ')' )
            {
            // InternalGo.g:5682:2: ( ( (lv_Type_0_0= ruleType ) ) otherlv_1= '(' ( (lv_Expression_2_0= ruleExpression ) ) (otherlv_3= ',' )? otherlv_4= ')' )
            // InternalGo.g:5683:3: ( (lv_Type_0_0= ruleType ) ) otherlv_1= '(' ( (lv_Expression_2_0= ruleExpression ) ) (otherlv_3= ',' )? otherlv_4= ')'
            {
            // InternalGo.g:5683:3: ( (lv_Type_0_0= ruleType ) )
            // InternalGo.g:5684:4: (lv_Type_0_0= ruleType )
            {
            // InternalGo.g:5684:4: (lv_Type_0_0= ruleType )
            // InternalGo.g:5685:5: lv_Type_0_0= ruleType
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getConversionAccess().getTypeTypeParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_14);
            lv_Type_0_0=ruleType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getConversionRule());
              					}
              					set(
              						current,
              						"Type",
              						lv_Type_0_0,
              						"com.ufcg.compiladores.Go.Type");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_1=(Token)match(input,18,FOLLOW_32); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getConversionAccess().getLeftParenthesisKeyword_1());
              		
            }
            // InternalGo.g:5706:3: ( (lv_Expression_2_0= ruleExpression ) )
            // InternalGo.g:5707:4: (lv_Expression_2_0= ruleExpression )
            {
            // InternalGo.g:5707:4: (lv_Expression_2_0= ruleExpression )
            // InternalGo.g:5708:5: lv_Expression_2_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getConversionAccess().getExpressionExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_17);
            lv_Expression_2_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getConversionRule());
              					}
              					set(
              						current,
              						"Expression",
              						lv_Expression_2_0,
              						"com.ufcg.compiladores.Go.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:5725:3: (otherlv_3= ',' )?
            int alt70=2;
            int LA70_0 = input.LA(1);

            if ( (LA70_0==27) ) {
                alt70=1;
            }
            switch (alt70) {
                case 1 :
                    // InternalGo.g:5726:4: otherlv_3= ','
                    {
                    otherlv_3=(Token)match(input,27,FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getConversionAccess().getCommaKeyword_3());
                      			
                    }

                    }
                    break;

            }

            otherlv_4=(Token)match(input,19,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getConversionAccess().getRightParenthesisKeyword_4());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConversion"


    // $ANTLR start "entryRuleStatement"
    // InternalGo.g:5739:1: entryRuleStatement returns [EObject current=null] : iv_ruleStatement= ruleStatement EOF ;
    public final EObject entryRuleStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStatement = null;


        try {
            // InternalGo.g:5739:50: (iv_ruleStatement= ruleStatement EOF )
            // InternalGo.g:5740:2: iv_ruleStatement= ruleStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleStatement=ruleStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStatement"


    // $ANTLR start "ruleStatement"
    // InternalGo.g:5746:1: ruleStatement returns [EObject current=null] : ( ( (lv_Declaration_0_0= ruleDeclaration ) ) | ( (lv_LabeledStmt_1_0= ruleLabeledStmt ) ) | ( (lv_SimpleStmt_2_0= ruleSimpleStmt ) ) | ( (lv_GoStmt_3_0= ruleGoStmt ) ) | ( (lv_ReturnStmt_4_0= ruleReturnStmt ) ) | ( (lv_BreakStmt_5_0= ruleBreakStmt ) ) | ( (lv_ContinueStmt_6_0= ruleContinueStmt ) ) | ( (lv_GotoStmt_7_0= ruleGotoStmt ) ) | ( (lv_FallthroughStmt_8_0= ruleFallthroughStmt ) ) | ( (lv_Block_9_0= ruleBlock ) ) | ( (lv_IfStmt_10_0= ruleIfStmt ) ) | ( (lv_SwitchStmt_11_0= ruleSwitchStmt ) ) | ( (lv_SelectStmt_12_0= ruleSelectStmt ) ) | ( (lv_ForStmt_13_0= ruleForStmt ) ) | ( (lv_DeferStmt_14_0= ruleDeferStmt ) ) ) ;
    public final EObject ruleStatement() throws RecognitionException {
        EObject current = null;

        EObject lv_Declaration_0_0 = null;

        EObject lv_LabeledStmt_1_0 = null;

        EObject lv_SimpleStmt_2_0 = null;

        EObject lv_GoStmt_3_0 = null;

        EObject lv_ReturnStmt_4_0 = null;

        EObject lv_BreakStmt_5_0 = null;

        EObject lv_ContinueStmt_6_0 = null;

        EObject lv_GotoStmt_7_0 = null;

        AntlrDatatypeRuleToken lv_FallthroughStmt_8_0 = null;

        EObject lv_Block_9_0 = null;

        EObject lv_IfStmt_10_0 = null;

        EObject lv_SwitchStmt_11_0 = null;

        EObject lv_SelectStmt_12_0 = null;

        EObject lv_ForStmt_13_0 = null;

        EObject lv_DeferStmt_14_0 = null;



        	enterRule();

        try {
            // InternalGo.g:5752:2: ( ( ( (lv_Declaration_0_0= ruleDeclaration ) ) | ( (lv_LabeledStmt_1_0= ruleLabeledStmt ) ) | ( (lv_SimpleStmt_2_0= ruleSimpleStmt ) ) | ( (lv_GoStmt_3_0= ruleGoStmt ) ) | ( (lv_ReturnStmt_4_0= ruleReturnStmt ) ) | ( (lv_BreakStmt_5_0= ruleBreakStmt ) ) | ( (lv_ContinueStmt_6_0= ruleContinueStmt ) ) | ( (lv_GotoStmt_7_0= ruleGotoStmt ) ) | ( (lv_FallthroughStmt_8_0= ruleFallthroughStmt ) ) | ( (lv_Block_9_0= ruleBlock ) ) | ( (lv_IfStmt_10_0= ruleIfStmt ) ) | ( (lv_SwitchStmt_11_0= ruleSwitchStmt ) ) | ( (lv_SelectStmt_12_0= ruleSelectStmt ) ) | ( (lv_ForStmt_13_0= ruleForStmt ) ) | ( (lv_DeferStmt_14_0= ruleDeferStmt ) ) ) )
            // InternalGo.g:5753:2: ( ( (lv_Declaration_0_0= ruleDeclaration ) ) | ( (lv_LabeledStmt_1_0= ruleLabeledStmt ) ) | ( (lv_SimpleStmt_2_0= ruleSimpleStmt ) ) | ( (lv_GoStmt_3_0= ruleGoStmt ) ) | ( (lv_ReturnStmt_4_0= ruleReturnStmt ) ) | ( (lv_BreakStmt_5_0= ruleBreakStmt ) ) | ( (lv_ContinueStmt_6_0= ruleContinueStmt ) ) | ( (lv_GotoStmt_7_0= ruleGotoStmt ) ) | ( (lv_FallthroughStmt_8_0= ruleFallthroughStmt ) ) | ( (lv_Block_9_0= ruleBlock ) ) | ( (lv_IfStmt_10_0= ruleIfStmt ) ) | ( (lv_SwitchStmt_11_0= ruleSwitchStmt ) ) | ( (lv_SelectStmt_12_0= ruleSelectStmt ) ) | ( (lv_ForStmt_13_0= ruleForStmt ) ) | ( (lv_DeferStmt_14_0= ruleDeferStmt ) ) )
            {
            // InternalGo.g:5753:2: ( ( (lv_Declaration_0_0= ruleDeclaration ) ) | ( (lv_LabeledStmt_1_0= ruleLabeledStmt ) ) | ( (lv_SimpleStmt_2_0= ruleSimpleStmt ) ) | ( (lv_GoStmt_3_0= ruleGoStmt ) ) | ( (lv_ReturnStmt_4_0= ruleReturnStmt ) ) | ( (lv_BreakStmt_5_0= ruleBreakStmt ) ) | ( (lv_ContinueStmt_6_0= ruleContinueStmt ) ) | ( (lv_GotoStmt_7_0= ruleGotoStmt ) ) | ( (lv_FallthroughStmt_8_0= ruleFallthroughStmt ) ) | ( (lv_Block_9_0= ruleBlock ) ) | ( (lv_IfStmt_10_0= ruleIfStmt ) ) | ( (lv_SwitchStmt_11_0= ruleSwitchStmt ) ) | ( (lv_SelectStmt_12_0= ruleSelectStmt ) ) | ( (lv_ForStmt_13_0= ruleForStmt ) ) | ( (lv_DeferStmt_14_0= ruleDeferStmt ) ) )
            int alt71=15;
            alt71 = dfa71.predict(input);
            switch (alt71) {
                case 1 :
                    // InternalGo.g:5754:3: ( (lv_Declaration_0_0= ruleDeclaration ) )
                    {
                    // InternalGo.g:5754:3: ( (lv_Declaration_0_0= ruleDeclaration ) )
                    // InternalGo.g:5755:4: (lv_Declaration_0_0= ruleDeclaration )
                    {
                    // InternalGo.g:5755:4: (lv_Declaration_0_0= ruleDeclaration )
                    // InternalGo.g:5756:5: lv_Declaration_0_0= ruleDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStatementAccess().getDeclarationDeclarationParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_Declaration_0_0=ruleDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStatementRule());
                      					}
                      					set(
                      						current,
                      						"Declaration",
                      						lv_Declaration_0_0,
                      						"com.ufcg.compiladores.Go.Declaration");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:5774:3: ( (lv_LabeledStmt_1_0= ruleLabeledStmt ) )
                    {
                    // InternalGo.g:5774:3: ( (lv_LabeledStmt_1_0= ruleLabeledStmt ) )
                    // InternalGo.g:5775:4: (lv_LabeledStmt_1_0= ruleLabeledStmt )
                    {
                    // InternalGo.g:5775:4: (lv_LabeledStmt_1_0= ruleLabeledStmt )
                    // InternalGo.g:5776:5: lv_LabeledStmt_1_0= ruleLabeledStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStatementAccess().getLabeledStmtLabeledStmtParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_LabeledStmt_1_0=ruleLabeledStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStatementRule());
                      					}
                      					set(
                      						current,
                      						"LabeledStmt",
                      						lv_LabeledStmt_1_0,
                      						"com.ufcg.compiladores.Go.LabeledStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalGo.g:5794:3: ( (lv_SimpleStmt_2_0= ruleSimpleStmt ) )
                    {
                    // InternalGo.g:5794:3: ( (lv_SimpleStmt_2_0= ruleSimpleStmt ) )
                    // InternalGo.g:5795:4: (lv_SimpleStmt_2_0= ruleSimpleStmt )
                    {
                    // InternalGo.g:5795:4: (lv_SimpleStmt_2_0= ruleSimpleStmt )
                    // InternalGo.g:5796:5: lv_SimpleStmt_2_0= ruleSimpleStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStatementAccess().getSimpleStmtSimpleStmtParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_SimpleStmt_2_0=ruleSimpleStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStatementRule());
                      					}
                      					set(
                      						current,
                      						"SimpleStmt",
                      						lv_SimpleStmt_2_0,
                      						"com.ufcg.compiladores.Go.SimpleStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalGo.g:5814:3: ( (lv_GoStmt_3_0= ruleGoStmt ) )
                    {
                    // InternalGo.g:5814:3: ( (lv_GoStmt_3_0= ruleGoStmt ) )
                    // InternalGo.g:5815:4: (lv_GoStmt_3_0= ruleGoStmt )
                    {
                    // InternalGo.g:5815:4: (lv_GoStmt_3_0= ruleGoStmt )
                    // InternalGo.g:5816:5: lv_GoStmt_3_0= ruleGoStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStatementAccess().getGoStmtGoStmtParserRuleCall_3_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_GoStmt_3_0=ruleGoStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStatementRule());
                      					}
                      					set(
                      						current,
                      						"GoStmt",
                      						lv_GoStmt_3_0,
                      						"com.ufcg.compiladores.Go.GoStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalGo.g:5834:3: ( (lv_ReturnStmt_4_0= ruleReturnStmt ) )
                    {
                    // InternalGo.g:5834:3: ( (lv_ReturnStmt_4_0= ruleReturnStmt ) )
                    // InternalGo.g:5835:4: (lv_ReturnStmt_4_0= ruleReturnStmt )
                    {
                    // InternalGo.g:5835:4: (lv_ReturnStmt_4_0= ruleReturnStmt )
                    // InternalGo.g:5836:5: lv_ReturnStmt_4_0= ruleReturnStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStatementAccess().getReturnStmtReturnStmtParserRuleCall_4_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_ReturnStmt_4_0=ruleReturnStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStatementRule());
                      					}
                      					set(
                      						current,
                      						"ReturnStmt",
                      						lv_ReturnStmt_4_0,
                      						"com.ufcg.compiladores.Go.ReturnStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalGo.g:5854:3: ( (lv_BreakStmt_5_0= ruleBreakStmt ) )
                    {
                    // InternalGo.g:5854:3: ( (lv_BreakStmt_5_0= ruleBreakStmt ) )
                    // InternalGo.g:5855:4: (lv_BreakStmt_5_0= ruleBreakStmt )
                    {
                    // InternalGo.g:5855:4: (lv_BreakStmt_5_0= ruleBreakStmt )
                    // InternalGo.g:5856:5: lv_BreakStmt_5_0= ruleBreakStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStatementAccess().getBreakStmtBreakStmtParserRuleCall_5_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_BreakStmt_5_0=ruleBreakStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStatementRule());
                      					}
                      					set(
                      						current,
                      						"BreakStmt",
                      						lv_BreakStmt_5_0,
                      						"com.ufcg.compiladores.Go.BreakStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalGo.g:5874:3: ( (lv_ContinueStmt_6_0= ruleContinueStmt ) )
                    {
                    // InternalGo.g:5874:3: ( (lv_ContinueStmt_6_0= ruleContinueStmt ) )
                    // InternalGo.g:5875:4: (lv_ContinueStmt_6_0= ruleContinueStmt )
                    {
                    // InternalGo.g:5875:4: (lv_ContinueStmt_6_0= ruleContinueStmt )
                    // InternalGo.g:5876:5: lv_ContinueStmt_6_0= ruleContinueStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStatementAccess().getContinueStmtContinueStmtParserRuleCall_6_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_ContinueStmt_6_0=ruleContinueStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStatementRule());
                      					}
                      					set(
                      						current,
                      						"ContinueStmt",
                      						lv_ContinueStmt_6_0,
                      						"com.ufcg.compiladores.Go.ContinueStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 8 :
                    // InternalGo.g:5894:3: ( (lv_GotoStmt_7_0= ruleGotoStmt ) )
                    {
                    // InternalGo.g:5894:3: ( (lv_GotoStmt_7_0= ruleGotoStmt ) )
                    // InternalGo.g:5895:4: (lv_GotoStmt_7_0= ruleGotoStmt )
                    {
                    // InternalGo.g:5895:4: (lv_GotoStmt_7_0= ruleGotoStmt )
                    // InternalGo.g:5896:5: lv_GotoStmt_7_0= ruleGotoStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStatementAccess().getGotoStmtGotoStmtParserRuleCall_7_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_GotoStmt_7_0=ruleGotoStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStatementRule());
                      					}
                      					set(
                      						current,
                      						"GotoStmt",
                      						lv_GotoStmt_7_0,
                      						"com.ufcg.compiladores.Go.GotoStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 9 :
                    // InternalGo.g:5914:3: ( (lv_FallthroughStmt_8_0= ruleFallthroughStmt ) )
                    {
                    // InternalGo.g:5914:3: ( (lv_FallthroughStmt_8_0= ruleFallthroughStmt ) )
                    // InternalGo.g:5915:4: (lv_FallthroughStmt_8_0= ruleFallthroughStmt )
                    {
                    // InternalGo.g:5915:4: (lv_FallthroughStmt_8_0= ruleFallthroughStmt )
                    // InternalGo.g:5916:5: lv_FallthroughStmt_8_0= ruleFallthroughStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStatementAccess().getFallthroughStmtFallthroughStmtParserRuleCall_8_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_FallthroughStmt_8_0=ruleFallthroughStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStatementRule());
                      					}
                      					set(
                      						current,
                      						"FallthroughStmt",
                      						lv_FallthroughStmt_8_0,
                      						"com.ufcg.compiladores.Go.FallthroughStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 10 :
                    // InternalGo.g:5934:3: ( (lv_Block_9_0= ruleBlock ) )
                    {
                    // InternalGo.g:5934:3: ( (lv_Block_9_0= ruleBlock ) )
                    // InternalGo.g:5935:4: (lv_Block_9_0= ruleBlock )
                    {
                    // InternalGo.g:5935:4: (lv_Block_9_0= ruleBlock )
                    // InternalGo.g:5936:5: lv_Block_9_0= ruleBlock
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStatementAccess().getBlockBlockParserRuleCall_9_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_Block_9_0=ruleBlock();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStatementRule());
                      					}
                      					set(
                      						current,
                      						"Block",
                      						lv_Block_9_0,
                      						"com.ufcg.compiladores.Go.Block");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 11 :
                    // InternalGo.g:5954:3: ( (lv_IfStmt_10_0= ruleIfStmt ) )
                    {
                    // InternalGo.g:5954:3: ( (lv_IfStmt_10_0= ruleIfStmt ) )
                    // InternalGo.g:5955:4: (lv_IfStmt_10_0= ruleIfStmt )
                    {
                    // InternalGo.g:5955:4: (lv_IfStmt_10_0= ruleIfStmt )
                    // InternalGo.g:5956:5: lv_IfStmt_10_0= ruleIfStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStatementAccess().getIfStmtIfStmtParserRuleCall_10_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_IfStmt_10_0=ruleIfStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStatementRule());
                      					}
                      					set(
                      						current,
                      						"IfStmt",
                      						lv_IfStmt_10_0,
                      						"com.ufcg.compiladores.Go.IfStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 12 :
                    // InternalGo.g:5974:3: ( (lv_SwitchStmt_11_0= ruleSwitchStmt ) )
                    {
                    // InternalGo.g:5974:3: ( (lv_SwitchStmt_11_0= ruleSwitchStmt ) )
                    // InternalGo.g:5975:4: (lv_SwitchStmt_11_0= ruleSwitchStmt )
                    {
                    // InternalGo.g:5975:4: (lv_SwitchStmt_11_0= ruleSwitchStmt )
                    // InternalGo.g:5976:5: lv_SwitchStmt_11_0= ruleSwitchStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStatementAccess().getSwitchStmtSwitchStmtParserRuleCall_11_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_SwitchStmt_11_0=ruleSwitchStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStatementRule());
                      					}
                      					set(
                      						current,
                      						"SwitchStmt",
                      						lv_SwitchStmt_11_0,
                      						"com.ufcg.compiladores.Go.SwitchStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 13 :
                    // InternalGo.g:5994:3: ( (lv_SelectStmt_12_0= ruleSelectStmt ) )
                    {
                    // InternalGo.g:5994:3: ( (lv_SelectStmt_12_0= ruleSelectStmt ) )
                    // InternalGo.g:5995:4: (lv_SelectStmt_12_0= ruleSelectStmt )
                    {
                    // InternalGo.g:5995:4: (lv_SelectStmt_12_0= ruleSelectStmt )
                    // InternalGo.g:5996:5: lv_SelectStmt_12_0= ruleSelectStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStatementAccess().getSelectStmtSelectStmtParserRuleCall_12_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_SelectStmt_12_0=ruleSelectStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStatementRule());
                      					}
                      					set(
                      						current,
                      						"SelectStmt",
                      						lv_SelectStmt_12_0,
                      						"com.ufcg.compiladores.Go.SelectStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 14 :
                    // InternalGo.g:6014:3: ( (lv_ForStmt_13_0= ruleForStmt ) )
                    {
                    // InternalGo.g:6014:3: ( (lv_ForStmt_13_0= ruleForStmt ) )
                    // InternalGo.g:6015:4: (lv_ForStmt_13_0= ruleForStmt )
                    {
                    // InternalGo.g:6015:4: (lv_ForStmt_13_0= ruleForStmt )
                    // InternalGo.g:6016:5: lv_ForStmt_13_0= ruleForStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStatementAccess().getForStmtForStmtParserRuleCall_13_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_ForStmt_13_0=ruleForStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStatementRule());
                      					}
                      					set(
                      						current,
                      						"ForStmt",
                      						lv_ForStmt_13_0,
                      						"com.ufcg.compiladores.Go.ForStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 15 :
                    // InternalGo.g:6034:3: ( (lv_DeferStmt_14_0= ruleDeferStmt ) )
                    {
                    // InternalGo.g:6034:3: ( (lv_DeferStmt_14_0= ruleDeferStmt ) )
                    // InternalGo.g:6035:4: (lv_DeferStmt_14_0= ruleDeferStmt )
                    {
                    // InternalGo.g:6035:4: (lv_DeferStmt_14_0= ruleDeferStmt )
                    // InternalGo.g:6036:5: lv_DeferStmt_14_0= ruleDeferStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStatementAccess().getDeferStmtDeferStmtParserRuleCall_14_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_DeferStmt_14_0=ruleDeferStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStatementRule());
                      					}
                      					set(
                      						current,
                      						"DeferStmt",
                      						lv_DeferStmt_14_0,
                      						"com.ufcg.compiladores.Go.DeferStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStatement"


    // $ANTLR start "entryRuleSimpleStmt"
    // InternalGo.g:6057:1: entryRuleSimpleStmt returns [EObject current=null] : iv_ruleSimpleStmt= ruleSimpleStmt EOF ;
    public final EObject entryRuleSimpleStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSimpleStmt = null;


        try {
            // InternalGo.g:6057:51: (iv_ruleSimpleStmt= ruleSimpleStmt EOF )
            // InternalGo.g:6058:2: iv_ruleSimpleStmt= ruleSimpleStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSimpleStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSimpleStmt=ruleSimpleStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSimpleStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSimpleStmt"


    // $ANTLR start "ruleSimpleStmt"
    // InternalGo.g:6064:1: ruleSimpleStmt returns [EObject current=null] : ( ( (lv_EmptyStmt_0_0= ruleEmptyStmt ) ) | ( (lv_ExpressionStmt_1_0= ruleExpressionStmt ) ) | ( (lv_SendStmt_2_0= ruleSendStmt ) ) | ( (lv_IncDecStmt_3_0= ruleIncDecStmt ) ) | ( (lv_Assignment_4_0= ruleAssignment ) ) | ( (lv_ShortVarDecl_5_0= ruleShortVarDecl ) ) ) ;
    public final EObject ruleSimpleStmt() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_EmptyStmt_0_0 = null;

        EObject lv_ExpressionStmt_1_0 = null;

        EObject lv_SendStmt_2_0 = null;

        EObject lv_IncDecStmt_3_0 = null;

        EObject lv_Assignment_4_0 = null;

        EObject lv_ShortVarDecl_5_0 = null;



        	enterRule();

        try {
            // InternalGo.g:6070:2: ( ( ( (lv_EmptyStmt_0_0= ruleEmptyStmt ) ) | ( (lv_ExpressionStmt_1_0= ruleExpressionStmt ) ) | ( (lv_SendStmt_2_0= ruleSendStmt ) ) | ( (lv_IncDecStmt_3_0= ruleIncDecStmt ) ) | ( (lv_Assignment_4_0= ruleAssignment ) ) | ( (lv_ShortVarDecl_5_0= ruleShortVarDecl ) ) ) )
            // InternalGo.g:6071:2: ( ( (lv_EmptyStmt_0_0= ruleEmptyStmt ) ) | ( (lv_ExpressionStmt_1_0= ruleExpressionStmt ) ) | ( (lv_SendStmt_2_0= ruleSendStmt ) ) | ( (lv_IncDecStmt_3_0= ruleIncDecStmt ) ) | ( (lv_Assignment_4_0= ruleAssignment ) ) | ( (lv_ShortVarDecl_5_0= ruleShortVarDecl ) ) )
            {
            // InternalGo.g:6071:2: ( ( (lv_EmptyStmt_0_0= ruleEmptyStmt ) ) | ( (lv_ExpressionStmt_1_0= ruleExpressionStmt ) ) | ( (lv_SendStmt_2_0= ruleSendStmt ) ) | ( (lv_IncDecStmt_3_0= ruleIncDecStmt ) ) | ( (lv_Assignment_4_0= ruleAssignment ) ) | ( (lv_ShortVarDecl_5_0= ruleShortVarDecl ) ) )
            int alt72=6;
            alt72 = dfa72.predict(input);
            switch (alt72) {
                case 1 :
                    // InternalGo.g:6072:3: ( (lv_EmptyStmt_0_0= ruleEmptyStmt ) )
                    {
                    // InternalGo.g:6072:3: ( (lv_EmptyStmt_0_0= ruleEmptyStmt ) )
                    // InternalGo.g:6073:4: (lv_EmptyStmt_0_0= ruleEmptyStmt )
                    {
                    // InternalGo.g:6073:4: (lv_EmptyStmt_0_0= ruleEmptyStmt )
                    // InternalGo.g:6074:5: lv_EmptyStmt_0_0= ruleEmptyStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getSimpleStmtAccess().getEmptyStmtEmptyStmtParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_EmptyStmt_0_0=ruleEmptyStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getSimpleStmtRule());
                      					}
                      					set(
                      						current,
                      						"EmptyStmt",
                      						lv_EmptyStmt_0_0,
                      						"com.ufcg.compiladores.Go.EmptyStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:6092:3: ( (lv_ExpressionStmt_1_0= ruleExpressionStmt ) )
                    {
                    // InternalGo.g:6092:3: ( (lv_ExpressionStmt_1_0= ruleExpressionStmt ) )
                    // InternalGo.g:6093:4: (lv_ExpressionStmt_1_0= ruleExpressionStmt )
                    {
                    // InternalGo.g:6093:4: (lv_ExpressionStmt_1_0= ruleExpressionStmt )
                    // InternalGo.g:6094:5: lv_ExpressionStmt_1_0= ruleExpressionStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getSimpleStmtAccess().getExpressionStmtExpressionStmtParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_ExpressionStmt_1_0=ruleExpressionStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getSimpleStmtRule());
                      					}
                      					set(
                      						current,
                      						"ExpressionStmt",
                      						lv_ExpressionStmt_1_0,
                      						"com.ufcg.compiladores.Go.ExpressionStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalGo.g:6112:3: ( (lv_SendStmt_2_0= ruleSendStmt ) )
                    {
                    // InternalGo.g:6112:3: ( (lv_SendStmt_2_0= ruleSendStmt ) )
                    // InternalGo.g:6113:4: (lv_SendStmt_2_0= ruleSendStmt )
                    {
                    // InternalGo.g:6113:4: (lv_SendStmt_2_0= ruleSendStmt )
                    // InternalGo.g:6114:5: lv_SendStmt_2_0= ruleSendStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getSimpleStmtAccess().getSendStmtSendStmtParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_SendStmt_2_0=ruleSendStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getSimpleStmtRule());
                      					}
                      					set(
                      						current,
                      						"SendStmt",
                      						lv_SendStmt_2_0,
                      						"com.ufcg.compiladores.Go.SendStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalGo.g:6132:3: ( (lv_IncDecStmt_3_0= ruleIncDecStmt ) )
                    {
                    // InternalGo.g:6132:3: ( (lv_IncDecStmt_3_0= ruleIncDecStmt ) )
                    // InternalGo.g:6133:4: (lv_IncDecStmt_3_0= ruleIncDecStmt )
                    {
                    // InternalGo.g:6133:4: (lv_IncDecStmt_3_0= ruleIncDecStmt )
                    // InternalGo.g:6134:5: lv_IncDecStmt_3_0= ruleIncDecStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getSimpleStmtAccess().getIncDecStmtIncDecStmtParserRuleCall_3_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_IncDecStmt_3_0=ruleIncDecStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getSimpleStmtRule());
                      					}
                      					set(
                      						current,
                      						"IncDecStmt",
                      						lv_IncDecStmt_3_0,
                      						"com.ufcg.compiladores.Go.IncDecStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalGo.g:6152:3: ( (lv_Assignment_4_0= ruleAssignment ) )
                    {
                    // InternalGo.g:6152:3: ( (lv_Assignment_4_0= ruleAssignment ) )
                    // InternalGo.g:6153:4: (lv_Assignment_4_0= ruleAssignment )
                    {
                    // InternalGo.g:6153:4: (lv_Assignment_4_0= ruleAssignment )
                    // InternalGo.g:6154:5: lv_Assignment_4_0= ruleAssignment
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getSimpleStmtAccess().getAssignmentAssignmentParserRuleCall_4_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_Assignment_4_0=ruleAssignment();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getSimpleStmtRule());
                      					}
                      					set(
                      						current,
                      						"Assignment",
                      						lv_Assignment_4_0,
                      						"com.ufcg.compiladores.Go.Assignment");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalGo.g:6172:3: ( (lv_ShortVarDecl_5_0= ruleShortVarDecl ) )
                    {
                    // InternalGo.g:6172:3: ( (lv_ShortVarDecl_5_0= ruleShortVarDecl ) )
                    // InternalGo.g:6173:4: (lv_ShortVarDecl_5_0= ruleShortVarDecl )
                    {
                    // InternalGo.g:6173:4: (lv_ShortVarDecl_5_0= ruleShortVarDecl )
                    // InternalGo.g:6174:5: lv_ShortVarDecl_5_0= ruleShortVarDecl
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getSimpleStmtAccess().getShortVarDeclShortVarDeclParserRuleCall_5_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_ShortVarDecl_5_0=ruleShortVarDecl();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getSimpleStmtRule());
                      					}
                      					set(
                      						current,
                      						"ShortVarDecl",
                      						lv_ShortVarDecl_5_0,
                      						"com.ufcg.compiladores.Go.ShortVarDecl");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSimpleStmt"


    // $ANTLR start "entryRuleEmptyStmt"
    // InternalGo.g:6195:1: entryRuleEmptyStmt returns [String current=null] : iv_ruleEmptyStmt= ruleEmptyStmt EOF ;
    public final String entryRuleEmptyStmt() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleEmptyStmt = null;


        try {
            // InternalGo.g:6195:49: (iv_ruleEmptyStmt= ruleEmptyStmt EOF )
            // InternalGo.g:6196:2: iv_ruleEmptyStmt= ruleEmptyStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEmptyStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEmptyStmt=ruleEmptyStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEmptyStmt.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEmptyStmt"


    // $ANTLR start "ruleEmptyStmt"
    // InternalGo.g:6202:1: ruleEmptyStmt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_ANY_OTHER_0= RULE_ANY_OTHER ;
    public final AntlrDatatypeRuleToken ruleEmptyStmt() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_ANY_OTHER_0=null;


        	enterRule();

        try {
            // InternalGo.g:6208:2: (this_ANY_OTHER_0= RULE_ANY_OTHER )
            // InternalGo.g:6209:2: this_ANY_OTHER_0= RULE_ANY_OTHER
            {
            this_ANY_OTHER_0=(Token)match(input,RULE_ANY_OTHER,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_ANY_OTHER_0);
              	
            }
            if ( state.backtracking==0 ) {

              		newLeafNode(this_ANY_OTHER_0, grammarAccess.getEmptyStmtAccess().getANY_OTHERTerminalRuleCall());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEmptyStmt"


    // $ANTLR start "entryRuleLabeledStmt"
    // InternalGo.g:6219:1: entryRuleLabeledStmt returns [EObject current=null] : iv_ruleLabeledStmt= ruleLabeledStmt EOF ;
    public final EObject entryRuleLabeledStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLabeledStmt = null;


        try {
            // InternalGo.g:6219:52: (iv_ruleLabeledStmt= ruleLabeledStmt EOF )
            // InternalGo.g:6220:2: iv_ruleLabeledStmt= ruleLabeledStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLabeledStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLabeledStmt=ruleLabeledStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLabeledStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLabeledStmt"


    // $ANTLR start "ruleLabeledStmt"
    // InternalGo.g:6226:1: ruleLabeledStmt returns [EObject current=null] : ( ( (lv_Label_0_0= ruleLabel ) ) otherlv_1= ':' ( (lv_Statement_2_0= ruleStatement ) ) ) ;
    public final EObject ruleLabeledStmt() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_Label_0_0 = null;

        EObject lv_Statement_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:6232:2: ( ( ( (lv_Label_0_0= ruleLabel ) ) otherlv_1= ':' ( (lv_Statement_2_0= ruleStatement ) ) ) )
            // InternalGo.g:6233:2: ( ( (lv_Label_0_0= ruleLabel ) ) otherlv_1= ':' ( (lv_Statement_2_0= ruleStatement ) ) )
            {
            // InternalGo.g:6233:2: ( ( (lv_Label_0_0= ruleLabel ) ) otherlv_1= ':' ( (lv_Statement_2_0= ruleStatement ) ) )
            // InternalGo.g:6234:3: ( (lv_Label_0_0= ruleLabel ) ) otherlv_1= ':' ( (lv_Statement_2_0= ruleStatement ) )
            {
            // InternalGo.g:6234:3: ( (lv_Label_0_0= ruleLabel ) )
            // InternalGo.g:6235:4: (lv_Label_0_0= ruleLabel )
            {
            // InternalGo.g:6235:4: (lv_Label_0_0= ruleLabel )
            // InternalGo.g:6236:5: lv_Label_0_0= ruleLabel
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getLabeledStmtAccess().getLabelLabelParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_41);
            lv_Label_0_0=ruleLabel();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getLabeledStmtRule());
              					}
              					set(
              						current,
              						"Label",
              						lv_Label_0_0,
              						"com.ufcg.compiladores.Go.Label");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_1=(Token)match(input,39,FOLLOW_49); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getLabeledStmtAccess().getColonKeyword_1());
              		
            }
            // InternalGo.g:6257:3: ( (lv_Statement_2_0= ruleStatement ) )
            // InternalGo.g:6258:4: (lv_Statement_2_0= ruleStatement )
            {
            // InternalGo.g:6258:4: (lv_Statement_2_0= ruleStatement )
            // InternalGo.g:6259:5: lv_Statement_2_0= ruleStatement
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getLabeledStmtAccess().getStatementStatementParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_Statement_2_0=ruleStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getLabeledStmtRule());
              					}
              					set(
              						current,
              						"Statement",
              						lv_Statement_2_0,
              						"com.ufcg.compiladores.Go.Statement");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLabeledStmt"


    // $ANTLR start "entryRuleLabel"
    // InternalGo.g:6280:1: entryRuleLabel returns [EObject current=null] : iv_ruleLabel= ruleLabel EOF ;
    public final EObject entryRuleLabel() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLabel = null;


        try {
            // InternalGo.g:6280:46: (iv_ruleLabel= ruleLabel EOF )
            // InternalGo.g:6281:2: iv_ruleLabel= ruleLabel EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLabelRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLabel=ruleLabel();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLabel; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLabel"


    // $ANTLR start "ruleLabel"
    // InternalGo.g:6287:1: ruleLabel returns [EObject current=null] : ( (lv_identifier_0_0= ruleidentifier ) ) ;
    public final EObject ruleLabel() throws RecognitionException {
        EObject current = null;

        EObject lv_identifier_0_0 = null;



        	enterRule();

        try {
            // InternalGo.g:6293:2: ( ( (lv_identifier_0_0= ruleidentifier ) ) )
            // InternalGo.g:6294:2: ( (lv_identifier_0_0= ruleidentifier ) )
            {
            // InternalGo.g:6294:2: ( (lv_identifier_0_0= ruleidentifier ) )
            // InternalGo.g:6295:3: (lv_identifier_0_0= ruleidentifier )
            {
            // InternalGo.g:6295:3: (lv_identifier_0_0= ruleidentifier )
            // InternalGo.g:6296:4: lv_identifier_0_0= ruleidentifier
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getLabelAccess().getIdentifierIdentifierParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_identifier_0_0=ruleidentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getLabelRule());
              				}
              				set(
              					current,
              					"identifier",
              					lv_identifier_0_0,
              					"com.ufcg.compiladores.Go.identifier");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLabel"


    // $ANTLR start "entryRuleExpressionStmt"
    // InternalGo.g:6316:1: entryRuleExpressionStmt returns [EObject current=null] : iv_ruleExpressionStmt= ruleExpressionStmt EOF ;
    public final EObject entryRuleExpressionStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExpressionStmt = null;


        try {
            // InternalGo.g:6316:55: (iv_ruleExpressionStmt= ruleExpressionStmt EOF )
            // InternalGo.g:6317:2: iv_ruleExpressionStmt= ruleExpressionStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExpressionStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExpressionStmt=ruleExpressionStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExpressionStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExpressionStmt"


    // $ANTLR start "ruleExpressionStmt"
    // InternalGo.g:6323:1: ruleExpressionStmt returns [EObject current=null] : ( (lv_Expression_0_0= ruleExpression ) ) ;
    public final EObject ruleExpressionStmt() throws RecognitionException {
        EObject current = null;

        EObject lv_Expression_0_0 = null;



        	enterRule();

        try {
            // InternalGo.g:6329:2: ( ( (lv_Expression_0_0= ruleExpression ) ) )
            // InternalGo.g:6330:2: ( (lv_Expression_0_0= ruleExpression ) )
            {
            // InternalGo.g:6330:2: ( (lv_Expression_0_0= ruleExpression ) )
            // InternalGo.g:6331:3: (lv_Expression_0_0= ruleExpression )
            {
            // InternalGo.g:6331:3: (lv_Expression_0_0= ruleExpression )
            // InternalGo.g:6332:4: lv_Expression_0_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getExpressionStmtAccess().getExpressionExpressionParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_Expression_0_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getExpressionStmtRule());
              				}
              				set(
              					current,
              					"Expression",
              					lv_Expression_0_0,
              					"com.ufcg.compiladores.Go.Expression");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExpressionStmt"


    // $ANTLR start "entryRuleSendStmt"
    // InternalGo.g:6352:1: entryRuleSendStmt returns [EObject current=null] : iv_ruleSendStmt= ruleSendStmt EOF ;
    public final EObject entryRuleSendStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSendStmt = null;


        try {
            // InternalGo.g:6352:49: (iv_ruleSendStmt= ruleSendStmt EOF )
            // InternalGo.g:6353:2: iv_ruleSendStmt= ruleSendStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSendStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSendStmt=ruleSendStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSendStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSendStmt"


    // $ANTLR start "ruleSendStmt"
    // InternalGo.g:6359:1: ruleSendStmt returns [EObject current=null] : ( ( (lv_Channel_0_0= ruleChannel ) ) otherlv_1= '<-' ( (lv_Expression_2_0= ruleExpression ) ) ) ;
    public final EObject ruleSendStmt() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_Channel_0_0 = null;

        EObject lv_Expression_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:6365:2: ( ( ( (lv_Channel_0_0= ruleChannel ) ) otherlv_1= '<-' ( (lv_Expression_2_0= ruleExpression ) ) ) )
            // InternalGo.g:6366:2: ( ( (lv_Channel_0_0= ruleChannel ) ) otherlv_1= '<-' ( (lv_Expression_2_0= ruleExpression ) ) )
            {
            // InternalGo.g:6366:2: ( ( (lv_Channel_0_0= ruleChannel ) ) otherlv_1= '<-' ( (lv_Expression_2_0= ruleExpression ) ) )
            // InternalGo.g:6367:3: ( (lv_Channel_0_0= ruleChannel ) ) otherlv_1= '<-' ( (lv_Expression_2_0= ruleExpression ) )
            {
            // InternalGo.g:6367:3: ( (lv_Channel_0_0= ruleChannel ) )
            // InternalGo.g:6368:4: (lv_Channel_0_0= ruleChannel )
            {
            // InternalGo.g:6368:4: (lv_Channel_0_0= ruleChannel )
            // InternalGo.g:6369:5: lv_Channel_0_0= ruleChannel
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSendStmtAccess().getChannelChannelParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_23);
            lv_Channel_0_0=ruleChannel();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSendStmtRule());
              					}
              					set(
              						current,
              						"Channel",
              						lv_Channel_0_0,
              						"com.ufcg.compiladores.Go.Channel");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_1=(Token)match(input,33,FOLLOW_32); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getSendStmtAccess().getLessThanSignHyphenMinusKeyword_1());
              		
            }
            // InternalGo.g:6390:3: ( (lv_Expression_2_0= ruleExpression ) )
            // InternalGo.g:6391:4: (lv_Expression_2_0= ruleExpression )
            {
            // InternalGo.g:6391:4: (lv_Expression_2_0= ruleExpression )
            // InternalGo.g:6392:5: lv_Expression_2_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSendStmtAccess().getExpressionExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_Expression_2_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSendStmtRule());
              					}
              					set(
              						current,
              						"Expression",
              						lv_Expression_2_0,
              						"com.ufcg.compiladores.Go.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSendStmt"


    // $ANTLR start "entryRuleChannel"
    // InternalGo.g:6413:1: entryRuleChannel returns [EObject current=null] : iv_ruleChannel= ruleChannel EOF ;
    public final EObject entryRuleChannel() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleChannel = null;


        try {
            // InternalGo.g:6413:48: (iv_ruleChannel= ruleChannel EOF )
            // InternalGo.g:6414:2: iv_ruleChannel= ruleChannel EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getChannelRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleChannel=ruleChannel();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleChannel; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleChannel"


    // $ANTLR start "ruleChannel"
    // InternalGo.g:6420:1: ruleChannel returns [EObject current=null] : ( (lv_Expression_0_0= ruleExpression ) ) ;
    public final EObject ruleChannel() throws RecognitionException {
        EObject current = null;

        EObject lv_Expression_0_0 = null;



        	enterRule();

        try {
            // InternalGo.g:6426:2: ( ( (lv_Expression_0_0= ruleExpression ) ) )
            // InternalGo.g:6427:2: ( (lv_Expression_0_0= ruleExpression ) )
            {
            // InternalGo.g:6427:2: ( (lv_Expression_0_0= ruleExpression ) )
            // InternalGo.g:6428:3: (lv_Expression_0_0= ruleExpression )
            {
            // InternalGo.g:6428:3: (lv_Expression_0_0= ruleExpression )
            // InternalGo.g:6429:4: lv_Expression_0_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getChannelAccess().getExpressionExpressionParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_Expression_0_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getChannelRule());
              				}
              				set(
              					current,
              					"Expression",
              					lv_Expression_0_0,
              					"com.ufcg.compiladores.Go.Expression");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleChannel"


    // $ANTLR start "entryRuleIncDecStmt"
    // InternalGo.g:6449:1: entryRuleIncDecStmt returns [EObject current=null] : iv_ruleIncDecStmt= ruleIncDecStmt EOF ;
    public final EObject entryRuleIncDecStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIncDecStmt = null;


        try {
            // InternalGo.g:6449:51: (iv_ruleIncDecStmt= ruleIncDecStmt EOF )
            // InternalGo.g:6450:2: iv_ruleIncDecStmt= ruleIncDecStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIncDecStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIncDecStmt=ruleIncDecStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIncDecStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIncDecStmt"


    // $ANTLR start "ruleIncDecStmt"
    // InternalGo.g:6456:1: ruleIncDecStmt returns [EObject current=null] : ( ( (lv_Expression_0_0= ruleExpression ) ) (otherlv_1= '++' | otherlv_2= '--' ) ) ;
    public final EObject ruleIncDecStmt() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        EObject lv_Expression_0_0 = null;



        	enterRule();

        try {
            // InternalGo.g:6462:2: ( ( ( (lv_Expression_0_0= ruleExpression ) ) (otherlv_1= '++' | otherlv_2= '--' ) ) )
            // InternalGo.g:6463:2: ( ( (lv_Expression_0_0= ruleExpression ) ) (otherlv_1= '++' | otherlv_2= '--' ) )
            {
            // InternalGo.g:6463:2: ( ( (lv_Expression_0_0= ruleExpression ) ) (otherlv_1= '++' | otherlv_2= '--' ) )
            // InternalGo.g:6464:3: ( (lv_Expression_0_0= ruleExpression ) ) (otherlv_1= '++' | otherlv_2= '--' )
            {
            // InternalGo.g:6464:3: ( (lv_Expression_0_0= ruleExpression ) )
            // InternalGo.g:6465:4: (lv_Expression_0_0= ruleExpression )
            {
            // InternalGo.g:6465:4: (lv_Expression_0_0= ruleExpression )
            // InternalGo.g:6466:5: lv_Expression_0_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getIncDecStmtAccess().getExpressionExpressionParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_50);
            lv_Expression_0_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getIncDecStmtRule());
              					}
              					set(
              						current,
              						"Expression",
              						lv_Expression_0_0,
              						"com.ufcg.compiladores.Go.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:6483:3: (otherlv_1= '++' | otherlv_2= '--' )
            int alt73=2;
            int LA73_0 = input.LA(1);

            if ( (LA73_0==60) ) {
                alt73=1;
            }
            else if ( (LA73_0==61) ) {
                alt73=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 73, 0, input);

                throw nvae;
            }
            switch (alt73) {
                case 1 :
                    // InternalGo.g:6484:4: otherlv_1= '++'
                    {
                    otherlv_1=(Token)match(input,60,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getIncDecStmtAccess().getPlusSignPlusSignKeyword_1_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalGo.g:6489:4: otherlv_2= '--'
                    {
                    otherlv_2=(Token)match(input,61,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getIncDecStmtAccess().getHyphenMinusHyphenMinusKeyword_1_1());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIncDecStmt"


    // $ANTLR start "entryRuleAssignment"
    // InternalGo.g:6498:1: entryRuleAssignment returns [EObject current=null] : iv_ruleAssignment= ruleAssignment EOF ;
    public final EObject entryRuleAssignment() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAssignment = null;


        try {
            // InternalGo.g:6498:51: (iv_ruleAssignment= ruleAssignment EOF )
            // InternalGo.g:6499:2: iv_ruleAssignment= ruleAssignment EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAssignmentRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAssignment=ruleAssignment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAssignment; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAssignment"


    // $ANTLR start "ruleAssignment"
    // InternalGo.g:6505:1: ruleAssignment returns [EObject current=null] : ( ( (lv_ExpressionList_0_0= ruleExpressionList ) ) ( (lv_assign_op_1_0= ruleassign_op ) ) ( (lv_ExpressionList_2_0= ruleExpressionList ) ) ) ;
    public final EObject ruleAssignment() throws RecognitionException {
        EObject current = null;

        EObject lv_ExpressionList_0_0 = null;

        AntlrDatatypeRuleToken lv_assign_op_1_0 = null;

        EObject lv_ExpressionList_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:6511:2: ( ( ( (lv_ExpressionList_0_0= ruleExpressionList ) ) ( (lv_assign_op_1_0= ruleassign_op ) ) ( (lv_ExpressionList_2_0= ruleExpressionList ) ) ) )
            // InternalGo.g:6512:2: ( ( (lv_ExpressionList_0_0= ruleExpressionList ) ) ( (lv_assign_op_1_0= ruleassign_op ) ) ( (lv_ExpressionList_2_0= ruleExpressionList ) ) )
            {
            // InternalGo.g:6512:2: ( ( (lv_ExpressionList_0_0= ruleExpressionList ) ) ( (lv_assign_op_1_0= ruleassign_op ) ) ( (lv_ExpressionList_2_0= ruleExpressionList ) ) )
            // InternalGo.g:6513:3: ( (lv_ExpressionList_0_0= ruleExpressionList ) ) ( (lv_assign_op_1_0= ruleassign_op ) ) ( (lv_ExpressionList_2_0= ruleExpressionList ) )
            {
            // InternalGo.g:6513:3: ( (lv_ExpressionList_0_0= ruleExpressionList ) )
            // InternalGo.g:6514:4: (lv_ExpressionList_0_0= ruleExpressionList )
            {
            // InternalGo.g:6514:4: (lv_ExpressionList_0_0= ruleExpressionList )
            // InternalGo.g:6515:5: lv_ExpressionList_0_0= ruleExpressionList
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAssignmentAccess().getExpressionListExpressionListParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_51);
            lv_ExpressionList_0_0=ruleExpressionList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAssignmentRule());
              					}
              					add(
              						current,
              						"ExpressionList",
              						lv_ExpressionList_0_0,
              						"com.ufcg.compiladores.Go.ExpressionList");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:6532:3: ( (lv_assign_op_1_0= ruleassign_op ) )
            // InternalGo.g:6533:4: (lv_assign_op_1_0= ruleassign_op )
            {
            // InternalGo.g:6533:4: (lv_assign_op_1_0= ruleassign_op )
            // InternalGo.g:6534:5: lv_assign_op_1_0= ruleassign_op
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAssignmentAccess().getAssign_opAssign_opParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_32);
            lv_assign_op_1_0=ruleassign_op();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAssignmentRule());
              					}
              					set(
              						current,
              						"assign_op",
              						lv_assign_op_1_0,
              						"com.ufcg.compiladores.Go.assign_op");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:6551:3: ( (lv_ExpressionList_2_0= ruleExpressionList ) )
            // InternalGo.g:6552:4: (lv_ExpressionList_2_0= ruleExpressionList )
            {
            // InternalGo.g:6552:4: (lv_ExpressionList_2_0= ruleExpressionList )
            // InternalGo.g:6553:5: lv_ExpressionList_2_0= ruleExpressionList
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAssignmentAccess().getExpressionListExpressionListParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_ExpressionList_2_0=ruleExpressionList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAssignmentRule());
              					}
              					add(
              						current,
              						"ExpressionList",
              						lv_ExpressionList_2_0,
              						"com.ufcg.compiladores.Go.ExpressionList");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAssignment"


    // $ANTLR start "entryRuleassign_op"
    // InternalGo.g:6574:1: entryRuleassign_op returns [String current=null] : iv_ruleassign_op= ruleassign_op EOF ;
    public final String entryRuleassign_op() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleassign_op = null;


        try {
            // InternalGo.g:6574:49: (iv_ruleassign_op= ruleassign_op EOF )
            // InternalGo.g:6575:2: iv_ruleassign_op= ruleassign_op EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAssign_opRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleassign_op=ruleassign_op();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleassign_op.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleassign_op"


    // $ANTLR start "ruleassign_op"
    // InternalGo.g:6581:1: ruleassign_op returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (this_add_op_0= ruleadd_op | this_mul_op_1= rulemul_op )? kw= '=' ) ;
    public final AntlrDatatypeRuleToken ruleassign_op() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_add_op_0 = null;

        AntlrDatatypeRuleToken this_mul_op_1 = null;



        	enterRule();

        try {
            // InternalGo.g:6587:2: ( ( (this_add_op_0= ruleadd_op | this_mul_op_1= rulemul_op )? kw= '=' ) )
            // InternalGo.g:6588:2: ( (this_add_op_0= ruleadd_op | this_mul_op_1= rulemul_op )? kw= '=' )
            {
            // InternalGo.g:6588:2: ( (this_add_op_0= ruleadd_op | this_mul_op_1= rulemul_op )? kw= '=' )
            // InternalGo.g:6589:3: (this_add_op_0= ruleadd_op | this_mul_op_1= rulemul_op )? kw= '='
            {
            // InternalGo.g:6589:3: (this_add_op_0= ruleadd_op | this_mul_op_1= rulemul_op )?
            int alt74=3;
            int LA74_0 = input.LA(1);

            if ( ((LA74_0>=48 && LA74_0<=51)) ) {
                alt74=1;
            }
            else if ( (LA74_0==25||(LA74_0>=52 && LA74_0<=57)) ) {
                alt74=2;
            }
            switch (alt74) {
                case 1 :
                    // InternalGo.g:6590:4: this_add_op_0= ruleadd_op
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getAssign_opAccess().getAdd_opParserRuleCall_0_0());
                      			
                    }
                    pushFollow(FOLLOW_31);
                    this_add_op_0=ruleadd_op();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_add_op_0);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalGo.g:6601:4: this_mul_op_1= rulemul_op
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getAssign_opAccess().getMul_opParserRuleCall_0_1());
                      			
                    }
                    pushFollow(FOLLOW_31);
                    this_mul_op_1=rulemul_op();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_mul_op_1);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }

            kw=(Token)match(input,35,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getAssign_opAccess().getEqualsSignKeyword_1());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleassign_op"


    // $ANTLR start "entryRuleIfStmt"
    // InternalGo.g:6621:1: entryRuleIfStmt returns [EObject current=null] : iv_ruleIfStmt= ruleIfStmt EOF ;
    public final EObject entryRuleIfStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIfStmt = null;


        try {
            // InternalGo.g:6621:47: (iv_ruleIfStmt= ruleIfStmt EOF )
            // InternalGo.g:6622:2: iv_ruleIfStmt= ruleIfStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIfStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIfStmt=ruleIfStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIfStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIfStmt"


    // $ANTLR start "ruleIfStmt"
    // InternalGo.g:6628:1: ruleIfStmt returns [EObject current=null] : (otherlv_0= 'if' ( ( (lv_SimpleStmt_1_0= ruleSimpleStmt ) ) otherlv_2= ';' )? ( (lv_Expression_3_0= ruleExpression ) ) ( (lv_Block_4_0= ruleBlock ) ) (otherlv_5= 'else' ( ( (lv_IfStmt_6_0= ruleIfStmt ) ) | ( (lv_Block_7_0= ruleBlock ) ) ) )? ) ;
    public final EObject ruleIfStmt() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_5=null;
        EObject lv_SimpleStmt_1_0 = null;

        EObject lv_Expression_3_0 = null;

        EObject lv_Block_4_0 = null;

        EObject lv_IfStmt_6_0 = null;

        EObject lv_Block_7_0 = null;



        	enterRule();

        try {
            // InternalGo.g:6634:2: ( (otherlv_0= 'if' ( ( (lv_SimpleStmt_1_0= ruleSimpleStmt ) ) otherlv_2= ';' )? ( (lv_Expression_3_0= ruleExpression ) ) ( (lv_Block_4_0= ruleBlock ) ) (otherlv_5= 'else' ( ( (lv_IfStmt_6_0= ruleIfStmt ) ) | ( (lv_Block_7_0= ruleBlock ) ) ) )? ) )
            // InternalGo.g:6635:2: (otherlv_0= 'if' ( ( (lv_SimpleStmt_1_0= ruleSimpleStmt ) ) otherlv_2= ';' )? ( (lv_Expression_3_0= ruleExpression ) ) ( (lv_Block_4_0= ruleBlock ) ) (otherlv_5= 'else' ( ( (lv_IfStmt_6_0= ruleIfStmt ) ) | ( (lv_Block_7_0= ruleBlock ) ) ) )? )
            {
            // InternalGo.g:6635:2: (otherlv_0= 'if' ( ( (lv_SimpleStmt_1_0= ruleSimpleStmt ) ) otherlv_2= ';' )? ( (lv_Expression_3_0= ruleExpression ) ) ( (lv_Block_4_0= ruleBlock ) ) (otherlv_5= 'else' ( ( (lv_IfStmt_6_0= ruleIfStmt ) ) | ( (lv_Block_7_0= ruleBlock ) ) ) )? )
            // InternalGo.g:6636:3: otherlv_0= 'if' ( ( (lv_SimpleStmt_1_0= ruleSimpleStmt ) ) otherlv_2= ';' )? ( (lv_Expression_3_0= ruleExpression ) ) ( (lv_Block_4_0= ruleBlock ) ) (otherlv_5= 'else' ( ( (lv_IfStmt_6_0= ruleIfStmt ) ) | ( (lv_Block_7_0= ruleBlock ) ) ) )?
            {
            otherlv_0=(Token)match(input,62,FOLLOW_52); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getIfStmtAccess().getIfKeyword_0());
              		
            }
            // InternalGo.g:6640:3: ( ( (lv_SimpleStmt_1_0= ruleSimpleStmt ) ) otherlv_2= ';' )?
            int alt75=2;
            alt75 = dfa75.predict(input);
            switch (alt75) {
                case 1 :
                    // InternalGo.g:6641:4: ( (lv_SimpleStmt_1_0= ruleSimpleStmt ) ) otherlv_2= ';'
                    {
                    // InternalGo.g:6641:4: ( (lv_SimpleStmt_1_0= ruleSimpleStmt ) )
                    // InternalGo.g:6642:5: (lv_SimpleStmt_1_0= ruleSimpleStmt )
                    {
                    // InternalGo.g:6642:5: (lv_SimpleStmt_1_0= ruleSimpleStmt )
                    // InternalGo.g:6643:6: lv_SimpleStmt_1_0= ruleSimpleStmt
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getIfStmtAccess().getSimpleStmtSimpleStmtParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_3);
                    lv_SimpleStmt_1_0=ruleSimpleStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getIfStmtRule());
                      						}
                      						set(
                      							current,
                      							"SimpleStmt",
                      							lv_SimpleStmt_1_0,
                      							"com.ufcg.compiladores.Go.SimpleStmt");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_2=(Token)match(input,17,FOLLOW_32); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getIfStmtAccess().getSemicolonKeyword_1_1());
                      			
                    }

                    }
                    break;

            }

            // InternalGo.g:6665:3: ( (lv_Expression_3_0= ruleExpression ) )
            // InternalGo.g:6666:4: (lv_Expression_3_0= ruleExpression )
            {
            // InternalGo.g:6666:4: (lv_Expression_3_0= ruleExpression )
            // InternalGo.g:6667:5: lv_Expression_3_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getIfStmtAccess().getExpressionExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_11);
            lv_Expression_3_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getIfStmtRule());
              					}
              					set(
              						current,
              						"Expression",
              						lv_Expression_3_0,
              						"com.ufcg.compiladores.Go.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:6684:3: ( (lv_Block_4_0= ruleBlock ) )
            // InternalGo.g:6685:4: (lv_Block_4_0= ruleBlock )
            {
            // InternalGo.g:6685:4: (lv_Block_4_0= ruleBlock )
            // InternalGo.g:6686:5: lv_Block_4_0= ruleBlock
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getIfStmtAccess().getBlockBlockParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_53);
            lv_Block_4_0=ruleBlock();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getIfStmtRule());
              					}
              					add(
              						current,
              						"Block",
              						lv_Block_4_0,
              						"com.ufcg.compiladores.Go.Block");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:6703:3: (otherlv_5= 'else' ( ( (lv_IfStmt_6_0= ruleIfStmt ) ) | ( (lv_Block_7_0= ruleBlock ) ) ) )?
            int alt77=2;
            int LA77_0 = input.LA(1);

            if ( (LA77_0==63) ) {
                alt77=1;
            }
            switch (alt77) {
                case 1 :
                    // InternalGo.g:6704:4: otherlv_5= 'else' ( ( (lv_IfStmt_6_0= ruleIfStmt ) ) | ( (lv_Block_7_0= ruleBlock ) ) )
                    {
                    otherlv_5=(Token)match(input,63,FOLLOW_54); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getIfStmtAccess().getElseKeyword_4_0());
                      			
                    }
                    // InternalGo.g:6708:4: ( ( (lv_IfStmt_6_0= ruleIfStmt ) ) | ( (lv_Block_7_0= ruleBlock ) ) )
                    int alt76=2;
                    int LA76_0 = input.LA(1);

                    if ( (LA76_0==62) ) {
                        alt76=1;
                    }
                    else if ( (LA76_0==24) ) {
                        alt76=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 76, 0, input);

                        throw nvae;
                    }
                    switch (alt76) {
                        case 1 :
                            // InternalGo.g:6709:5: ( (lv_IfStmt_6_0= ruleIfStmt ) )
                            {
                            // InternalGo.g:6709:5: ( (lv_IfStmt_6_0= ruleIfStmt ) )
                            // InternalGo.g:6710:6: (lv_IfStmt_6_0= ruleIfStmt )
                            {
                            // InternalGo.g:6710:6: (lv_IfStmt_6_0= ruleIfStmt )
                            // InternalGo.g:6711:7: lv_IfStmt_6_0= ruleIfStmt
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getIfStmtAccess().getIfStmtIfStmtParserRuleCall_4_1_0_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_IfStmt_6_0=ruleIfStmt();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getIfStmtRule());
                              							}
                              							set(
                              								current,
                              								"IfStmt",
                              								lv_IfStmt_6_0,
                              								"com.ufcg.compiladores.Go.IfStmt");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalGo.g:6729:5: ( (lv_Block_7_0= ruleBlock ) )
                            {
                            // InternalGo.g:6729:5: ( (lv_Block_7_0= ruleBlock ) )
                            // InternalGo.g:6730:6: (lv_Block_7_0= ruleBlock )
                            {
                            // InternalGo.g:6730:6: (lv_Block_7_0= ruleBlock )
                            // InternalGo.g:6731:7: lv_Block_7_0= ruleBlock
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getIfStmtAccess().getBlockBlockParserRuleCall_4_1_1_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_Block_7_0=ruleBlock();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getIfStmtRule());
                              							}
                              							add(
                              								current,
                              								"Block",
                              								lv_Block_7_0,
                              								"com.ufcg.compiladores.Go.Block");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIfStmt"


    // $ANTLR start "entryRuleSwitchStmt"
    // InternalGo.g:6754:1: entryRuleSwitchStmt returns [EObject current=null] : iv_ruleSwitchStmt= ruleSwitchStmt EOF ;
    public final EObject entryRuleSwitchStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSwitchStmt = null;


        try {
            // InternalGo.g:6754:51: (iv_ruleSwitchStmt= ruleSwitchStmt EOF )
            // InternalGo.g:6755:2: iv_ruleSwitchStmt= ruleSwitchStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSwitchStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSwitchStmt=ruleSwitchStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSwitchStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSwitchStmt"


    // $ANTLR start "ruleSwitchStmt"
    // InternalGo.g:6761:1: ruleSwitchStmt returns [EObject current=null] : (otherlv_0= 'switch' (this_SimpleStmt_1= ruleSimpleStmt otherlv_2= ';' )? ( (lv_switch_stmt_linha_3_0= ruleswitch_stmt_linha ) ) ) ;
    public final EObject ruleSwitchStmt() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject this_SimpleStmt_1 = null;

        EObject lv_switch_stmt_linha_3_0 = null;



        	enterRule();

        try {
            // InternalGo.g:6767:2: ( (otherlv_0= 'switch' (this_SimpleStmt_1= ruleSimpleStmt otherlv_2= ';' )? ( (lv_switch_stmt_linha_3_0= ruleswitch_stmt_linha ) ) ) )
            // InternalGo.g:6768:2: (otherlv_0= 'switch' (this_SimpleStmt_1= ruleSimpleStmt otherlv_2= ';' )? ( (lv_switch_stmt_linha_3_0= ruleswitch_stmt_linha ) ) )
            {
            // InternalGo.g:6768:2: (otherlv_0= 'switch' (this_SimpleStmt_1= ruleSimpleStmt otherlv_2= ';' )? ( (lv_switch_stmt_linha_3_0= ruleswitch_stmt_linha ) ) )
            // InternalGo.g:6769:3: otherlv_0= 'switch' (this_SimpleStmt_1= ruleSimpleStmt otherlv_2= ';' )? ( (lv_switch_stmt_linha_3_0= ruleswitch_stmt_linha ) )
            {
            otherlv_0=(Token)match(input,64,FOLLOW_55); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getSwitchStmtAccess().getSwitchKeyword_0());
              		
            }
            // InternalGo.g:6773:3: (this_SimpleStmt_1= ruleSimpleStmt otherlv_2= ';' )?
            int alt78=2;
            alt78 = dfa78.predict(input);
            switch (alt78) {
                case 1 :
                    // InternalGo.g:6774:4: this_SimpleStmt_1= ruleSimpleStmt otherlv_2= ';'
                    {
                    if ( state.backtracking==0 ) {

                      				/* */
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getSwitchStmtAccess().getSimpleStmtParserRuleCall_1_0());
                      			
                    }
                    pushFollow(FOLLOW_3);
                    this_SimpleStmt_1=ruleSimpleStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_SimpleStmt_1;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    otherlv_2=(Token)match(input,17,FOLLOW_55); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getSwitchStmtAccess().getSemicolonKeyword_1_1());
                      			
                    }

                    }
                    break;

            }

            // InternalGo.g:6790:3: ( (lv_switch_stmt_linha_3_0= ruleswitch_stmt_linha ) )
            // InternalGo.g:6791:4: (lv_switch_stmt_linha_3_0= ruleswitch_stmt_linha )
            {
            // InternalGo.g:6791:4: (lv_switch_stmt_linha_3_0= ruleswitch_stmt_linha )
            // InternalGo.g:6792:5: lv_switch_stmt_linha_3_0= ruleswitch_stmt_linha
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSwitchStmtAccess().getSwitch_stmt_linhaSwitch_stmt_linhaParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_switch_stmt_linha_3_0=ruleswitch_stmt_linha();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSwitchStmtRule());
              					}
              					set(
              						current,
              						"switch_stmt_linha",
              						lv_switch_stmt_linha_3_0,
              						"com.ufcg.compiladores.Go.switch_stmt_linha");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSwitchStmt"


    // $ANTLR start "entryRuleExprCaseClause"
    // InternalGo.g:6813:1: entryRuleExprCaseClause returns [EObject current=null] : iv_ruleExprCaseClause= ruleExprCaseClause EOF ;
    public final EObject entryRuleExprCaseClause() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExprCaseClause = null;


        try {
            // InternalGo.g:6813:55: (iv_ruleExprCaseClause= ruleExprCaseClause EOF )
            // InternalGo.g:6814:2: iv_ruleExprCaseClause= ruleExprCaseClause EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExprCaseClauseRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExprCaseClause=ruleExprCaseClause();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExprCaseClause; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExprCaseClause"


    // $ANTLR start "ruleExprCaseClause"
    // InternalGo.g:6820:1: ruleExprCaseClause returns [EObject current=null] : ( ( (lv_ExprSwitchCase_0_0= ruleExprSwitchCase ) ) otherlv_1= ':' ( (lv_StatementList_2_0= ruleStatementList ) ) ) ;
    public final EObject ruleExprCaseClause() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_ExprSwitchCase_0_0 = null;

        EObject lv_StatementList_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:6826:2: ( ( ( (lv_ExprSwitchCase_0_0= ruleExprSwitchCase ) ) otherlv_1= ':' ( (lv_StatementList_2_0= ruleStatementList ) ) ) )
            // InternalGo.g:6827:2: ( ( (lv_ExprSwitchCase_0_0= ruleExprSwitchCase ) ) otherlv_1= ':' ( (lv_StatementList_2_0= ruleStatementList ) ) )
            {
            // InternalGo.g:6827:2: ( ( (lv_ExprSwitchCase_0_0= ruleExprSwitchCase ) ) otherlv_1= ':' ( (lv_StatementList_2_0= ruleStatementList ) ) )
            // InternalGo.g:6828:3: ( (lv_ExprSwitchCase_0_0= ruleExprSwitchCase ) ) otherlv_1= ':' ( (lv_StatementList_2_0= ruleStatementList ) )
            {
            // InternalGo.g:6828:3: ( (lv_ExprSwitchCase_0_0= ruleExprSwitchCase ) )
            // InternalGo.g:6829:4: (lv_ExprSwitchCase_0_0= ruleExprSwitchCase )
            {
            // InternalGo.g:6829:4: (lv_ExprSwitchCase_0_0= ruleExprSwitchCase )
            // InternalGo.g:6830:5: lv_ExprSwitchCase_0_0= ruleExprSwitchCase
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getExprCaseClauseAccess().getExprSwitchCaseExprSwitchCaseParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_41);
            lv_ExprSwitchCase_0_0=ruleExprSwitchCase();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getExprCaseClauseRule());
              					}
              					set(
              						current,
              						"ExprSwitchCase",
              						lv_ExprSwitchCase_0_0,
              						"com.ufcg.compiladores.Go.ExprSwitchCase");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_1=(Token)match(input,39,FOLLOW_49); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getExprCaseClauseAccess().getColonKeyword_1());
              		
            }
            // InternalGo.g:6851:3: ( (lv_StatementList_2_0= ruleStatementList ) )
            // InternalGo.g:6852:4: (lv_StatementList_2_0= ruleStatementList )
            {
            // InternalGo.g:6852:4: (lv_StatementList_2_0= ruleStatementList )
            // InternalGo.g:6853:5: lv_StatementList_2_0= ruleStatementList
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getExprCaseClauseAccess().getStatementListStatementListParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_StatementList_2_0=ruleStatementList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getExprCaseClauseRule());
              					}
              					set(
              						current,
              						"StatementList",
              						lv_StatementList_2_0,
              						"com.ufcg.compiladores.Go.StatementList");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExprCaseClause"


    // $ANTLR start "entryRuleExprSwitchCase"
    // InternalGo.g:6874:1: entryRuleExprSwitchCase returns [EObject current=null] : iv_ruleExprSwitchCase= ruleExprSwitchCase EOF ;
    public final EObject entryRuleExprSwitchCase() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExprSwitchCase = null;


        try {
            // InternalGo.g:6874:55: (iv_ruleExprSwitchCase= ruleExprSwitchCase EOF )
            // InternalGo.g:6875:2: iv_ruleExprSwitchCase= ruleExprSwitchCase EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExprSwitchCaseRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExprSwitchCase=ruleExprSwitchCase();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExprSwitchCase; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExprSwitchCase"


    // $ANTLR start "ruleExprSwitchCase"
    // InternalGo.g:6881:1: ruleExprSwitchCase returns [EObject current=null] : ( (otherlv_0= 'case' ( (lv_ExpressionList_1_0= ruleExpressionList ) ) ) | ( () otherlv_3= 'default' ) ) ;
    public final EObject ruleExprSwitchCase() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_3=null;
        EObject lv_ExpressionList_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:6887:2: ( ( (otherlv_0= 'case' ( (lv_ExpressionList_1_0= ruleExpressionList ) ) ) | ( () otherlv_3= 'default' ) ) )
            // InternalGo.g:6888:2: ( (otherlv_0= 'case' ( (lv_ExpressionList_1_0= ruleExpressionList ) ) ) | ( () otherlv_3= 'default' ) )
            {
            // InternalGo.g:6888:2: ( (otherlv_0= 'case' ( (lv_ExpressionList_1_0= ruleExpressionList ) ) ) | ( () otherlv_3= 'default' ) )
            int alt79=2;
            int LA79_0 = input.LA(1);

            if ( (LA79_0==65) ) {
                alt79=1;
            }
            else if ( (LA79_0==66) ) {
                alt79=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 79, 0, input);

                throw nvae;
            }
            switch (alt79) {
                case 1 :
                    // InternalGo.g:6889:3: (otherlv_0= 'case' ( (lv_ExpressionList_1_0= ruleExpressionList ) ) )
                    {
                    // InternalGo.g:6889:3: (otherlv_0= 'case' ( (lv_ExpressionList_1_0= ruleExpressionList ) ) )
                    // InternalGo.g:6890:4: otherlv_0= 'case' ( (lv_ExpressionList_1_0= ruleExpressionList ) )
                    {
                    otherlv_0=(Token)match(input,65,FOLLOW_32); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getExprSwitchCaseAccess().getCaseKeyword_0_0());
                      			
                    }
                    // InternalGo.g:6894:4: ( (lv_ExpressionList_1_0= ruleExpressionList ) )
                    // InternalGo.g:6895:5: (lv_ExpressionList_1_0= ruleExpressionList )
                    {
                    // InternalGo.g:6895:5: (lv_ExpressionList_1_0= ruleExpressionList )
                    // InternalGo.g:6896:6: lv_ExpressionList_1_0= ruleExpressionList
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getExprSwitchCaseAccess().getExpressionListExpressionListParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_ExpressionList_1_0=ruleExpressionList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getExprSwitchCaseRule());
                      						}
                      						set(
                      							current,
                      							"ExpressionList",
                      							lv_ExpressionList_1_0,
                      							"com.ufcg.compiladores.Go.ExpressionList");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:6915:3: ( () otherlv_3= 'default' )
                    {
                    // InternalGo.g:6915:3: ( () otherlv_3= 'default' )
                    // InternalGo.g:6916:4: () otherlv_3= 'default'
                    {
                    // InternalGo.g:6916:4: ()
                    // InternalGo.g:6917:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getExprSwitchCaseAccess().getExprSwitchCaseAction_1_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_3=(Token)match(input,66,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getExprSwitchCaseAccess().getDefaultKeyword_1_1());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExprSwitchCase"


    // $ANTLR start "entryRuleswitch_stmt_linha"
    // InternalGo.g:6935:1: entryRuleswitch_stmt_linha returns [EObject current=null] : iv_ruleswitch_stmt_linha= ruleswitch_stmt_linha EOF ;
    public final EObject entryRuleswitch_stmt_linha() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleswitch_stmt_linha = null;


        try {
            // InternalGo.g:6935:58: (iv_ruleswitch_stmt_linha= ruleswitch_stmt_linha EOF )
            // InternalGo.g:6936:2: iv_ruleswitch_stmt_linha= ruleswitch_stmt_linha EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSwitch_stmt_linhaRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleswitch_stmt_linha=ruleswitch_stmt_linha();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleswitch_stmt_linha; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleswitch_stmt_linha"


    // $ANTLR start "ruleswitch_stmt_linha"
    // InternalGo.g:6942:1: ruleswitch_stmt_linha returns [EObject current=null] : ( ( ( (lv_TypeSwitchGuard_0_0= ruleTypeSwitchGuard ) ) otherlv_1= '{' ( (lv_TypeCaseClause_2_0= ruleTypeCaseClause ) )* otherlv_3= '}' ( (lv_switch_stmt_linha_4_0= ruleswitch_stmt_linha ) ) ) | ( () ( (lv_Expression_6_0= ruleExpression ) )? otherlv_7= '{' ( (lv_ExprCaseClause_8_0= ruleExprCaseClause ) )* otherlv_9= '}' ( (lv_switch_stmt_linha_10_0= ruleswitch_stmt_linha ) ) ) | ( () this_ANY_OTHER_12= RULE_ANY_OTHER ) ) ;
    public final EObject ruleswitch_stmt_linha() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token this_ANY_OTHER_12=null;
        EObject lv_TypeSwitchGuard_0_0 = null;

        EObject lv_TypeCaseClause_2_0 = null;

        EObject lv_switch_stmt_linha_4_0 = null;

        EObject lv_Expression_6_0 = null;

        EObject lv_ExprCaseClause_8_0 = null;

        EObject lv_switch_stmt_linha_10_0 = null;



        	enterRule();

        try {
            // InternalGo.g:6948:2: ( ( ( ( (lv_TypeSwitchGuard_0_0= ruleTypeSwitchGuard ) ) otherlv_1= '{' ( (lv_TypeCaseClause_2_0= ruleTypeCaseClause ) )* otherlv_3= '}' ( (lv_switch_stmt_linha_4_0= ruleswitch_stmt_linha ) ) ) | ( () ( (lv_Expression_6_0= ruleExpression ) )? otherlv_7= '{' ( (lv_ExprCaseClause_8_0= ruleExprCaseClause ) )* otherlv_9= '}' ( (lv_switch_stmt_linha_10_0= ruleswitch_stmt_linha ) ) ) | ( () this_ANY_OTHER_12= RULE_ANY_OTHER ) ) )
            // InternalGo.g:6949:2: ( ( ( (lv_TypeSwitchGuard_0_0= ruleTypeSwitchGuard ) ) otherlv_1= '{' ( (lv_TypeCaseClause_2_0= ruleTypeCaseClause ) )* otherlv_3= '}' ( (lv_switch_stmt_linha_4_0= ruleswitch_stmt_linha ) ) ) | ( () ( (lv_Expression_6_0= ruleExpression ) )? otherlv_7= '{' ( (lv_ExprCaseClause_8_0= ruleExprCaseClause ) )* otherlv_9= '}' ( (lv_switch_stmt_linha_10_0= ruleswitch_stmt_linha ) ) ) | ( () this_ANY_OTHER_12= RULE_ANY_OTHER ) )
            {
            // InternalGo.g:6949:2: ( ( ( (lv_TypeSwitchGuard_0_0= ruleTypeSwitchGuard ) ) otherlv_1= '{' ( (lv_TypeCaseClause_2_0= ruleTypeCaseClause ) )* otherlv_3= '}' ( (lv_switch_stmt_linha_4_0= ruleswitch_stmt_linha ) ) ) | ( () ( (lv_Expression_6_0= ruleExpression ) )? otherlv_7= '{' ( (lv_ExprCaseClause_8_0= ruleExprCaseClause ) )* otherlv_9= '}' ( (lv_switch_stmt_linha_10_0= ruleswitch_stmt_linha ) ) ) | ( () this_ANY_OTHER_12= RULE_ANY_OTHER ) )
            int alt83=3;
            alt83 = dfa83.predict(input);
            switch (alt83) {
                case 1 :
                    // InternalGo.g:6950:3: ( ( (lv_TypeSwitchGuard_0_0= ruleTypeSwitchGuard ) ) otherlv_1= '{' ( (lv_TypeCaseClause_2_0= ruleTypeCaseClause ) )* otherlv_3= '}' ( (lv_switch_stmt_linha_4_0= ruleswitch_stmt_linha ) ) )
                    {
                    // InternalGo.g:6950:3: ( ( (lv_TypeSwitchGuard_0_0= ruleTypeSwitchGuard ) ) otherlv_1= '{' ( (lv_TypeCaseClause_2_0= ruleTypeCaseClause ) )* otherlv_3= '}' ( (lv_switch_stmt_linha_4_0= ruleswitch_stmt_linha ) ) )
                    // InternalGo.g:6951:4: ( (lv_TypeSwitchGuard_0_0= ruleTypeSwitchGuard ) ) otherlv_1= '{' ( (lv_TypeCaseClause_2_0= ruleTypeCaseClause ) )* otherlv_3= '}' ( (lv_switch_stmt_linha_4_0= ruleswitch_stmt_linha ) )
                    {
                    // InternalGo.g:6951:4: ( (lv_TypeSwitchGuard_0_0= ruleTypeSwitchGuard ) )
                    // InternalGo.g:6952:5: (lv_TypeSwitchGuard_0_0= ruleTypeSwitchGuard )
                    {
                    // InternalGo.g:6952:5: (lv_TypeSwitchGuard_0_0= ruleTypeSwitchGuard )
                    // InternalGo.g:6953:6: lv_TypeSwitchGuard_0_0= ruleTypeSwitchGuard
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSwitch_stmt_linhaAccess().getTypeSwitchGuardTypeSwitchGuardParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_11);
                    lv_TypeSwitchGuard_0_0=ruleTypeSwitchGuard();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSwitch_stmt_linhaRule());
                      						}
                      						set(
                      							current,
                      							"TypeSwitchGuard",
                      							lv_TypeSwitchGuard_0_0,
                      							"com.ufcg.compiladores.Go.TypeSwitchGuard");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_1=(Token)match(input,24,FOLLOW_56); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getSwitch_stmt_linhaAccess().getLeftCurlyBracketKeyword_0_1());
                      			
                    }
                    // InternalGo.g:6974:4: ( (lv_TypeCaseClause_2_0= ruleTypeCaseClause ) )*
                    loop80:
                    do {
                        int alt80=2;
                        int LA80_0 = input.LA(1);

                        if ( ((LA80_0>=65 && LA80_0<=66)) ) {
                            alt80=1;
                        }


                        switch (alt80) {
                    	case 1 :
                    	    // InternalGo.g:6975:5: (lv_TypeCaseClause_2_0= ruleTypeCaseClause )
                    	    {
                    	    // InternalGo.g:6975:5: (lv_TypeCaseClause_2_0= ruleTypeCaseClause )
                    	    // InternalGo.g:6976:6: lv_TypeCaseClause_2_0= ruleTypeCaseClause
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getSwitch_stmt_linhaAccess().getTypeCaseClauseTypeCaseClauseParserRuleCall_0_2_0());
                    	      					
                    	    }
                    	    pushFollow(FOLLOW_56);
                    	    lv_TypeCaseClause_2_0=ruleTypeCaseClause();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getSwitch_stmt_linhaRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"TypeCaseClause",
                    	      							lv_TypeCaseClause_2_0,
                    	      							"com.ufcg.compiladores.Go.TypeCaseClause");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop80;
                        }
                    } while (true);

                    otherlv_3=(Token)match(input,30,FOLLOW_55); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getSwitch_stmt_linhaAccess().getRightCurlyBracketKeyword_0_3());
                      			
                    }
                    // InternalGo.g:6997:4: ( (lv_switch_stmt_linha_4_0= ruleswitch_stmt_linha ) )
                    // InternalGo.g:6998:5: (lv_switch_stmt_linha_4_0= ruleswitch_stmt_linha )
                    {
                    // InternalGo.g:6998:5: (lv_switch_stmt_linha_4_0= ruleswitch_stmt_linha )
                    // InternalGo.g:6999:6: lv_switch_stmt_linha_4_0= ruleswitch_stmt_linha
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSwitch_stmt_linhaAccess().getSwitch_stmt_linhaSwitch_stmt_linhaParserRuleCall_0_4_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_switch_stmt_linha_4_0=ruleswitch_stmt_linha();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSwitch_stmt_linhaRule());
                      						}
                      						set(
                      							current,
                      							"switch_stmt_linha",
                      							lv_switch_stmt_linha_4_0,
                      							"com.ufcg.compiladores.Go.switch_stmt_linha");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:7018:3: ( () ( (lv_Expression_6_0= ruleExpression ) )? otherlv_7= '{' ( (lv_ExprCaseClause_8_0= ruleExprCaseClause ) )* otherlv_9= '}' ( (lv_switch_stmt_linha_10_0= ruleswitch_stmt_linha ) ) )
                    {
                    // InternalGo.g:7018:3: ( () ( (lv_Expression_6_0= ruleExpression ) )? otherlv_7= '{' ( (lv_ExprCaseClause_8_0= ruleExprCaseClause ) )* otherlv_9= '}' ( (lv_switch_stmt_linha_10_0= ruleswitch_stmt_linha ) ) )
                    // InternalGo.g:7019:4: () ( (lv_Expression_6_0= ruleExpression ) )? otherlv_7= '{' ( (lv_ExprCaseClause_8_0= ruleExprCaseClause ) )* otherlv_9= '}' ( (lv_switch_stmt_linha_10_0= ruleswitch_stmt_linha ) )
                    {
                    // InternalGo.g:7019:4: ()
                    // InternalGo.g:7020:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getSwitch_stmt_linhaAccess().getSwitch_stmt_linhaAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalGo.g:7029:4: ( (lv_Expression_6_0= ruleExpression ) )?
                    int alt81=2;
                    int LA81_0 = input.LA(1);

                    if ( ((LA81_0>=RULE_LETTER && LA81_0<=RULE_DECIMAL_DIGIT)||LA81_0==18||(LA81_0>=20 && LA81_0<=21)||LA81_0==23||(LA81_0>=25 && LA81_0<=26)||LA81_0==29||(LA81_0>=31 && LA81_0<=33)||(LA81_0>=48 && LA81_0<=49)||LA81_0==56||(LA81_0>=58 && LA81_0<=59)||LA81_0==79||(LA81_0>=82 && LA81_0<=83)) ) {
                        alt81=1;
                    }
                    switch (alt81) {
                        case 1 :
                            // InternalGo.g:7030:5: (lv_Expression_6_0= ruleExpression )
                            {
                            // InternalGo.g:7030:5: (lv_Expression_6_0= ruleExpression )
                            // InternalGo.g:7031:6: lv_Expression_6_0= ruleExpression
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getSwitch_stmt_linhaAccess().getExpressionExpressionParserRuleCall_1_1_0());
                              					
                            }
                            pushFollow(FOLLOW_11);
                            lv_Expression_6_0=ruleExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getSwitch_stmt_linhaRule());
                              						}
                              						set(
                              							current,
                              							"Expression",
                              							lv_Expression_6_0,
                              							"com.ufcg.compiladores.Go.Expression");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    otherlv_7=(Token)match(input,24,FOLLOW_56); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getSwitch_stmt_linhaAccess().getLeftCurlyBracketKeyword_1_2());
                      			
                    }
                    // InternalGo.g:7052:4: ( (lv_ExprCaseClause_8_0= ruleExprCaseClause ) )*
                    loop82:
                    do {
                        int alt82=2;
                        int LA82_0 = input.LA(1);

                        if ( ((LA82_0>=65 && LA82_0<=66)) ) {
                            alt82=1;
                        }


                        switch (alt82) {
                    	case 1 :
                    	    // InternalGo.g:7053:5: (lv_ExprCaseClause_8_0= ruleExprCaseClause )
                    	    {
                    	    // InternalGo.g:7053:5: (lv_ExprCaseClause_8_0= ruleExprCaseClause )
                    	    // InternalGo.g:7054:6: lv_ExprCaseClause_8_0= ruleExprCaseClause
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getSwitch_stmt_linhaAccess().getExprCaseClauseExprCaseClauseParserRuleCall_1_3_0());
                    	      					
                    	    }
                    	    pushFollow(FOLLOW_56);
                    	    lv_ExprCaseClause_8_0=ruleExprCaseClause();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getSwitch_stmt_linhaRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"ExprCaseClause",
                    	      							lv_ExprCaseClause_8_0,
                    	      							"com.ufcg.compiladores.Go.ExprCaseClause");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop82;
                        }
                    } while (true);

                    otherlv_9=(Token)match(input,30,FOLLOW_55); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_9, grammarAccess.getSwitch_stmt_linhaAccess().getRightCurlyBracketKeyword_1_4());
                      			
                    }
                    // InternalGo.g:7075:4: ( (lv_switch_stmt_linha_10_0= ruleswitch_stmt_linha ) )
                    // InternalGo.g:7076:5: (lv_switch_stmt_linha_10_0= ruleswitch_stmt_linha )
                    {
                    // InternalGo.g:7076:5: (lv_switch_stmt_linha_10_0= ruleswitch_stmt_linha )
                    // InternalGo.g:7077:6: lv_switch_stmt_linha_10_0= ruleswitch_stmt_linha
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSwitch_stmt_linhaAccess().getSwitch_stmt_linhaSwitch_stmt_linhaParserRuleCall_1_5_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_switch_stmt_linha_10_0=ruleswitch_stmt_linha();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSwitch_stmt_linhaRule());
                      						}
                      						set(
                      							current,
                      							"switch_stmt_linha",
                      							lv_switch_stmt_linha_10_0,
                      							"com.ufcg.compiladores.Go.switch_stmt_linha");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalGo.g:7096:3: ( () this_ANY_OTHER_12= RULE_ANY_OTHER )
                    {
                    // InternalGo.g:7096:3: ( () this_ANY_OTHER_12= RULE_ANY_OTHER )
                    // InternalGo.g:7097:4: () this_ANY_OTHER_12= RULE_ANY_OTHER
                    {
                    // InternalGo.g:7097:4: ()
                    // InternalGo.g:7098:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getSwitch_stmt_linhaAccess().getSwitch_stmt_linhaAction_2_0(),
                      						current);
                      				
                    }

                    }

                    this_ANY_OTHER_12=(Token)match(input,RULE_ANY_OTHER,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_ANY_OTHER_12, grammarAccess.getSwitch_stmt_linhaAccess().getANY_OTHERTerminalRuleCall_2_1());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleswitch_stmt_linha"


    // $ANTLR start "entryRuleTypeSwitchGuard"
    // InternalGo.g:7116:1: entryRuleTypeSwitchGuard returns [EObject current=null] : iv_ruleTypeSwitchGuard= ruleTypeSwitchGuard EOF ;
    public final EObject entryRuleTypeSwitchGuard() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeSwitchGuard = null;


        try {
            // InternalGo.g:7116:56: (iv_ruleTypeSwitchGuard= ruleTypeSwitchGuard EOF )
            // InternalGo.g:7117:2: iv_ruleTypeSwitchGuard= ruleTypeSwitchGuard EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeSwitchGuardRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeSwitchGuard=ruleTypeSwitchGuard();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeSwitchGuard; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeSwitchGuard"


    // $ANTLR start "ruleTypeSwitchGuard"
    // InternalGo.g:7123:1: ruleTypeSwitchGuard returns [EObject current=null] : ( ( ( (lv_identifier_0_0= ruleidentifier ) ) otherlv_1= ':=' )? ( (lv_PrimaryExpr_2_0= rulePrimaryExpr ) ) otherlv_3= '.' otherlv_4= '(' otherlv_5= 'type' otherlv_6= ')' ) ;
    public final EObject ruleTypeSwitchGuard() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        EObject lv_identifier_0_0 = null;

        EObject lv_PrimaryExpr_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:7129:2: ( ( ( ( (lv_identifier_0_0= ruleidentifier ) ) otherlv_1= ':=' )? ( (lv_PrimaryExpr_2_0= rulePrimaryExpr ) ) otherlv_3= '.' otherlv_4= '(' otherlv_5= 'type' otherlv_6= ')' ) )
            // InternalGo.g:7130:2: ( ( ( (lv_identifier_0_0= ruleidentifier ) ) otherlv_1= ':=' )? ( (lv_PrimaryExpr_2_0= rulePrimaryExpr ) ) otherlv_3= '.' otherlv_4= '(' otherlv_5= 'type' otherlv_6= ')' )
            {
            // InternalGo.g:7130:2: ( ( ( (lv_identifier_0_0= ruleidentifier ) ) otherlv_1= ':=' )? ( (lv_PrimaryExpr_2_0= rulePrimaryExpr ) ) otherlv_3= '.' otherlv_4= '(' otherlv_5= 'type' otherlv_6= ')' )
            // InternalGo.g:7131:3: ( ( (lv_identifier_0_0= ruleidentifier ) ) otherlv_1= ':=' )? ( (lv_PrimaryExpr_2_0= rulePrimaryExpr ) ) otherlv_3= '.' otherlv_4= '(' otherlv_5= 'type' otherlv_6= ')'
            {
            // InternalGo.g:7131:3: ( ( (lv_identifier_0_0= ruleidentifier ) ) otherlv_1= ':=' )?
            int alt84=2;
            alt84 = dfa84.predict(input);
            switch (alt84) {
                case 1 :
                    // InternalGo.g:7132:4: ( (lv_identifier_0_0= ruleidentifier ) ) otherlv_1= ':='
                    {
                    // InternalGo.g:7132:4: ( (lv_identifier_0_0= ruleidentifier ) )
                    // InternalGo.g:7133:5: (lv_identifier_0_0= ruleidentifier )
                    {
                    // InternalGo.g:7133:5: (lv_identifier_0_0= ruleidentifier )
                    // InternalGo.g:7134:6: lv_identifier_0_0= ruleidentifier
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTypeSwitchGuardAccess().getIdentifierIdentifierParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_35);
                    lv_identifier_0_0=ruleidentifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTypeSwitchGuardRule());
                      						}
                      						set(
                      							current,
                      							"identifier",
                      							lv_identifier_0_0,
                      							"com.ufcg.compiladores.Go.identifier");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_1=(Token)match(input,38,FOLLOW_57); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getTypeSwitchGuardAccess().getColonEqualsSignKeyword_0_1());
                      			
                    }

                    }
                    break;

            }

            // InternalGo.g:7156:3: ( (lv_PrimaryExpr_2_0= rulePrimaryExpr ) )
            // InternalGo.g:7157:4: (lv_PrimaryExpr_2_0= rulePrimaryExpr )
            {
            // InternalGo.g:7157:4: (lv_PrimaryExpr_2_0= rulePrimaryExpr )
            // InternalGo.g:7158:5: lv_PrimaryExpr_2_0= rulePrimaryExpr
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTypeSwitchGuardAccess().getPrimaryExprPrimaryExprParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_36);
            lv_PrimaryExpr_2_0=rulePrimaryExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTypeSwitchGuardRule());
              					}
              					set(
              						current,
              						"PrimaryExpr",
              						lv_PrimaryExpr_2_0,
              						"com.ufcg.compiladores.Go.PrimaryExpr");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,20,FOLLOW_14); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getTypeSwitchGuardAccess().getFullStopKeyword_2());
              		
            }
            otherlv_4=(Token)match(input,18,FOLLOW_58); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getTypeSwitchGuardAccess().getLeftParenthesisKeyword_3());
              		
            }
            otherlv_5=(Token)match(input,36,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getTypeSwitchGuardAccess().getTypeKeyword_4());
              		
            }
            otherlv_6=(Token)match(input,19,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getTypeSwitchGuardAccess().getRightParenthesisKeyword_5());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeSwitchGuard"


    // $ANTLR start "entryRuleTypeCaseClause"
    // InternalGo.g:7195:1: entryRuleTypeCaseClause returns [EObject current=null] : iv_ruleTypeCaseClause= ruleTypeCaseClause EOF ;
    public final EObject entryRuleTypeCaseClause() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeCaseClause = null;


        try {
            // InternalGo.g:7195:55: (iv_ruleTypeCaseClause= ruleTypeCaseClause EOF )
            // InternalGo.g:7196:2: iv_ruleTypeCaseClause= ruleTypeCaseClause EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeCaseClauseRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeCaseClause=ruleTypeCaseClause();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeCaseClause; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeCaseClause"


    // $ANTLR start "ruleTypeCaseClause"
    // InternalGo.g:7202:1: ruleTypeCaseClause returns [EObject current=null] : ( ( (lv_TypeSwitchCase_0_0= ruleTypeSwitchCase ) ) otherlv_1= ':' ( (lv_StatementList_2_0= ruleStatementList ) ) ) ;
    public final EObject ruleTypeCaseClause() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_TypeSwitchCase_0_0 = null;

        EObject lv_StatementList_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:7208:2: ( ( ( (lv_TypeSwitchCase_0_0= ruleTypeSwitchCase ) ) otherlv_1= ':' ( (lv_StatementList_2_0= ruleStatementList ) ) ) )
            // InternalGo.g:7209:2: ( ( (lv_TypeSwitchCase_0_0= ruleTypeSwitchCase ) ) otherlv_1= ':' ( (lv_StatementList_2_0= ruleStatementList ) ) )
            {
            // InternalGo.g:7209:2: ( ( (lv_TypeSwitchCase_0_0= ruleTypeSwitchCase ) ) otherlv_1= ':' ( (lv_StatementList_2_0= ruleStatementList ) ) )
            // InternalGo.g:7210:3: ( (lv_TypeSwitchCase_0_0= ruleTypeSwitchCase ) ) otherlv_1= ':' ( (lv_StatementList_2_0= ruleStatementList ) )
            {
            // InternalGo.g:7210:3: ( (lv_TypeSwitchCase_0_0= ruleTypeSwitchCase ) )
            // InternalGo.g:7211:4: (lv_TypeSwitchCase_0_0= ruleTypeSwitchCase )
            {
            // InternalGo.g:7211:4: (lv_TypeSwitchCase_0_0= ruleTypeSwitchCase )
            // InternalGo.g:7212:5: lv_TypeSwitchCase_0_0= ruleTypeSwitchCase
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTypeCaseClauseAccess().getTypeSwitchCaseTypeSwitchCaseParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_41);
            lv_TypeSwitchCase_0_0=ruleTypeSwitchCase();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTypeCaseClauseRule());
              					}
              					set(
              						current,
              						"TypeSwitchCase",
              						lv_TypeSwitchCase_0_0,
              						"com.ufcg.compiladores.Go.TypeSwitchCase");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_1=(Token)match(input,39,FOLLOW_49); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getTypeCaseClauseAccess().getColonKeyword_1());
              		
            }
            // InternalGo.g:7233:3: ( (lv_StatementList_2_0= ruleStatementList ) )
            // InternalGo.g:7234:4: (lv_StatementList_2_0= ruleStatementList )
            {
            // InternalGo.g:7234:4: (lv_StatementList_2_0= ruleStatementList )
            // InternalGo.g:7235:5: lv_StatementList_2_0= ruleStatementList
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTypeCaseClauseAccess().getStatementListStatementListParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_StatementList_2_0=ruleStatementList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTypeCaseClauseRule());
              					}
              					set(
              						current,
              						"StatementList",
              						lv_StatementList_2_0,
              						"com.ufcg.compiladores.Go.StatementList");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeCaseClause"


    // $ANTLR start "entryRuleTypeSwitchCase"
    // InternalGo.g:7256:1: entryRuleTypeSwitchCase returns [EObject current=null] : iv_ruleTypeSwitchCase= ruleTypeSwitchCase EOF ;
    public final EObject entryRuleTypeSwitchCase() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeSwitchCase = null;


        try {
            // InternalGo.g:7256:55: (iv_ruleTypeSwitchCase= ruleTypeSwitchCase EOF )
            // InternalGo.g:7257:2: iv_ruleTypeSwitchCase= ruleTypeSwitchCase EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeSwitchCaseRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeSwitchCase=ruleTypeSwitchCase();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeSwitchCase; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeSwitchCase"


    // $ANTLR start "ruleTypeSwitchCase"
    // InternalGo.g:7263:1: ruleTypeSwitchCase returns [EObject current=null] : ( (otherlv_0= 'case' ( (lv_TypeList_1_0= ruleTypeList ) ) ) | ( () otherlv_3= 'default' ) ) ;
    public final EObject ruleTypeSwitchCase() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_3=null;
        EObject lv_TypeList_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:7269:2: ( ( (otherlv_0= 'case' ( (lv_TypeList_1_0= ruleTypeList ) ) ) | ( () otherlv_3= 'default' ) ) )
            // InternalGo.g:7270:2: ( (otherlv_0= 'case' ( (lv_TypeList_1_0= ruleTypeList ) ) ) | ( () otherlv_3= 'default' ) )
            {
            // InternalGo.g:7270:2: ( (otherlv_0= 'case' ( (lv_TypeList_1_0= ruleTypeList ) ) ) | ( () otherlv_3= 'default' ) )
            int alt85=2;
            int LA85_0 = input.LA(1);

            if ( (LA85_0==65) ) {
                alt85=1;
            }
            else if ( (LA85_0==66) ) {
                alt85=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 85, 0, input);

                throw nvae;
            }
            switch (alt85) {
                case 1 :
                    // InternalGo.g:7271:3: (otherlv_0= 'case' ( (lv_TypeList_1_0= ruleTypeList ) ) )
                    {
                    // InternalGo.g:7271:3: (otherlv_0= 'case' ( (lv_TypeList_1_0= ruleTypeList ) ) )
                    // InternalGo.g:7272:4: otherlv_0= 'case' ( (lv_TypeList_1_0= ruleTypeList ) )
                    {
                    otherlv_0=(Token)match(input,65,FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getTypeSwitchCaseAccess().getCaseKeyword_0_0());
                      			
                    }
                    // InternalGo.g:7276:4: ( (lv_TypeList_1_0= ruleTypeList ) )
                    // InternalGo.g:7277:5: (lv_TypeList_1_0= ruleTypeList )
                    {
                    // InternalGo.g:7277:5: (lv_TypeList_1_0= ruleTypeList )
                    // InternalGo.g:7278:6: lv_TypeList_1_0= ruleTypeList
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTypeSwitchCaseAccess().getTypeListTypeListParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_TypeList_1_0=ruleTypeList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTypeSwitchCaseRule());
                      						}
                      						set(
                      							current,
                      							"TypeList",
                      							lv_TypeList_1_0,
                      							"com.ufcg.compiladores.Go.TypeList");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:7297:3: ( () otherlv_3= 'default' )
                    {
                    // InternalGo.g:7297:3: ( () otherlv_3= 'default' )
                    // InternalGo.g:7298:4: () otherlv_3= 'default'
                    {
                    // InternalGo.g:7298:4: ()
                    // InternalGo.g:7299:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getTypeSwitchCaseAccess().getTypeSwitchCaseAction_1_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_3=(Token)match(input,66,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getTypeSwitchCaseAccess().getDefaultKeyword_1_1());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeSwitchCase"


    // $ANTLR start "entryRuleTypeList"
    // InternalGo.g:7317:1: entryRuleTypeList returns [EObject current=null] : iv_ruleTypeList= ruleTypeList EOF ;
    public final EObject entryRuleTypeList() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeList = null;


        try {
            // InternalGo.g:7317:49: (iv_ruleTypeList= ruleTypeList EOF )
            // InternalGo.g:7318:2: iv_ruleTypeList= ruleTypeList EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeListRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeList=ruleTypeList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeList; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeList"


    // $ANTLR start "ruleTypeList"
    // InternalGo.g:7324:1: ruleTypeList returns [EObject current=null] : ( ( (lv_Type_0_0= ruleType ) ) (otherlv_1= ',' ( (lv_Type_2_0= ruleType ) ) )* ) ;
    public final EObject ruleTypeList() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_Type_0_0 = null;

        EObject lv_Type_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:7330:2: ( ( ( (lv_Type_0_0= ruleType ) ) (otherlv_1= ',' ( (lv_Type_2_0= ruleType ) ) )* ) )
            // InternalGo.g:7331:2: ( ( (lv_Type_0_0= ruleType ) ) (otherlv_1= ',' ( (lv_Type_2_0= ruleType ) ) )* )
            {
            // InternalGo.g:7331:2: ( ( (lv_Type_0_0= ruleType ) ) (otherlv_1= ',' ( (lv_Type_2_0= ruleType ) ) )* )
            // InternalGo.g:7332:3: ( (lv_Type_0_0= ruleType ) ) (otherlv_1= ',' ( (lv_Type_2_0= ruleType ) ) )*
            {
            // InternalGo.g:7332:3: ( (lv_Type_0_0= ruleType ) )
            // InternalGo.g:7333:4: (lv_Type_0_0= ruleType )
            {
            // InternalGo.g:7333:4: (lv_Type_0_0= ruleType )
            // InternalGo.g:7334:5: lv_Type_0_0= ruleType
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTypeListAccess().getTypeTypeParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_18);
            lv_Type_0_0=ruleType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTypeListRule());
              					}
              					add(
              						current,
              						"Type",
              						lv_Type_0_0,
              						"com.ufcg.compiladores.Go.Type");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:7351:3: (otherlv_1= ',' ( (lv_Type_2_0= ruleType ) ) )*
            loop86:
            do {
                int alt86=2;
                int LA86_0 = input.LA(1);

                if ( (LA86_0==27) ) {
                    alt86=1;
                }


                switch (alt86) {
            	case 1 :
            	    // InternalGo.g:7352:4: otherlv_1= ',' ( (lv_Type_2_0= ruleType ) )
            	    {
            	    otherlv_1=(Token)match(input,27,FOLLOW_5); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_1, grammarAccess.getTypeListAccess().getCommaKeyword_1_0());
            	      			
            	    }
            	    // InternalGo.g:7356:4: ( (lv_Type_2_0= ruleType ) )
            	    // InternalGo.g:7357:5: (lv_Type_2_0= ruleType )
            	    {
            	    // InternalGo.g:7357:5: (lv_Type_2_0= ruleType )
            	    // InternalGo.g:7358:6: lv_Type_2_0= ruleType
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getTypeListAccess().getTypeTypeParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_18);
            	    lv_Type_2_0=ruleType();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getTypeListRule());
            	      						}
            	      						add(
            	      							current,
            	      							"Type",
            	      							lv_Type_2_0,
            	      							"com.ufcg.compiladores.Go.Type");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop86;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeList"


    // $ANTLR start "entryRuleForStmt"
    // InternalGo.g:7380:1: entryRuleForStmt returns [EObject current=null] : iv_ruleForStmt= ruleForStmt EOF ;
    public final EObject entryRuleForStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleForStmt = null;


        try {
            // InternalGo.g:7380:48: (iv_ruleForStmt= ruleForStmt EOF )
            // InternalGo.g:7381:2: iv_ruleForStmt= ruleForStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getForStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleForStmt=ruleForStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleForStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleForStmt"


    // $ANTLR start "ruleForStmt"
    // InternalGo.g:7387:1: ruleForStmt returns [EObject current=null] : (otherlv_0= 'for' ( ( (lv_Condition_1_0= ruleCondition ) ) | ( (lv_ForClause_2_0= ruleForClause ) ) | ( (lv_RangeClause_3_0= ruleRangeClause ) ) )? ( (lv_Block_4_0= ruleBlock ) ) ) ;
    public final EObject ruleForStmt() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_Condition_1_0 = null;

        EObject lv_ForClause_2_0 = null;

        EObject lv_RangeClause_3_0 = null;

        EObject lv_Block_4_0 = null;



        	enterRule();

        try {
            // InternalGo.g:7393:2: ( (otherlv_0= 'for' ( ( (lv_Condition_1_0= ruleCondition ) ) | ( (lv_ForClause_2_0= ruleForClause ) ) | ( (lv_RangeClause_3_0= ruleRangeClause ) ) )? ( (lv_Block_4_0= ruleBlock ) ) ) )
            // InternalGo.g:7394:2: (otherlv_0= 'for' ( ( (lv_Condition_1_0= ruleCondition ) ) | ( (lv_ForClause_2_0= ruleForClause ) ) | ( (lv_RangeClause_3_0= ruleRangeClause ) ) )? ( (lv_Block_4_0= ruleBlock ) ) )
            {
            // InternalGo.g:7394:2: (otherlv_0= 'for' ( ( (lv_Condition_1_0= ruleCondition ) ) | ( (lv_ForClause_2_0= ruleForClause ) ) | ( (lv_RangeClause_3_0= ruleRangeClause ) ) )? ( (lv_Block_4_0= ruleBlock ) ) )
            // InternalGo.g:7395:3: otherlv_0= 'for' ( ( (lv_Condition_1_0= ruleCondition ) ) | ( (lv_ForClause_2_0= ruleForClause ) ) | ( (lv_RangeClause_3_0= ruleRangeClause ) ) )? ( (lv_Block_4_0= ruleBlock ) )
            {
            otherlv_0=(Token)match(input,67,FOLLOW_59); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getForStmtAccess().getForKeyword_0());
              		
            }
            // InternalGo.g:7399:3: ( ( (lv_Condition_1_0= ruleCondition ) ) | ( (lv_ForClause_2_0= ruleForClause ) ) | ( (lv_RangeClause_3_0= ruleRangeClause ) ) )?
            int alt87=4;
            alt87 = dfa87.predict(input);
            switch (alt87) {
                case 1 :
                    // InternalGo.g:7400:4: ( (lv_Condition_1_0= ruleCondition ) )
                    {
                    // InternalGo.g:7400:4: ( (lv_Condition_1_0= ruleCondition ) )
                    // InternalGo.g:7401:5: (lv_Condition_1_0= ruleCondition )
                    {
                    // InternalGo.g:7401:5: (lv_Condition_1_0= ruleCondition )
                    // InternalGo.g:7402:6: lv_Condition_1_0= ruleCondition
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getForStmtAccess().getConditionConditionParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_11);
                    lv_Condition_1_0=ruleCondition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getForStmtRule());
                      						}
                      						set(
                      							current,
                      							"Condition",
                      							lv_Condition_1_0,
                      							"com.ufcg.compiladores.Go.Condition");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:7420:4: ( (lv_ForClause_2_0= ruleForClause ) )
                    {
                    // InternalGo.g:7420:4: ( (lv_ForClause_2_0= ruleForClause ) )
                    // InternalGo.g:7421:5: (lv_ForClause_2_0= ruleForClause )
                    {
                    // InternalGo.g:7421:5: (lv_ForClause_2_0= ruleForClause )
                    // InternalGo.g:7422:6: lv_ForClause_2_0= ruleForClause
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getForStmtAccess().getForClauseForClauseParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_11);
                    lv_ForClause_2_0=ruleForClause();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getForStmtRule());
                      						}
                      						set(
                      							current,
                      							"ForClause",
                      							lv_ForClause_2_0,
                      							"com.ufcg.compiladores.Go.ForClause");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalGo.g:7440:4: ( (lv_RangeClause_3_0= ruleRangeClause ) )
                    {
                    // InternalGo.g:7440:4: ( (lv_RangeClause_3_0= ruleRangeClause ) )
                    // InternalGo.g:7441:5: (lv_RangeClause_3_0= ruleRangeClause )
                    {
                    // InternalGo.g:7441:5: (lv_RangeClause_3_0= ruleRangeClause )
                    // InternalGo.g:7442:6: lv_RangeClause_3_0= ruleRangeClause
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getForStmtAccess().getRangeClauseRangeClauseParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_11);
                    lv_RangeClause_3_0=ruleRangeClause();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getForStmtRule());
                      						}
                      						set(
                      							current,
                      							"RangeClause",
                      							lv_RangeClause_3_0,
                      							"com.ufcg.compiladores.Go.RangeClause");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalGo.g:7460:3: ( (lv_Block_4_0= ruleBlock ) )
            // InternalGo.g:7461:4: (lv_Block_4_0= ruleBlock )
            {
            // InternalGo.g:7461:4: (lv_Block_4_0= ruleBlock )
            // InternalGo.g:7462:5: lv_Block_4_0= ruleBlock
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getForStmtAccess().getBlockBlockParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_Block_4_0=ruleBlock();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getForStmtRule());
              					}
              					set(
              						current,
              						"Block",
              						lv_Block_4_0,
              						"com.ufcg.compiladores.Go.Block");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleForStmt"


    // $ANTLR start "entryRuleCondition"
    // InternalGo.g:7483:1: entryRuleCondition returns [EObject current=null] : iv_ruleCondition= ruleCondition EOF ;
    public final EObject entryRuleCondition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCondition = null;


        try {
            // InternalGo.g:7483:50: (iv_ruleCondition= ruleCondition EOF )
            // InternalGo.g:7484:2: iv_ruleCondition= ruleCondition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConditionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleCondition=ruleCondition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCondition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCondition"


    // $ANTLR start "ruleCondition"
    // InternalGo.g:7490:1: ruleCondition returns [EObject current=null] : ( (lv_Expression_0_0= ruleExpression ) ) ;
    public final EObject ruleCondition() throws RecognitionException {
        EObject current = null;

        EObject lv_Expression_0_0 = null;



        	enterRule();

        try {
            // InternalGo.g:7496:2: ( ( (lv_Expression_0_0= ruleExpression ) ) )
            // InternalGo.g:7497:2: ( (lv_Expression_0_0= ruleExpression ) )
            {
            // InternalGo.g:7497:2: ( (lv_Expression_0_0= ruleExpression ) )
            // InternalGo.g:7498:3: (lv_Expression_0_0= ruleExpression )
            {
            // InternalGo.g:7498:3: (lv_Expression_0_0= ruleExpression )
            // InternalGo.g:7499:4: lv_Expression_0_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getConditionAccess().getExpressionExpressionParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_Expression_0_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getConditionRule());
              				}
              				set(
              					current,
              					"Expression",
              					lv_Expression_0_0,
              					"com.ufcg.compiladores.Go.Expression");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCondition"


    // $ANTLR start "entryRuleForClause"
    // InternalGo.g:7519:1: entryRuleForClause returns [EObject current=null] : iv_ruleForClause= ruleForClause EOF ;
    public final EObject entryRuleForClause() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleForClause = null;


        try {
            // InternalGo.g:7519:50: (iv_ruleForClause= ruleForClause EOF )
            // InternalGo.g:7520:2: iv_ruleForClause= ruleForClause EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getForClauseRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleForClause=ruleForClause();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleForClause; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleForClause"


    // $ANTLR start "ruleForClause"
    // InternalGo.g:7526:1: ruleForClause returns [EObject current=null] : ( () ( (lv_InitStmt_1_0= ruleInitStmt ) )? otherlv_2= ';' ( (lv_Condition_3_0= ruleCondition ) )? otherlv_4= ';' ( (lv_PostStmt_5_0= rulePostStmt ) )? ) ;
    public final EObject ruleForClause() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_InitStmt_1_0 = null;

        EObject lv_Condition_3_0 = null;

        EObject lv_PostStmt_5_0 = null;



        	enterRule();

        try {
            // InternalGo.g:7532:2: ( ( () ( (lv_InitStmt_1_0= ruleInitStmt ) )? otherlv_2= ';' ( (lv_Condition_3_0= ruleCondition ) )? otherlv_4= ';' ( (lv_PostStmt_5_0= rulePostStmt ) )? ) )
            // InternalGo.g:7533:2: ( () ( (lv_InitStmt_1_0= ruleInitStmt ) )? otherlv_2= ';' ( (lv_Condition_3_0= ruleCondition ) )? otherlv_4= ';' ( (lv_PostStmt_5_0= rulePostStmt ) )? )
            {
            // InternalGo.g:7533:2: ( () ( (lv_InitStmt_1_0= ruleInitStmt ) )? otherlv_2= ';' ( (lv_Condition_3_0= ruleCondition ) )? otherlv_4= ';' ( (lv_PostStmt_5_0= rulePostStmt ) )? )
            // InternalGo.g:7534:3: () ( (lv_InitStmt_1_0= ruleInitStmt ) )? otherlv_2= ';' ( (lv_Condition_3_0= ruleCondition ) )? otherlv_4= ';' ( (lv_PostStmt_5_0= rulePostStmt ) )?
            {
            // InternalGo.g:7534:3: ()
            // InternalGo.g:7535:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getForClauseAccess().getForClauseAction_0(),
              					current);
              			
            }

            }

            // InternalGo.g:7544:3: ( (lv_InitStmt_1_0= ruleInitStmt ) )?
            int alt88=2;
            int LA88_0 = input.LA(1);

            if ( ((LA88_0>=RULE_ANY_OTHER && LA88_0<=RULE_DECIMAL_DIGIT)||LA88_0==18||(LA88_0>=20 && LA88_0<=21)||LA88_0==23||(LA88_0>=25 && LA88_0<=26)||LA88_0==29||(LA88_0>=31 && LA88_0<=33)||(LA88_0>=48 && LA88_0<=49)||LA88_0==56||(LA88_0>=58 && LA88_0<=59)||LA88_0==79||(LA88_0>=82 && LA88_0<=83)) ) {
                alt88=1;
            }
            switch (alt88) {
                case 1 :
                    // InternalGo.g:7545:4: (lv_InitStmt_1_0= ruleInitStmt )
                    {
                    // InternalGo.g:7545:4: (lv_InitStmt_1_0= ruleInitStmt )
                    // InternalGo.g:7546:5: lv_InitStmt_1_0= ruleInitStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getForClauseAccess().getInitStmtInitStmtParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_3);
                    lv_InitStmt_1_0=ruleInitStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getForClauseRule());
                      					}
                      					set(
                      						current,
                      						"InitStmt",
                      						lv_InitStmt_1_0,
                      						"com.ufcg.compiladores.Go.InitStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_2=(Token)match(input,17,FOLLOW_60); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getForClauseAccess().getSemicolonKeyword_2());
              		
            }
            // InternalGo.g:7567:3: ( (lv_Condition_3_0= ruleCondition ) )?
            int alt89=2;
            int LA89_0 = input.LA(1);

            if ( ((LA89_0>=RULE_LETTER && LA89_0<=RULE_DECIMAL_DIGIT)||LA89_0==18||(LA89_0>=20 && LA89_0<=21)||LA89_0==23||(LA89_0>=25 && LA89_0<=26)||LA89_0==29||(LA89_0>=31 && LA89_0<=33)||(LA89_0>=48 && LA89_0<=49)||LA89_0==56||(LA89_0>=58 && LA89_0<=59)||LA89_0==79||(LA89_0>=82 && LA89_0<=83)) ) {
                alt89=1;
            }
            switch (alt89) {
                case 1 :
                    // InternalGo.g:7568:4: (lv_Condition_3_0= ruleCondition )
                    {
                    // InternalGo.g:7568:4: (lv_Condition_3_0= ruleCondition )
                    // InternalGo.g:7569:5: lv_Condition_3_0= ruleCondition
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getForClauseAccess().getConditionConditionParserRuleCall_3_0());
                      				
                    }
                    pushFollow(FOLLOW_3);
                    lv_Condition_3_0=ruleCondition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getForClauseRule());
                      					}
                      					set(
                      						current,
                      						"Condition",
                      						lv_Condition_3_0,
                      						"com.ufcg.compiladores.Go.Condition");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_4=(Token)match(input,17,FOLLOW_61); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getForClauseAccess().getSemicolonKeyword_4());
              		
            }
            // InternalGo.g:7590:3: ( (lv_PostStmt_5_0= rulePostStmt ) )?
            int alt90=2;
            int LA90_0 = input.LA(1);

            if ( ((LA90_0>=RULE_ANY_OTHER && LA90_0<=RULE_DECIMAL_DIGIT)||LA90_0==18||(LA90_0>=20 && LA90_0<=21)||LA90_0==23||(LA90_0>=25 && LA90_0<=26)||LA90_0==29||(LA90_0>=31 && LA90_0<=33)||(LA90_0>=48 && LA90_0<=49)||LA90_0==56||(LA90_0>=58 && LA90_0<=59)||LA90_0==79||(LA90_0>=82 && LA90_0<=83)) ) {
                alt90=1;
            }
            switch (alt90) {
                case 1 :
                    // InternalGo.g:7591:4: (lv_PostStmt_5_0= rulePostStmt )
                    {
                    // InternalGo.g:7591:4: (lv_PostStmt_5_0= rulePostStmt )
                    // InternalGo.g:7592:5: lv_PostStmt_5_0= rulePostStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getForClauseAccess().getPostStmtPostStmtParserRuleCall_5_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_PostStmt_5_0=rulePostStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getForClauseRule());
                      					}
                      					set(
                      						current,
                      						"PostStmt",
                      						lv_PostStmt_5_0,
                      						"com.ufcg.compiladores.Go.PostStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleForClause"


    // $ANTLR start "entryRuleInitStmt"
    // InternalGo.g:7613:1: entryRuleInitStmt returns [EObject current=null] : iv_ruleInitStmt= ruleInitStmt EOF ;
    public final EObject entryRuleInitStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleInitStmt = null;


        try {
            // InternalGo.g:7613:49: (iv_ruleInitStmt= ruleInitStmt EOF )
            // InternalGo.g:7614:2: iv_ruleInitStmt= ruleInitStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getInitStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleInitStmt=ruleInitStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleInitStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleInitStmt"


    // $ANTLR start "ruleInitStmt"
    // InternalGo.g:7620:1: ruleInitStmt returns [EObject current=null] : ( (lv_SimpleStmt_0_0= ruleSimpleStmt ) ) ;
    public final EObject ruleInitStmt() throws RecognitionException {
        EObject current = null;

        EObject lv_SimpleStmt_0_0 = null;



        	enterRule();

        try {
            // InternalGo.g:7626:2: ( ( (lv_SimpleStmt_0_0= ruleSimpleStmt ) ) )
            // InternalGo.g:7627:2: ( (lv_SimpleStmt_0_0= ruleSimpleStmt ) )
            {
            // InternalGo.g:7627:2: ( (lv_SimpleStmt_0_0= ruleSimpleStmt ) )
            // InternalGo.g:7628:3: (lv_SimpleStmt_0_0= ruleSimpleStmt )
            {
            // InternalGo.g:7628:3: (lv_SimpleStmt_0_0= ruleSimpleStmt )
            // InternalGo.g:7629:4: lv_SimpleStmt_0_0= ruleSimpleStmt
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getInitStmtAccess().getSimpleStmtSimpleStmtParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_SimpleStmt_0_0=ruleSimpleStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getInitStmtRule());
              				}
              				set(
              					current,
              					"SimpleStmt",
              					lv_SimpleStmt_0_0,
              					"com.ufcg.compiladores.Go.SimpleStmt");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleInitStmt"


    // $ANTLR start "entryRulePostStmt"
    // InternalGo.g:7649:1: entryRulePostStmt returns [EObject current=null] : iv_rulePostStmt= rulePostStmt EOF ;
    public final EObject entryRulePostStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePostStmt = null;


        try {
            // InternalGo.g:7649:49: (iv_rulePostStmt= rulePostStmt EOF )
            // InternalGo.g:7650:2: iv_rulePostStmt= rulePostStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPostStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePostStmt=rulePostStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePostStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePostStmt"


    // $ANTLR start "rulePostStmt"
    // InternalGo.g:7656:1: rulePostStmt returns [EObject current=null] : ( (lv_SimpleStmt_0_0= ruleSimpleStmt ) ) ;
    public final EObject rulePostStmt() throws RecognitionException {
        EObject current = null;

        EObject lv_SimpleStmt_0_0 = null;



        	enterRule();

        try {
            // InternalGo.g:7662:2: ( ( (lv_SimpleStmt_0_0= ruleSimpleStmt ) ) )
            // InternalGo.g:7663:2: ( (lv_SimpleStmt_0_0= ruleSimpleStmt ) )
            {
            // InternalGo.g:7663:2: ( (lv_SimpleStmt_0_0= ruleSimpleStmt ) )
            // InternalGo.g:7664:3: (lv_SimpleStmt_0_0= ruleSimpleStmt )
            {
            // InternalGo.g:7664:3: (lv_SimpleStmt_0_0= ruleSimpleStmt )
            // InternalGo.g:7665:4: lv_SimpleStmt_0_0= ruleSimpleStmt
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getPostStmtAccess().getSimpleStmtSimpleStmtParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_SimpleStmt_0_0=ruleSimpleStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getPostStmtRule());
              				}
              				set(
              					current,
              					"SimpleStmt",
              					lv_SimpleStmt_0_0,
              					"com.ufcg.compiladores.Go.SimpleStmt");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePostStmt"


    // $ANTLR start "entryRuleRangeClause"
    // InternalGo.g:7685:1: entryRuleRangeClause returns [EObject current=null] : iv_ruleRangeClause= ruleRangeClause EOF ;
    public final EObject entryRuleRangeClause() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRangeClause = null;


        try {
            // InternalGo.g:7685:52: (iv_ruleRangeClause= ruleRangeClause EOF )
            // InternalGo.g:7686:2: iv_ruleRangeClause= ruleRangeClause EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRangeClauseRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRangeClause=ruleRangeClause();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRangeClause; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRangeClause"


    // $ANTLR start "ruleRangeClause"
    // InternalGo.g:7692:1: ruleRangeClause returns [EObject current=null] : ( ( ( ( (lv_ExpressionList_0_0= ruleExpressionList ) ) otherlv_1= '=' ) | ( ( (lv_IdentifierList_2_0= ruleIdentifierList ) ) otherlv_3= ':=' ) )? otherlv_4= 'range' ( (lv_Expression_5_0= ruleExpression ) ) ) ;
    public final EObject ruleRangeClause() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        EObject lv_ExpressionList_0_0 = null;

        EObject lv_IdentifierList_2_0 = null;

        EObject lv_Expression_5_0 = null;



        	enterRule();

        try {
            // InternalGo.g:7698:2: ( ( ( ( ( (lv_ExpressionList_0_0= ruleExpressionList ) ) otherlv_1= '=' ) | ( ( (lv_IdentifierList_2_0= ruleIdentifierList ) ) otherlv_3= ':=' ) )? otherlv_4= 'range' ( (lv_Expression_5_0= ruleExpression ) ) ) )
            // InternalGo.g:7699:2: ( ( ( ( (lv_ExpressionList_0_0= ruleExpressionList ) ) otherlv_1= '=' ) | ( ( (lv_IdentifierList_2_0= ruleIdentifierList ) ) otherlv_3= ':=' ) )? otherlv_4= 'range' ( (lv_Expression_5_0= ruleExpression ) ) )
            {
            // InternalGo.g:7699:2: ( ( ( ( (lv_ExpressionList_0_0= ruleExpressionList ) ) otherlv_1= '=' ) | ( ( (lv_IdentifierList_2_0= ruleIdentifierList ) ) otherlv_3= ':=' ) )? otherlv_4= 'range' ( (lv_Expression_5_0= ruleExpression ) ) )
            // InternalGo.g:7700:3: ( ( ( (lv_ExpressionList_0_0= ruleExpressionList ) ) otherlv_1= '=' ) | ( ( (lv_IdentifierList_2_0= ruleIdentifierList ) ) otherlv_3= ':=' ) )? otherlv_4= 'range' ( (lv_Expression_5_0= ruleExpression ) )
            {
            // InternalGo.g:7700:3: ( ( ( (lv_ExpressionList_0_0= ruleExpressionList ) ) otherlv_1= '=' ) | ( ( (lv_IdentifierList_2_0= ruleIdentifierList ) ) otherlv_3= ':=' ) )?
            int alt91=3;
            alt91 = dfa91.predict(input);
            switch (alt91) {
                case 1 :
                    // InternalGo.g:7701:4: ( ( (lv_ExpressionList_0_0= ruleExpressionList ) ) otherlv_1= '=' )
                    {
                    // InternalGo.g:7701:4: ( ( (lv_ExpressionList_0_0= ruleExpressionList ) ) otherlv_1= '=' )
                    // InternalGo.g:7702:5: ( (lv_ExpressionList_0_0= ruleExpressionList ) ) otherlv_1= '='
                    {
                    // InternalGo.g:7702:5: ( (lv_ExpressionList_0_0= ruleExpressionList ) )
                    // InternalGo.g:7703:6: (lv_ExpressionList_0_0= ruleExpressionList )
                    {
                    // InternalGo.g:7703:6: (lv_ExpressionList_0_0= ruleExpressionList )
                    // InternalGo.g:7704:7: lv_ExpressionList_0_0= ruleExpressionList
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getRangeClauseAccess().getExpressionListExpressionListParserRuleCall_0_0_0_0());
                      						
                    }
                    pushFollow(FOLLOW_31);
                    lv_ExpressionList_0_0=ruleExpressionList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getRangeClauseRule());
                      							}
                      							set(
                      								current,
                      								"ExpressionList",
                      								lv_ExpressionList_0_0,
                      								"com.ufcg.compiladores.Go.ExpressionList");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_1=(Token)match(input,35,FOLLOW_62); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getRangeClauseAccess().getEqualsSignKeyword_0_0_1());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:7727:4: ( ( (lv_IdentifierList_2_0= ruleIdentifierList ) ) otherlv_3= ':=' )
                    {
                    // InternalGo.g:7727:4: ( ( (lv_IdentifierList_2_0= ruleIdentifierList ) ) otherlv_3= ':=' )
                    // InternalGo.g:7728:5: ( (lv_IdentifierList_2_0= ruleIdentifierList ) ) otherlv_3= ':='
                    {
                    // InternalGo.g:7728:5: ( (lv_IdentifierList_2_0= ruleIdentifierList ) )
                    // InternalGo.g:7729:6: (lv_IdentifierList_2_0= ruleIdentifierList )
                    {
                    // InternalGo.g:7729:6: (lv_IdentifierList_2_0= ruleIdentifierList )
                    // InternalGo.g:7730:7: lv_IdentifierList_2_0= ruleIdentifierList
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getRangeClauseAccess().getIdentifierListIdentifierListParserRuleCall_0_1_0_0());
                      						
                    }
                    pushFollow(FOLLOW_35);
                    lv_IdentifierList_2_0=ruleIdentifierList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getRangeClauseRule());
                      							}
                      							set(
                      								current,
                      								"IdentifierList",
                      								lv_IdentifierList_2_0,
                      								"com.ufcg.compiladores.Go.IdentifierList");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_3=(Token)match(input,38,FOLLOW_62); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_3, grammarAccess.getRangeClauseAccess().getColonEqualsSignKeyword_0_1_1());
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_4=(Token)match(input,68,FOLLOW_32); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getRangeClauseAccess().getRangeKeyword_1());
              		
            }
            // InternalGo.g:7757:3: ( (lv_Expression_5_0= ruleExpression ) )
            // InternalGo.g:7758:4: (lv_Expression_5_0= ruleExpression )
            {
            // InternalGo.g:7758:4: (lv_Expression_5_0= ruleExpression )
            // InternalGo.g:7759:5: lv_Expression_5_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getRangeClauseAccess().getExpressionExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_Expression_5_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getRangeClauseRule());
              					}
              					set(
              						current,
              						"Expression",
              						lv_Expression_5_0,
              						"com.ufcg.compiladores.Go.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRangeClause"


    // $ANTLR start "entryRuleGoStmt"
    // InternalGo.g:7780:1: entryRuleGoStmt returns [EObject current=null] : iv_ruleGoStmt= ruleGoStmt EOF ;
    public final EObject entryRuleGoStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleGoStmt = null;


        try {
            // InternalGo.g:7780:47: (iv_ruleGoStmt= ruleGoStmt EOF )
            // InternalGo.g:7781:2: iv_ruleGoStmt= ruleGoStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getGoStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleGoStmt=ruleGoStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleGoStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleGoStmt"


    // $ANTLR start "ruleGoStmt"
    // InternalGo.g:7787:1: ruleGoStmt returns [EObject current=null] : (otherlv_0= 'go' ( (lv_Expression_1_0= ruleExpression ) ) ) ;
    public final EObject ruleGoStmt() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_Expression_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:7793:2: ( (otherlv_0= 'go' ( (lv_Expression_1_0= ruleExpression ) ) ) )
            // InternalGo.g:7794:2: (otherlv_0= 'go' ( (lv_Expression_1_0= ruleExpression ) ) )
            {
            // InternalGo.g:7794:2: (otherlv_0= 'go' ( (lv_Expression_1_0= ruleExpression ) ) )
            // InternalGo.g:7795:3: otherlv_0= 'go' ( (lv_Expression_1_0= ruleExpression ) )
            {
            otherlv_0=(Token)match(input,69,FOLLOW_32); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getGoStmtAccess().getGoKeyword_0());
              		
            }
            // InternalGo.g:7799:3: ( (lv_Expression_1_0= ruleExpression ) )
            // InternalGo.g:7800:4: (lv_Expression_1_0= ruleExpression )
            {
            // InternalGo.g:7800:4: (lv_Expression_1_0= ruleExpression )
            // InternalGo.g:7801:5: lv_Expression_1_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getGoStmtAccess().getExpressionExpressionParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_Expression_1_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getGoStmtRule());
              					}
              					set(
              						current,
              						"Expression",
              						lv_Expression_1_0,
              						"com.ufcg.compiladores.Go.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleGoStmt"


    // $ANTLR start "entryRuleSelectStmt"
    // InternalGo.g:7822:1: entryRuleSelectStmt returns [EObject current=null] : iv_ruleSelectStmt= ruleSelectStmt EOF ;
    public final EObject entryRuleSelectStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSelectStmt = null;


        try {
            // InternalGo.g:7822:51: (iv_ruleSelectStmt= ruleSelectStmt EOF )
            // InternalGo.g:7823:2: iv_ruleSelectStmt= ruleSelectStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSelectStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSelectStmt=ruleSelectStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSelectStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSelectStmt"


    // $ANTLR start "ruleSelectStmt"
    // InternalGo.g:7829:1: ruleSelectStmt returns [EObject current=null] : ( () otherlv_1= 'select' otherlv_2= '{' ( (lv_CommClause_3_0= ruleCommClause ) )* otherlv_4= '}' ) ;
    public final EObject ruleSelectStmt() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_CommClause_3_0 = null;



        	enterRule();

        try {
            // InternalGo.g:7835:2: ( ( () otherlv_1= 'select' otherlv_2= '{' ( (lv_CommClause_3_0= ruleCommClause ) )* otherlv_4= '}' ) )
            // InternalGo.g:7836:2: ( () otherlv_1= 'select' otherlv_2= '{' ( (lv_CommClause_3_0= ruleCommClause ) )* otherlv_4= '}' )
            {
            // InternalGo.g:7836:2: ( () otherlv_1= 'select' otherlv_2= '{' ( (lv_CommClause_3_0= ruleCommClause ) )* otherlv_4= '}' )
            // InternalGo.g:7837:3: () otherlv_1= 'select' otherlv_2= '{' ( (lv_CommClause_3_0= ruleCommClause ) )* otherlv_4= '}'
            {
            // InternalGo.g:7837:3: ()
            // InternalGo.g:7838:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getSelectStmtAccess().getSelectStmtAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,70,FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getSelectStmtAccess().getSelectKeyword_1());
              		
            }
            otherlv_2=(Token)match(input,24,FOLLOW_56); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getSelectStmtAccess().getLeftCurlyBracketKeyword_2());
              		
            }
            // InternalGo.g:7855:3: ( (lv_CommClause_3_0= ruleCommClause ) )*
            loop92:
            do {
                int alt92=2;
                int LA92_0 = input.LA(1);

                if ( ((LA92_0>=65 && LA92_0<=66)) ) {
                    alt92=1;
                }


                switch (alt92) {
            	case 1 :
            	    // InternalGo.g:7856:4: (lv_CommClause_3_0= ruleCommClause )
            	    {
            	    // InternalGo.g:7856:4: (lv_CommClause_3_0= ruleCommClause )
            	    // InternalGo.g:7857:5: lv_CommClause_3_0= ruleCommClause
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getSelectStmtAccess().getCommClauseCommClauseParserRuleCall_3_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_56);
            	    lv_CommClause_3_0=ruleCommClause();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getSelectStmtRule());
            	      					}
            	      					add(
            	      						current,
            	      						"CommClause",
            	      						lv_CommClause_3_0,
            	      						"com.ufcg.compiladores.Go.CommClause");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop92;
                }
            } while (true);

            otherlv_4=(Token)match(input,30,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getSelectStmtAccess().getRightCurlyBracketKeyword_4());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSelectStmt"


    // $ANTLR start "entryRuleCommClause"
    // InternalGo.g:7882:1: entryRuleCommClause returns [EObject current=null] : iv_ruleCommClause= ruleCommClause EOF ;
    public final EObject entryRuleCommClause() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCommClause = null;


        try {
            // InternalGo.g:7882:51: (iv_ruleCommClause= ruleCommClause EOF )
            // InternalGo.g:7883:2: iv_ruleCommClause= ruleCommClause EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCommClauseRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleCommClause=ruleCommClause();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCommClause; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCommClause"


    // $ANTLR start "ruleCommClause"
    // InternalGo.g:7889:1: ruleCommClause returns [EObject current=null] : ( ( (lv_CommCase_0_0= ruleCommCase ) ) otherlv_1= ':' ( (lv_StatementList_2_0= ruleStatementList ) ) ) ;
    public final EObject ruleCommClause() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_CommCase_0_0 = null;

        EObject lv_StatementList_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:7895:2: ( ( ( (lv_CommCase_0_0= ruleCommCase ) ) otherlv_1= ':' ( (lv_StatementList_2_0= ruleStatementList ) ) ) )
            // InternalGo.g:7896:2: ( ( (lv_CommCase_0_0= ruleCommCase ) ) otherlv_1= ':' ( (lv_StatementList_2_0= ruleStatementList ) ) )
            {
            // InternalGo.g:7896:2: ( ( (lv_CommCase_0_0= ruleCommCase ) ) otherlv_1= ':' ( (lv_StatementList_2_0= ruleStatementList ) ) )
            // InternalGo.g:7897:3: ( (lv_CommCase_0_0= ruleCommCase ) ) otherlv_1= ':' ( (lv_StatementList_2_0= ruleStatementList ) )
            {
            // InternalGo.g:7897:3: ( (lv_CommCase_0_0= ruleCommCase ) )
            // InternalGo.g:7898:4: (lv_CommCase_0_0= ruleCommCase )
            {
            // InternalGo.g:7898:4: (lv_CommCase_0_0= ruleCommCase )
            // InternalGo.g:7899:5: lv_CommCase_0_0= ruleCommCase
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getCommClauseAccess().getCommCaseCommCaseParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_41);
            lv_CommCase_0_0=ruleCommCase();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getCommClauseRule());
              					}
              					set(
              						current,
              						"CommCase",
              						lv_CommCase_0_0,
              						"com.ufcg.compiladores.Go.CommCase");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_1=(Token)match(input,39,FOLLOW_49); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getCommClauseAccess().getColonKeyword_1());
              		
            }
            // InternalGo.g:7920:3: ( (lv_StatementList_2_0= ruleStatementList ) )
            // InternalGo.g:7921:4: (lv_StatementList_2_0= ruleStatementList )
            {
            // InternalGo.g:7921:4: (lv_StatementList_2_0= ruleStatementList )
            // InternalGo.g:7922:5: lv_StatementList_2_0= ruleStatementList
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getCommClauseAccess().getStatementListStatementListParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_StatementList_2_0=ruleStatementList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getCommClauseRule());
              					}
              					set(
              						current,
              						"StatementList",
              						lv_StatementList_2_0,
              						"com.ufcg.compiladores.Go.StatementList");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCommClause"


    // $ANTLR start "entryRuleCommCase"
    // InternalGo.g:7943:1: entryRuleCommCase returns [EObject current=null] : iv_ruleCommCase= ruleCommCase EOF ;
    public final EObject entryRuleCommCase() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCommCase = null;


        try {
            // InternalGo.g:7943:49: (iv_ruleCommCase= ruleCommCase EOF )
            // InternalGo.g:7944:2: iv_ruleCommCase= ruleCommCase EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCommCaseRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleCommCase=ruleCommCase();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCommCase; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCommCase"


    // $ANTLR start "ruleCommCase"
    // InternalGo.g:7950:1: ruleCommCase returns [EObject current=null] : ( (otherlv_0= 'case' ( ( (lv_SendStmt_1_0= ruleSendStmt ) ) | ( (lv_RecvStmt_2_0= ruleRecvStmt ) ) ) ) | ( () otherlv_4= 'default' ) ) ;
    public final EObject ruleCommCase() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_4=null;
        EObject lv_SendStmt_1_0 = null;

        EObject lv_RecvStmt_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:7956:2: ( ( (otherlv_0= 'case' ( ( (lv_SendStmt_1_0= ruleSendStmt ) ) | ( (lv_RecvStmt_2_0= ruleRecvStmt ) ) ) ) | ( () otherlv_4= 'default' ) ) )
            // InternalGo.g:7957:2: ( (otherlv_0= 'case' ( ( (lv_SendStmt_1_0= ruleSendStmt ) ) | ( (lv_RecvStmt_2_0= ruleRecvStmt ) ) ) ) | ( () otherlv_4= 'default' ) )
            {
            // InternalGo.g:7957:2: ( (otherlv_0= 'case' ( ( (lv_SendStmt_1_0= ruleSendStmt ) ) | ( (lv_RecvStmt_2_0= ruleRecvStmt ) ) ) ) | ( () otherlv_4= 'default' ) )
            int alt94=2;
            int LA94_0 = input.LA(1);

            if ( (LA94_0==65) ) {
                alt94=1;
            }
            else if ( (LA94_0==66) ) {
                alt94=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 94, 0, input);

                throw nvae;
            }
            switch (alt94) {
                case 1 :
                    // InternalGo.g:7958:3: (otherlv_0= 'case' ( ( (lv_SendStmt_1_0= ruleSendStmt ) ) | ( (lv_RecvStmt_2_0= ruleRecvStmt ) ) ) )
                    {
                    // InternalGo.g:7958:3: (otherlv_0= 'case' ( ( (lv_SendStmt_1_0= ruleSendStmt ) ) | ( (lv_RecvStmt_2_0= ruleRecvStmt ) ) ) )
                    // InternalGo.g:7959:4: otherlv_0= 'case' ( ( (lv_SendStmt_1_0= ruleSendStmt ) ) | ( (lv_RecvStmt_2_0= ruleRecvStmt ) ) )
                    {
                    otherlv_0=(Token)match(input,65,FOLLOW_32); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getCommCaseAccess().getCaseKeyword_0_0());
                      			
                    }
                    // InternalGo.g:7963:4: ( ( (lv_SendStmt_1_0= ruleSendStmt ) ) | ( (lv_RecvStmt_2_0= ruleRecvStmt ) ) )
                    int alt93=2;
                    alt93 = dfa93.predict(input);
                    switch (alt93) {
                        case 1 :
                            // InternalGo.g:7964:5: ( (lv_SendStmt_1_0= ruleSendStmt ) )
                            {
                            // InternalGo.g:7964:5: ( (lv_SendStmt_1_0= ruleSendStmt ) )
                            // InternalGo.g:7965:6: (lv_SendStmt_1_0= ruleSendStmt )
                            {
                            // InternalGo.g:7965:6: (lv_SendStmt_1_0= ruleSendStmt )
                            // InternalGo.g:7966:7: lv_SendStmt_1_0= ruleSendStmt
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getCommCaseAccess().getSendStmtSendStmtParserRuleCall_0_1_0_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_SendStmt_1_0=ruleSendStmt();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getCommCaseRule());
                              							}
                              							set(
                              								current,
                              								"SendStmt",
                              								lv_SendStmt_1_0,
                              								"com.ufcg.compiladores.Go.SendStmt");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalGo.g:7984:5: ( (lv_RecvStmt_2_0= ruleRecvStmt ) )
                            {
                            // InternalGo.g:7984:5: ( (lv_RecvStmt_2_0= ruleRecvStmt ) )
                            // InternalGo.g:7985:6: (lv_RecvStmt_2_0= ruleRecvStmt )
                            {
                            // InternalGo.g:7985:6: (lv_RecvStmt_2_0= ruleRecvStmt )
                            // InternalGo.g:7986:7: lv_RecvStmt_2_0= ruleRecvStmt
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getCommCaseAccess().getRecvStmtRecvStmtParserRuleCall_0_1_1_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_RecvStmt_2_0=ruleRecvStmt();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getCommCaseRule());
                              							}
                              							set(
                              								current,
                              								"RecvStmt",
                              								lv_RecvStmt_2_0,
                              								"com.ufcg.compiladores.Go.RecvStmt");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:8006:3: ( () otherlv_4= 'default' )
                    {
                    // InternalGo.g:8006:3: ( () otherlv_4= 'default' )
                    // InternalGo.g:8007:4: () otherlv_4= 'default'
                    {
                    // InternalGo.g:8007:4: ()
                    // InternalGo.g:8008:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getCommCaseAccess().getCommCaseAction_1_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_4=(Token)match(input,66,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getCommCaseAccess().getDefaultKeyword_1_1());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCommCase"


    // $ANTLR start "entryRuleRecvStmt"
    // InternalGo.g:8026:1: entryRuleRecvStmt returns [EObject current=null] : iv_ruleRecvStmt= ruleRecvStmt EOF ;
    public final EObject entryRuleRecvStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRecvStmt = null;


        try {
            // InternalGo.g:8026:49: (iv_ruleRecvStmt= ruleRecvStmt EOF )
            // InternalGo.g:8027:2: iv_ruleRecvStmt= ruleRecvStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRecvStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRecvStmt=ruleRecvStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRecvStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRecvStmt"


    // $ANTLR start "ruleRecvStmt"
    // InternalGo.g:8033:1: ruleRecvStmt returns [EObject current=null] : ( ( ( ( (lv_ExpressionList_0_0= ruleExpressionList ) ) otherlv_1= '=' ) | ( ( (lv_IdentifierList_2_0= ruleIdentifierList ) ) otherlv_3= ':=' ) )? ( (lv_RecvExpr_4_0= ruleRecvExpr ) ) ) ;
    public final EObject ruleRecvStmt() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_ExpressionList_0_0 = null;

        EObject lv_IdentifierList_2_0 = null;

        EObject lv_RecvExpr_4_0 = null;



        	enterRule();

        try {
            // InternalGo.g:8039:2: ( ( ( ( ( (lv_ExpressionList_0_0= ruleExpressionList ) ) otherlv_1= '=' ) | ( ( (lv_IdentifierList_2_0= ruleIdentifierList ) ) otherlv_3= ':=' ) )? ( (lv_RecvExpr_4_0= ruleRecvExpr ) ) ) )
            // InternalGo.g:8040:2: ( ( ( ( (lv_ExpressionList_0_0= ruleExpressionList ) ) otherlv_1= '=' ) | ( ( (lv_IdentifierList_2_0= ruleIdentifierList ) ) otherlv_3= ':=' ) )? ( (lv_RecvExpr_4_0= ruleRecvExpr ) ) )
            {
            // InternalGo.g:8040:2: ( ( ( ( (lv_ExpressionList_0_0= ruleExpressionList ) ) otherlv_1= '=' ) | ( ( (lv_IdentifierList_2_0= ruleIdentifierList ) ) otherlv_3= ':=' ) )? ( (lv_RecvExpr_4_0= ruleRecvExpr ) ) )
            // InternalGo.g:8041:3: ( ( ( (lv_ExpressionList_0_0= ruleExpressionList ) ) otherlv_1= '=' ) | ( ( (lv_IdentifierList_2_0= ruleIdentifierList ) ) otherlv_3= ':=' ) )? ( (lv_RecvExpr_4_0= ruleRecvExpr ) )
            {
            // InternalGo.g:8041:3: ( ( ( (lv_ExpressionList_0_0= ruleExpressionList ) ) otherlv_1= '=' ) | ( ( (lv_IdentifierList_2_0= ruleIdentifierList ) ) otherlv_3= ':=' ) )?
            int alt95=3;
            alt95 = dfa95.predict(input);
            switch (alt95) {
                case 1 :
                    // InternalGo.g:8042:4: ( ( (lv_ExpressionList_0_0= ruleExpressionList ) ) otherlv_1= '=' )
                    {
                    // InternalGo.g:8042:4: ( ( (lv_ExpressionList_0_0= ruleExpressionList ) ) otherlv_1= '=' )
                    // InternalGo.g:8043:5: ( (lv_ExpressionList_0_0= ruleExpressionList ) ) otherlv_1= '='
                    {
                    // InternalGo.g:8043:5: ( (lv_ExpressionList_0_0= ruleExpressionList ) )
                    // InternalGo.g:8044:6: (lv_ExpressionList_0_0= ruleExpressionList )
                    {
                    // InternalGo.g:8044:6: (lv_ExpressionList_0_0= ruleExpressionList )
                    // InternalGo.g:8045:7: lv_ExpressionList_0_0= ruleExpressionList
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getRecvStmtAccess().getExpressionListExpressionListParserRuleCall_0_0_0_0());
                      						
                    }
                    pushFollow(FOLLOW_31);
                    lv_ExpressionList_0_0=ruleExpressionList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getRecvStmtRule());
                      							}
                      							set(
                      								current,
                      								"ExpressionList",
                      								lv_ExpressionList_0_0,
                      								"com.ufcg.compiladores.Go.ExpressionList");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_1=(Token)match(input,35,FOLLOW_32); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getRecvStmtAccess().getEqualsSignKeyword_0_0_1());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:8068:4: ( ( (lv_IdentifierList_2_0= ruleIdentifierList ) ) otherlv_3= ':=' )
                    {
                    // InternalGo.g:8068:4: ( ( (lv_IdentifierList_2_0= ruleIdentifierList ) ) otherlv_3= ':=' )
                    // InternalGo.g:8069:5: ( (lv_IdentifierList_2_0= ruleIdentifierList ) ) otherlv_3= ':='
                    {
                    // InternalGo.g:8069:5: ( (lv_IdentifierList_2_0= ruleIdentifierList ) )
                    // InternalGo.g:8070:6: (lv_IdentifierList_2_0= ruleIdentifierList )
                    {
                    // InternalGo.g:8070:6: (lv_IdentifierList_2_0= ruleIdentifierList )
                    // InternalGo.g:8071:7: lv_IdentifierList_2_0= ruleIdentifierList
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getRecvStmtAccess().getIdentifierListIdentifierListParserRuleCall_0_1_0_0());
                      						
                    }
                    pushFollow(FOLLOW_35);
                    lv_IdentifierList_2_0=ruleIdentifierList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getRecvStmtRule());
                      							}
                      							set(
                      								current,
                      								"IdentifierList",
                      								lv_IdentifierList_2_0,
                      								"com.ufcg.compiladores.Go.IdentifierList");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_3=(Token)match(input,38,FOLLOW_32); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_3, grammarAccess.getRecvStmtAccess().getColonEqualsSignKeyword_0_1_1());
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalGo.g:8094:3: ( (lv_RecvExpr_4_0= ruleRecvExpr ) )
            // InternalGo.g:8095:4: (lv_RecvExpr_4_0= ruleRecvExpr )
            {
            // InternalGo.g:8095:4: (lv_RecvExpr_4_0= ruleRecvExpr )
            // InternalGo.g:8096:5: lv_RecvExpr_4_0= ruleRecvExpr
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getRecvStmtAccess().getRecvExprRecvExprParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_RecvExpr_4_0=ruleRecvExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getRecvStmtRule());
              					}
              					set(
              						current,
              						"RecvExpr",
              						lv_RecvExpr_4_0,
              						"com.ufcg.compiladores.Go.RecvExpr");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRecvStmt"


    // $ANTLR start "entryRuleRecvExpr"
    // InternalGo.g:8117:1: entryRuleRecvExpr returns [EObject current=null] : iv_ruleRecvExpr= ruleRecvExpr EOF ;
    public final EObject entryRuleRecvExpr() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRecvExpr = null;


        try {
            // InternalGo.g:8117:49: (iv_ruleRecvExpr= ruleRecvExpr EOF )
            // InternalGo.g:8118:2: iv_ruleRecvExpr= ruleRecvExpr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRecvExprRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRecvExpr=ruleRecvExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRecvExpr; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRecvExpr"


    // $ANTLR start "ruleRecvExpr"
    // InternalGo.g:8124:1: ruleRecvExpr returns [EObject current=null] : ( (lv_Expression_0_0= ruleExpression ) ) ;
    public final EObject ruleRecvExpr() throws RecognitionException {
        EObject current = null;

        EObject lv_Expression_0_0 = null;



        	enterRule();

        try {
            // InternalGo.g:8130:2: ( ( (lv_Expression_0_0= ruleExpression ) ) )
            // InternalGo.g:8131:2: ( (lv_Expression_0_0= ruleExpression ) )
            {
            // InternalGo.g:8131:2: ( (lv_Expression_0_0= ruleExpression ) )
            // InternalGo.g:8132:3: (lv_Expression_0_0= ruleExpression )
            {
            // InternalGo.g:8132:3: (lv_Expression_0_0= ruleExpression )
            // InternalGo.g:8133:4: lv_Expression_0_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getRecvExprAccess().getExpressionExpressionParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_Expression_0_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getRecvExprRule());
              				}
              				set(
              					current,
              					"Expression",
              					lv_Expression_0_0,
              					"com.ufcg.compiladores.Go.Expression");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRecvExpr"


    // $ANTLR start "entryRuleReturnStmt"
    // InternalGo.g:8153:1: entryRuleReturnStmt returns [EObject current=null] : iv_ruleReturnStmt= ruleReturnStmt EOF ;
    public final EObject entryRuleReturnStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleReturnStmt = null;


        try {
            // InternalGo.g:8153:51: (iv_ruleReturnStmt= ruleReturnStmt EOF )
            // InternalGo.g:8154:2: iv_ruleReturnStmt= ruleReturnStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getReturnStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleReturnStmt=ruleReturnStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleReturnStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleReturnStmt"


    // $ANTLR start "ruleReturnStmt"
    // InternalGo.g:8160:1: ruleReturnStmt returns [EObject current=null] : ( () otherlv_1= 'return' ( (lv_ExpressionList_2_0= ruleExpressionList ) )? ) ;
    public final EObject ruleReturnStmt() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_ExpressionList_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:8166:2: ( ( () otherlv_1= 'return' ( (lv_ExpressionList_2_0= ruleExpressionList ) )? ) )
            // InternalGo.g:8167:2: ( () otherlv_1= 'return' ( (lv_ExpressionList_2_0= ruleExpressionList ) )? )
            {
            // InternalGo.g:8167:2: ( () otherlv_1= 'return' ( (lv_ExpressionList_2_0= ruleExpressionList ) )? )
            // InternalGo.g:8168:3: () otherlv_1= 'return' ( (lv_ExpressionList_2_0= ruleExpressionList ) )?
            {
            // InternalGo.g:8168:3: ()
            // InternalGo.g:8169:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getReturnStmtAccess().getReturnStmtAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,71,FOLLOW_63); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getReturnStmtAccess().getReturnKeyword_1());
              		
            }
            // InternalGo.g:8182:3: ( (lv_ExpressionList_2_0= ruleExpressionList ) )?
            int alt96=2;
            int LA96_0 = input.LA(1);

            if ( ((LA96_0>=RULE_LETTER && LA96_0<=RULE_DECIMAL_DIGIT)||LA96_0==18||(LA96_0>=20 && LA96_0<=21)||LA96_0==23||(LA96_0>=25 && LA96_0<=26)||LA96_0==29||(LA96_0>=31 && LA96_0<=33)||(LA96_0>=48 && LA96_0<=49)||LA96_0==56||(LA96_0>=58 && LA96_0<=59)||LA96_0==79||(LA96_0>=82 && LA96_0<=83)) ) {
                alt96=1;
            }
            switch (alt96) {
                case 1 :
                    // InternalGo.g:8183:4: (lv_ExpressionList_2_0= ruleExpressionList )
                    {
                    // InternalGo.g:8183:4: (lv_ExpressionList_2_0= ruleExpressionList )
                    // InternalGo.g:8184:5: lv_ExpressionList_2_0= ruleExpressionList
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getReturnStmtAccess().getExpressionListExpressionListParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_ExpressionList_2_0=ruleExpressionList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getReturnStmtRule());
                      					}
                      					set(
                      						current,
                      						"ExpressionList",
                      						lv_ExpressionList_2_0,
                      						"com.ufcg.compiladores.Go.ExpressionList");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleReturnStmt"


    // $ANTLR start "entryRuleBreakStmt"
    // InternalGo.g:8205:1: entryRuleBreakStmt returns [EObject current=null] : iv_ruleBreakStmt= ruleBreakStmt EOF ;
    public final EObject entryRuleBreakStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBreakStmt = null;


        try {
            // InternalGo.g:8205:50: (iv_ruleBreakStmt= ruleBreakStmt EOF )
            // InternalGo.g:8206:2: iv_ruleBreakStmt= ruleBreakStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBreakStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBreakStmt=ruleBreakStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBreakStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBreakStmt"


    // $ANTLR start "ruleBreakStmt"
    // InternalGo.g:8212:1: ruleBreakStmt returns [EObject current=null] : ( () otherlv_1= 'break' ( (lv_Label_2_0= ruleLabel ) )? ) ;
    public final EObject ruleBreakStmt() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_Label_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:8218:2: ( ( () otherlv_1= 'break' ( (lv_Label_2_0= ruleLabel ) )? ) )
            // InternalGo.g:8219:2: ( () otherlv_1= 'break' ( (lv_Label_2_0= ruleLabel ) )? )
            {
            // InternalGo.g:8219:2: ( () otherlv_1= 'break' ( (lv_Label_2_0= ruleLabel ) )? )
            // InternalGo.g:8220:3: () otherlv_1= 'break' ( (lv_Label_2_0= ruleLabel ) )?
            {
            // InternalGo.g:8220:3: ()
            // InternalGo.g:8221:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getBreakStmtAccess().getBreakStmtAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,72,FOLLOW_64); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getBreakStmtAccess().getBreakKeyword_1());
              		
            }
            // InternalGo.g:8234:3: ( (lv_Label_2_0= ruleLabel ) )?
            int alt97=2;
            int LA97_0 = input.LA(1);

            if ( (LA97_0==RULE_LETTER) ) {
                alt97=1;
            }
            switch (alt97) {
                case 1 :
                    // InternalGo.g:8235:4: (lv_Label_2_0= ruleLabel )
                    {
                    // InternalGo.g:8235:4: (lv_Label_2_0= ruleLabel )
                    // InternalGo.g:8236:5: lv_Label_2_0= ruleLabel
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getBreakStmtAccess().getLabelLabelParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_Label_2_0=ruleLabel();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getBreakStmtRule());
                      					}
                      					set(
                      						current,
                      						"Label",
                      						lv_Label_2_0,
                      						"com.ufcg.compiladores.Go.Label");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBreakStmt"


    // $ANTLR start "entryRuleContinueStmt"
    // InternalGo.g:8257:1: entryRuleContinueStmt returns [EObject current=null] : iv_ruleContinueStmt= ruleContinueStmt EOF ;
    public final EObject entryRuleContinueStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleContinueStmt = null;


        try {
            // InternalGo.g:8257:53: (iv_ruleContinueStmt= ruleContinueStmt EOF )
            // InternalGo.g:8258:2: iv_ruleContinueStmt= ruleContinueStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getContinueStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleContinueStmt=ruleContinueStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleContinueStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleContinueStmt"


    // $ANTLR start "ruleContinueStmt"
    // InternalGo.g:8264:1: ruleContinueStmt returns [EObject current=null] : ( () otherlv_1= 'continue' ( (lv_Label_2_0= ruleLabel ) )? ) ;
    public final EObject ruleContinueStmt() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_Label_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:8270:2: ( ( () otherlv_1= 'continue' ( (lv_Label_2_0= ruleLabel ) )? ) )
            // InternalGo.g:8271:2: ( () otherlv_1= 'continue' ( (lv_Label_2_0= ruleLabel ) )? )
            {
            // InternalGo.g:8271:2: ( () otherlv_1= 'continue' ( (lv_Label_2_0= ruleLabel ) )? )
            // InternalGo.g:8272:3: () otherlv_1= 'continue' ( (lv_Label_2_0= ruleLabel ) )?
            {
            // InternalGo.g:8272:3: ()
            // InternalGo.g:8273:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getContinueStmtAccess().getContinueStmtAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,73,FOLLOW_64); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getContinueStmtAccess().getContinueKeyword_1());
              		
            }
            // InternalGo.g:8286:3: ( (lv_Label_2_0= ruleLabel ) )?
            int alt98=2;
            int LA98_0 = input.LA(1);

            if ( (LA98_0==RULE_LETTER) ) {
                alt98=1;
            }
            switch (alt98) {
                case 1 :
                    // InternalGo.g:8287:4: (lv_Label_2_0= ruleLabel )
                    {
                    // InternalGo.g:8287:4: (lv_Label_2_0= ruleLabel )
                    // InternalGo.g:8288:5: lv_Label_2_0= ruleLabel
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getContinueStmtAccess().getLabelLabelParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_Label_2_0=ruleLabel();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getContinueStmtRule());
                      					}
                      					set(
                      						current,
                      						"Label",
                      						lv_Label_2_0,
                      						"com.ufcg.compiladores.Go.Label");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleContinueStmt"


    // $ANTLR start "entryRuleGotoStmt"
    // InternalGo.g:8309:1: entryRuleGotoStmt returns [EObject current=null] : iv_ruleGotoStmt= ruleGotoStmt EOF ;
    public final EObject entryRuleGotoStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleGotoStmt = null;


        try {
            // InternalGo.g:8309:49: (iv_ruleGotoStmt= ruleGotoStmt EOF )
            // InternalGo.g:8310:2: iv_ruleGotoStmt= ruleGotoStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getGotoStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleGotoStmt=ruleGotoStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleGotoStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleGotoStmt"


    // $ANTLR start "ruleGotoStmt"
    // InternalGo.g:8316:1: ruleGotoStmt returns [EObject current=null] : (otherlv_0= 'goto' ( (lv_Label_1_0= ruleLabel ) ) ) ;
    public final EObject ruleGotoStmt() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_Label_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:8322:2: ( (otherlv_0= 'goto' ( (lv_Label_1_0= ruleLabel ) ) ) )
            // InternalGo.g:8323:2: (otherlv_0= 'goto' ( (lv_Label_1_0= ruleLabel ) ) )
            {
            // InternalGo.g:8323:2: (otherlv_0= 'goto' ( (lv_Label_1_0= ruleLabel ) ) )
            // InternalGo.g:8324:3: otherlv_0= 'goto' ( (lv_Label_1_0= ruleLabel ) )
            {
            otherlv_0=(Token)match(input,74,FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getGotoStmtAccess().getGotoKeyword_0());
              		
            }
            // InternalGo.g:8328:3: ( (lv_Label_1_0= ruleLabel ) )
            // InternalGo.g:8329:4: (lv_Label_1_0= ruleLabel )
            {
            // InternalGo.g:8329:4: (lv_Label_1_0= ruleLabel )
            // InternalGo.g:8330:5: lv_Label_1_0= ruleLabel
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getGotoStmtAccess().getLabelLabelParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_Label_1_0=ruleLabel();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getGotoStmtRule());
              					}
              					set(
              						current,
              						"Label",
              						lv_Label_1_0,
              						"com.ufcg.compiladores.Go.Label");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleGotoStmt"


    // $ANTLR start "entryRuleFallthroughStmt"
    // InternalGo.g:8351:1: entryRuleFallthroughStmt returns [String current=null] : iv_ruleFallthroughStmt= ruleFallthroughStmt EOF ;
    public final String entryRuleFallthroughStmt() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleFallthroughStmt = null;


        try {
            // InternalGo.g:8351:55: (iv_ruleFallthroughStmt= ruleFallthroughStmt EOF )
            // InternalGo.g:8352:2: iv_ruleFallthroughStmt= ruleFallthroughStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFallthroughStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFallthroughStmt=ruleFallthroughStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFallthroughStmt.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFallthroughStmt"


    // $ANTLR start "ruleFallthroughStmt"
    // InternalGo.g:8358:1: ruleFallthroughStmt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= 'fallthrough' ;
    public final AntlrDatatypeRuleToken ruleFallthroughStmt() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalGo.g:8364:2: (kw= 'fallthrough' )
            // InternalGo.g:8365:2: kw= 'fallthrough'
            {
            kw=(Token)match(input,75,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.getFallthroughStmtAccess().getFallthroughKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFallthroughStmt"


    // $ANTLR start "entryRuleDeferStmt"
    // InternalGo.g:8373:1: entryRuleDeferStmt returns [EObject current=null] : iv_ruleDeferStmt= ruleDeferStmt EOF ;
    public final EObject entryRuleDeferStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDeferStmt = null;


        try {
            // InternalGo.g:8373:50: (iv_ruleDeferStmt= ruleDeferStmt EOF )
            // InternalGo.g:8374:2: iv_ruleDeferStmt= ruleDeferStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDeferStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDeferStmt=ruleDeferStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDeferStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDeferStmt"


    // $ANTLR start "ruleDeferStmt"
    // InternalGo.g:8380:1: ruleDeferStmt returns [EObject current=null] : (otherlv_0= 'defer' ( (lv_Expression_1_0= ruleExpression ) ) ) ;
    public final EObject ruleDeferStmt() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_Expression_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:8386:2: ( (otherlv_0= 'defer' ( (lv_Expression_1_0= ruleExpression ) ) ) )
            // InternalGo.g:8387:2: (otherlv_0= 'defer' ( (lv_Expression_1_0= ruleExpression ) ) )
            {
            // InternalGo.g:8387:2: (otherlv_0= 'defer' ( (lv_Expression_1_0= ruleExpression ) ) )
            // InternalGo.g:8388:3: otherlv_0= 'defer' ( (lv_Expression_1_0= ruleExpression ) )
            {
            otherlv_0=(Token)match(input,76,FOLLOW_32); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getDeferStmtAccess().getDeferKeyword_0());
              		
            }
            // InternalGo.g:8392:3: ( (lv_Expression_1_0= ruleExpression ) )
            // InternalGo.g:8393:4: (lv_Expression_1_0= ruleExpression )
            {
            // InternalGo.g:8393:4: (lv_Expression_1_0= ruleExpression )
            // InternalGo.g:8394:5: lv_Expression_1_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDeferStmtAccess().getExpressionExpressionParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_Expression_1_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDeferStmtRule());
              					}
              					set(
              						current,
              						"Expression",
              						lv_Expression_1_0,
              						"com.ufcg.compiladores.Go.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDeferStmt"


    // $ANTLR start "entryRulePackageClause"
    // InternalGo.g:8415:1: entryRulePackageClause returns [EObject current=null] : iv_rulePackageClause= rulePackageClause EOF ;
    public final EObject entryRulePackageClause() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePackageClause = null;


        try {
            // InternalGo.g:8415:54: (iv_rulePackageClause= rulePackageClause EOF )
            // InternalGo.g:8416:2: iv_rulePackageClause= rulePackageClause EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPackageClauseRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePackageClause=rulePackageClause();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePackageClause; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePackageClause"


    // $ANTLR start "rulePackageClause"
    // InternalGo.g:8422:1: rulePackageClause returns [EObject current=null] : (otherlv_0= 'package' ( (lv_PackageName_1_0= rulePackageName ) ) ) ;
    public final EObject rulePackageClause() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_PackageName_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:8428:2: ( (otherlv_0= 'package' ( (lv_PackageName_1_0= rulePackageName ) ) ) )
            // InternalGo.g:8429:2: (otherlv_0= 'package' ( (lv_PackageName_1_0= rulePackageName ) ) )
            {
            // InternalGo.g:8429:2: (otherlv_0= 'package' ( (lv_PackageName_1_0= rulePackageName ) ) )
            // InternalGo.g:8430:3: otherlv_0= 'package' ( (lv_PackageName_1_0= rulePackageName ) )
            {
            otherlv_0=(Token)match(input,77,FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getPackageClauseAccess().getPackageKeyword_0());
              		
            }
            // InternalGo.g:8434:3: ( (lv_PackageName_1_0= rulePackageName ) )
            // InternalGo.g:8435:4: (lv_PackageName_1_0= rulePackageName )
            {
            // InternalGo.g:8435:4: (lv_PackageName_1_0= rulePackageName )
            // InternalGo.g:8436:5: lv_PackageName_1_0= rulePackageName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getPackageClauseAccess().getPackageNamePackageNameParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_PackageName_1_0=rulePackageName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getPackageClauseRule());
              					}
              					set(
              						current,
              						"PackageName",
              						lv_PackageName_1_0,
              						"com.ufcg.compiladores.Go.PackageName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePackageClause"


    // $ANTLR start "entryRulePackageName"
    // InternalGo.g:8457:1: entryRulePackageName returns [EObject current=null] : iv_rulePackageName= rulePackageName EOF ;
    public final EObject entryRulePackageName() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePackageName = null;


        try {
            // InternalGo.g:8457:52: (iv_rulePackageName= rulePackageName EOF )
            // InternalGo.g:8458:2: iv_rulePackageName= rulePackageName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPackageNameRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePackageName=rulePackageName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePackageName; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePackageName"


    // $ANTLR start "rulePackageName"
    // InternalGo.g:8464:1: rulePackageName returns [EObject current=null] : ( (lv_identifier_0_0= ruleidentifier ) ) ;
    public final EObject rulePackageName() throws RecognitionException {
        EObject current = null;

        EObject lv_identifier_0_0 = null;



        	enterRule();

        try {
            // InternalGo.g:8470:2: ( ( (lv_identifier_0_0= ruleidentifier ) ) )
            // InternalGo.g:8471:2: ( (lv_identifier_0_0= ruleidentifier ) )
            {
            // InternalGo.g:8471:2: ( (lv_identifier_0_0= ruleidentifier ) )
            // InternalGo.g:8472:3: (lv_identifier_0_0= ruleidentifier )
            {
            // InternalGo.g:8472:3: (lv_identifier_0_0= ruleidentifier )
            // InternalGo.g:8473:4: lv_identifier_0_0= ruleidentifier
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getPackageNameAccess().getIdentifierIdentifierParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_identifier_0_0=ruleidentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getPackageNameRule());
              				}
              				set(
              					current,
              					"identifier",
              					lv_identifier_0_0,
              					"com.ufcg.compiladores.Go.identifier");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePackageName"


    // $ANTLR start "entryRuleImportDecl"
    // InternalGo.g:8493:1: entryRuleImportDecl returns [EObject current=null] : iv_ruleImportDecl= ruleImportDecl EOF ;
    public final EObject entryRuleImportDecl() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleImportDecl = null;


        try {
            // InternalGo.g:8493:51: (iv_ruleImportDecl= ruleImportDecl EOF )
            // InternalGo.g:8494:2: iv_ruleImportDecl= ruleImportDecl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getImportDeclRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleImportDecl=ruleImportDecl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleImportDecl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleImportDecl"


    // $ANTLR start "ruleImportDecl"
    // InternalGo.g:8500:1: ruleImportDecl returns [EObject current=null] : ( () otherlv_1= 'import' ( ( (lv_ImportSpec_2_0= ruleImportSpec ) ) | (otherlv_3= '(' ( ( (lv_ImportSpec_4_0= ruleImportSpec ) ) otherlv_5= ';' )* otherlv_6= ')' ) ) ) ;
    public final EObject ruleImportDecl() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        EObject lv_ImportSpec_2_0 = null;

        EObject lv_ImportSpec_4_0 = null;



        	enterRule();

        try {
            // InternalGo.g:8506:2: ( ( () otherlv_1= 'import' ( ( (lv_ImportSpec_2_0= ruleImportSpec ) ) | (otherlv_3= '(' ( ( (lv_ImportSpec_4_0= ruleImportSpec ) ) otherlv_5= ';' )* otherlv_6= ')' ) ) ) )
            // InternalGo.g:8507:2: ( () otherlv_1= 'import' ( ( (lv_ImportSpec_2_0= ruleImportSpec ) ) | (otherlv_3= '(' ( ( (lv_ImportSpec_4_0= ruleImportSpec ) ) otherlv_5= ';' )* otherlv_6= ')' ) ) )
            {
            // InternalGo.g:8507:2: ( () otherlv_1= 'import' ( ( (lv_ImportSpec_2_0= ruleImportSpec ) ) | (otherlv_3= '(' ( ( (lv_ImportSpec_4_0= ruleImportSpec ) ) otherlv_5= ';' )* otherlv_6= ')' ) ) )
            // InternalGo.g:8508:3: () otherlv_1= 'import' ( ( (lv_ImportSpec_2_0= ruleImportSpec ) ) | (otherlv_3= '(' ( ( (lv_ImportSpec_4_0= ruleImportSpec ) ) otherlv_5= ';' )* otherlv_6= ')' ) )
            {
            // InternalGo.g:8508:3: ()
            // InternalGo.g:8509:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getImportDeclAccess().getImportDeclAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,78,FOLLOW_65); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getImportDeclAccess().getImportKeyword_1());
              		
            }
            // InternalGo.g:8522:3: ( ( (lv_ImportSpec_2_0= ruleImportSpec ) ) | (otherlv_3= '(' ( ( (lv_ImportSpec_4_0= ruleImportSpec ) ) otherlv_5= ';' )* otherlv_6= ')' ) )
            int alt100=2;
            int LA100_0 = input.LA(1);

            if ( (LA100_0==RULE_LETTER||LA100_0==20||(LA100_0>=82 && LA100_0<=83)) ) {
                alt100=1;
            }
            else if ( (LA100_0==18) ) {
                alt100=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 100, 0, input);

                throw nvae;
            }
            switch (alt100) {
                case 1 :
                    // InternalGo.g:8523:4: ( (lv_ImportSpec_2_0= ruleImportSpec ) )
                    {
                    // InternalGo.g:8523:4: ( (lv_ImportSpec_2_0= ruleImportSpec ) )
                    // InternalGo.g:8524:5: (lv_ImportSpec_2_0= ruleImportSpec )
                    {
                    // InternalGo.g:8524:5: (lv_ImportSpec_2_0= ruleImportSpec )
                    // InternalGo.g:8525:6: lv_ImportSpec_2_0= ruleImportSpec
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getImportDeclAccess().getImportSpecImportSpecParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_ImportSpec_2_0=ruleImportSpec();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getImportDeclRule());
                      						}
                      						add(
                      							current,
                      							"ImportSpec",
                      							lv_ImportSpec_2_0,
                      							"com.ufcg.compiladores.Go.ImportSpec");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:8543:4: (otherlv_3= '(' ( ( (lv_ImportSpec_4_0= ruleImportSpec ) ) otherlv_5= ';' )* otherlv_6= ')' )
                    {
                    // InternalGo.g:8543:4: (otherlv_3= '(' ( ( (lv_ImportSpec_4_0= ruleImportSpec ) ) otherlv_5= ';' )* otherlv_6= ')' )
                    // InternalGo.g:8544:5: otherlv_3= '(' ( ( (lv_ImportSpec_4_0= ruleImportSpec ) ) otherlv_5= ';' )* otherlv_6= ')'
                    {
                    otherlv_3=(Token)match(input,18,FOLLOW_66); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_3, grammarAccess.getImportDeclAccess().getLeftParenthesisKeyword_2_1_0());
                      				
                    }
                    // InternalGo.g:8548:5: ( ( (lv_ImportSpec_4_0= ruleImportSpec ) ) otherlv_5= ';' )*
                    loop99:
                    do {
                        int alt99=2;
                        int LA99_0 = input.LA(1);

                        if ( (LA99_0==RULE_LETTER||LA99_0==20||(LA99_0>=82 && LA99_0<=83)) ) {
                            alt99=1;
                        }


                        switch (alt99) {
                    	case 1 :
                    	    // InternalGo.g:8549:6: ( (lv_ImportSpec_4_0= ruleImportSpec ) ) otherlv_5= ';'
                    	    {
                    	    // InternalGo.g:8549:6: ( (lv_ImportSpec_4_0= ruleImportSpec ) )
                    	    // InternalGo.g:8550:7: (lv_ImportSpec_4_0= ruleImportSpec )
                    	    {
                    	    // InternalGo.g:8550:7: (lv_ImportSpec_4_0= ruleImportSpec )
                    	    // InternalGo.g:8551:8: lv_ImportSpec_4_0= ruleImportSpec
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getImportDeclAccess().getImportSpecImportSpecParserRuleCall_2_1_1_0_0());
                    	      							
                    	    }
                    	    pushFollow(FOLLOW_3);
                    	    lv_ImportSpec_4_0=ruleImportSpec();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getImportDeclRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"ImportSpec",
                    	      									lv_ImportSpec_4_0,
                    	      									"com.ufcg.compiladores.Go.ImportSpec");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }

                    	    otherlv_5=(Token)match(input,17,FOLLOW_66); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_5, grammarAccess.getImportDeclAccess().getSemicolonKeyword_2_1_1_1());
                    	      					
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop99;
                        }
                    } while (true);

                    otherlv_6=(Token)match(input,19,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_6, grammarAccess.getImportDeclAccess().getRightParenthesisKeyword_2_1_2());
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleImportDecl"


    // $ANTLR start "entryRuleImportSpec"
    // InternalGo.g:8583:1: entryRuleImportSpec returns [EObject current=null] : iv_ruleImportSpec= ruleImportSpec EOF ;
    public final EObject entryRuleImportSpec() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleImportSpec = null;


        try {
            // InternalGo.g:8583:51: (iv_ruleImportSpec= ruleImportSpec EOF )
            // InternalGo.g:8584:2: iv_ruleImportSpec= ruleImportSpec EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getImportSpecRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleImportSpec=ruleImportSpec();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleImportSpec; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleImportSpec"


    // $ANTLR start "ruleImportSpec"
    // InternalGo.g:8590:1: ruleImportSpec returns [EObject current=null] : ( (otherlv_0= '.' | ( (lv_PackageName_1_0= rulePackageName ) ) )? ( (lv_ImportPath_2_0= ruleImportPath ) ) ) ;
    public final EObject ruleImportSpec() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_PackageName_1_0 = null;

        EObject lv_ImportPath_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:8596:2: ( ( (otherlv_0= '.' | ( (lv_PackageName_1_0= rulePackageName ) ) )? ( (lv_ImportPath_2_0= ruleImportPath ) ) ) )
            // InternalGo.g:8597:2: ( (otherlv_0= '.' | ( (lv_PackageName_1_0= rulePackageName ) ) )? ( (lv_ImportPath_2_0= ruleImportPath ) ) )
            {
            // InternalGo.g:8597:2: ( (otherlv_0= '.' | ( (lv_PackageName_1_0= rulePackageName ) ) )? ( (lv_ImportPath_2_0= ruleImportPath ) ) )
            // InternalGo.g:8598:3: (otherlv_0= '.' | ( (lv_PackageName_1_0= rulePackageName ) ) )? ( (lv_ImportPath_2_0= ruleImportPath ) )
            {
            // InternalGo.g:8598:3: (otherlv_0= '.' | ( (lv_PackageName_1_0= rulePackageName ) ) )?
            int alt101=3;
            int LA101_0 = input.LA(1);

            if ( (LA101_0==20) ) {
                alt101=1;
            }
            else if ( (LA101_0==RULE_LETTER) ) {
                alt101=2;
            }
            switch (alt101) {
                case 1 :
                    // InternalGo.g:8599:4: otherlv_0= '.'
                    {
                    otherlv_0=(Token)match(input,20,FOLLOW_67); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getImportSpecAccess().getFullStopKeyword_0_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalGo.g:8604:4: ( (lv_PackageName_1_0= rulePackageName ) )
                    {
                    // InternalGo.g:8604:4: ( (lv_PackageName_1_0= rulePackageName ) )
                    // InternalGo.g:8605:5: (lv_PackageName_1_0= rulePackageName )
                    {
                    // InternalGo.g:8605:5: (lv_PackageName_1_0= rulePackageName )
                    // InternalGo.g:8606:6: lv_PackageName_1_0= rulePackageName
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getImportSpecAccess().getPackageNamePackageNameParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_67);
                    lv_PackageName_1_0=rulePackageName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getImportSpecRule());
                      						}
                      						set(
                      							current,
                      							"PackageName",
                      							lv_PackageName_1_0,
                      							"com.ufcg.compiladores.Go.PackageName");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalGo.g:8624:3: ( (lv_ImportPath_2_0= ruleImportPath ) )
            // InternalGo.g:8625:4: (lv_ImportPath_2_0= ruleImportPath )
            {
            // InternalGo.g:8625:4: (lv_ImportPath_2_0= ruleImportPath )
            // InternalGo.g:8626:5: lv_ImportPath_2_0= ruleImportPath
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getImportSpecAccess().getImportPathImportPathParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_ImportPath_2_0=ruleImportPath();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getImportSpecRule());
              					}
              					set(
              						current,
              						"ImportPath",
              						lv_ImportPath_2_0,
              						"com.ufcg.compiladores.Go.ImportPath");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleImportSpec"


    // $ANTLR start "entryRuleImportPath"
    // InternalGo.g:8647:1: entryRuleImportPath returns [EObject current=null] : iv_ruleImportPath= ruleImportPath EOF ;
    public final EObject entryRuleImportPath() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleImportPath = null;


        try {
            // InternalGo.g:8647:51: (iv_ruleImportPath= ruleImportPath EOF )
            // InternalGo.g:8648:2: iv_ruleImportPath= ruleImportPath EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getImportPathRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleImportPath=ruleImportPath();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleImportPath; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleImportPath"


    // $ANTLR start "ruleImportPath"
    // InternalGo.g:8654:1: ruleImportPath returns [EObject current=null] : ( (lv_string_lit_0_0= rulestring_lit ) ) ;
    public final EObject ruleImportPath() throws RecognitionException {
        EObject current = null;

        EObject lv_string_lit_0_0 = null;



        	enterRule();

        try {
            // InternalGo.g:8660:2: ( ( (lv_string_lit_0_0= rulestring_lit ) ) )
            // InternalGo.g:8661:2: ( (lv_string_lit_0_0= rulestring_lit ) )
            {
            // InternalGo.g:8661:2: ( (lv_string_lit_0_0= rulestring_lit ) )
            // InternalGo.g:8662:3: (lv_string_lit_0_0= rulestring_lit )
            {
            // InternalGo.g:8662:3: (lv_string_lit_0_0= rulestring_lit )
            // InternalGo.g:8663:4: lv_string_lit_0_0= rulestring_lit
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getImportPathAccess().getString_litString_litParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_string_lit_0_0=rulestring_lit();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getImportPathRule());
              				}
              				set(
              					current,
              					"string_lit",
              					lv_string_lit_0_0,
              					"com.ufcg.compiladores.Go.string_lit");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleImportPath"


    // $ANTLR start "entryRuleidentifier"
    // InternalGo.g:8683:1: entryRuleidentifier returns [EObject current=null] : iv_ruleidentifier= ruleidentifier EOF ;
    public final EObject entryRuleidentifier() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleidentifier = null;


        try {
            // InternalGo.g:8683:51: (iv_ruleidentifier= ruleidentifier EOF )
            // InternalGo.g:8684:2: iv_ruleidentifier= ruleidentifier EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIdentifierRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleidentifier=ruleidentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleidentifier; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleidentifier"


    // $ANTLR start "ruleidentifier"
    // InternalGo.g:8690:1: ruleidentifier returns [EObject current=null] : ( ( (lv_LETTER_0_0= RULE_LETTER ) ) ( ( (lv_LETTER_1_0= RULE_LETTER ) ) | ( (lv_DECIMAL_DIGIT_2_0= RULE_DECIMAL_DIGIT ) ) )* ) ;
    public final EObject ruleidentifier() throws RecognitionException {
        EObject current = null;

        Token lv_LETTER_0_0=null;
        Token lv_LETTER_1_0=null;
        Token lv_DECIMAL_DIGIT_2_0=null;


        	enterRule();

        try {
            // InternalGo.g:8696:2: ( ( ( (lv_LETTER_0_0= RULE_LETTER ) ) ( ( (lv_LETTER_1_0= RULE_LETTER ) ) | ( (lv_DECIMAL_DIGIT_2_0= RULE_DECIMAL_DIGIT ) ) )* ) )
            // InternalGo.g:8697:2: ( ( (lv_LETTER_0_0= RULE_LETTER ) ) ( ( (lv_LETTER_1_0= RULE_LETTER ) ) | ( (lv_DECIMAL_DIGIT_2_0= RULE_DECIMAL_DIGIT ) ) )* )
            {
            // InternalGo.g:8697:2: ( ( (lv_LETTER_0_0= RULE_LETTER ) ) ( ( (lv_LETTER_1_0= RULE_LETTER ) ) | ( (lv_DECIMAL_DIGIT_2_0= RULE_DECIMAL_DIGIT ) ) )* )
            // InternalGo.g:8698:3: ( (lv_LETTER_0_0= RULE_LETTER ) ) ( ( (lv_LETTER_1_0= RULE_LETTER ) ) | ( (lv_DECIMAL_DIGIT_2_0= RULE_DECIMAL_DIGIT ) ) )*
            {
            // InternalGo.g:8698:3: ( (lv_LETTER_0_0= RULE_LETTER ) )
            // InternalGo.g:8699:4: (lv_LETTER_0_0= RULE_LETTER )
            {
            // InternalGo.g:8699:4: (lv_LETTER_0_0= RULE_LETTER )
            // InternalGo.g:8700:5: lv_LETTER_0_0= RULE_LETTER
            {
            lv_LETTER_0_0=(Token)match(input,RULE_LETTER,FOLLOW_68); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_LETTER_0_0, grammarAccess.getIdentifierAccess().getLETTERLETTERTerminalRuleCall_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getIdentifierRule());
              					}
              					addWithLastConsumed(
              						current,
              						"LETTER",
              						lv_LETTER_0_0,
              						"com.ufcg.compiladores.Go.LETTER");
              				
            }

            }


            }

            // InternalGo.g:8716:3: ( ( (lv_LETTER_1_0= RULE_LETTER ) ) | ( (lv_DECIMAL_DIGIT_2_0= RULE_DECIMAL_DIGIT ) ) )*
            loop102:
            do {
                int alt102=3;
                int LA102_0 = input.LA(1);

                if ( (LA102_0==RULE_LETTER) ) {
                    int LA102_2 = input.LA(2);

                    if ( (synpred167_InternalGo()) ) {
                        alt102=1;
                    }


                }
                else if ( (LA102_0==RULE_DECIMAL_DIGIT) ) {
                    alt102=2;
                }


                switch (alt102) {
            	case 1 :
            	    // InternalGo.g:8717:4: ( (lv_LETTER_1_0= RULE_LETTER ) )
            	    {
            	    // InternalGo.g:8717:4: ( (lv_LETTER_1_0= RULE_LETTER ) )
            	    // InternalGo.g:8718:5: (lv_LETTER_1_0= RULE_LETTER )
            	    {
            	    // InternalGo.g:8718:5: (lv_LETTER_1_0= RULE_LETTER )
            	    // InternalGo.g:8719:6: lv_LETTER_1_0= RULE_LETTER
            	    {
            	    lv_LETTER_1_0=(Token)match(input,RULE_LETTER,FOLLOW_68); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						newLeafNode(lv_LETTER_1_0, grammarAccess.getIdentifierAccess().getLETTERLETTERTerminalRuleCall_1_0_0());
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElement(grammarAccess.getIdentifierRule());
            	      						}
            	      						addWithLastConsumed(
            	      							current,
            	      							"LETTER",
            	      							lv_LETTER_1_0,
            	      							"com.ufcg.compiladores.Go.LETTER");
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalGo.g:8736:4: ( (lv_DECIMAL_DIGIT_2_0= RULE_DECIMAL_DIGIT ) )
            	    {
            	    // InternalGo.g:8736:4: ( (lv_DECIMAL_DIGIT_2_0= RULE_DECIMAL_DIGIT ) )
            	    // InternalGo.g:8737:5: (lv_DECIMAL_DIGIT_2_0= RULE_DECIMAL_DIGIT )
            	    {
            	    // InternalGo.g:8737:5: (lv_DECIMAL_DIGIT_2_0= RULE_DECIMAL_DIGIT )
            	    // InternalGo.g:8738:6: lv_DECIMAL_DIGIT_2_0= RULE_DECIMAL_DIGIT
            	    {
            	    lv_DECIMAL_DIGIT_2_0=(Token)match(input,RULE_DECIMAL_DIGIT,FOLLOW_68); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						newLeafNode(lv_DECIMAL_DIGIT_2_0, grammarAccess.getIdentifierAccess().getDECIMAL_DIGITDECIMAL_DIGITTerminalRuleCall_1_1_0());
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElement(grammarAccess.getIdentifierRule());
            	      						}
            	      						addWithLastConsumed(
            	      							current,
            	      							"DECIMAL_DIGIT",
            	      							lv_DECIMAL_DIGIT_2_0,
            	      							"com.ufcg.compiladores.Go.DECIMAL_DIGIT");
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop102;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleidentifier"


    // $ANTLR start "entryRuleint_lit"
    // InternalGo.g:8759:1: entryRuleint_lit returns [String current=null] : iv_ruleint_lit= ruleint_lit EOF ;
    public final String entryRuleint_lit() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleint_lit = null;


        try {
            // InternalGo.g:8759:47: (iv_ruleint_lit= ruleint_lit EOF )
            // InternalGo.g:8760:2: iv_ruleint_lit= ruleint_lit EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getInt_litRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleint_lit=ruleint_lit();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleint_lit.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleint_lit"


    // $ANTLR start "ruleint_lit"
    // InternalGo.g:8766:1: ruleint_lit returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_decimal_lit_0= ruledecimal_lit | this_octal_lit_1= ruleoctal_lit | this_hex_lit_2= rulehex_lit ) ;
    public final AntlrDatatypeRuleToken ruleint_lit() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        AntlrDatatypeRuleToken this_decimal_lit_0 = null;

        AntlrDatatypeRuleToken this_octal_lit_1 = null;

        AntlrDatatypeRuleToken this_hex_lit_2 = null;



        	enterRule();

        try {
            // InternalGo.g:8772:2: ( (this_decimal_lit_0= ruledecimal_lit | this_octal_lit_1= ruleoctal_lit | this_hex_lit_2= rulehex_lit ) )
            // InternalGo.g:8773:2: (this_decimal_lit_0= ruledecimal_lit | this_octal_lit_1= ruleoctal_lit | this_hex_lit_2= rulehex_lit )
            {
            // InternalGo.g:8773:2: (this_decimal_lit_0= ruledecimal_lit | this_octal_lit_1= ruleoctal_lit | this_hex_lit_2= rulehex_lit )
            int alt103=3;
            int LA103_0 = input.LA(1);

            if ( (LA103_0==RULE_DECIMAL_DIGIT) ) {
                alt103=1;
            }
            else if ( (LA103_0==79) ) {
                int LA103_2 = input.LA(2);

                if ( ((LA103_2>=80 && LA103_2<=81)) ) {
                    alt103=3;
                }
                else if ( (LA103_2==EOF||LA103_2==RULE_ANY_OTHER||LA103_2==RULE_OCTAL_DIGIT||LA103_2==18||(LA103_2>=20 && LA103_2<=21)) ) {
                    alt103=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 103, 2, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 103, 0, input);

                throw nvae;
            }
            switch (alt103) {
                case 1 :
                    // InternalGo.g:8774:3: this_decimal_lit_0= ruledecimal_lit
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getInt_litAccess().getDecimal_litParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_decimal_lit_0=ruledecimal_lit();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_decimal_lit_0);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalGo.g:8785:3: this_octal_lit_1= ruleoctal_lit
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getInt_litAccess().getOctal_litParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_octal_lit_1=ruleoctal_lit();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_octal_lit_1);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalGo.g:8796:3: this_hex_lit_2= rulehex_lit
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getInt_litAccess().getHex_litParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_hex_lit_2=rulehex_lit();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_hex_lit_2);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleint_lit"


    // $ANTLR start "entryRuledecimal_lit"
    // InternalGo.g:8810:1: entryRuledecimal_lit returns [String current=null] : iv_ruledecimal_lit= ruledecimal_lit EOF ;
    public final String entryRuledecimal_lit() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruledecimal_lit = null;


        try {
            // InternalGo.g:8810:51: (iv_ruledecimal_lit= ruledecimal_lit EOF )
            // InternalGo.g:8811:2: iv_ruledecimal_lit= ruledecimal_lit EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDecimal_litRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruledecimal_lit=ruledecimal_lit();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruledecimal_lit.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuledecimal_lit"


    // $ANTLR start "ruledecimal_lit"
    // InternalGo.g:8817:1: ruledecimal_lit returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_DECIMAL_DIGIT_0= RULE_DECIMAL_DIGIT (this_DECIMAL_DIGIT_1= RULE_DECIMAL_DIGIT )* ) ;
    public final AntlrDatatypeRuleToken ruledecimal_lit() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_DECIMAL_DIGIT_0=null;
        Token this_DECIMAL_DIGIT_1=null;


        	enterRule();

        try {
            // InternalGo.g:8823:2: ( (this_DECIMAL_DIGIT_0= RULE_DECIMAL_DIGIT (this_DECIMAL_DIGIT_1= RULE_DECIMAL_DIGIT )* ) )
            // InternalGo.g:8824:2: (this_DECIMAL_DIGIT_0= RULE_DECIMAL_DIGIT (this_DECIMAL_DIGIT_1= RULE_DECIMAL_DIGIT )* )
            {
            // InternalGo.g:8824:2: (this_DECIMAL_DIGIT_0= RULE_DECIMAL_DIGIT (this_DECIMAL_DIGIT_1= RULE_DECIMAL_DIGIT )* )
            // InternalGo.g:8825:3: this_DECIMAL_DIGIT_0= RULE_DECIMAL_DIGIT (this_DECIMAL_DIGIT_1= RULE_DECIMAL_DIGIT )*
            {
            this_DECIMAL_DIGIT_0=(Token)match(input,RULE_DECIMAL_DIGIT,FOLLOW_69); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_DECIMAL_DIGIT_0);
              		
            }
            if ( state.backtracking==0 ) {

              			newLeafNode(this_DECIMAL_DIGIT_0, grammarAccess.getDecimal_litAccess().getDECIMAL_DIGITTerminalRuleCall_0());
              		
            }
            // InternalGo.g:8832:3: (this_DECIMAL_DIGIT_1= RULE_DECIMAL_DIGIT )*
            loop104:
            do {
                int alt104=2;
                int LA104_0 = input.LA(1);

                if ( (LA104_0==RULE_DECIMAL_DIGIT) ) {
                    alt104=1;
                }


                switch (alt104) {
            	case 1 :
            	    // InternalGo.g:8833:4: this_DECIMAL_DIGIT_1= RULE_DECIMAL_DIGIT
            	    {
            	    this_DECIMAL_DIGIT_1=(Token)match(input,RULE_DECIMAL_DIGIT,FOLLOW_69); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				current.merge(this_DECIMAL_DIGIT_1);
            	      			
            	    }
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(this_DECIMAL_DIGIT_1, grammarAccess.getDecimal_litAccess().getDECIMAL_DIGITTerminalRuleCall_1());
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop104;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruledecimal_lit"


    // $ANTLR start "entryRuleoctal_lit"
    // InternalGo.g:8845:1: entryRuleoctal_lit returns [String current=null] : iv_ruleoctal_lit= ruleoctal_lit EOF ;
    public final String entryRuleoctal_lit() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleoctal_lit = null;


        try {
            // InternalGo.g:8845:49: (iv_ruleoctal_lit= ruleoctal_lit EOF )
            // InternalGo.g:8846:2: iv_ruleoctal_lit= ruleoctal_lit EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOctal_litRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleoctal_lit=ruleoctal_lit();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleoctal_lit.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleoctal_lit"


    // $ANTLR start "ruleoctal_lit"
    // InternalGo.g:8852:1: ruleoctal_lit returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '0' (this_OCTAL_DIGIT_1= RULE_OCTAL_DIGIT )* ) ;
    public final AntlrDatatypeRuleToken ruleoctal_lit() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        Token this_OCTAL_DIGIT_1=null;


        	enterRule();

        try {
            // InternalGo.g:8858:2: ( (kw= '0' (this_OCTAL_DIGIT_1= RULE_OCTAL_DIGIT )* ) )
            // InternalGo.g:8859:2: (kw= '0' (this_OCTAL_DIGIT_1= RULE_OCTAL_DIGIT )* )
            {
            // InternalGo.g:8859:2: (kw= '0' (this_OCTAL_DIGIT_1= RULE_OCTAL_DIGIT )* )
            // InternalGo.g:8860:3: kw= '0' (this_OCTAL_DIGIT_1= RULE_OCTAL_DIGIT )*
            {
            kw=(Token)match(input,79,FOLLOW_70); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getOctal_litAccess().getDigitZeroKeyword_0());
              		
            }
            // InternalGo.g:8865:3: (this_OCTAL_DIGIT_1= RULE_OCTAL_DIGIT )*
            loop105:
            do {
                int alt105=2;
                int LA105_0 = input.LA(1);

                if ( (LA105_0==RULE_OCTAL_DIGIT) ) {
                    alt105=1;
                }


                switch (alt105) {
            	case 1 :
            	    // InternalGo.g:8866:4: this_OCTAL_DIGIT_1= RULE_OCTAL_DIGIT
            	    {
            	    this_OCTAL_DIGIT_1=(Token)match(input,RULE_OCTAL_DIGIT,FOLLOW_70); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				current.merge(this_OCTAL_DIGIT_1);
            	      			
            	    }
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(this_OCTAL_DIGIT_1, grammarAccess.getOctal_litAccess().getOCTAL_DIGITTerminalRuleCall_1());
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop105;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleoctal_lit"


    // $ANTLR start "entryRulehex_lit"
    // InternalGo.g:8878:1: entryRulehex_lit returns [String current=null] : iv_rulehex_lit= rulehex_lit EOF ;
    public final String entryRulehex_lit() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_rulehex_lit = null;


        try {
            // InternalGo.g:8878:47: (iv_rulehex_lit= rulehex_lit EOF )
            // InternalGo.g:8879:2: iv_rulehex_lit= rulehex_lit EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getHex_litRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulehex_lit=rulehex_lit();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulehex_lit.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulehex_lit"


    // $ANTLR start "rulehex_lit"
    // InternalGo.g:8885:1: rulehex_lit returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '0' (kw= 'x' | kw= 'X' ) this_HEX_DIGIT_3= RULE_HEX_DIGIT (this_HEX_DIGIT_4= RULE_HEX_DIGIT )* ) ;
    public final AntlrDatatypeRuleToken rulehex_lit() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        Token this_HEX_DIGIT_3=null;
        Token this_HEX_DIGIT_4=null;


        	enterRule();

        try {
            // InternalGo.g:8891:2: ( (kw= '0' (kw= 'x' | kw= 'X' ) this_HEX_DIGIT_3= RULE_HEX_DIGIT (this_HEX_DIGIT_4= RULE_HEX_DIGIT )* ) )
            // InternalGo.g:8892:2: (kw= '0' (kw= 'x' | kw= 'X' ) this_HEX_DIGIT_3= RULE_HEX_DIGIT (this_HEX_DIGIT_4= RULE_HEX_DIGIT )* )
            {
            // InternalGo.g:8892:2: (kw= '0' (kw= 'x' | kw= 'X' ) this_HEX_DIGIT_3= RULE_HEX_DIGIT (this_HEX_DIGIT_4= RULE_HEX_DIGIT )* )
            // InternalGo.g:8893:3: kw= '0' (kw= 'x' | kw= 'X' ) this_HEX_DIGIT_3= RULE_HEX_DIGIT (this_HEX_DIGIT_4= RULE_HEX_DIGIT )*
            {
            kw=(Token)match(input,79,FOLLOW_71); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getHex_litAccess().getDigitZeroKeyword_0());
              		
            }
            // InternalGo.g:8898:3: (kw= 'x' | kw= 'X' )
            int alt106=2;
            int LA106_0 = input.LA(1);

            if ( (LA106_0==80) ) {
                alt106=1;
            }
            else if ( (LA106_0==81) ) {
                alt106=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 106, 0, input);

                throw nvae;
            }
            switch (alt106) {
                case 1 :
                    // InternalGo.g:8899:4: kw= 'x'
                    {
                    kw=(Token)match(input,80,FOLLOW_72); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getHex_litAccess().getXKeyword_1_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalGo.g:8905:4: kw= 'X'
                    {
                    kw=(Token)match(input,81,FOLLOW_72); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getHex_litAccess().getXKeyword_1_1());
                      			
                    }

                    }
                    break;

            }

            this_HEX_DIGIT_3=(Token)match(input,RULE_HEX_DIGIT,FOLLOW_73); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_HEX_DIGIT_3);
              		
            }
            if ( state.backtracking==0 ) {

              			newLeafNode(this_HEX_DIGIT_3, grammarAccess.getHex_litAccess().getHEX_DIGITTerminalRuleCall_2());
              		
            }
            // InternalGo.g:8918:3: (this_HEX_DIGIT_4= RULE_HEX_DIGIT )*
            loop107:
            do {
                int alt107=2;
                int LA107_0 = input.LA(1);

                if ( (LA107_0==RULE_HEX_DIGIT) ) {
                    alt107=1;
                }


                switch (alt107) {
            	case 1 :
            	    // InternalGo.g:8919:4: this_HEX_DIGIT_4= RULE_HEX_DIGIT
            	    {
            	    this_HEX_DIGIT_4=(Token)match(input,RULE_HEX_DIGIT,FOLLOW_73); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				current.merge(this_HEX_DIGIT_4);
            	      			
            	    }
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(this_HEX_DIGIT_4, grammarAccess.getHex_litAccess().getHEX_DIGITTerminalRuleCall_3());
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop107;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulehex_lit"


    // $ANTLR start "entryRulefloat_lit"
    // InternalGo.g:8931:1: entryRulefloat_lit returns [EObject current=null] : iv_rulefloat_lit= rulefloat_lit EOF ;
    public final EObject entryRulefloat_lit() throws RecognitionException {
        EObject current = null;

        EObject iv_rulefloat_lit = null;


        try {
            // InternalGo.g:8931:50: (iv_rulefloat_lit= rulefloat_lit EOF )
            // InternalGo.g:8932:2: iv_rulefloat_lit= rulefloat_lit EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFloat_litRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulefloat_lit=rulefloat_lit();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulefloat_lit; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulefloat_lit"


    // $ANTLR start "rulefloat_lit"
    // InternalGo.g:8938:1: rulefloat_lit returns [EObject current=null] : ( (this_decimals_0= ruledecimals otherlv_1= '.' ( (lv_decimals_2_0= ruledecimals ) )? ( (lv_exponent_3_0= ruleexponent ) )? ) | (this_decimals_4= ruledecimals ( (lv_exponent_5_0= ruleexponent ) ) ) | (otherlv_6= '.' this_decimals_7= ruledecimals ( (lv_exponen_8_0= ruleexponent ) )? ) ) ;
    public final EObject rulefloat_lit() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_6=null;
        EObject this_decimals_0 = null;

        EObject lv_decimals_2_0 = null;

        EObject lv_exponent_3_0 = null;

        EObject this_decimals_4 = null;

        EObject lv_exponent_5_0 = null;

        EObject this_decimals_7 = null;

        EObject lv_exponen_8_0 = null;



        	enterRule();

        try {
            // InternalGo.g:8944:2: ( ( (this_decimals_0= ruledecimals otherlv_1= '.' ( (lv_decimals_2_0= ruledecimals ) )? ( (lv_exponent_3_0= ruleexponent ) )? ) | (this_decimals_4= ruledecimals ( (lv_exponent_5_0= ruleexponent ) ) ) | (otherlv_6= '.' this_decimals_7= ruledecimals ( (lv_exponen_8_0= ruleexponent ) )? ) ) )
            // InternalGo.g:8945:2: ( (this_decimals_0= ruledecimals otherlv_1= '.' ( (lv_decimals_2_0= ruledecimals ) )? ( (lv_exponent_3_0= ruleexponent ) )? ) | (this_decimals_4= ruledecimals ( (lv_exponent_5_0= ruleexponent ) ) ) | (otherlv_6= '.' this_decimals_7= ruledecimals ( (lv_exponen_8_0= ruleexponent ) )? ) )
            {
            // InternalGo.g:8945:2: ( (this_decimals_0= ruledecimals otherlv_1= '.' ( (lv_decimals_2_0= ruledecimals ) )? ( (lv_exponent_3_0= ruleexponent ) )? ) | (this_decimals_4= ruledecimals ( (lv_exponent_5_0= ruleexponent ) ) ) | (otherlv_6= '.' this_decimals_7= ruledecimals ( (lv_exponen_8_0= ruleexponent ) )? ) )
            int alt111=3;
            alt111 = dfa111.predict(input);
            switch (alt111) {
                case 1 :
                    // InternalGo.g:8946:3: (this_decimals_0= ruledecimals otherlv_1= '.' ( (lv_decimals_2_0= ruledecimals ) )? ( (lv_exponent_3_0= ruleexponent ) )? )
                    {
                    // InternalGo.g:8946:3: (this_decimals_0= ruledecimals otherlv_1= '.' ( (lv_decimals_2_0= ruledecimals ) )? ( (lv_exponent_3_0= ruleexponent ) )? )
                    // InternalGo.g:8947:4: this_decimals_0= ruledecimals otherlv_1= '.' ( (lv_decimals_2_0= ruledecimals ) )? ( (lv_exponent_3_0= ruleexponent ) )?
                    {
                    if ( state.backtracking==0 ) {

                      				/* */
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getFloat_litAccess().getDecimalsParserRuleCall_0_0());
                      			
                    }
                    pushFollow(FOLLOW_36);
                    this_decimals_0=ruledecimals();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_decimals_0;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    otherlv_1=(Token)match(input,20,FOLLOW_74); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getFloat_litAccess().getFullStopKeyword_0_1());
                      			
                    }
                    // InternalGo.g:8962:4: ( (lv_decimals_2_0= ruledecimals ) )?
                    int alt108=2;
                    int LA108_0 = input.LA(1);

                    if ( (LA108_0==RULE_DECIMAL_DIGIT) ) {
                        alt108=1;
                    }
                    switch (alt108) {
                        case 1 :
                            // InternalGo.g:8963:5: (lv_decimals_2_0= ruledecimals )
                            {
                            // InternalGo.g:8963:5: (lv_decimals_2_0= ruledecimals )
                            // InternalGo.g:8964:6: lv_decimals_2_0= ruledecimals
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getFloat_litAccess().getDecimalsDecimalsParserRuleCall_0_2_0());
                              					
                            }
                            pushFollow(FOLLOW_75);
                            lv_decimals_2_0=ruledecimals();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getFloat_litRule());
                              						}
                              						set(
                              							current,
                              							"decimals",
                              							lv_decimals_2_0,
                              							"com.ufcg.compiladores.Go.decimals");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalGo.g:8981:4: ( (lv_exponent_3_0= ruleexponent ) )?
                    int alt109=2;
                    int LA109_0 = input.LA(1);

                    if ( ((LA109_0>=86 && LA109_0<=87)) ) {
                        alt109=1;
                    }
                    switch (alt109) {
                        case 1 :
                            // InternalGo.g:8982:5: (lv_exponent_3_0= ruleexponent )
                            {
                            // InternalGo.g:8982:5: (lv_exponent_3_0= ruleexponent )
                            // InternalGo.g:8983:6: lv_exponent_3_0= ruleexponent
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getFloat_litAccess().getExponentExponentParserRuleCall_0_3_0());
                              					
                            }
                            pushFollow(FOLLOW_2);
                            lv_exponent_3_0=ruleexponent();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getFloat_litRule());
                              						}
                              						set(
                              							current,
                              							"exponent",
                              							lv_exponent_3_0,
                              							"com.ufcg.compiladores.Go.exponent");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:9002:3: (this_decimals_4= ruledecimals ( (lv_exponent_5_0= ruleexponent ) ) )
                    {
                    // InternalGo.g:9002:3: (this_decimals_4= ruledecimals ( (lv_exponent_5_0= ruleexponent ) ) )
                    // InternalGo.g:9003:4: this_decimals_4= ruledecimals ( (lv_exponent_5_0= ruleexponent ) )
                    {
                    if ( state.backtracking==0 ) {

                      				/* */
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getFloat_litAccess().getDecimalsParserRuleCall_1_0());
                      			
                    }
                    pushFollow(FOLLOW_76);
                    this_decimals_4=ruledecimals();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_decimals_4;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    // InternalGo.g:9014:4: ( (lv_exponent_5_0= ruleexponent ) )
                    // InternalGo.g:9015:5: (lv_exponent_5_0= ruleexponent )
                    {
                    // InternalGo.g:9015:5: (lv_exponent_5_0= ruleexponent )
                    // InternalGo.g:9016:6: lv_exponent_5_0= ruleexponent
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getFloat_litAccess().getExponentExponentParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_exponent_5_0=ruleexponent();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getFloat_litRule());
                      						}
                      						set(
                      							current,
                      							"exponent",
                      							lv_exponent_5_0,
                      							"com.ufcg.compiladores.Go.exponent");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalGo.g:9035:3: (otherlv_6= '.' this_decimals_7= ruledecimals ( (lv_exponen_8_0= ruleexponent ) )? )
                    {
                    // InternalGo.g:9035:3: (otherlv_6= '.' this_decimals_7= ruledecimals ( (lv_exponen_8_0= ruleexponent ) )? )
                    // InternalGo.g:9036:4: otherlv_6= '.' this_decimals_7= ruledecimals ( (lv_exponen_8_0= ruleexponent ) )?
                    {
                    otherlv_6=(Token)match(input,20,FOLLOW_45); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getFloat_litAccess().getFullStopKeyword_2_0());
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				/* */
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getFloat_litAccess().getDecimalsParserRuleCall_2_1());
                      			
                    }
                    pushFollow(FOLLOW_75);
                    this_decimals_7=ruledecimals();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_decimals_7;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    // InternalGo.g:9051:4: ( (lv_exponen_8_0= ruleexponent ) )?
                    int alt110=2;
                    int LA110_0 = input.LA(1);

                    if ( ((LA110_0>=86 && LA110_0<=87)) ) {
                        alt110=1;
                    }
                    switch (alt110) {
                        case 1 :
                            // InternalGo.g:9052:5: (lv_exponen_8_0= ruleexponent )
                            {
                            // InternalGo.g:9052:5: (lv_exponen_8_0= ruleexponent )
                            // InternalGo.g:9053:6: lv_exponen_8_0= ruleexponent
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getFloat_litAccess().getExponenExponentParserRuleCall_2_2_0());
                              					
                            }
                            pushFollow(FOLLOW_2);
                            lv_exponen_8_0=ruleexponent();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getFloat_litRule());
                              						}
                              						set(
                              							current,
                              							"exponen",
                              							lv_exponen_8_0,
                              							"com.ufcg.compiladores.Go.exponent");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulefloat_lit"


    // $ANTLR start "entryRulestring_lit"
    // InternalGo.g:9075:1: entryRulestring_lit returns [EObject current=null] : iv_rulestring_lit= rulestring_lit EOF ;
    public final EObject entryRulestring_lit() throws RecognitionException {
        EObject current = null;

        EObject iv_rulestring_lit = null;


        try {
            // InternalGo.g:9075:51: (iv_rulestring_lit= rulestring_lit EOF )
            // InternalGo.g:9076:2: iv_rulestring_lit= rulestring_lit EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getString_litRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulestring_lit=rulestring_lit();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulestring_lit; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulestring_lit"


    // $ANTLR start "rulestring_lit"
    // InternalGo.g:9082:1: rulestring_lit returns [EObject current=null] : ( ( (lv_raw_string_lit_0_0= ruleraw_string_lit ) ) | ( (lv_interpreted_string_lit_1_0= ruleinterpreted_string_lit ) ) ) ;
    public final EObject rulestring_lit() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_raw_string_lit_0_0 = null;

        AntlrDatatypeRuleToken lv_interpreted_string_lit_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:9088:2: ( ( ( (lv_raw_string_lit_0_0= ruleraw_string_lit ) ) | ( (lv_interpreted_string_lit_1_0= ruleinterpreted_string_lit ) ) ) )
            // InternalGo.g:9089:2: ( ( (lv_raw_string_lit_0_0= ruleraw_string_lit ) ) | ( (lv_interpreted_string_lit_1_0= ruleinterpreted_string_lit ) ) )
            {
            // InternalGo.g:9089:2: ( ( (lv_raw_string_lit_0_0= ruleraw_string_lit ) ) | ( (lv_interpreted_string_lit_1_0= ruleinterpreted_string_lit ) ) )
            int alt112=2;
            int LA112_0 = input.LA(1);

            if ( (LA112_0==82) ) {
                alt112=1;
            }
            else if ( (LA112_0==83) ) {
                alt112=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 112, 0, input);

                throw nvae;
            }
            switch (alt112) {
                case 1 :
                    // InternalGo.g:9090:3: ( (lv_raw_string_lit_0_0= ruleraw_string_lit ) )
                    {
                    // InternalGo.g:9090:3: ( (lv_raw_string_lit_0_0= ruleraw_string_lit ) )
                    // InternalGo.g:9091:4: (lv_raw_string_lit_0_0= ruleraw_string_lit )
                    {
                    // InternalGo.g:9091:4: (lv_raw_string_lit_0_0= ruleraw_string_lit )
                    // InternalGo.g:9092:5: lv_raw_string_lit_0_0= ruleraw_string_lit
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getString_litAccess().getRaw_string_litRaw_string_litParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_raw_string_lit_0_0=ruleraw_string_lit();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getString_litRule());
                      					}
                      					set(
                      						current,
                      						"raw_string_lit",
                      						lv_raw_string_lit_0_0,
                      						"com.ufcg.compiladores.Go.raw_string_lit");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:9110:3: ( (lv_interpreted_string_lit_1_0= ruleinterpreted_string_lit ) )
                    {
                    // InternalGo.g:9110:3: ( (lv_interpreted_string_lit_1_0= ruleinterpreted_string_lit ) )
                    // InternalGo.g:9111:4: (lv_interpreted_string_lit_1_0= ruleinterpreted_string_lit )
                    {
                    // InternalGo.g:9111:4: (lv_interpreted_string_lit_1_0= ruleinterpreted_string_lit )
                    // InternalGo.g:9112:5: lv_interpreted_string_lit_1_0= ruleinterpreted_string_lit
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getString_litAccess().getInterpreted_string_litInterpreted_string_litParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_interpreted_string_lit_1_0=ruleinterpreted_string_lit();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getString_litRule());
                      					}
                      					set(
                      						current,
                      						"interpreted_string_lit",
                      						lv_interpreted_string_lit_1_0,
                      						"com.ufcg.compiladores.Go.interpreted_string_lit");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulestring_lit"


    // $ANTLR start "entryRuleraw_string_lit"
    // InternalGo.g:9133:1: entryRuleraw_string_lit returns [String current=null] : iv_ruleraw_string_lit= ruleraw_string_lit EOF ;
    public final String entryRuleraw_string_lit() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleraw_string_lit = null;


        try {
            // InternalGo.g:9133:54: (iv_ruleraw_string_lit= ruleraw_string_lit EOF )
            // InternalGo.g:9134:2: iv_ruleraw_string_lit= ruleraw_string_lit EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRaw_string_litRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleraw_string_lit=ruleraw_string_lit();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleraw_string_lit.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleraw_string_lit"


    // $ANTLR start "ruleraw_string_lit"
    // InternalGo.g:9140:1: ruleraw_string_lit returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '\\'' (this_unicode_char_1= ruleunicode_char | this_newline_2= rulenewline )? kw= '\\'' ) ;
    public final AntlrDatatypeRuleToken ruleraw_string_lit() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_unicode_char_1 = null;

        AntlrDatatypeRuleToken this_newline_2 = null;



        	enterRule();

        try {
            // InternalGo.g:9146:2: ( (kw= '\\'' (this_unicode_char_1= ruleunicode_char | this_newline_2= rulenewline )? kw= '\\'' ) )
            // InternalGo.g:9147:2: (kw= '\\'' (this_unicode_char_1= ruleunicode_char | this_newline_2= rulenewline )? kw= '\\'' )
            {
            // InternalGo.g:9147:2: (kw= '\\'' (this_unicode_char_1= ruleunicode_char | this_newline_2= rulenewline )? kw= '\\'' )
            // InternalGo.g:9148:3: kw= '\\'' (this_unicode_char_1= ruleunicode_char | this_newline_2= rulenewline )? kw= '\\''
            {
            kw=(Token)match(input,82,FOLLOW_77); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getRaw_string_litAccess().getApostropheKeyword_0());
              		
            }
            // InternalGo.g:9153:3: (this_unicode_char_1= ruleunicode_char | this_newline_2= rulenewline )?
            int alt113=3;
            int LA113_0 = input.LA(1);

            if ( (LA113_0==20||LA113_0==27||LA113_0==58||LA113_0==84) ) {
                alt113=1;
            }
            else if ( (LA113_0==85) ) {
                alt113=2;
            }
            switch (alt113) {
                case 1 :
                    // InternalGo.g:9154:4: this_unicode_char_1= ruleunicode_char
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getRaw_string_litAccess().getUnicode_charParserRuleCall_1_0());
                      			
                    }
                    pushFollow(FOLLOW_78);
                    this_unicode_char_1=ruleunicode_char();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_unicode_char_1);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalGo.g:9165:4: this_newline_2= rulenewline
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getRaw_string_litAccess().getNewlineParserRuleCall_1_1());
                      			
                    }
                    pushFollow(FOLLOW_78);
                    this_newline_2=rulenewline();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_newline_2);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }

            kw=(Token)match(input,82,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getRaw_string_litAccess().getApostropheKeyword_2());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleraw_string_lit"


    // $ANTLR start "entryRuleinterpreted_string_lit"
    // InternalGo.g:9185:1: entryRuleinterpreted_string_lit returns [String current=null] : iv_ruleinterpreted_string_lit= ruleinterpreted_string_lit EOF ;
    public final String entryRuleinterpreted_string_lit() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleinterpreted_string_lit = null;


        try {
            // InternalGo.g:9185:62: (iv_ruleinterpreted_string_lit= ruleinterpreted_string_lit EOF )
            // InternalGo.g:9186:2: iv_ruleinterpreted_string_lit= ruleinterpreted_string_lit EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getInterpreted_string_litRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleinterpreted_string_lit=ruleinterpreted_string_lit();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleinterpreted_string_lit.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleinterpreted_string_lit"


    // $ANTLR start "ruleinterpreted_string_lit"
    // InternalGo.g:9192:1: ruleinterpreted_string_lit returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '\"' (this_unicode_value_1= ruleunicode_value | this_byte_value_2= rulebyte_value )? kw= '\"' ) ;
    public final AntlrDatatypeRuleToken ruleinterpreted_string_lit() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_unicode_value_1 = null;

        AntlrDatatypeRuleToken this_byte_value_2 = null;



        	enterRule();

        try {
            // InternalGo.g:9198:2: ( (kw= '\"' (this_unicode_value_1= ruleunicode_value | this_byte_value_2= rulebyte_value )? kw= '\"' ) )
            // InternalGo.g:9199:2: (kw= '\"' (this_unicode_value_1= ruleunicode_value | this_byte_value_2= rulebyte_value )? kw= '\"' )
            {
            // InternalGo.g:9199:2: (kw= '\"' (this_unicode_value_1= ruleunicode_value | this_byte_value_2= rulebyte_value )? kw= '\"' )
            // InternalGo.g:9200:3: kw= '\"' (this_unicode_value_1= ruleunicode_value | this_byte_value_2= rulebyte_value )? kw= '\"'
            {
            kw=(Token)match(input,83,FOLLOW_79); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getInterpreted_string_litAccess().getQuotationMarkKeyword_0());
              		
            }
            // InternalGo.g:9205:3: (this_unicode_value_1= ruleunicode_value | this_byte_value_2= rulebyte_value )?
            int alt114=3;
            int LA114_0 = input.LA(1);

            if ( (LA114_0==RULE_LETTER) ) {
                alt114=1;
            }
            else if ( (LA114_0==82) ) {
                int LA114_2 = input.LA(2);

                if ( (LA114_2==RULE_OCTAL_DIGIT||LA114_2==80) ) {
                    alt114=2;
                }
                else if ( ((LA114_2>=82 && LA114_2<=83)||(LA114_2>=88 && LA114_2<=96)) ) {
                    alt114=1;
                }
            }
            switch (alt114) {
                case 1 :
                    // InternalGo.g:9206:4: this_unicode_value_1= ruleunicode_value
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getInterpreted_string_litAccess().getUnicode_valueParserRuleCall_1_0());
                      			
                    }
                    pushFollow(FOLLOW_80);
                    this_unicode_value_1=ruleunicode_value();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_unicode_value_1);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalGo.g:9217:4: this_byte_value_2= rulebyte_value
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getInterpreted_string_litAccess().getByte_valueParserRuleCall_1_1());
                      			
                    }
                    pushFollow(FOLLOW_80);
                    this_byte_value_2=rulebyte_value();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_byte_value_2);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }

            kw=(Token)match(input,83,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getInterpreted_string_litAccess().getQuotationMarkKeyword_2());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleinterpreted_string_lit"


    // $ANTLR start "entryRuleunicode_char"
    // InternalGo.g:9237:1: entryRuleunicode_char returns [String current=null] : iv_ruleunicode_char= ruleunicode_char EOF ;
    public final String entryRuleunicode_char() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleunicode_char = null;


        try {
            // InternalGo.g:9237:52: (iv_ruleunicode_char= ruleunicode_char EOF )
            // InternalGo.g:9238:2: iv_ruleunicode_char= ruleunicode_char EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUnicode_charRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleunicode_char=ruleunicode_char();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleunicode_char.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleunicode_char"


    // $ANTLR start "ruleunicode_char"
    // InternalGo.g:9244:1: ruleunicode_char returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '?' | kw= '.' | kw= ',' | kw= '!' ) ;
    public final AntlrDatatypeRuleToken ruleunicode_char() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalGo.g:9250:2: ( (kw= '?' | kw= '.' | kw= ',' | kw= '!' ) )
            // InternalGo.g:9251:2: (kw= '?' | kw= '.' | kw= ',' | kw= '!' )
            {
            // InternalGo.g:9251:2: (kw= '?' | kw= '.' | kw= ',' | kw= '!' )
            int alt115=4;
            switch ( input.LA(1) ) {
            case 84:
                {
                alt115=1;
                }
                break;
            case 20:
                {
                alt115=2;
                }
                break;
            case 27:
                {
                alt115=3;
                }
                break;
            case 58:
                {
                alt115=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 115, 0, input);

                throw nvae;
            }

            switch (alt115) {
                case 1 :
                    // InternalGo.g:9252:3: kw= '?'
                    {
                    kw=(Token)match(input,84,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUnicode_charAccess().getQuestionMarkKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalGo.g:9258:3: kw= '.'
                    {
                    kw=(Token)match(input,20,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUnicode_charAccess().getFullStopKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalGo.g:9264:3: kw= ','
                    {
                    kw=(Token)match(input,27,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUnicode_charAccess().getCommaKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalGo.g:9270:3: kw= '!'
                    {
                    kw=(Token)match(input,58,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUnicode_charAccess().getExclamationMarkKeyword_3());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleunicode_char"


    // $ANTLR start "entryRulenewline"
    // InternalGo.g:9279:1: entryRulenewline returns [String current=null] : iv_rulenewline= rulenewline EOF ;
    public final String entryRulenewline() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_rulenewline = null;


        try {
            // InternalGo.g:9279:47: (iv_rulenewline= rulenewline EOF )
            // InternalGo.g:9280:2: iv_rulenewline= rulenewline EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNewlineRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulenewline=rulenewline();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulenewline.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulenewline"


    // $ANTLR start "rulenewline"
    // InternalGo.g:9286:1: rulenewline returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= 'U+000A' ;
    public final AntlrDatatypeRuleToken rulenewline() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalGo.g:9292:2: (kw= 'U+000A' )
            // InternalGo.g:9293:2: kw= 'U+000A'
            {
            kw=(Token)match(input,85,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.getNewlineAccess().getU000AKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulenewline"


    // $ANTLR start "entryRuledecimals"
    // InternalGo.g:9301:1: entryRuledecimals returns [EObject current=null] : iv_ruledecimals= ruledecimals EOF ;
    public final EObject entryRuledecimals() throws RecognitionException {
        EObject current = null;

        EObject iv_ruledecimals = null;


        try {
            // InternalGo.g:9301:49: (iv_ruledecimals= ruledecimals EOF )
            // InternalGo.g:9302:2: iv_ruledecimals= ruledecimals EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDecimalsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruledecimals=ruledecimals();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruledecimals; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuledecimals"


    // $ANTLR start "ruledecimals"
    // InternalGo.g:9308:1: ruledecimals returns [EObject current=null] : ( ( (lv_DECIMAL_DIGIT_0_0= RULE_DECIMAL_DIGIT ) ) ( (lv_DECIMAL_DIGIT_1_0= RULE_DECIMAL_DIGIT ) )* ) ;
    public final EObject ruledecimals() throws RecognitionException {
        EObject current = null;

        Token lv_DECIMAL_DIGIT_0_0=null;
        Token lv_DECIMAL_DIGIT_1_0=null;


        	enterRule();

        try {
            // InternalGo.g:9314:2: ( ( ( (lv_DECIMAL_DIGIT_0_0= RULE_DECIMAL_DIGIT ) ) ( (lv_DECIMAL_DIGIT_1_0= RULE_DECIMAL_DIGIT ) )* ) )
            // InternalGo.g:9315:2: ( ( (lv_DECIMAL_DIGIT_0_0= RULE_DECIMAL_DIGIT ) ) ( (lv_DECIMAL_DIGIT_1_0= RULE_DECIMAL_DIGIT ) )* )
            {
            // InternalGo.g:9315:2: ( ( (lv_DECIMAL_DIGIT_0_0= RULE_DECIMAL_DIGIT ) ) ( (lv_DECIMAL_DIGIT_1_0= RULE_DECIMAL_DIGIT ) )* )
            // InternalGo.g:9316:3: ( (lv_DECIMAL_DIGIT_0_0= RULE_DECIMAL_DIGIT ) ) ( (lv_DECIMAL_DIGIT_1_0= RULE_DECIMAL_DIGIT ) )*
            {
            // InternalGo.g:9316:3: ( (lv_DECIMAL_DIGIT_0_0= RULE_DECIMAL_DIGIT ) )
            // InternalGo.g:9317:4: (lv_DECIMAL_DIGIT_0_0= RULE_DECIMAL_DIGIT )
            {
            // InternalGo.g:9317:4: (lv_DECIMAL_DIGIT_0_0= RULE_DECIMAL_DIGIT )
            // InternalGo.g:9318:5: lv_DECIMAL_DIGIT_0_0= RULE_DECIMAL_DIGIT
            {
            lv_DECIMAL_DIGIT_0_0=(Token)match(input,RULE_DECIMAL_DIGIT,FOLLOW_69); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_DECIMAL_DIGIT_0_0, grammarAccess.getDecimalsAccess().getDECIMAL_DIGITDECIMAL_DIGITTerminalRuleCall_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getDecimalsRule());
              					}
              					addWithLastConsumed(
              						current,
              						"DECIMAL_DIGIT",
              						lv_DECIMAL_DIGIT_0_0,
              						"com.ufcg.compiladores.Go.DECIMAL_DIGIT");
              				
            }

            }


            }

            // InternalGo.g:9334:3: ( (lv_DECIMAL_DIGIT_1_0= RULE_DECIMAL_DIGIT ) )*
            loop116:
            do {
                int alt116=2;
                int LA116_0 = input.LA(1);

                if ( (LA116_0==RULE_DECIMAL_DIGIT) ) {
                    alt116=1;
                }


                switch (alt116) {
            	case 1 :
            	    // InternalGo.g:9335:4: (lv_DECIMAL_DIGIT_1_0= RULE_DECIMAL_DIGIT )
            	    {
            	    // InternalGo.g:9335:4: (lv_DECIMAL_DIGIT_1_0= RULE_DECIMAL_DIGIT )
            	    // InternalGo.g:9336:5: lv_DECIMAL_DIGIT_1_0= RULE_DECIMAL_DIGIT
            	    {
            	    lv_DECIMAL_DIGIT_1_0=(Token)match(input,RULE_DECIMAL_DIGIT,FOLLOW_69); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					newLeafNode(lv_DECIMAL_DIGIT_1_0, grammarAccess.getDecimalsAccess().getDECIMAL_DIGITDECIMAL_DIGITTerminalRuleCall_1_0());
            	      				
            	    }
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElement(grammarAccess.getDecimalsRule());
            	      					}
            	      					addWithLastConsumed(
            	      						current,
            	      						"DECIMAL_DIGIT",
            	      						lv_DECIMAL_DIGIT_1_0,
            	      						"com.ufcg.compiladores.Go.DECIMAL_DIGIT");
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop116;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruledecimals"


    // $ANTLR start "entryRuleexponent"
    // InternalGo.g:9356:1: entryRuleexponent returns [EObject current=null] : iv_ruleexponent= ruleexponent EOF ;
    public final EObject entryRuleexponent() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleexponent = null;


        try {
            // InternalGo.g:9356:49: (iv_ruleexponent= ruleexponent EOF )
            // InternalGo.g:9357:2: iv_ruleexponent= ruleexponent EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExponentRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleexponent=ruleexponent();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleexponent; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleexponent"


    // $ANTLR start "ruleexponent"
    // InternalGo.g:9363:1: ruleexponent returns [EObject current=null] : ( (otherlv_0= 'e' | otherlv_1= 'E' ) (otherlv_2= '+' | otherlv_3= '-' )? ( (lv_decimals_4_0= ruledecimals ) ) ) ;
    public final EObject ruleexponent() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        EObject lv_decimals_4_0 = null;



        	enterRule();

        try {
            // InternalGo.g:9369:2: ( ( (otherlv_0= 'e' | otherlv_1= 'E' ) (otherlv_2= '+' | otherlv_3= '-' )? ( (lv_decimals_4_0= ruledecimals ) ) ) )
            // InternalGo.g:9370:2: ( (otherlv_0= 'e' | otherlv_1= 'E' ) (otherlv_2= '+' | otherlv_3= '-' )? ( (lv_decimals_4_0= ruledecimals ) ) )
            {
            // InternalGo.g:9370:2: ( (otherlv_0= 'e' | otherlv_1= 'E' ) (otherlv_2= '+' | otherlv_3= '-' )? ( (lv_decimals_4_0= ruledecimals ) ) )
            // InternalGo.g:9371:3: (otherlv_0= 'e' | otherlv_1= 'E' ) (otherlv_2= '+' | otherlv_3= '-' )? ( (lv_decimals_4_0= ruledecimals ) )
            {
            // InternalGo.g:9371:3: (otherlv_0= 'e' | otherlv_1= 'E' )
            int alt117=2;
            int LA117_0 = input.LA(1);

            if ( (LA117_0==86) ) {
                alt117=1;
            }
            else if ( (LA117_0==87) ) {
                alt117=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 117, 0, input);

                throw nvae;
            }
            switch (alt117) {
                case 1 :
                    // InternalGo.g:9372:4: otherlv_0= 'e'
                    {
                    otherlv_0=(Token)match(input,86,FOLLOW_81); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getExponentAccess().getEKeyword_0_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalGo.g:9377:4: otherlv_1= 'E'
                    {
                    otherlv_1=(Token)match(input,87,FOLLOW_81); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getExponentAccess().getEKeyword_0_1());
                      			
                    }

                    }
                    break;

            }

            // InternalGo.g:9382:3: (otherlv_2= '+' | otherlv_3= '-' )?
            int alt118=3;
            int LA118_0 = input.LA(1);

            if ( (LA118_0==48) ) {
                alt118=1;
            }
            else if ( (LA118_0==49) ) {
                alt118=2;
            }
            switch (alt118) {
                case 1 :
                    // InternalGo.g:9383:4: otherlv_2= '+'
                    {
                    otherlv_2=(Token)match(input,48,FOLLOW_45); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getExponentAccess().getPlusSignKeyword_1_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalGo.g:9388:4: otherlv_3= '-'
                    {
                    otherlv_3=(Token)match(input,49,FOLLOW_45); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getExponentAccess().getHyphenMinusKeyword_1_1());
                      			
                    }

                    }
                    break;

            }

            // InternalGo.g:9393:3: ( (lv_decimals_4_0= ruledecimals ) )
            // InternalGo.g:9394:4: (lv_decimals_4_0= ruledecimals )
            {
            // InternalGo.g:9394:4: (lv_decimals_4_0= ruledecimals )
            // InternalGo.g:9395:5: lv_decimals_4_0= ruledecimals
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getExponentAccess().getDecimalsDecimalsParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_decimals_4_0=ruledecimals();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getExponentRule());
              					}
              					set(
              						current,
              						"decimals",
              						lv_decimals_4_0,
              						"com.ufcg.compiladores.Go.decimals");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleexponent"


    // $ANTLR start "entryRulerune_lit"
    // InternalGo.g:9416:1: entryRulerune_lit returns [EObject current=null] : iv_rulerune_lit= rulerune_lit EOF ;
    public final EObject entryRulerune_lit() throws RecognitionException {
        EObject current = null;

        EObject iv_rulerune_lit = null;


        try {
            // InternalGo.g:9416:49: (iv_rulerune_lit= rulerune_lit EOF )
            // InternalGo.g:9417:2: iv_rulerune_lit= rulerune_lit EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRune_litRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulerune_lit=rulerune_lit();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulerune_lit; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulerune_lit"


    // $ANTLR start "rulerune_lit"
    // InternalGo.g:9423:1: rulerune_lit returns [EObject current=null] : (otherlv_0= '\\'' ( ( (lv_unicode_value_1_0= ruleunicode_value ) ) | ( (lv_byte_value_2_0= rulebyte_value ) ) ) otherlv_3= '\\'' ) ;
    public final EObject rulerune_lit() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_3=null;
        AntlrDatatypeRuleToken lv_unicode_value_1_0 = null;

        AntlrDatatypeRuleToken lv_byte_value_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:9429:2: ( (otherlv_0= '\\'' ( ( (lv_unicode_value_1_0= ruleunicode_value ) ) | ( (lv_byte_value_2_0= rulebyte_value ) ) ) otherlv_3= '\\'' ) )
            // InternalGo.g:9430:2: (otherlv_0= '\\'' ( ( (lv_unicode_value_1_0= ruleunicode_value ) ) | ( (lv_byte_value_2_0= rulebyte_value ) ) ) otherlv_3= '\\'' )
            {
            // InternalGo.g:9430:2: (otherlv_0= '\\'' ( ( (lv_unicode_value_1_0= ruleunicode_value ) ) | ( (lv_byte_value_2_0= rulebyte_value ) ) ) otherlv_3= '\\'' )
            // InternalGo.g:9431:3: otherlv_0= '\\'' ( ( (lv_unicode_value_1_0= ruleunicode_value ) ) | ( (lv_byte_value_2_0= rulebyte_value ) ) ) otherlv_3= '\\''
            {
            otherlv_0=(Token)match(input,82,FOLLOW_82); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getRune_litAccess().getApostropheKeyword_0());
              		
            }
            // InternalGo.g:9435:3: ( ( (lv_unicode_value_1_0= ruleunicode_value ) ) | ( (lv_byte_value_2_0= rulebyte_value ) ) )
            int alt119=2;
            int LA119_0 = input.LA(1);

            if ( (LA119_0==RULE_LETTER) ) {
                alt119=1;
            }
            else if ( (LA119_0==82) ) {
                int LA119_2 = input.LA(2);

                if ( ((LA119_2>=82 && LA119_2<=83)||(LA119_2>=88 && LA119_2<=96)) ) {
                    alt119=1;
                }
                else if ( (LA119_2==RULE_OCTAL_DIGIT||LA119_2==80) ) {
                    alt119=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 119, 2, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 119, 0, input);

                throw nvae;
            }
            switch (alt119) {
                case 1 :
                    // InternalGo.g:9436:4: ( (lv_unicode_value_1_0= ruleunicode_value ) )
                    {
                    // InternalGo.g:9436:4: ( (lv_unicode_value_1_0= ruleunicode_value ) )
                    // InternalGo.g:9437:5: (lv_unicode_value_1_0= ruleunicode_value )
                    {
                    // InternalGo.g:9437:5: (lv_unicode_value_1_0= ruleunicode_value )
                    // InternalGo.g:9438:6: lv_unicode_value_1_0= ruleunicode_value
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getRune_litAccess().getUnicode_valueUnicode_valueParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_78);
                    lv_unicode_value_1_0=ruleunicode_value();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getRune_litRule());
                      						}
                      						set(
                      							current,
                      							"unicode_value",
                      							lv_unicode_value_1_0,
                      							"com.ufcg.compiladores.Go.unicode_value");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:9456:4: ( (lv_byte_value_2_0= rulebyte_value ) )
                    {
                    // InternalGo.g:9456:4: ( (lv_byte_value_2_0= rulebyte_value ) )
                    // InternalGo.g:9457:5: (lv_byte_value_2_0= rulebyte_value )
                    {
                    // InternalGo.g:9457:5: (lv_byte_value_2_0= rulebyte_value )
                    // InternalGo.g:9458:6: lv_byte_value_2_0= rulebyte_value
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getRune_litAccess().getByte_valueByte_valueParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_78);
                    lv_byte_value_2_0=rulebyte_value();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getRune_litRule());
                      						}
                      						set(
                      							current,
                      							"byte_value",
                      							lv_byte_value_2_0,
                      							"com.ufcg.compiladores.Go.byte_value");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_3=(Token)match(input,82,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getRune_litAccess().getApostropheKeyword_2());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulerune_lit"


    // $ANTLR start "entryRuleunicode_value"
    // InternalGo.g:9484:1: entryRuleunicode_value returns [String current=null] : iv_ruleunicode_value= ruleunicode_value EOF ;
    public final String entryRuleunicode_value() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleunicode_value = null;


        try {
            // InternalGo.g:9484:53: (iv_ruleunicode_value= ruleunicode_value EOF )
            // InternalGo.g:9485:2: iv_ruleunicode_value= ruleunicode_value EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUnicode_valueRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleunicode_value=ruleunicode_value();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleunicode_value.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleunicode_value"


    // $ANTLR start "ruleunicode_value"
    // InternalGo.g:9491:1: ruleunicode_value returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_LETTER_0= RULE_LETTER | this_little_u_value_1= rulelittle_u_value | this_big_u_value_2= rulebig_u_value | this_escaped_char_3= ruleescaped_char ) ;
    public final AntlrDatatypeRuleToken ruleunicode_value() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_LETTER_0=null;
        AntlrDatatypeRuleToken this_little_u_value_1 = null;

        AntlrDatatypeRuleToken this_big_u_value_2 = null;

        AntlrDatatypeRuleToken this_escaped_char_3 = null;



        	enterRule();

        try {
            // InternalGo.g:9497:2: ( (this_LETTER_0= RULE_LETTER | this_little_u_value_1= rulelittle_u_value | this_big_u_value_2= rulebig_u_value | this_escaped_char_3= ruleescaped_char ) )
            // InternalGo.g:9498:2: (this_LETTER_0= RULE_LETTER | this_little_u_value_1= rulelittle_u_value | this_big_u_value_2= rulebig_u_value | this_escaped_char_3= ruleescaped_char )
            {
            // InternalGo.g:9498:2: (this_LETTER_0= RULE_LETTER | this_little_u_value_1= rulelittle_u_value | this_big_u_value_2= rulebig_u_value | this_escaped_char_3= ruleescaped_char )
            int alt120=4;
            int LA120_0 = input.LA(1);

            if ( (LA120_0==RULE_LETTER) ) {
                alt120=1;
            }
            else if ( (LA120_0==82) ) {
                switch ( input.LA(2) ) {
                case 89:
                    {
                    alt120=3;
                    }
                    break;
                case 82:
                case 83:
                case 90:
                case 91:
                case 92:
                case 93:
                case 94:
                case 95:
                case 96:
                    {
                    alt120=4;
                    }
                    break;
                case 88:
                    {
                    alt120=2;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 120, 2, input);

                    throw nvae;
                }

            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 120, 0, input);

                throw nvae;
            }
            switch (alt120) {
                case 1 :
                    // InternalGo.g:9499:3: this_LETTER_0= RULE_LETTER
                    {
                    this_LETTER_0=(Token)match(input,RULE_LETTER,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_LETTER_0);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_LETTER_0, grammarAccess.getUnicode_valueAccess().getLETTERTerminalRuleCall_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalGo.g:9507:3: this_little_u_value_1= rulelittle_u_value
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getUnicode_valueAccess().getLittle_u_valueParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_little_u_value_1=rulelittle_u_value();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_little_u_value_1);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalGo.g:9518:3: this_big_u_value_2= rulebig_u_value
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getUnicode_valueAccess().getBig_u_valueParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_big_u_value_2=rulebig_u_value();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_big_u_value_2);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalGo.g:9529:3: this_escaped_char_3= ruleescaped_char
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getUnicode_valueAccess().getEscaped_charParserRuleCall_3());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_escaped_char_3=ruleescaped_char();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_escaped_char_3);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleunicode_value"


    // $ANTLR start "entryRulebyte_value"
    // InternalGo.g:9543:1: entryRulebyte_value returns [String current=null] : iv_rulebyte_value= rulebyte_value EOF ;
    public final String entryRulebyte_value() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_rulebyte_value = null;


        try {
            // InternalGo.g:9543:50: (iv_rulebyte_value= rulebyte_value EOF )
            // InternalGo.g:9544:2: iv_rulebyte_value= rulebyte_value EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getByte_valueRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulebyte_value=rulebyte_value();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulebyte_value.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulebyte_value"


    // $ANTLR start "rulebyte_value"
    // InternalGo.g:9550:1: rulebyte_value returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_octal_byte_value_0= ruleoctal_byte_value | this_hex_byte_value_1= rulehex_byte_value ) ;
    public final AntlrDatatypeRuleToken rulebyte_value() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        AntlrDatatypeRuleToken this_octal_byte_value_0 = null;

        AntlrDatatypeRuleToken this_hex_byte_value_1 = null;



        	enterRule();

        try {
            // InternalGo.g:9556:2: ( (this_octal_byte_value_0= ruleoctal_byte_value | this_hex_byte_value_1= rulehex_byte_value ) )
            // InternalGo.g:9557:2: (this_octal_byte_value_0= ruleoctal_byte_value | this_hex_byte_value_1= rulehex_byte_value )
            {
            // InternalGo.g:9557:2: (this_octal_byte_value_0= ruleoctal_byte_value | this_hex_byte_value_1= rulehex_byte_value )
            int alt121=2;
            int LA121_0 = input.LA(1);

            if ( (LA121_0==82) ) {
                int LA121_1 = input.LA(2);

                if ( (LA121_1==80) ) {
                    alt121=2;
                }
                else if ( (LA121_1==RULE_OCTAL_DIGIT) ) {
                    alt121=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 121, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 121, 0, input);

                throw nvae;
            }
            switch (alt121) {
                case 1 :
                    // InternalGo.g:9558:3: this_octal_byte_value_0= ruleoctal_byte_value
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getByte_valueAccess().getOctal_byte_valueParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_octal_byte_value_0=ruleoctal_byte_value();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_octal_byte_value_0);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalGo.g:9569:3: this_hex_byte_value_1= rulehex_byte_value
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getByte_valueAccess().getHex_byte_valueParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_hex_byte_value_1=rulehex_byte_value();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_hex_byte_value_1);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulebyte_value"


    // $ANTLR start "entryRuleoctal_byte_value"
    // InternalGo.g:9583:1: entryRuleoctal_byte_value returns [String current=null] : iv_ruleoctal_byte_value= ruleoctal_byte_value EOF ;
    public final String entryRuleoctal_byte_value() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleoctal_byte_value = null;


        try {
            // InternalGo.g:9583:56: (iv_ruleoctal_byte_value= ruleoctal_byte_value EOF )
            // InternalGo.g:9584:2: iv_ruleoctal_byte_value= ruleoctal_byte_value EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOctal_byte_valueRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleoctal_byte_value=ruleoctal_byte_value();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleoctal_byte_value.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleoctal_byte_value"


    // $ANTLR start "ruleoctal_byte_value"
    // InternalGo.g:9590:1: ruleoctal_byte_value returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_CHAR_0= ruleCHAR this_OCTAL_DIGIT_1= RULE_OCTAL_DIGIT this_OCTAL_DIGIT_2= RULE_OCTAL_DIGIT this_OCTAL_DIGIT_3= RULE_OCTAL_DIGIT ) ;
    public final AntlrDatatypeRuleToken ruleoctal_byte_value() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_OCTAL_DIGIT_1=null;
        Token this_OCTAL_DIGIT_2=null;
        Token this_OCTAL_DIGIT_3=null;
        AntlrDatatypeRuleToken this_CHAR_0 = null;



        	enterRule();

        try {
            // InternalGo.g:9596:2: ( (this_CHAR_0= ruleCHAR this_OCTAL_DIGIT_1= RULE_OCTAL_DIGIT this_OCTAL_DIGIT_2= RULE_OCTAL_DIGIT this_OCTAL_DIGIT_3= RULE_OCTAL_DIGIT ) )
            // InternalGo.g:9597:2: (this_CHAR_0= ruleCHAR this_OCTAL_DIGIT_1= RULE_OCTAL_DIGIT this_OCTAL_DIGIT_2= RULE_OCTAL_DIGIT this_OCTAL_DIGIT_3= RULE_OCTAL_DIGIT )
            {
            // InternalGo.g:9597:2: (this_CHAR_0= ruleCHAR this_OCTAL_DIGIT_1= RULE_OCTAL_DIGIT this_OCTAL_DIGIT_2= RULE_OCTAL_DIGIT this_OCTAL_DIGIT_3= RULE_OCTAL_DIGIT )
            // InternalGo.g:9598:3: this_CHAR_0= ruleCHAR this_OCTAL_DIGIT_1= RULE_OCTAL_DIGIT this_OCTAL_DIGIT_2= RULE_OCTAL_DIGIT this_OCTAL_DIGIT_3= RULE_OCTAL_DIGIT
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getOctal_byte_valueAccess().getCHARParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_83);
            this_CHAR_0=ruleCHAR();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_CHAR_0);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            this_OCTAL_DIGIT_1=(Token)match(input,RULE_OCTAL_DIGIT,FOLLOW_83); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_OCTAL_DIGIT_1);
              		
            }
            if ( state.backtracking==0 ) {

              			newLeafNode(this_OCTAL_DIGIT_1, grammarAccess.getOctal_byte_valueAccess().getOCTAL_DIGITTerminalRuleCall_1());
              		
            }
            this_OCTAL_DIGIT_2=(Token)match(input,RULE_OCTAL_DIGIT,FOLLOW_83); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_OCTAL_DIGIT_2);
              		
            }
            if ( state.backtracking==0 ) {

              			newLeafNode(this_OCTAL_DIGIT_2, grammarAccess.getOctal_byte_valueAccess().getOCTAL_DIGITTerminalRuleCall_2());
              		
            }
            this_OCTAL_DIGIT_3=(Token)match(input,RULE_OCTAL_DIGIT,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_OCTAL_DIGIT_3);
              		
            }
            if ( state.backtracking==0 ) {

              			newLeafNode(this_OCTAL_DIGIT_3, grammarAccess.getOctal_byte_valueAccess().getOCTAL_DIGITTerminalRuleCall_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleoctal_byte_value"


    // $ANTLR start "entryRulehex_byte_value"
    // InternalGo.g:9633:1: entryRulehex_byte_value returns [String current=null] : iv_rulehex_byte_value= rulehex_byte_value EOF ;
    public final String entryRulehex_byte_value() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_rulehex_byte_value = null;


        try {
            // InternalGo.g:9633:54: (iv_rulehex_byte_value= rulehex_byte_value EOF )
            // InternalGo.g:9634:2: iv_rulehex_byte_value= rulehex_byte_value EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getHex_byte_valueRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulehex_byte_value=rulehex_byte_value();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulehex_byte_value.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulehex_byte_value"


    // $ANTLR start "rulehex_byte_value"
    // InternalGo.g:9640:1: rulehex_byte_value returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_CHAR_0= ruleCHAR kw= 'x' this_HEX_DIGIT_2= RULE_HEX_DIGIT this_HEX_DIGIT_3= RULE_HEX_DIGIT ) ;
    public final AntlrDatatypeRuleToken rulehex_byte_value() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        Token this_HEX_DIGIT_2=null;
        Token this_HEX_DIGIT_3=null;
        AntlrDatatypeRuleToken this_CHAR_0 = null;



        	enterRule();

        try {
            // InternalGo.g:9646:2: ( (this_CHAR_0= ruleCHAR kw= 'x' this_HEX_DIGIT_2= RULE_HEX_DIGIT this_HEX_DIGIT_3= RULE_HEX_DIGIT ) )
            // InternalGo.g:9647:2: (this_CHAR_0= ruleCHAR kw= 'x' this_HEX_DIGIT_2= RULE_HEX_DIGIT this_HEX_DIGIT_3= RULE_HEX_DIGIT )
            {
            // InternalGo.g:9647:2: (this_CHAR_0= ruleCHAR kw= 'x' this_HEX_DIGIT_2= RULE_HEX_DIGIT this_HEX_DIGIT_3= RULE_HEX_DIGIT )
            // InternalGo.g:9648:3: this_CHAR_0= ruleCHAR kw= 'x' this_HEX_DIGIT_2= RULE_HEX_DIGIT this_HEX_DIGIT_3= RULE_HEX_DIGIT
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getHex_byte_valueAccess().getCHARParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_84);
            this_CHAR_0=ruleCHAR();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_CHAR_0);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            kw=(Token)match(input,80,FOLLOW_72); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getHex_byte_valueAccess().getXKeyword_1());
              		
            }
            this_HEX_DIGIT_2=(Token)match(input,RULE_HEX_DIGIT,FOLLOW_72); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_HEX_DIGIT_2);
              		
            }
            if ( state.backtracking==0 ) {

              			newLeafNode(this_HEX_DIGIT_2, grammarAccess.getHex_byte_valueAccess().getHEX_DIGITTerminalRuleCall_2());
              		
            }
            this_HEX_DIGIT_3=(Token)match(input,RULE_HEX_DIGIT,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_HEX_DIGIT_3);
              		
            }
            if ( state.backtracking==0 ) {

              			newLeafNode(this_HEX_DIGIT_3, grammarAccess.getHex_byte_valueAccess().getHEX_DIGITTerminalRuleCall_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulehex_byte_value"


    // $ANTLR start "entryRulelittle_u_value"
    // InternalGo.g:9681:1: entryRulelittle_u_value returns [String current=null] : iv_rulelittle_u_value= rulelittle_u_value EOF ;
    public final String entryRulelittle_u_value() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_rulelittle_u_value = null;


        try {
            // InternalGo.g:9681:54: (iv_rulelittle_u_value= rulelittle_u_value EOF )
            // InternalGo.g:9682:2: iv_rulelittle_u_value= rulelittle_u_value EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLittle_u_valueRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulelittle_u_value=rulelittle_u_value();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulelittle_u_value.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulelittle_u_value"


    // $ANTLR start "rulelittle_u_value"
    // InternalGo.g:9688:1: rulelittle_u_value returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_CHAR_0= ruleCHAR kw= 'u' this_HEX_DIGIT_2= RULE_HEX_DIGIT this_HEX_DIGIT_3= RULE_HEX_DIGIT this_HEX_DIGIT_4= RULE_HEX_DIGIT this_HEX_DIGIT_5= RULE_HEX_DIGIT ) ;
    public final AntlrDatatypeRuleToken rulelittle_u_value() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        Token this_HEX_DIGIT_2=null;
        Token this_HEX_DIGIT_3=null;
        Token this_HEX_DIGIT_4=null;
        Token this_HEX_DIGIT_5=null;
        AntlrDatatypeRuleToken this_CHAR_0 = null;



        	enterRule();

        try {
            // InternalGo.g:9694:2: ( (this_CHAR_0= ruleCHAR kw= 'u' this_HEX_DIGIT_2= RULE_HEX_DIGIT this_HEX_DIGIT_3= RULE_HEX_DIGIT this_HEX_DIGIT_4= RULE_HEX_DIGIT this_HEX_DIGIT_5= RULE_HEX_DIGIT ) )
            // InternalGo.g:9695:2: (this_CHAR_0= ruleCHAR kw= 'u' this_HEX_DIGIT_2= RULE_HEX_DIGIT this_HEX_DIGIT_3= RULE_HEX_DIGIT this_HEX_DIGIT_4= RULE_HEX_DIGIT this_HEX_DIGIT_5= RULE_HEX_DIGIT )
            {
            // InternalGo.g:9695:2: (this_CHAR_0= ruleCHAR kw= 'u' this_HEX_DIGIT_2= RULE_HEX_DIGIT this_HEX_DIGIT_3= RULE_HEX_DIGIT this_HEX_DIGIT_4= RULE_HEX_DIGIT this_HEX_DIGIT_5= RULE_HEX_DIGIT )
            // InternalGo.g:9696:3: this_CHAR_0= ruleCHAR kw= 'u' this_HEX_DIGIT_2= RULE_HEX_DIGIT this_HEX_DIGIT_3= RULE_HEX_DIGIT this_HEX_DIGIT_4= RULE_HEX_DIGIT this_HEX_DIGIT_5= RULE_HEX_DIGIT
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getLittle_u_valueAccess().getCHARParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_85);
            this_CHAR_0=ruleCHAR();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_CHAR_0);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            kw=(Token)match(input,88,FOLLOW_72); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getLittle_u_valueAccess().getUKeyword_1());
              		
            }
            this_HEX_DIGIT_2=(Token)match(input,RULE_HEX_DIGIT,FOLLOW_72); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_HEX_DIGIT_2);
              		
            }
            if ( state.backtracking==0 ) {

              			newLeafNode(this_HEX_DIGIT_2, grammarAccess.getLittle_u_valueAccess().getHEX_DIGITTerminalRuleCall_2());
              		
            }
            this_HEX_DIGIT_3=(Token)match(input,RULE_HEX_DIGIT,FOLLOW_72); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_HEX_DIGIT_3);
              		
            }
            if ( state.backtracking==0 ) {

              			newLeafNode(this_HEX_DIGIT_3, grammarAccess.getLittle_u_valueAccess().getHEX_DIGITTerminalRuleCall_3());
              		
            }
            this_HEX_DIGIT_4=(Token)match(input,RULE_HEX_DIGIT,FOLLOW_72); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_HEX_DIGIT_4);
              		
            }
            if ( state.backtracking==0 ) {

              			newLeafNode(this_HEX_DIGIT_4, grammarAccess.getLittle_u_valueAccess().getHEX_DIGITTerminalRuleCall_4());
              		
            }
            this_HEX_DIGIT_5=(Token)match(input,RULE_HEX_DIGIT,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_HEX_DIGIT_5);
              		
            }
            if ( state.backtracking==0 ) {

              			newLeafNode(this_HEX_DIGIT_5, grammarAccess.getLittle_u_valueAccess().getHEX_DIGITTerminalRuleCall_5());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulelittle_u_value"


    // $ANTLR start "entryRulebig_u_value"
    // InternalGo.g:9743:1: entryRulebig_u_value returns [String current=null] : iv_rulebig_u_value= rulebig_u_value EOF ;
    public final String entryRulebig_u_value() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_rulebig_u_value = null;


        try {
            // InternalGo.g:9743:51: (iv_rulebig_u_value= rulebig_u_value EOF )
            // InternalGo.g:9744:2: iv_rulebig_u_value= rulebig_u_value EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBig_u_valueRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulebig_u_value=rulebig_u_value();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulebig_u_value.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulebig_u_value"


    // $ANTLR start "rulebig_u_value"
    // InternalGo.g:9750:1: rulebig_u_value returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_CHAR_0= ruleCHAR kw= 'U' this_HEX_DIGIT_2= RULE_HEX_DIGIT this_HEX_DIGIT_3= RULE_HEX_DIGIT this_HEX_DIGIT_4= RULE_HEX_DIGIT this_HEX_DIGIT_5= RULE_HEX_DIGIT this_HEX_DIGIT_6= RULE_HEX_DIGIT this_HEX_DIGIT_7= RULE_HEX_DIGIT this_HEX_DIGIT_8= RULE_HEX_DIGIT this_HEX_DIGIT_9= RULE_HEX_DIGIT ) ;
    public final AntlrDatatypeRuleToken rulebig_u_value() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        Token this_HEX_DIGIT_2=null;
        Token this_HEX_DIGIT_3=null;
        Token this_HEX_DIGIT_4=null;
        Token this_HEX_DIGIT_5=null;
        Token this_HEX_DIGIT_6=null;
        Token this_HEX_DIGIT_7=null;
        Token this_HEX_DIGIT_8=null;
        Token this_HEX_DIGIT_9=null;
        AntlrDatatypeRuleToken this_CHAR_0 = null;



        	enterRule();

        try {
            // InternalGo.g:9756:2: ( (this_CHAR_0= ruleCHAR kw= 'U' this_HEX_DIGIT_2= RULE_HEX_DIGIT this_HEX_DIGIT_3= RULE_HEX_DIGIT this_HEX_DIGIT_4= RULE_HEX_DIGIT this_HEX_DIGIT_5= RULE_HEX_DIGIT this_HEX_DIGIT_6= RULE_HEX_DIGIT this_HEX_DIGIT_7= RULE_HEX_DIGIT this_HEX_DIGIT_8= RULE_HEX_DIGIT this_HEX_DIGIT_9= RULE_HEX_DIGIT ) )
            // InternalGo.g:9757:2: (this_CHAR_0= ruleCHAR kw= 'U' this_HEX_DIGIT_2= RULE_HEX_DIGIT this_HEX_DIGIT_3= RULE_HEX_DIGIT this_HEX_DIGIT_4= RULE_HEX_DIGIT this_HEX_DIGIT_5= RULE_HEX_DIGIT this_HEX_DIGIT_6= RULE_HEX_DIGIT this_HEX_DIGIT_7= RULE_HEX_DIGIT this_HEX_DIGIT_8= RULE_HEX_DIGIT this_HEX_DIGIT_9= RULE_HEX_DIGIT )
            {
            // InternalGo.g:9757:2: (this_CHAR_0= ruleCHAR kw= 'U' this_HEX_DIGIT_2= RULE_HEX_DIGIT this_HEX_DIGIT_3= RULE_HEX_DIGIT this_HEX_DIGIT_4= RULE_HEX_DIGIT this_HEX_DIGIT_5= RULE_HEX_DIGIT this_HEX_DIGIT_6= RULE_HEX_DIGIT this_HEX_DIGIT_7= RULE_HEX_DIGIT this_HEX_DIGIT_8= RULE_HEX_DIGIT this_HEX_DIGIT_9= RULE_HEX_DIGIT )
            // InternalGo.g:9758:3: this_CHAR_0= ruleCHAR kw= 'U' this_HEX_DIGIT_2= RULE_HEX_DIGIT this_HEX_DIGIT_3= RULE_HEX_DIGIT this_HEX_DIGIT_4= RULE_HEX_DIGIT this_HEX_DIGIT_5= RULE_HEX_DIGIT this_HEX_DIGIT_6= RULE_HEX_DIGIT this_HEX_DIGIT_7= RULE_HEX_DIGIT this_HEX_DIGIT_8= RULE_HEX_DIGIT this_HEX_DIGIT_9= RULE_HEX_DIGIT
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getBig_u_valueAccess().getCHARParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_86);
            this_CHAR_0=ruleCHAR();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_CHAR_0);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            kw=(Token)match(input,89,FOLLOW_72); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getBig_u_valueAccess().getUKeyword_1());
              		
            }
            this_HEX_DIGIT_2=(Token)match(input,RULE_HEX_DIGIT,FOLLOW_72); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_HEX_DIGIT_2);
              		
            }
            if ( state.backtracking==0 ) {

              			newLeafNode(this_HEX_DIGIT_2, grammarAccess.getBig_u_valueAccess().getHEX_DIGITTerminalRuleCall_2());
              		
            }
            this_HEX_DIGIT_3=(Token)match(input,RULE_HEX_DIGIT,FOLLOW_72); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_HEX_DIGIT_3);
              		
            }
            if ( state.backtracking==0 ) {

              			newLeafNode(this_HEX_DIGIT_3, grammarAccess.getBig_u_valueAccess().getHEX_DIGITTerminalRuleCall_3());
              		
            }
            this_HEX_DIGIT_4=(Token)match(input,RULE_HEX_DIGIT,FOLLOW_72); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_HEX_DIGIT_4);
              		
            }
            if ( state.backtracking==0 ) {

              			newLeafNode(this_HEX_DIGIT_4, grammarAccess.getBig_u_valueAccess().getHEX_DIGITTerminalRuleCall_4());
              		
            }
            this_HEX_DIGIT_5=(Token)match(input,RULE_HEX_DIGIT,FOLLOW_72); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_HEX_DIGIT_5);
              		
            }
            if ( state.backtracking==0 ) {

              			newLeafNode(this_HEX_DIGIT_5, grammarAccess.getBig_u_valueAccess().getHEX_DIGITTerminalRuleCall_5());
              		
            }
            this_HEX_DIGIT_6=(Token)match(input,RULE_HEX_DIGIT,FOLLOW_72); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_HEX_DIGIT_6);
              		
            }
            if ( state.backtracking==0 ) {

              			newLeafNode(this_HEX_DIGIT_6, grammarAccess.getBig_u_valueAccess().getHEX_DIGITTerminalRuleCall_6());
              		
            }
            this_HEX_DIGIT_7=(Token)match(input,RULE_HEX_DIGIT,FOLLOW_72); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_HEX_DIGIT_7);
              		
            }
            if ( state.backtracking==0 ) {

              			newLeafNode(this_HEX_DIGIT_7, grammarAccess.getBig_u_valueAccess().getHEX_DIGITTerminalRuleCall_7());
              		
            }
            this_HEX_DIGIT_8=(Token)match(input,RULE_HEX_DIGIT,FOLLOW_72); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_HEX_DIGIT_8);
              		
            }
            if ( state.backtracking==0 ) {

              			newLeafNode(this_HEX_DIGIT_8, grammarAccess.getBig_u_valueAccess().getHEX_DIGITTerminalRuleCall_8());
              		
            }
            this_HEX_DIGIT_9=(Token)match(input,RULE_HEX_DIGIT,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_HEX_DIGIT_9);
              		
            }
            if ( state.backtracking==0 ) {

              			newLeafNode(this_HEX_DIGIT_9, grammarAccess.getBig_u_valueAccess().getHEX_DIGITTerminalRuleCall_9());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulebig_u_value"


    // $ANTLR start "entryRuleescaped_char"
    // InternalGo.g:9833:1: entryRuleescaped_char returns [String current=null] : iv_ruleescaped_char= ruleescaped_char EOF ;
    public final String entryRuleescaped_char() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleescaped_char = null;


        try {
            // InternalGo.g:9833:52: (iv_ruleescaped_char= ruleescaped_char EOF )
            // InternalGo.g:9834:2: iv_ruleescaped_char= ruleescaped_char EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEscaped_charRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleescaped_char=ruleescaped_char();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleescaped_char.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleescaped_char"


    // $ANTLR start "ruleescaped_char"
    // InternalGo.g:9840:1: ruleescaped_char returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_CHAR_0= ruleCHAR (kw= 'a' | kw= 'b' | kw= 'f' | kw= 'n' | kw= 'r' | kw= 't' | kw= 'v' | this_CHAR_8= ruleCHAR | kw= '\\'' | kw= '\"' ) ) ;
    public final AntlrDatatypeRuleToken ruleescaped_char() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_CHAR_0 = null;

        AntlrDatatypeRuleToken this_CHAR_8 = null;



        	enterRule();

        try {
            // InternalGo.g:9846:2: ( (this_CHAR_0= ruleCHAR (kw= 'a' | kw= 'b' | kw= 'f' | kw= 'n' | kw= 'r' | kw= 't' | kw= 'v' | this_CHAR_8= ruleCHAR | kw= '\\'' | kw= '\"' ) ) )
            // InternalGo.g:9847:2: (this_CHAR_0= ruleCHAR (kw= 'a' | kw= 'b' | kw= 'f' | kw= 'n' | kw= 'r' | kw= 't' | kw= 'v' | this_CHAR_8= ruleCHAR | kw= '\\'' | kw= '\"' ) )
            {
            // InternalGo.g:9847:2: (this_CHAR_0= ruleCHAR (kw= 'a' | kw= 'b' | kw= 'f' | kw= 'n' | kw= 'r' | kw= 't' | kw= 'v' | this_CHAR_8= ruleCHAR | kw= '\\'' | kw= '\"' ) )
            // InternalGo.g:9848:3: this_CHAR_0= ruleCHAR (kw= 'a' | kw= 'b' | kw= 'f' | kw= 'n' | kw= 'r' | kw= 't' | kw= 'v' | this_CHAR_8= ruleCHAR | kw= '\\'' | kw= '\"' )
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getEscaped_charAccess().getCHARParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_87);
            this_CHAR_0=ruleCHAR();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_CHAR_0);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            // InternalGo.g:9858:3: (kw= 'a' | kw= 'b' | kw= 'f' | kw= 'n' | kw= 'r' | kw= 't' | kw= 'v' | this_CHAR_8= ruleCHAR | kw= '\\'' | kw= '\"' )
            int alt122=10;
            alt122 = dfa122.predict(input);
            switch (alt122) {
                case 1 :
                    // InternalGo.g:9859:4: kw= 'a'
                    {
                    kw=(Token)match(input,90,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getEscaped_charAccess().getAKeyword_1_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalGo.g:9865:4: kw= 'b'
                    {
                    kw=(Token)match(input,91,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getEscaped_charAccess().getBKeyword_1_1());
                      			
                    }

                    }
                    break;
                case 3 :
                    // InternalGo.g:9871:4: kw= 'f'
                    {
                    kw=(Token)match(input,92,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getEscaped_charAccess().getFKeyword_1_2());
                      			
                    }

                    }
                    break;
                case 4 :
                    // InternalGo.g:9877:4: kw= 'n'
                    {
                    kw=(Token)match(input,93,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getEscaped_charAccess().getNKeyword_1_3());
                      			
                    }

                    }
                    break;
                case 5 :
                    // InternalGo.g:9883:4: kw= 'r'
                    {
                    kw=(Token)match(input,94,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getEscaped_charAccess().getRKeyword_1_4());
                      			
                    }

                    }
                    break;
                case 6 :
                    // InternalGo.g:9889:4: kw= 't'
                    {
                    kw=(Token)match(input,95,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getEscaped_charAccess().getTKeyword_1_5());
                      			
                    }

                    }
                    break;
                case 7 :
                    // InternalGo.g:9895:4: kw= 'v'
                    {
                    kw=(Token)match(input,96,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getEscaped_charAccess().getVKeyword_1_6());
                      			
                    }

                    }
                    break;
                case 8 :
                    // InternalGo.g:9901:4: this_CHAR_8= ruleCHAR
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getEscaped_charAccess().getCHARParserRuleCall_1_7());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    this_CHAR_8=ruleCHAR();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_CHAR_8);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;
                case 9 :
                    // InternalGo.g:9912:4: kw= '\\''
                    {
                    kw=(Token)match(input,82,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getEscaped_charAccess().getApostropheKeyword_1_8());
                      			
                    }

                    }
                    break;
                case 10 :
                    // InternalGo.g:9918:4: kw= '\"'
                    {
                    kw=(Token)match(input,83,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getEscaped_charAccess().getQuotationMarkKeyword_1_9());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleescaped_char"


    // $ANTLR start "entryRuleCHAR"
    // InternalGo.g:9928:1: entryRuleCHAR returns [String current=null] : iv_ruleCHAR= ruleCHAR EOF ;
    public final String entryRuleCHAR() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleCHAR = null;


        try {
            // InternalGo.g:9928:44: (iv_ruleCHAR= ruleCHAR EOF )
            // InternalGo.g:9929:2: iv_ruleCHAR= ruleCHAR EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCHARRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleCHAR=ruleCHAR();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCHAR.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCHAR"


    // $ANTLR start "ruleCHAR"
    // InternalGo.g:9935:1: ruleCHAR returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= '\\'' ;
    public final AntlrDatatypeRuleToken ruleCHAR() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalGo.g:9941:2: (kw= '\\'' )
            // InternalGo.g:9942:2: kw= '\\''
            {
            kw=(Token)match(input,82,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.getCHARAccess().getApostropheKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCHAR"

    // $ANTLR start synpred16_InternalGo
    public final void synpred16_InternalGo_fragment() throws RecognitionException {   
        EObject lv_IdentifierList_0_0 = null;

        EObject lv_Type_1_0 = null;


        // InternalGo.g:890:4: ( ( ( (lv_IdentifierList_0_0= ruleIdentifierList ) ) ( (lv_Type_1_0= ruleType ) ) ) )
        // InternalGo.g:890:4: ( ( (lv_IdentifierList_0_0= ruleIdentifierList ) ) ( (lv_Type_1_0= ruleType ) ) )
        {
        // InternalGo.g:890:4: ( ( (lv_IdentifierList_0_0= ruleIdentifierList ) ) ( (lv_Type_1_0= ruleType ) ) )
        // InternalGo.g:891:5: ( (lv_IdentifierList_0_0= ruleIdentifierList ) ) ( (lv_Type_1_0= ruleType ) )
        {
        // InternalGo.g:891:5: ( (lv_IdentifierList_0_0= ruleIdentifierList ) )
        // InternalGo.g:892:6: (lv_IdentifierList_0_0= ruleIdentifierList )
        {
        // InternalGo.g:892:6: (lv_IdentifierList_0_0= ruleIdentifierList )
        // InternalGo.g:893:7: lv_IdentifierList_0_0= ruleIdentifierList
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getFieldDeclAccess().getIdentifierListIdentifierListParserRuleCall_0_0_0_0());
          						
        }
        pushFollow(FOLLOW_5);
        lv_IdentifierList_0_0=ruleIdentifierList();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalGo.g:910:5: ( (lv_Type_1_0= ruleType ) )
        // InternalGo.g:911:6: (lv_Type_1_0= ruleType )
        {
        // InternalGo.g:911:6: (lv_Type_1_0= ruleType )
        // InternalGo.g:912:7: lv_Type_1_0= ruleType
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getFieldDeclAccess().getTypeTypeParserRuleCall_0_0_1_0());
          						
        }
        pushFollow(FOLLOW_2);
        lv_Type_1_0=ruleType();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred16_InternalGo

    // $ANTLR start synpred19_InternalGo
    public final void synpred19_InternalGo_fragment() throws RecognitionException {   
        EObject lv_Result_1_0 = null;


        // InternalGo.g:1173:4: ( (lv_Result_1_0= ruleResult ) )
        // InternalGo.g:1173:4: (lv_Result_1_0= ruleResult )
        {
        // InternalGo.g:1173:4: (lv_Result_1_0= ruleResult )
        // InternalGo.g:1174:5: lv_Result_1_0= ruleResult
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getSignatureAccess().getResultResultParserRuleCall_1_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_Result_1_0=ruleResult();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred19_InternalGo

    // $ANTLR start synpred20_InternalGo
    public final void synpred20_InternalGo_fragment() throws RecognitionException {   
        EObject lv_Parameters_0_0 = null;


        // InternalGo.g:1210:3: ( ( (lv_Parameters_0_0= ruleParameters ) ) )
        // InternalGo.g:1210:3: ( (lv_Parameters_0_0= ruleParameters ) )
        {
        // InternalGo.g:1210:3: ( (lv_Parameters_0_0= ruleParameters ) )
        // InternalGo.g:1211:4: (lv_Parameters_0_0= ruleParameters )
        {
        // InternalGo.g:1211:4: (lv_Parameters_0_0= ruleParameters )
        // InternalGo.g:1212:5: lv_Parameters_0_0= ruleParameters
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getResultAccess().getParametersParametersParserRuleCall_0_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_Parameters_0_0=ruleParameters();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred20_InternalGo

    // $ANTLR start synpred24_InternalGo
    public final void synpred24_InternalGo_fragment() throws RecognitionException {   
        EObject lv_IdentifierList_0_0 = null;


        // InternalGo.g:1396:4: ( (lv_IdentifierList_0_0= ruleIdentifierList ) )
        // InternalGo.g:1396:4: (lv_IdentifierList_0_0= ruleIdentifierList )
        {
        // InternalGo.g:1396:4: (lv_IdentifierList_0_0= ruleIdentifierList )
        // InternalGo.g:1397:5: lv_IdentifierList_0_0= ruleIdentifierList
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getParameterDeclAccess().getIdentifierListIdentifierListParserRuleCall_0_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_IdentifierList_0_0=ruleIdentifierList();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred24_InternalGo

    // $ANTLR start synpred28_InternalGo
    public final void synpred28_InternalGo_fragment() throws RecognitionException {   
        Token otherlv_0=null;

        // InternalGo.g:1781:4: (otherlv_0= 'chan' )
        // InternalGo.g:1781:4: otherlv_0= 'chan'
        {
        otherlv_0=(Token)match(input,32,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred28_InternalGo

    // $ANTLR start synpred29_InternalGo
    public final void synpred29_InternalGo_fragment() throws RecognitionException {   
        Token otherlv_1=null;
        Token otherlv_2=null;

        // InternalGo.g:1786:4: ( (otherlv_1= 'chan' otherlv_2= '<-' ) )
        // InternalGo.g:1786:4: (otherlv_1= 'chan' otherlv_2= '<-' )
        {
        // InternalGo.g:1786:4: (otherlv_1= 'chan' otherlv_2= '<-' )
        // InternalGo.g:1787:5: otherlv_1= 'chan' otherlv_2= '<-'
        {
        otherlv_1=(Token)match(input,32,FOLLOW_23); if (state.failed) return ;
        otherlv_2=(Token)match(input,33,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred29_InternalGo

    // $ANTLR start synpred50_InternalGo
    public final void synpred50_InternalGo_fragment() throws RecognitionException {   
        EObject lv_Literal_0_0 = null;


        // InternalGo.g:3156:3: ( ( (lv_Literal_0_0= ruleLiteral ) ) )
        // InternalGo.g:3156:3: ( (lv_Literal_0_0= ruleLiteral ) )
        {
        // InternalGo.g:3156:3: ( (lv_Literal_0_0= ruleLiteral ) )
        // InternalGo.g:3157:4: (lv_Literal_0_0= ruleLiteral )
        {
        // InternalGo.g:3157:4: (lv_Literal_0_0= ruleLiteral )
        // InternalGo.g:3158:5: lv_Literal_0_0= ruleLiteral
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getOperandAccess().getLiteralLiteralParserRuleCall_0_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_Literal_0_0=ruleLiteral();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred50_InternalGo

    // $ANTLR start synpred51_InternalGo
    public final void synpred51_InternalGo_fragment() throws RecognitionException {   
        EObject lv_OperandName_1_0 = null;


        // InternalGo.g:3176:3: ( ( (lv_OperandName_1_0= ruleOperandName ) ) )
        // InternalGo.g:3176:3: ( (lv_OperandName_1_0= ruleOperandName ) )
        {
        // InternalGo.g:3176:3: ( (lv_OperandName_1_0= ruleOperandName ) )
        // InternalGo.g:3177:4: (lv_OperandName_1_0= ruleOperandName )
        {
        // InternalGo.g:3177:4: (lv_OperandName_1_0= ruleOperandName )
        // InternalGo.g:3178:5: lv_OperandName_1_0= ruleOperandName
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getOperandAccess().getOperandNameOperandNameParserRuleCall_1_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_OperandName_1_0=ruleOperandName();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred51_InternalGo

    // $ANTLR start synpred53_InternalGo
    public final void synpred53_InternalGo_fragment() throws RecognitionException {   
        EObject this_CompositeLit_1 = null;


        // InternalGo.g:3264:3: (this_CompositeLit_1= ruleCompositeLit )
        // InternalGo.g:3264:3: this_CompositeLit_1= ruleCompositeLit
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FOLLOW_2);
        this_CompositeLit_1=ruleCompositeLit();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred53_InternalGo

    // $ANTLR start synpred54_InternalGo
    public final void synpred54_InternalGo_fragment() throws RecognitionException {   
        AntlrDatatypeRuleToken lv_int_lit_1_0 = null;


        // InternalGo.g:3306:3: ( ( () ( (lv_int_lit_1_0= ruleint_lit ) ) ) )
        // InternalGo.g:3306:3: ( () ( (lv_int_lit_1_0= ruleint_lit ) ) )
        {
        // InternalGo.g:3306:3: ( () ( (lv_int_lit_1_0= ruleint_lit ) ) )
        // InternalGo.g:3307:4: () ( (lv_int_lit_1_0= ruleint_lit ) )
        {
        // InternalGo.g:3307:4: ()
        // InternalGo.g:3308:5: 
        {
        if ( state.backtracking==0 ) {

          					/* */
          				
        }

        }

        // InternalGo.g:3317:4: ( (lv_int_lit_1_0= ruleint_lit ) )
        // InternalGo.g:3318:5: (lv_int_lit_1_0= ruleint_lit )
        {
        // InternalGo.g:3318:5: (lv_int_lit_1_0= ruleint_lit )
        // InternalGo.g:3319:6: lv_int_lit_1_0= ruleint_lit
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getBasicLitAccess().getInt_litInt_litParserRuleCall_0_1_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_int_lit_1_0=ruleint_lit();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred54_InternalGo

    // $ANTLR start synpred55_InternalGo
    public final void synpred55_InternalGo_fragment() throws RecognitionException {   
        EObject lv_float_lit_2_0 = null;


        // InternalGo.g:3338:3: ( ( (lv_float_lit_2_0= rulefloat_lit ) ) )
        // InternalGo.g:3338:3: ( (lv_float_lit_2_0= rulefloat_lit ) )
        {
        // InternalGo.g:3338:3: ( (lv_float_lit_2_0= rulefloat_lit ) )
        // InternalGo.g:3339:4: (lv_float_lit_2_0= rulefloat_lit )
        {
        // InternalGo.g:3339:4: (lv_float_lit_2_0= rulefloat_lit )
        // InternalGo.g:3340:5: lv_float_lit_2_0= rulefloat_lit
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getBasicLitAccess().getFloat_litFloat_litParserRuleCall_1_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_float_lit_2_0=rulefloat_lit();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred55_InternalGo

    // $ANTLR start synpred56_InternalGo
    public final void synpred56_InternalGo_fragment() throws RecognitionException {   
        EObject lv_rune_lit_3_0 = null;


        // InternalGo.g:3358:3: ( ( (lv_rune_lit_3_0= rulerune_lit ) ) )
        // InternalGo.g:3358:3: ( (lv_rune_lit_3_0= rulerune_lit ) )
        {
        // InternalGo.g:3358:3: ( (lv_rune_lit_3_0= rulerune_lit ) )
        // InternalGo.g:3359:4: (lv_rune_lit_3_0= rulerune_lit )
        {
        // InternalGo.g:3359:4: (lv_rune_lit_3_0= rulerune_lit )
        // InternalGo.g:3360:5: lv_rune_lit_3_0= rulerune_lit
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getBasicLitAccess().getRune_litRune_litParserRuleCall_2_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_rune_lit_3_0=rulerune_lit();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred56_InternalGo

    // $ANTLR start synpred57_InternalGo
    public final void synpred57_InternalGo_fragment() throws RecognitionException {   
        EObject this_identifier_0 = null;


        // InternalGo.g:3416:3: (this_identifier_0= ruleidentifier )
        // InternalGo.g:3416:3: this_identifier_0= ruleidentifier
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FOLLOW_2);
        this_identifier_0=ruleidentifier();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred57_InternalGo

    // $ANTLR start synpred58_InternalGo
    public final void synpred58_InternalGo_fragment() throws RecognitionException {   
        EObject lv_StructType_0_0 = null;


        // InternalGo.g:3576:3: ( ( (lv_StructType_0_0= ruleStructType ) ) )
        // InternalGo.g:3576:3: ( (lv_StructType_0_0= ruleStructType ) )
        {
        // InternalGo.g:3576:3: ( (lv_StructType_0_0= ruleStructType ) )
        // InternalGo.g:3577:4: (lv_StructType_0_0= ruleStructType )
        {
        // InternalGo.g:3577:4: (lv_StructType_0_0= ruleStructType )
        // InternalGo.g:3578:5: lv_StructType_0_0= ruleStructType
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getLiteralTypeAccess().getStructTypeStructTypeParserRuleCall_0_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_StructType_0_0=ruleStructType();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred58_InternalGo

    // $ANTLR start synpred59_InternalGo
    public final void synpred59_InternalGo_fragment() throws RecognitionException {   
        Token otherlv_1=null;
        EObject lv_LiteralTypeLinha_2_0 = null;


        // InternalGo.g:3596:3: ( (otherlv_1= '[' ( (lv_LiteralTypeLinha_2_0= ruleLiteralTypeLinha ) ) ) )
        // InternalGo.g:3596:3: (otherlv_1= '[' ( (lv_LiteralTypeLinha_2_0= ruleLiteralTypeLinha ) ) )
        {
        // InternalGo.g:3596:3: (otherlv_1= '[' ( (lv_LiteralTypeLinha_2_0= ruleLiteralTypeLinha ) ) )
        // InternalGo.g:3597:4: otherlv_1= '[' ( (lv_LiteralTypeLinha_2_0= ruleLiteralTypeLinha ) )
        {
        otherlv_1=(Token)match(input,21,FOLLOW_37); if (state.failed) return ;
        // InternalGo.g:3601:4: ( (lv_LiteralTypeLinha_2_0= ruleLiteralTypeLinha ) )
        // InternalGo.g:3602:5: (lv_LiteralTypeLinha_2_0= ruleLiteralTypeLinha )
        {
        // InternalGo.g:3602:5: (lv_LiteralTypeLinha_2_0= ruleLiteralTypeLinha )
        // InternalGo.g:3603:6: lv_LiteralTypeLinha_2_0= ruleLiteralTypeLinha
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getLiteralTypeAccess().getLiteralTypeLinhaLiteralTypeLinhaParserRuleCall_1_1_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_LiteralTypeLinha_2_0=ruleLiteralTypeLinha();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred59_InternalGo

    // $ANTLR start synpred60_InternalGo
    public final void synpred60_InternalGo_fragment() throws RecognitionException {   
        EObject lv_ElementType_3_0 = null;


        // InternalGo.g:3622:3: ( ( (lv_ElementType_3_0= ruleElementType ) ) )
        // InternalGo.g:3622:3: ( (lv_ElementType_3_0= ruleElementType ) )
        {
        // InternalGo.g:3622:3: ( (lv_ElementType_3_0= ruleElementType ) )
        // InternalGo.g:3623:4: (lv_ElementType_3_0= ruleElementType )
        {
        // InternalGo.g:3623:4: (lv_ElementType_3_0= ruleElementType )
        // InternalGo.g:3624:5: lv_ElementType_3_0= ruleElementType
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getLiteralTypeAccess().getElementTypeElementTypeParserRuleCall_2_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_ElementType_3_0=ruleElementType();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred60_InternalGo

    // $ANTLR start synpred61_InternalGo
    public final void synpred61_InternalGo_fragment() throws RecognitionException {   
        EObject lv_MapType_4_0 = null;


        // InternalGo.g:3642:3: ( ( (lv_MapType_4_0= ruleMapType ) ) )
        // InternalGo.g:3642:3: ( (lv_MapType_4_0= ruleMapType ) )
        {
        // InternalGo.g:3642:3: ( (lv_MapType_4_0= ruleMapType ) )
        // InternalGo.g:3643:4: (lv_MapType_4_0= ruleMapType )
        {
        // InternalGo.g:3643:4: (lv_MapType_4_0= ruleMapType )
        // InternalGo.g:3644:5: lv_MapType_4_0= ruleMapType
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getLiteralTypeAccess().getMapTypeMapTypeParserRuleCall_3_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_MapType_4_0=ruleMapType();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred61_InternalGo

    // $ANTLR start synpred68_InternalGo
    public final void synpred68_InternalGo_fragment() throws RecognitionException {   
        Token otherlv_1=null;
        EObject lv_Key_0_0 = null;


        // InternalGo.g:3996:4: ( ( (lv_Key_0_0= ruleKey ) ) otherlv_1= ':' )
        // InternalGo.g:3996:4: ( (lv_Key_0_0= ruleKey ) ) otherlv_1= ':'
        {
        // InternalGo.g:3996:4: ( (lv_Key_0_0= ruleKey ) )
        // InternalGo.g:3997:5: (lv_Key_0_0= ruleKey )
        {
        // InternalGo.g:3997:5: (lv_Key_0_0= ruleKey )
        // InternalGo.g:3998:6: lv_Key_0_0= ruleKey
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getKeyedElementAccess().getKeyKeyParserRuleCall_0_0_0());
          					
        }
        pushFollow(FOLLOW_41);
        lv_Key_0_0=ruleKey();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_1=(Token)match(input,39,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred68_InternalGo

    // $ANTLR start synpred71_InternalGo
    public final void synpred71_InternalGo_fragment() throws RecognitionException {   
        EObject lv_Operand_0_0 = null;

        EObject lv_PrimaryExprLinha_1_0 = null;


        // InternalGo.g:4233:3: ( ( ( (lv_Operand_0_0= ruleOperand ) ) ( (lv_PrimaryExprLinha_1_0= rulePrimaryExprLinha ) ) ) )
        // InternalGo.g:4233:3: ( ( (lv_Operand_0_0= ruleOperand ) ) ( (lv_PrimaryExprLinha_1_0= rulePrimaryExprLinha ) ) )
        {
        // InternalGo.g:4233:3: ( ( (lv_Operand_0_0= ruleOperand ) ) ( (lv_PrimaryExprLinha_1_0= rulePrimaryExprLinha ) ) )
        // InternalGo.g:4234:4: ( (lv_Operand_0_0= ruleOperand ) ) ( (lv_PrimaryExprLinha_1_0= rulePrimaryExprLinha ) )
        {
        // InternalGo.g:4234:4: ( (lv_Operand_0_0= ruleOperand ) )
        // InternalGo.g:4235:5: (lv_Operand_0_0= ruleOperand )
        {
        // InternalGo.g:4235:5: (lv_Operand_0_0= ruleOperand )
        // InternalGo.g:4236:6: lv_Operand_0_0= ruleOperand
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getPrimaryExprAccess().getOperandOperandParserRuleCall_0_0_0());
          					
        }
        pushFollow(FOLLOW_42);
        lv_Operand_0_0=ruleOperand();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalGo.g:4253:4: ( (lv_PrimaryExprLinha_1_0= rulePrimaryExprLinha ) )
        // InternalGo.g:4254:5: (lv_PrimaryExprLinha_1_0= rulePrimaryExprLinha )
        {
        // InternalGo.g:4254:5: (lv_PrimaryExprLinha_1_0= rulePrimaryExprLinha )
        // InternalGo.g:4255:6: lv_PrimaryExprLinha_1_0= rulePrimaryExprLinha
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getPrimaryExprAccess().getPrimaryExprLinhaPrimaryExprLinhaParserRuleCall_0_1_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_PrimaryExprLinha_1_0=rulePrimaryExprLinha();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred71_InternalGo

    // $ANTLR start synpred72_InternalGo
    public final void synpred72_InternalGo_fragment() throws RecognitionException {   
        EObject lv_Conversion_2_0 = null;

        EObject lv_PrimaryExprLinha_3_0 = null;


        // InternalGo.g:4274:3: ( ( ( (lv_Conversion_2_0= ruleConversion ) ) ( (lv_PrimaryExprLinha_3_0= rulePrimaryExprLinha ) ) ) )
        // InternalGo.g:4274:3: ( ( (lv_Conversion_2_0= ruleConversion ) ) ( (lv_PrimaryExprLinha_3_0= rulePrimaryExprLinha ) ) )
        {
        // InternalGo.g:4274:3: ( ( (lv_Conversion_2_0= ruleConversion ) ) ( (lv_PrimaryExprLinha_3_0= rulePrimaryExprLinha ) ) )
        // InternalGo.g:4275:4: ( (lv_Conversion_2_0= ruleConversion ) ) ( (lv_PrimaryExprLinha_3_0= rulePrimaryExprLinha ) )
        {
        // InternalGo.g:4275:4: ( (lv_Conversion_2_0= ruleConversion ) )
        // InternalGo.g:4276:5: (lv_Conversion_2_0= ruleConversion )
        {
        // InternalGo.g:4276:5: (lv_Conversion_2_0= ruleConversion )
        // InternalGo.g:4277:6: lv_Conversion_2_0= ruleConversion
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getPrimaryExprAccess().getConversionConversionParserRuleCall_1_0_0());
          					
        }
        pushFollow(FOLLOW_42);
        lv_Conversion_2_0=ruleConversion();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalGo.g:4294:4: ( (lv_PrimaryExprLinha_3_0= rulePrimaryExprLinha ) )
        // InternalGo.g:4295:5: (lv_PrimaryExprLinha_3_0= rulePrimaryExprLinha )
        {
        // InternalGo.g:4295:5: (lv_PrimaryExprLinha_3_0= rulePrimaryExprLinha )
        // InternalGo.g:4296:6: lv_PrimaryExprLinha_3_0= rulePrimaryExprLinha
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getPrimaryExprAccess().getPrimaryExprLinhaPrimaryExprLinhaParserRuleCall_1_1_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_PrimaryExprLinha_3_0=rulePrimaryExprLinha();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred72_InternalGo

    // $ANTLR start synpred77_InternalGo
    public final void synpred77_InternalGo_fragment() throws RecognitionException {   
        EObject lv_Index_0_0 = null;

        EObject lv_PrimaryExprLinha_1_0 = null;


        // InternalGo.g:4602:3: ( ( ( (lv_Index_0_0= ruleIndex ) ) ( (lv_PrimaryExprLinha_1_0= rulePrimaryExprLinha ) ) ) )
        // InternalGo.g:4602:3: ( ( (lv_Index_0_0= ruleIndex ) ) ( (lv_PrimaryExprLinha_1_0= rulePrimaryExprLinha ) ) )
        {
        // InternalGo.g:4602:3: ( ( (lv_Index_0_0= ruleIndex ) ) ( (lv_PrimaryExprLinha_1_0= rulePrimaryExprLinha ) ) )
        // InternalGo.g:4603:4: ( (lv_Index_0_0= ruleIndex ) ) ( (lv_PrimaryExprLinha_1_0= rulePrimaryExprLinha ) )
        {
        // InternalGo.g:4603:4: ( (lv_Index_0_0= ruleIndex ) )
        // InternalGo.g:4604:5: (lv_Index_0_0= ruleIndex )
        {
        // InternalGo.g:4604:5: (lv_Index_0_0= ruleIndex )
        // InternalGo.g:4605:6: lv_Index_0_0= ruleIndex
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getCochetesAccess().getIndexIndexParserRuleCall_0_0_0());
          					
        }
        pushFollow(FOLLOW_42);
        lv_Index_0_0=ruleIndex();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalGo.g:4622:4: ( (lv_PrimaryExprLinha_1_0= rulePrimaryExprLinha ) )
        // InternalGo.g:4623:5: (lv_PrimaryExprLinha_1_0= rulePrimaryExprLinha )
        {
        // InternalGo.g:4623:5: (lv_PrimaryExprLinha_1_0= rulePrimaryExprLinha )
        // InternalGo.g:4624:6: lv_PrimaryExprLinha_1_0= rulePrimaryExprLinha
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getCochetesAccess().getPrimaryExprLinhaPrimaryExprLinhaParserRuleCall_0_1_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_PrimaryExprLinha_1_0=rulePrimaryExprLinha();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred77_InternalGo

    // $ANTLR start synpred80_InternalGo
    public final void synpred80_InternalGo_fragment() throws RecognitionException {   
        EObject lv_ExpressionList_2_0 = null;


        // InternalGo.g:4924:5: ( ( (lv_ExpressionList_2_0= ruleExpressionList ) ) )
        // InternalGo.g:4924:5: ( (lv_ExpressionList_2_0= ruleExpressionList ) )
        {
        // InternalGo.g:4924:5: ( (lv_ExpressionList_2_0= ruleExpressionList ) )
        // InternalGo.g:4925:6: (lv_ExpressionList_2_0= ruleExpressionList )
        {
        // InternalGo.g:4925:6: (lv_ExpressionList_2_0= ruleExpressionList )
        // InternalGo.g:4926:7: lv_ExpressionList_2_0= ruleExpressionList
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getArgumentsAccess().getExpressionListExpressionListParserRuleCall_2_0_0_0());
          						
        }
        pushFollow(FOLLOW_2);
        lv_ExpressionList_2_0=ruleExpressionList();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred80_InternalGo

    // $ANTLR start synpred86_InternalGo
    public final void synpred86_InternalGo_fragment() throws RecognitionException {   
        EObject lv_PrimaryExpr_0_0 = null;


        // InternalGo.g:5276:3: ( ( (lv_PrimaryExpr_0_0= rulePrimaryExpr ) ) )
        // InternalGo.g:5276:3: ( (lv_PrimaryExpr_0_0= rulePrimaryExpr ) )
        {
        // InternalGo.g:5276:3: ( (lv_PrimaryExpr_0_0= rulePrimaryExpr ) )
        // InternalGo.g:5277:4: (lv_PrimaryExpr_0_0= rulePrimaryExpr )
        {
        // InternalGo.g:5277:4: (lv_PrimaryExpr_0_0= rulePrimaryExpr )
        // InternalGo.g:5278:5: lv_PrimaryExpr_0_0= rulePrimaryExpr
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getUnaryExprAccess().getPrimaryExprPrimaryExprParserRuleCall_0_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_PrimaryExpr_0_0=rulePrimaryExpr();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred86_InternalGo

    // $ANTLR start synpred127_InternalGo
    public final void synpred127_InternalGo_fragment() throws RecognitionException {   
        EObject lv_ExpressionStmt_1_0 = null;


        // InternalGo.g:6092:3: ( ( (lv_ExpressionStmt_1_0= ruleExpressionStmt ) ) )
        // InternalGo.g:6092:3: ( (lv_ExpressionStmt_1_0= ruleExpressionStmt ) )
        {
        // InternalGo.g:6092:3: ( (lv_ExpressionStmt_1_0= ruleExpressionStmt ) )
        // InternalGo.g:6093:4: (lv_ExpressionStmt_1_0= ruleExpressionStmt )
        {
        // InternalGo.g:6093:4: (lv_ExpressionStmt_1_0= ruleExpressionStmt )
        // InternalGo.g:6094:5: lv_ExpressionStmt_1_0= ruleExpressionStmt
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getSimpleStmtAccess().getExpressionStmtExpressionStmtParserRuleCall_1_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_ExpressionStmt_1_0=ruleExpressionStmt();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred127_InternalGo

    // $ANTLR start synpred128_InternalGo
    public final void synpred128_InternalGo_fragment() throws RecognitionException {   
        EObject lv_SendStmt_2_0 = null;


        // InternalGo.g:6112:3: ( ( (lv_SendStmt_2_0= ruleSendStmt ) ) )
        // InternalGo.g:6112:3: ( (lv_SendStmt_2_0= ruleSendStmt ) )
        {
        // InternalGo.g:6112:3: ( (lv_SendStmt_2_0= ruleSendStmt ) )
        // InternalGo.g:6113:4: (lv_SendStmt_2_0= ruleSendStmt )
        {
        // InternalGo.g:6113:4: (lv_SendStmt_2_0= ruleSendStmt )
        // InternalGo.g:6114:5: lv_SendStmt_2_0= ruleSendStmt
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getSimpleStmtAccess().getSendStmtSendStmtParserRuleCall_2_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_SendStmt_2_0=ruleSendStmt();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred128_InternalGo

    // $ANTLR start synpred129_InternalGo
    public final void synpred129_InternalGo_fragment() throws RecognitionException {   
        EObject lv_IncDecStmt_3_0 = null;


        // InternalGo.g:6132:3: ( ( (lv_IncDecStmt_3_0= ruleIncDecStmt ) ) )
        // InternalGo.g:6132:3: ( (lv_IncDecStmt_3_0= ruleIncDecStmt ) )
        {
        // InternalGo.g:6132:3: ( (lv_IncDecStmt_3_0= ruleIncDecStmt ) )
        // InternalGo.g:6133:4: (lv_IncDecStmt_3_0= ruleIncDecStmt )
        {
        // InternalGo.g:6133:4: (lv_IncDecStmt_3_0= ruleIncDecStmt )
        // InternalGo.g:6134:5: lv_IncDecStmt_3_0= ruleIncDecStmt
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getSimpleStmtAccess().getIncDecStmtIncDecStmtParserRuleCall_3_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_IncDecStmt_3_0=ruleIncDecStmt();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred129_InternalGo

    // $ANTLR start synpred130_InternalGo
    public final void synpred130_InternalGo_fragment() throws RecognitionException {   
        EObject lv_Assignment_4_0 = null;


        // InternalGo.g:6152:3: ( ( (lv_Assignment_4_0= ruleAssignment ) ) )
        // InternalGo.g:6152:3: ( (lv_Assignment_4_0= ruleAssignment ) )
        {
        // InternalGo.g:6152:3: ( (lv_Assignment_4_0= ruleAssignment ) )
        // InternalGo.g:6153:4: (lv_Assignment_4_0= ruleAssignment )
        {
        // InternalGo.g:6153:4: (lv_Assignment_4_0= ruleAssignment )
        // InternalGo.g:6154:5: lv_Assignment_4_0= ruleAssignment
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getSimpleStmtAccess().getAssignmentAssignmentParserRuleCall_4_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_Assignment_4_0=ruleAssignment();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred130_InternalGo

    // $ANTLR start synpred134_InternalGo
    public final void synpred134_InternalGo_fragment() throws RecognitionException {   
        Token otherlv_2=null;
        EObject lv_SimpleStmt_1_0 = null;


        // InternalGo.g:6641:4: ( ( (lv_SimpleStmt_1_0= ruleSimpleStmt ) ) otherlv_2= ';' )
        // InternalGo.g:6641:4: ( (lv_SimpleStmt_1_0= ruleSimpleStmt ) ) otherlv_2= ';'
        {
        // InternalGo.g:6641:4: ( (lv_SimpleStmt_1_0= ruleSimpleStmt ) )
        // InternalGo.g:6642:5: (lv_SimpleStmt_1_0= ruleSimpleStmt )
        {
        // InternalGo.g:6642:5: (lv_SimpleStmt_1_0= ruleSimpleStmt )
        // InternalGo.g:6643:6: lv_SimpleStmt_1_0= ruleSimpleStmt
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getIfStmtAccess().getSimpleStmtSimpleStmtParserRuleCall_1_0_0());
          					
        }
        pushFollow(FOLLOW_3);
        lv_SimpleStmt_1_0=ruleSimpleStmt();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_2=(Token)match(input,17,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred134_InternalGo

    // $ANTLR start synpred137_InternalGo
    public final void synpred137_InternalGo_fragment() throws RecognitionException {   
        Token otherlv_2=null;
        EObject this_SimpleStmt_1 = null;


        // InternalGo.g:6774:4: (this_SimpleStmt_1= ruleSimpleStmt otherlv_2= ';' )
        // InternalGo.g:6774:4: this_SimpleStmt_1= ruleSimpleStmt otherlv_2= ';'
        {
        if ( state.backtracking==0 ) {

          				/* */
          			
        }
        pushFollow(FOLLOW_3);
        this_SimpleStmt_1=ruleSimpleStmt();

        state._fsp--;
        if (state.failed) return ;
        otherlv_2=(Token)match(input,17,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred137_InternalGo

    // $ANTLR start synpred140_InternalGo
    public final void synpred140_InternalGo_fragment() throws RecognitionException {   
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_TypeSwitchGuard_0_0 = null;

        EObject lv_TypeCaseClause_2_0 = null;

        EObject lv_switch_stmt_linha_4_0 = null;


        // InternalGo.g:6950:3: ( ( ( (lv_TypeSwitchGuard_0_0= ruleTypeSwitchGuard ) ) otherlv_1= '{' ( (lv_TypeCaseClause_2_0= ruleTypeCaseClause ) )* otherlv_3= '}' ( (lv_switch_stmt_linha_4_0= ruleswitch_stmt_linha ) ) ) )
        // InternalGo.g:6950:3: ( ( (lv_TypeSwitchGuard_0_0= ruleTypeSwitchGuard ) ) otherlv_1= '{' ( (lv_TypeCaseClause_2_0= ruleTypeCaseClause ) )* otherlv_3= '}' ( (lv_switch_stmt_linha_4_0= ruleswitch_stmt_linha ) ) )
        {
        // InternalGo.g:6950:3: ( ( (lv_TypeSwitchGuard_0_0= ruleTypeSwitchGuard ) ) otherlv_1= '{' ( (lv_TypeCaseClause_2_0= ruleTypeCaseClause ) )* otherlv_3= '}' ( (lv_switch_stmt_linha_4_0= ruleswitch_stmt_linha ) ) )
        // InternalGo.g:6951:4: ( (lv_TypeSwitchGuard_0_0= ruleTypeSwitchGuard ) ) otherlv_1= '{' ( (lv_TypeCaseClause_2_0= ruleTypeCaseClause ) )* otherlv_3= '}' ( (lv_switch_stmt_linha_4_0= ruleswitch_stmt_linha ) )
        {
        // InternalGo.g:6951:4: ( (lv_TypeSwitchGuard_0_0= ruleTypeSwitchGuard ) )
        // InternalGo.g:6952:5: (lv_TypeSwitchGuard_0_0= ruleTypeSwitchGuard )
        {
        // InternalGo.g:6952:5: (lv_TypeSwitchGuard_0_0= ruleTypeSwitchGuard )
        // InternalGo.g:6953:6: lv_TypeSwitchGuard_0_0= ruleTypeSwitchGuard
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getSwitch_stmt_linhaAccess().getTypeSwitchGuardTypeSwitchGuardParserRuleCall_0_0_0());
          					
        }
        pushFollow(FOLLOW_11);
        lv_TypeSwitchGuard_0_0=ruleTypeSwitchGuard();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_1=(Token)match(input,24,FOLLOW_56); if (state.failed) return ;
        // InternalGo.g:6974:4: ( (lv_TypeCaseClause_2_0= ruleTypeCaseClause ) )*
        loop133:
        do {
            int alt133=2;
            int LA133_0 = input.LA(1);

            if ( ((LA133_0>=65 && LA133_0<=66)) ) {
                alt133=1;
            }


            switch (alt133) {
        	case 1 :
        	    // InternalGo.g:6975:5: (lv_TypeCaseClause_2_0= ruleTypeCaseClause )
        	    {
        	    // InternalGo.g:6975:5: (lv_TypeCaseClause_2_0= ruleTypeCaseClause )
        	    // InternalGo.g:6976:6: lv_TypeCaseClause_2_0= ruleTypeCaseClause
        	    {
        	    if ( state.backtracking==0 ) {

        	      						newCompositeNode(grammarAccess.getSwitch_stmt_linhaAccess().getTypeCaseClauseTypeCaseClauseParserRuleCall_0_2_0());
        	      					
        	    }
        	    pushFollow(FOLLOW_56);
        	    lv_TypeCaseClause_2_0=ruleTypeCaseClause();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop133;
            }
        } while (true);

        otherlv_3=(Token)match(input,30,FOLLOW_55); if (state.failed) return ;
        // InternalGo.g:6997:4: ( (lv_switch_stmt_linha_4_0= ruleswitch_stmt_linha ) )
        // InternalGo.g:6998:5: (lv_switch_stmt_linha_4_0= ruleswitch_stmt_linha )
        {
        // InternalGo.g:6998:5: (lv_switch_stmt_linha_4_0= ruleswitch_stmt_linha )
        // InternalGo.g:6999:6: lv_switch_stmt_linha_4_0= ruleswitch_stmt_linha
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getSwitch_stmt_linhaAccess().getSwitch_stmt_linhaSwitch_stmt_linhaParserRuleCall_0_4_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_switch_stmt_linha_4_0=ruleswitch_stmt_linha();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred140_InternalGo

    // $ANTLR start synpred143_InternalGo
    public final void synpred143_InternalGo_fragment() throws RecognitionException {   
        Token otherlv_7=null;
        Token otherlv_9=null;
        EObject lv_Expression_6_0 = null;

        EObject lv_ExprCaseClause_8_0 = null;

        EObject lv_switch_stmt_linha_10_0 = null;


        // InternalGo.g:7018:3: ( ( () ( (lv_Expression_6_0= ruleExpression ) )? otherlv_7= '{' ( (lv_ExprCaseClause_8_0= ruleExprCaseClause ) )* otherlv_9= '}' ( (lv_switch_stmt_linha_10_0= ruleswitch_stmt_linha ) ) ) )
        // InternalGo.g:7018:3: ( () ( (lv_Expression_6_0= ruleExpression ) )? otherlv_7= '{' ( (lv_ExprCaseClause_8_0= ruleExprCaseClause ) )* otherlv_9= '}' ( (lv_switch_stmt_linha_10_0= ruleswitch_stmt_linha ) ) )
        {
        // InternalGo.g:7018:3: ( () ( (lv_Expression_6_0= ruleExpression ) )? otherlv_7= '{' ( (lv_ExprCaseClause_8_0= ruleExprCaseClause ) )* otherlv_9= '}' ( (lv_switch_stmt_linha_10_0= ruleswitch_stmt_linha ) ) )
        // InternalGo.g:7019:4: () ( (lv_Expression_6_0= ruleExpression ) )? otherlv_7= '{' ( (lv_ExprCaseClause_8_0= ruleExprCaseClause ) )* otherlv_9= '}' ( (lv_switch_stmt_linha_10_0= ruleswitch_stmt_linha ) )
        {
        // InternalGo.g:7019:4: ()
        // InternalGo.g:7020:5: 
        {
        if ( state.backtracking==0 ) {

          					/* */
          				
        }

        }

        // InternalGo.g:7029:4: ( (lv_Expression_6_0= ruleExpression ) )?
        int alt134=2;
        int LA134_0 = input.LA(1);

        if ( ((LA134_0>=RULE_LETTER && LA134_0<=RULE_DECIMAL_DIGIT)||LA134_0==18||(LA134_0>=20 && LA134_0<=21)||LA134_0==23||(LA134_0>=25 && LA134_0<=26)||LA134_0==29||(LA134_0>=31 && LA134_0<=33)||(LA134_0>=48 && LA134_0<=49)||LA134_0==56||(LA134_0>=58 && LA134_0<=59)||LA134_0==79||(LA134_0>=82 && LA134_0<=83)) ) {
            alt134=1;
        }
        switch (alt134) {
            case 1 :
                // InternalGo.g:7030:5: (lv_Expression_6_0= ruleExpression )
                {
                // InternalGo.g:7030:5: (lv_Expression_6_0= ruleExpression )
                // InternalGo.g:7031:6: lv_Expression_6_0= ruleExpression
                {
                if ( state.backtracking==0 ) {

                  						newCompositeNode(grammarAccess.getSwitch_stmt_linhaAccess().getExpressionExpressionParserRuleCall_1_1_0());
                  					
                }
                pushFollow(FOLLOW_11);
                lv_Expression_6_0=ruleExpression();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                break;

        }

        otherlv_7=(Token)match(input,24,FOLLOW_56); if (state.failed) return ;
        // InternalGo.g:7052:4: ( (lv_ExprCaseClause_8_0= ruleExprCaseClause ) )*
        loop135:
        do {
            int alt135=2;
            int LA135_0 = input.LA(1);

            if ( ((LA135_0>=65 && LA135_0<=66)) ) {
                alt135=1;
            }


            switch (alt135) {
        	case 1 :
        	    // InternalGo.g:7053:5: (lv_ExprCaseClause_8_0= ruleExprCaseClause )
        	    {
        	    // InternalGo.g:7053:5: (lv_ExprCaseClause_8_0= ruleExprCaseClause )
        	    // InternalGo.g:7054:6: lv_ExprCaseClause_8_0= ruleExprCaseClause
        	    {
        	    if ( state.backtracking==0 ) {

        	      						newCompositeNode(grammarAccess.getSwitch_stmt_linhaAccess().getExprCaseClauseExprCaseClauseParserRuleCall_1_3_0());
        	      					
        	    }
        	    pushFollow(FOLLOW_56);
        	    lv_ExprCaseClause_8_0=ruleExprCaseClause();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop135;
            }
        } while (true);

        otherlv_9=(Token)match(input,30,FOLLOW_55); if (state.failed) return ;
        // InternalGo.g:7075:4: ( (lv_switch_stmt_linha_10_0= ruleswitch_stmt_linha ) )
        // InternalGo.g:7076:5: (lv_switch_stmt_linha_10_0= ruleswitch_stmt_linha )
        {
        // InternalGo.g:7076:5: (lv_switch_stmt_linha_10_0= ruleswitch_stmt_linha )
        // InternalGo.g:7077:6: lv_switch_stmt_linha_10_0= ruleswitch_stmt_linha
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getSwitch_stmt_linhaAccess().getSwitch_stmt_linhaSwitch_stmt_linhaParserRuleCall_1_5_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_switch_stmt_linha_10_0=ruleswitch_stmt_linha();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred143_InternalGo

    // $ANTLR start synpred147_InternalGo
    public final void synpred147_InternalGo_fragment() throws RecognitionException {   
        EObject lv_Condition_1_0 = null;


        // InternalGo.g:7400:4: ( ( (lv_Condition_1_0= ruleCondition ) ) )
        // InternalGo.g:7400:4: ( (lv_Condition_1_0= ruleCondition ) )
        {
        // InternalGo.g:7400:4: ( (lv_Condition_1_0= ruleCondition ) )
        // InternalGo.g:7401:5: (lv_Condition_1_0= ruleCondition )
        {
        // InternalGo.g:7401:5: (lv_Condition_1_0= ruleCondition )
        // InternalGo.g:7402:6: lv_Condition_1_0= ruleCondition
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getForStmtAccess().getConditionConditionParserRuleCall_1_0_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_Condition_1_0=ruleCondition();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred147_InternalGo

    // $ANTLR start synpred148_InternalGo
    public final void synpred148_InternalGo_fragment() throws RecognitionException {   
        EObject lv_ForClause_2_0 = null;


        // InternalGo.g:7420:4: ( ( (lv_ForClause_2_0= ruleForClause ) ) )
        // InternalGo.g:7420:4: ( (lv_ForClause_2_0= ruleForClause ) )
        {
        // InternalGo.g:7420:4: ( (lv_ForClause_2_0= ruleForClause ) )
        // InternalGo.g:7421:5: (lv_ForClause_2_0= ruleForClause )
        {
        // InternalGo.g:7421:5: (lv_ForClause_2_0= ruleForClause )
        // InternalGo.g:7422:6: lv_ForClause_2_0= ruleForClause
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getForStmtAccess().getForClauseForClauseParserRuleCall_1_1_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_ForClause_2_0=ruleForClause();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred148_InternalGo

    // $ANTLR start synpred149_InternalGo
    public final void synpred149_InternalGo_fragment() throws RecognitionException {   
        EObject lv_RangeClause_3_0 = null;


        // InternalGo.g:7440:4: ( ( (lv_RangeClause_3_0= ruleRangeClause ) ) )
        // InternalGo.g:7440:4: ( (lv_RangeClause_3_0= ruleRangeClause ) )
        {
        // InternalGo.g:7440:4: ( (lv_RangeClause_3_0= ruleRangeClause ) )
        // InternalGo.g:7441:5: (lv_RangeClause_3_0= ruleRangeClause )
        {
        // InternalGo.g:7441:5: (lv_RangeClause_3_0= ruleRangeClause )
        // InternalGo.g:7442:6: lv_RangeClause_3_0= ruleRangeClause
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getForStmtAccess().getRangeClauseRangeClauseParserRuleCall_1_2_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_RangeClause_3_0=ruleRangeClause();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred149_InternalGo

    // $ANTLR start synpred156_InternalGo
    public final void synpred156_InternalGo_fragment() throws RecognitionException {   
        EObject lv_SendStmt_1_0 = null;


        // InternalGo.g:7964:5: ( ( (lv_SendStmt_1_0= ruleSendStmt ) ) )
        // InternalGo.g:7964:5: ( (lv_SendStmt_1_0= ruleSendStmt ) )
        {
        // InternalGo.g:7964:5: ( (lv_SendStmt_1_0= ruleSendStmt ) )
        // InternalGo.g:7965:6: (lv_SendStmt_1_0= ruleSendStmt )
        {
        // InternalGo.g:7965:6: (lv_SendStmt_1_0= ruleSendStmt )
        // InternalGo.g:7966:7: lv_SendStmt_1_0= ruleSendStmt
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getCommCaseAccess().getSendStmtSendStmtParserRuleCall_0_1_0_0());
          						
        }
        pushFollow(FOLLOW_2);
        lv_SendStmt_1_0=ruleSendStmt();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred156_InternalGo

    // $ANTLR start synpred158_InternalGo
    public final void synpred158_InternalGo_fragment() throws RecognitionException {   
        Token otherlv_1=null;
        EObject lv_ExpressionList_0_0 = null;


        // InternalGo.g:8042:4: ( ( ( (lv_ExpressionList_0_0= ruleExpressionList ) ) otherlv_1= '=' ) )
        // InternalGo.g:8042:4: ( ( (lv_ExpressionList_0_0= ruleExpressionList ) ) otherlv_1= '=' )
        {
        // InternalGo.g:8042:4: ( ( (lv_ExpressionList_0_0= ruleExpressionList ) ) otherlv_1= '=' )
        // InternalGo.g:8043:5: ( (lv_ExpressionList_0_0= ruleExpressionList ) ) otherlv_1= '='
        {
        // InternalGo.g:8043:5: ( (lv_ExpressionList_0_0= ruleExpressionList ) )
        // InternalGo.g:8044:6: (lv_ExpressionList_0_0= ruleExpressionList )
        {
        // InternalGo.g:8044:6: (lv_ExpressionList_0_0= ruleExpressionList )
        // InternalGo.g:8045:7: lv_ExpressionList_0_0= ruleExpressionList
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getRecvStmtAccess().getExpressionListExpressionListParserRuleCall_0_0_0_0());
          						
        }
        pushFollow(FOLLOW_31);
        lv_ExpressionList_0_0=ruleExpressionList();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_1=(Token)match(input,35,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred158_InternalGo

    // $ANTLR start synpred159_InternalGo
    public final void synpred159_InternalGo_fragment() throws RecognitionException {   
        Token otherlv_3=null;
        EObject lv_IdentifierList_2_0 = null;


        // InternalGo.g:8068:4: ( ( ( (lv_IdentifierList_2_0= ruleIdentifierList ) ) otherlv_3= ':=' ) )
        // InternalGo.g:8068:4: ( ( (lv_IdentifierList_2_0= ruleIdentifierList ) ) otherlv_3= ':=' )
        {
        // InternalGo.g:8068:4: ( ( (lv_IdentifierList_2_0= ruleIdentifierList ) ) otherlv_3= ':=' )
        // InternalGo.g:8069:5: ( (lv_IdentifierList_2_0= ruleIdentifierList ) ) otherlv_3= ':='
        {
        // InternalGo.g:8069:5: ( (lv_IdentifierList_2_0= ruleIdentifierList ) )
        // InternalGo.g:8070:6: (lv_IdentifierList_2_0= ruleIdentifierList )
        {
        // InternalGo.g:8070:6: (lv_IdentifierList_2_0= ruleIdentifierList )
        // InternalGo.g:8071:7: lv_IdentifierList_2_0= ruleIdentifierList
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getRecvStmtAccess().getIdentifierListIdentifierListParserRuleCall_0_1_0_0());
          						
        }
        pushFollow(FOLLOW_35);
        lv_IdentifierList_2_0=ruleIdentifierList();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_3=(Token)match(input,38,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred159_InternalGo

    // $ANTLR start synpred167_InternalGo
    public final void synpred167_InternalGo_fragment() throws RecognitionException {   
        Token lv_LETTER_1_0=null;

        // InternalGo.g:8717:4: ( ( (lv_LETTER_1_0= RULE_LETTER ) ) )
        // InternalGo.g:8717:4: ( (lv_LETTER_1_0= RULE_LETTER ) )
        {
        // InternalGo.g:8717:4: ( (lv_LETTER_1_0= RULE_LETTER ) )
        // InternalGo.g:8718:5: (lv_LETTER_1_0= RULE_LETTER )
        {
        // InternalGo.g:8718:5: (lv_LETTER_1_0= RULE_LETTER )
        // InternalGo.g:8719:6: lv_LETTER_1_0= RULE_LETTER
        {
        lv_LETTER_1_0=(Token)match(input,RULE_LETTER,FOLLOW_2); if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred167_InternalGo

    // $ANTLR start synpred204_InternalGo
    public final void synpred204_InternalGo_fragment() throws RecognitionException {   
        AntlrDatatypeRuleToken this_CHAR_8 = null;


        // InternalGo.g:9901:4: (this_CHAR_8= ruleCHAR )
        // InternalGo.g:9901:4: this_CHAR_8= ruleCHAR
        {
        if ( state.backtracking==0 ) {

          				newCompositeNode(grammarAccess.getEscaped_charAccess().getCHARParserRuleCall_1_7());
          			
        }
        pushFollow(FOLLOW_2);
        this_CHAR_8=ruleCHAR();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred204_InternalGo

    // $ANTLR start synpred205_InternalGo
    public final void synpred205_InternalGo_fragment() throws RecognitionException {   
        Token kw=null;

        // InternalGo.g:9912:4: (kw= '\\'' )
        // InternalGo.g:9912:4: kw= '\\''
        {
        kw=(Token)match(input,82,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred205_InternalGo

    // Delegated rules

    public final boolean synpred147_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred147_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred51_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred51_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred61_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred61_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred58_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred58_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred204_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred204_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred68_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred68_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred127_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred127_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred167_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred167_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred28_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred28_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred71_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred71_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred130_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred130_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred19_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred19_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred137_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred137_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred54_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred54_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred143_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred143_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred57_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred57_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred156_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred156_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred24_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred24_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred77_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred77_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred72_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred72_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred53_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred53_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred20_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred20_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred86_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred86_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred129_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred129_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred159_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred159_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred149_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred149_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred50_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred50_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred56_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred56_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred60_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred60_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred205_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred205_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred128_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred128_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred148_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred148_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred158_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred158_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred29_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred29_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred80_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred80_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred134_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred134_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred16_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred16_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred59_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred59_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred140_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred140_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred55_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred55_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA11 dfa11 = new DFA11(this);
    protected DFA12 dfa12 = new DFA12(this);
    protected DFA16 dfa16 = new DFA16(this);
    protected DFA19 dfa19 = new DFA19(this);
    protected DFA35 dfa35 = new DFA35(this);
    protected DFA40 dfa40 = new DFA40(this);
    protected DFA41 dfa41 = new DFA41(this);
    protected DFA44 dfa44 = new DFA44(this);
    protected DFA50 dfa50 = new DFA50(this);
    protected DFA51 dfa51 = new DFA51(this);
    protected DFA52 dfa52 = new DFA52(this);
    protected DFA59 dfa59 = new DFA59(this);
    protected DFA64 dfa64 = new DFA64(this);
    protected DFA71 dfa71 = new DFA71(this);
    protected DFA72 dfa72 = new DFA72(this);
    protected DFA75 dfa75 = new DFA75(this);
    protected DFA78 dfa78 = new DFA78(this);
    protected DFA83 dfa83 = new DFA83(this);
    protected DFA84 dfa84 = new DFA84(this);
    protected DFA87 dfa87 = new DFA87(this);
    protected DFA91 dfa91 = new DFA91(this);
    protected DFA93 dfa93 = new DFA93(this);
    protected DFA95 dfa95 = new DFA95(this);
    protected DFA111 dfa111 = new DFA111(this);
    protected DFA122 dfa122 = new DFA122(this);
    static final String dfa_1s = "\40\uffff";
    static final String dfa_2s = "\1\13\37\uffff";
    static final String dfa_3s = "\1\4\12\0\25\uffff";
    static final String dfa_4s = "\1\123\12\0\25\uffff";
    static final String dfa_5s = "\13\uffff\1\2\23\uffff\1\1";
    static final String dfa_6s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\25\uffff}>";
    static final String[] dfa_7s = {
            "\1\13\1\2\1\13\12\uffff\1\13\1\1\2\13\1\3\1\13\1\4\1\13\1\5\1\6\2\13\1\7\1\uffff\1\10\1\11\1\12\1\uffff\1\13\3\uffff\1\13\10\uffff\2\13\6\uffff\1\13\1\uffff\2\13\23\uffff\1\13\2\uffff\2\13",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final short[] dfa_2 = DFA.unpackEncodedString(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final char[] dfa_4 = DFA.unpackEncodedStringToUnsignedChars(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[] dfa_6 = DFA.unpackEncodedString(dfa_6s);
    static final short[][] dfa_7 = unpackEncodedStringArray(dfa_7s);

    class DFA11 extends DFA {

        public DFA11(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 11;
            this.eot = dfa_1;
            this.eof = dfa_2;
            this.min = dfa_3;
            this.max = dfa_4;
            this.accept = dfa_5;
            this.special = dfa_6;
            this.transition = dfa_7;
        }
        public String getDescription() {
            return "1172:3: ( (lv_Result_1_0= ruleResult ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA11_1 = input.LA(1);

                         
                        int index11_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred19_InternalGo()) ) {s = 31;}

                        else if ( (true) ) {s = 11;}

                         
                        input.seek(index11_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA11_2 = input.LA(1);

                         
                        int index11_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred19_InternalGo()) ) {s = 31;}

                        else if ( (true) ) {s = 11;}

                         
                        input.seek(index11_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA11_3 = input.LA(1);

                         
                        int index11_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred19_InternalGo()) ) {s = 31;}

                        else if ( (true) ) {s = 11;}

                         
                        input.seek(index11_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA11_4 = input.LA(1);

                         
                        int index11_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred19_InternalGo()) ) {s = 31;}

                        else if ( (true) ) {s = 11;}

                         
                        input.seek(index11_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA11_5 = input.LA(1);

                         
                        int index11_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred19_InternalGo()) ) {s = 31;}

                        else if ( (true) ) {s = 11;}

                         
                        input.seek(index11_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA11_6 = input.LA(1);

                         
                        int index11_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred19_InternalGo()) ) {s = 31;}

                        else if ( (true) ) {s = 11;}

                         
                        input.seek(index11_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA11_7 = input.LA(1);

                         
                        int index11_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred19_InternalGo()) ) {s = 31;}

                        else if ( (true) ) {s = 11;}

                         
                        input.seek(index11_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA11_8 = input.LA(1);

                         
                        int index11_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred19_InternalGo()) ) {s = 31;}

                        else if ( (true) ) {s = 11;}

                         
                        input.seek(index11_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA11_9 = input.LA(1);

                         
                        int index11_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred19_InternalGo()) ) {s = 31;}

                        else if ( (true) ) {s = 11;}

                         
                        input.seek(index11_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA11_10 = input.LA(1);

                         
                        int index11_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred19_InternalGo()) ) {s = 31;}

                        else if ( (true) ) {s = 11;}

                         
                        input.seek(index11_10);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 11, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_8s = "\14\uffff";
    static final String dfa_9s = "\1\5\1\0\12\uffff";
    static final String dfa_10s = "\1\41\1\0\12\uffff";
    static final String dfa_11s = "\2\uffff\1\2\10\uffff\1\1";
    static final String dfa_12s = "\1\uffff\1\0\12\uffff}>";
    static final String[] dfa_13s = {
            "\1\2\14\uffff\1\1\2\uffff\1\2\1\uffff\1\2\1\uffff\2\2\2\uffff\1\2\1\uffff\3\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_8 = DFA.unpackEncodedString(dfa_8s);
    static final char[] dfa_9 = DFA.unpackEncodedStringToUnsignedChars(dfa_9s);
    static final char[] dfa_10 = DFA.unpackEncodedStringToUnsignedChars(dfa_10s);
    static final short[] dfa_11 = DFA.unpackEncodedString(dfa_11s);
    static final short[] dfa_12 = DFA.unpackEncodedString(dfa_12s);
    static final short[][] dfa_13 = unpackEncodedStringArray(dfa_13s);

    class DFA12 extends DFA {

        public DFA12(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 12;
            this.eot = dfa_8;
            this.eof = dfa_8;
            this.min = dfa_9;
            this.max = dfa_10;
            this.accept = dfa_11;
            this.special = dfa_12;
            this.transition = dfa_13;
        }
        public String getDescription() {
            return "1209:2: ( ( (lv_Parameters_0_0= ruleParameters ) ) | ( (lv_Type_1_0= ruleType ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA12_1 = input.LA(1);

                         
                        int index12_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred20_InternalGo()) ) {s = 11;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index12_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 12, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_14s = "\6\uffff";
    static final String dfa_15s = "\1\5\1\4\1\uffff\1\0\1\4\1\uffff";
    static final String dfa_16s = "\2\41\1\uffff\1\0\1\41\1\uffff";
    static final String dfa_17s = "\2\uffff\1\2\2\uffff\1\1";
    static final String dfa_18s = "\3\uffff\1\0\2\uffff}>";
    static final String[] dfa_19s = {
            "\1\1\14\uffff\1\2\2\uffff\1\2\1\uffff\1\2\1\uffff\2\2\1\uffff\2\2\1\uffff\3\2",
            "\1\2\1\3\1\4\13\uffff\1\5\1\uffff\1\2\1\5\1\uffff\1\5\1\uffff\5\5\1\uffff\3\5",
            "",
            "\1\uffff",
            "\1\2\1\3\1\4\13\uffff\1\5\1\uffff\1\2\1\5\1\uffff\1\5\1\uffff\5\5\1\uffff\3\5",
            ""
    };

    static final short[] dfa_14 = DFA.unpackEncodedString(dfa_14s);
    static final char[] dfa_15 = DFA.unpackEncodedStringToUnsignedChars(dfa_15s);
    static final char[] dfa_16 = DFA.unpackEncodedStringToUnsignedChars(dfa_16s);
    static final short[] dfa_17 = DFA.unpackEncodedString(dfa_17s);
    static final short[] dfa_18 = DFA.unpackEncodedString(dfa_18s);
    static final short[][] dfa_19 = unpackEncodedStringArray(dfa_19s);

    class DFA16 extends DFA {

        public DFA16(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 16;
            this.eot = dfa_14;
            this.eof = dfa_14;
            this.min = dfa_15;
            this.max = dfa_16;
            this.accept = dfa_17;
            this.special = dfa_18;
            this.transition = dfa_19;
        }
        public String getDescription() {
            return "1395:3: ( (lv_IdentifierList_0_0= ruleIdentifierList ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA16_3 = input.LA(1);

                         
                        int index16_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_InternalGo()) ) {s = 5;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index16_3);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 16, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_20s = "\10\uffff";
    static final String dfa_21s = "\1\5\3\4\2\uffff\2\4";
    static final String dfa_22s = "\1\5\3\24\2\uffff\2\24";
    static final String dfa_23s = "\4\uffff\1\2\1\1\2\uffff";
    static final String dfa_24s = "\10\uffff}>";
    static final String[] dfa_25s = {
            "\1\1",
            "\1\4\1\2\1\3\13\uffff\1\5\1\uffff\1\4",
            "\1\4\1\6\1\7\13\uffff\1\5\1\uffff\1\4",
            "\1\4\1\2\1\3\13\uffff\1\5\1\uffff\1\4",
            "",
            "",
            "\1\4\1\6\1\7\13\uffff\1\5\1\uffff\1\4",
            "\1\4\1\6\1\7\13\uffff\1\5\1\uffff\1\4"
    };

    static final short[] dfa_20 = DFA.unpackEncodedString(dfa_20s);
    static final char[] dfa_21 = DFA.unpackEncodedStringToUnsignedChars(dfa_21s);
    static final char[] dfa_22 = DFA.unpackEncodedStringToUnsignedChars(dfa_22s);
    static final short[] dfa_23 = DFA.unpackEncodedString(dfa_23s);
    static final short[] dfa_24 = DFA.unpackEncodedString(dfa_24s);
    static final short[][] dfa_25 = unpackEncodedStringArray(dfa_25s);

    class DFA19 extends DFA {

        public DFA19(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 19;
            this.eot = dfa_20;
            this.eof = dfa_20;
            this.min = dfa_21;
            this.max = dfa_22;
            this.accept = dfa_23;
            this.special = dfa_24;
            this.transition = dfa_25;
        }
        public String getDescription() {
            return "1523:2: ( ( ( (lv_MethodName_0_0= ruleMethodName ) ) ( (lv_Signature_1_0= ruleSignature ) ) ) | ( (lv_InterfaceTypeName_2_0= ruleInterfaceTypeName ) ) )";
        }
    }
    static final String dfa_26s = "\12\uffff";
    static final String dfa_27s = "\2\5\1\4\1\5\2\uffff\4\4";
    static final String dfa_28s = "\1\5\3\43\2\uffff\4\43";
    static final String dfa_29s = "\4\uffff\1\2\1\1\4\uffff";
    static final String dfa_30s = "\12\uffff}>";
    static final String[] dfa_31s = {
            "\1\1",
            "\1\2\1\3\13\uffff\1\4\2\uffff\1\4\1\uffff\1\4\1\uffff\2\4\2\uffff\1\4\1\uffff\3\4\1\uffff\1\5",
            "\1\4\1\6\1\7\13\uffff\1\4\1\uffff\2\4\1\uffff\1\4\1\uffff\2\4\2\uffff\1\4\1\uffff\3\4\1\uffff\1\5",
            "\1\2\1\3\13\uffff\1\4\2\uffff\1\4\1\uffff\1\4\1\uffff\2\4\2\uffff\1\4\1\uffff\3\4\1\uffff\1\5",
            "",
            "",
            "\1\4\1\10\1\11\13\uffff\1\4\1\uffff\2\4\1\uffff\1\4\1\uffff\2\4\2\uffff\1\4\1\uffff\3\4\1\uffff\1\5",
            "\1\4\1\6\1\7\13\uffff\1\4\1\uffff\2\4\1\uffff\1\4\1\uffff\2\4\2\uffff\1\4\1\uffff\3\4\1\uffff\1\5",
            "\1\4\1\10\1\11\13\uffff\1\4\1\uffff\2\4\1\uffff\1\4\1\uffff\2\4\2\uffff\1\4\1\uffff\3\4\1\uffff\1\5",
            "\1\4\1\10\1\11\13\uffff\1\4\1\uffff\2\4\1\uffff\1\4\1\uffff\2\4\2\uffff\1\4\1\uffff\3\4\1\uffff\1\5"
    };

    static final short[] dfa_26 = DFA.unpackEncodedString(dfa_26s);
    static final char[] dfa_27 = DFA.unpackEncodedStringToUnsignedChars(dfa_27s);
    static final char[] dfa_28 = DFA.unpackEncodedStringToUnsignedChars(dfa_28s);
    static final short[] dfa_29 = DFA.unpackEncodedString(dfa_29s);
    static final short[] dfa_30 = DFA.unpackEncodedString(dfa_30s);
    static final short[][] dfa_31 = unpackEncodedStringArray(dfa_31s);

    class DFA35 extends DFA {

        public DFA35(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 35;
            this.eot = dfa_26;
            this.eof = dfa_26;
            this.min = dfa_27;
            this.max = dfa_28;
            this.accept = dfa_29;
            this.special = dfa_30;
            this.transition = dfa_31;
        }
        public String getDescription() {
            return "2632:2: (this_AliasDecl_0= ruleAliasDecl | this_TypeDef_1= ruleTypeDef )";
        }
    }
    static final String dfa_32s = "\22\uffff";
    static final String dfa_33s = "\1\5\7\uffff\1\0\6\uffff\1\0\2\uffff";
    static final String dfa_34s = "\1\123\7\uffff\1\0\6\uffff\1\0\2\uffff";
    static final String dfa_35s = "\1\uffff\1\1\16\uffff\1\2\1\3";
    static final String dfa_36s = "\10\uffff\1\0\6\uffff\1\1\2\uffff}>";
    static final String[] dfa_37s = {
            "\1\10\1\1\13\uffff\1\17\1\uffff\2\1\1\uffff\1\1\1\uffff\2\1\2\uffff\1\1\1\uffff\3\1\55\uffff\1\1\2\uffff\2\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            ""
    };

    static final short[] dfa_32 = DFA.unpackEncodedString(dfa_32s);
    static final char[] dfa_33 = DFA.unpackEncodedStringToUnsignedChars(dfa_33s);
    static final char[] dfa_34 = DFA.unpackEncodedStringToUnsignedChars(dfa_34s);
    static final short[] dfa_35 = DFA.unpackEncodedString(dfa_35s);
    static final short[] dfa_36 = DFA.unpackEncodedString(dfa_36s);
    static final short[][] dfa_37 = unpackEncodedStringArray(dfa_37s);

    class DFA40 extends DFA {

        public DFA40(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 40;
            this.eot = dfa_32;
            this.eof = dfa_32;
            this.min = dfa_33;
            this.max = dfa_34;
            this.accept = dfa_35;
            this.special = dfa_36;
            this.transition = dfa_37;
        }
        public String getDescription() {
            return "3155:2: ( ( (lv_Literal_0_0= ruleLiteral ) ) | ( (lv_OperandName_1_0= ruleOperandName ) ) | (otherlv_2= '(' ( (lv_Expression_3_0= ruleExpression ) ) otherlv_4= ')' ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA40_8 = input.LA(1);

                         
                        int index40_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred50_InternalGo()) ) {s = 1;}

                        else if ( (synpred51_InternalGo()) ) {s = 16;}

                         
                        input.seek(index40_8);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA40_15 = input.LA(1);

                         
                        int index40_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred50_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index40_15);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 40, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_38s = "\21\uffff";
    static final String dfa_39s = "\1\5\11\uffff\1\0\6\uffff";
    static final String dfa_40s = "\1\123\11\uffff\1\0\6\uffff";
    static final String dfa_41s = "\1\uffff\1\1\4\uffff\1\2\11\uffff\1\3";
    static final String dfa_42s = "\12\uffff\1\0\6\uffff}>";
    static final String[] dfa_43s = {
            "\1\6\1\1\13\uffff\1\6\1\uffff\1\1\1\6\1\uffff\1\6\1\uffff\1\6\1\12\2\uffff\1\6\1\uffff\3\6\55\uffff\1\1\2\uffff\2\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_38 = DFA.unpackEncodedString(dfa_38s);
    static final char[] dfa_39 = DFA.unpackEncodedStringToUnsignedChars(dfa_39s);
    static final char[] dfa_40 = DFA.unpackEncodedStringToUnsignedChars(dfa_40s);
    static final short[] dfa_41 = DFA.unpackEncodedString(dfa_41s);
    static final short[] dfa_42 = DFA.unpackEncodedString(dfa_42s);
    static final short[][] dfa_43 = unpackEncodedStringArray(dfa_43s);

    class DFA41 extends DFA {

        public DFA41(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 41;
            this.eot = dfa_38;
            this.eof = dfa_38;
            this.min = dfa_39;
            this.max = dfa_40;
            this.accept = dfa_41;
            this.special = dfa_42;
            this.transition = dfa_43;
        }
        public String getDescription() {
            return "3243:2: ( ( (lv_BasicLit_0_0= ruleBasicLit ) ) | this_CompositeLit_1= ruleCompositeLit | this_FunctionLit_2= ruleFunctionLit )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA41_10 = input.LA(1);

                         
                        int index41_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred53_InternalGo()) ) {s = 6;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index41_10);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 41, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_44s = "\17\uffff";
    static final String dfa_45s = "\1\5\3\0\3\uffff\1\0\7\uffff";
    static final String dfa_46s = "\1\41\3\0\3\uffff\1\0\7\uffff";
    static final String dfa_47s = "\4\uffff\1\3\6\uffff\1\1\1\2\1\5\1\4";
    static final String dfa_48s = "\1\uffff\1\0\1\1\1\2\3\uffff\1\3\7\uffff}>";
    static final String[] dfa_49s = {
            "\1\3\14\uffff\1\4\2\uffff\1\2\1\uffff\1\1\1\uffff\2\4\2\uffff\1\4\1\uffff\1\7\2\4",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_44 = DFA.unpackEncodedString(dfa_44s);
    static final char[] dfa_45 = DFA.unpackEncodedStringToUnsignedChars(dfa_45s);
    static final char[] dfa_46 = DFA.unpackEncodedStringToUnsignedChars(dfa_46s);
    static final short[] dfa_47 = DFA.unpackEncodedString(dfa_47s);
    static final short[] dfa_48 = DFA.unpackEncodedString(dfa_48s);
    static final short[][] dfa_49 = unpackEncodedStringArray(dfa_49s);

    class DFA44 extends DFA {

        public DFA44(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 44;
            this.eot = dfa_44;
            this.eof = dfa_44;
            this.min = dfa_45;
            this.max = dfa_46;
            this.accept = dfa_47;
            this.special = dfa_48;
            this.transition = dfa_49;
        }
        public String getDescription() {
            return "3575:2: ( ( (lv_StructType_0_0= ruleStructType ) ) | (otherlv_1= '[' ( (lv_LiteralTypeLinha_2_0= ruleLiteralTypeLinha ) ) ) | ( (lv_ElementType_3_0= ruleElementType ) ) | ( (lv_MapType_4_0= ruleMapType ) ) | ( (lv_TypeName_5_0= ruleTypeName ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA44_1 = input.LA(1);

                         
                        int index44_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred58_InternalGo()) ) {s = 11;}

                        else if ( (synpred60_InternalGo()) ) {s = 4;}

                         
                        input.seek(index44_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA44_2 = input.LA(1);

                         
                        int index44_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred59_InternalGo()) ) {s = 12;}

                        else if ( (synpred60_InternalGo()) ) {s = 4;}

                         
                        input.seek(index44_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA44_3 = input.LA(1);

                         
                        int index44_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred60_InternalGo()) ) {s = 4;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index44_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA44_7 = input.LA(1);

                         
                        int index44_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred60_InternalGo()) ) {s = 4;}

                        else if ( (synpred61_InternalGo()) ) {s = 14;}

                         
                        input.seek(index44_7);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 44, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_50s = "\30\uffff";
    static final String dfa_51s = "\1\5\25\0\2\uffff";
    static final String dfa_52s = "\1\123\25\0\2\uffff";
    static final String dfa_53s = "\26\uffff\1\1\1\2";
    static final String dfa_54s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\2\uffff}>";
    static final String[] dfa_55s = {
            "\1\1\1\2\13\uffff\1\17\1\uffff\1\4\1\10\1\uffff\1\7\1\25\1\11\1\12\2\uffff\1\13\1\uffff\1\14\1\15\1\16\16\uffff\1\20\1\21\6\uffff\1\24\1\uffff\1\22\1\23\23\uffff\1\3\2\uffff\1\5\1\6",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            ""
    };

    static final short[] dfa_50 = DFA.unpackEncodedString(dfa_50s);
    static final char[] dfa_51 = DFA.unpackEncodedStringToUnsignedChars(dfa_51s);
    static final char[] dfa_52 = DFA.unpackEncodedStringToUnsignedChars(dfa_52s);
    static final short[] dfa_53 = DFA.unpackEncodedString(dfa_53s);
    static final short[] dfa_54 = DFA.unpackEncodedString(dfa_54s);
    static final short[][] dfa_55 = unpackEncodedStringArray(dfa_55s);

    class DFA50 extends DFA {

        public DFA50(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 50;
            this.eot = dfa_50;
            this.eof = dfa_50;
            this.min = dfa_51;
            this.max = dfa_52;
            this.accept = dfa_53;
            this.special = dfa_54;
            this.transition = dfa_55;
        }
        public String getDescription() {
            return "3995:3: ( ( (lv_Key_0_0= ruleKey ) ) otherlv_1= ':' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA50_1 = input.LA(1);

                         
                        int index50_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred68_InternalGo()) ) {s = 22;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index50_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA50_2 = input.LA(1);

                         
                        int index50_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred68_InternalGo()) ) {s = 22;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index50_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA50_3 = input.LA(1);

                         
                        int index50_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred68_InternalGo()) ) {s = 22;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index50_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA50_4 = input.LA(1);

                         
                        int index50_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred68_InternalGo()) ) {s = 22;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index50_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA50_5 = input.LA(1);

                         
                        int index50_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred68_InternalGo()) ) {s = 22;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index50_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA50_6 = input.LA(1);

                         
                        int index50_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred68_InternalGo()) ) {s = 22;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index50_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA50_7 = input.LA(1);

                         
                        int index50_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred68_InternalGo()) ) {s = 22;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index50_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA50_8 = input.LA(1);

                         
                        int index50_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred68_InternalGo()) ) {s = 22;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index50_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA50_9 = input.LA(1);

                         
                        int index50_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred68_InternalGo()) ) {s = 22;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index50_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA50_10 = input.LA(1);

                         
                        int index50_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred68_InternalGo()) ) {s = 22;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index50_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA50_11 = input.LA(1);

                         
                        int index50_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred68_InternalGo()) ) {s = 22;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index50_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA50_12 = input.LA(1);

                         
                        int index50_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred68_InternalGo()) ) {s = 22;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index50_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA50_13 = input.LA(1);

                         
                        int index50_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred68_InternalGo()) ) {s = 22;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index50_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA50_14 = input.LA(1);

                         
                        int index50_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred68_InternalGo()) ) {s = 22;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index50_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA50_15 = input.LA(1);

                         
                        int index50_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred68_InternalGo()) ) {s = 22;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index50_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA50_16 = input.LA(1);

                         
                        int index50_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred68_InternalGo()) ) {s = 22;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index50_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA50_17 = input.LA(1);

                         
                        int index50_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred68_InternalGo()) ) {s = 22;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index50_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA50_18 = input.LA(1);

                         
                        int index50_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred68_InternalGo()) ) {s = 22;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index50_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA50_19 = input.LA(1);

                         
                        int index50_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred68_InternalGo()) ) {s = 22;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index50_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA50_20 = input.LA(1);

                         
                        int index50_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred68_InternalGo()) ) {s = 22;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index50_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA50_21 = input.LA(1);

                         
                        int index50_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred68_InternalGo()) ) {s = 22;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index50_21);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 50, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_56s = "\11\uffff";
    static final String dfa_57s = "\1\uffff\1\6\2\uffff\2\6\1\uffff\2\6";
    static final String dfa_58s = "\1\5\1\4\2\uffff\2\4\1\uffff\2\4";
    static final String dfa_59s = "\1\123\1\47\2\uffff\2\47\1\uffff\2\47";
    static final String dfa_60s = "\2\uffff\1\2\1\3\2\uffff\1\1\2\uffff";
    static final String dfa_61s = "\11\uffff}>";
    static final String[] dfa_62s = {
            "\1\1\1\2\13\uffff\1\2\1\uffff\2\2\1\uffff\1\2\1\3\2\2\2\uffff\1\2\1\uffff\3\2\16\uffff\2\2\6\uffff\1\2\1\uffff\2\2\23\uffff\1\2\2\uffff\2\2",
            "\1\2\1\4\1\5\13\uffff\1\2\1\uffff\2\2\21\uffff\1\6",
            "",
            "",
            "\1\2\1\7\1\10\13\uffff\1\2\1\uffff\2\2\21\uffff\1\6",
            "\1\2\1\4\1\5\13\uffff\1\2\1\uffff\2\2\21\uffff\1\6",
            "",
            "\1\2\1\7\1\10\13\uffff\1\2\1\uffff\2\2\21\uffff\1\6",
            "\1\2\1\7\1\10\13\uffff\1\2\1\uffff\2\2\21\uffff\1\6"
    };

    static final short[] dfa_56 = DFA.unpackEncodedString(dfa_56s);
    static final short[] dfa_57 = DFA.unpackEncodedString(dfa_57s);
    static final char[] dfa_58 = DFA.unpackEncodedStringToUnsignedChars(dfa_58s);
    static final char[] dfa_59 = DFA.unpackEncodedStringToUnsignedChars(dfa_59s);
    static final short[] dfa_60 = DFA.unpackEncodedString(dfa_60s);
    static final short[] dfa_61 = DFA.unpackEncodedString(dfa_61s);
    static final short[][] dfa_62 = unpackEncodedStringArray(dfa_62s);

    class DFA51 extends DFA {

        public DFA51(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 51;
            this.eot = dfa_56;
            this.eof = dfa_57;
            this.min = dfa_58;
            this.max = dfa_59;
            this.accept = dfa_60;
            this.special = dfa_61;
            this.transition = dfa_62;
        }
        public String getDescription() {
            return "4057:2: ( ( (lv_FieldName_0_0= ruleFieldName ) ) | ( (lv_Expression_1_0= ruleExpression ) ) | ( (lv_LiteralValue_2_0= ruleLiteralValue ) ) )";
        }
    }
    static final String dfa_63s = "\1\5\5\uffff\12\0\2\uffff";
    static final String dfa_64s = "\1\123\5\uffff\12\0\2\uffff";
    static final String dfa_65s = "\6\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\2\uffff}>";
    static final String[] dfa_66s = {
            "\1\10\1\1\13\uffff\1\17\1\uffff\1\1\1\7\1\uffff\1\6\1\uffff\1\11\1\12\2\uffff\1\13\1\uffff\1\14\1\15\1\16\55\uffff\1\1\2\uffff\2\1",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            ""
    };
    static final char[] dfa_63 = DFA.unpackEncodedStringToUnsignedChars(dfa_63s);
    static final char[] dfa_64 = DFA.unpackEncodedStringToUnsignedChars(dfa_64s);
    static final short[] dfa_65 = DFA.unpackEncodedString(dfa_65s);
    static final short[][] dfa_66 = unpackEncodedStringArray(dfa_66s);

    class DFA52 extends DFA {

        public DFA52(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 52;
            this.eot = dfa_32;
            this.eof = dfa_32;
            this.min = dfa_63;
            this.max = dfa_64;
            this.accept = dfa_35;
            this.special = dfa_65;
            this.transition = dfa_66;
        }
        public String getDescription() {
            return "4232:2: ( ( ( (lv_Operand_0_0= ruleOperand ) ) ( (lv_PrimaryExprLinha_1_0= rulePrimaryExprLinha ) ) ) | ( ( (lv_Conversion_2_0= ruleConversion ) ) ( (lv_PrimaryExprLinha_3_0= rulePrimaryExprLinha ) ) ) | ( ( (lv_MethodExpr_4_0= ruleMethodExpr ) ) ( (lv_PrimaryExprLinha_5_0= rulePrimaryExprLinha ) ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA52_6 = input.LA(1);

                         
                        int index52_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred71_InternalGo()) ) {s = 1;}

                        else if ( (synpred72_InternalGo()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index52_6);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA52_7 = input.LA(1);

                         
                        int index52_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred71_InternalGo()) ) {s = 1;}

                        else if ( (synpred72_InternalGo()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index52_7);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA52_8 = input.LA(1);

                         
                        int index52_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred71_InternalGo()) ) {s = 1;}

                        else if ( (synpred72_InternalGo()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index52_8);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA52_9 = input.LA(1);

                         
                        int index52_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred71_InternalGo()) ) {s = 1;}

                        else if ( (synpred72_InternalGo()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index52_9);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA52_10 = input.LA(1);

                         
                        int index52_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred71_InternalGo()) ) {s = 1;}

                        else if ( (synpred72_InternalGo()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index52_10);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA52_11 = input.LA(1);

                         
                        int index52_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred71_InternalGo()) ) {s = 1;}

                        else if ( (synpred72_InternalGo()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index52_11);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA52_12 = input.LA(1);

                         
                        int index52_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred71_InternalGo()) ) {s = 1;}

                        else if ( (synpred72_InternalGo()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index52_12);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA52_13 = input.LA(1);

                         
                        int index52_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred71_InternalGo()) ) {s = 1;}

                        else if ( (synpred72_InternalGo()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index52_13);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA52_14 = input.LA(1);

                         
                        int index52_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred71_InternalGo()) ) {s = 1;}

                        else if ( (synpred72_InternalGo()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index52_14);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA52_15 = input.LA(1);

                         
                        int index52_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred71_InternalGo()) ) {s = 1;}

                        else if ( (synpred72_InternalGo()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index52_15);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 52, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_67s = "\26\uffff";
    static final String dfa_68s = "\1\5\5\uffff\12\0\6\uffff";
    static final String dfa_69s = "\1\123\5\uffff\12\0\6\uffff";
    static final String dfa_70s = "\1\uffff\1\1\23\uffff\1\2";
    static final String dfa_71s = "\6\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\6\uffff}>";
    static final String[] dfa_72s = {
            "\1\10\1\1\13\uffff\1\17\1\uffff\1\1\1\7\1\uffff\1\6\1\uffff\1\11\1\12\2\uffff\1\13\1\uffff\1\14\1\15\1\16\16\uffff\2\1\6\uffff\1\1\1\uffff\2\1\23\uffff\1\1\2\uffff\2\1",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_67 = DFA.unpackEncodedString(dfa_67s);
    static final char[] dfa_68 = DFA.unpackEncodedStringToUnsignedChars(dfa_68s);
    static final char[] dfa_69 = DFA.unpackEncodedStringToUnsignedChars(dfa_69s);
    static final short[] dfa_70 = DFA.unpackEncodedString(dfa_70s);
    static final short[] dfa_71 = DFA.unpackEncodedString(dfa_71s);
    static final short[][] dfa_72 = unpackEncodedStringArray(dfa_72s);

    class DFA59 extends DFA {

        public DFA59(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 59;
            this.eot = dfa_67;
            this.eof = dfa_67;
            this.min = dfa_68;
            this.max = dfa_69;
            this.accept = dfa_70;
            this.special = dfa_71;
            this.transition = dfa_72;
        }
        public String getDescription() {
            return "4923:4: ( ( (lv_ExpressionList_2_0= ruleExpressionList ) ) | ( ( (lv_Type_3_0= ruleType ) ) (otherlv_4= ',' ( (lv_ExpressionList_5_0= ruleExpressionList ) ) )? ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA59_6 = input.LA(1);

                         
                        int index59_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred80_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index59_6);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA59_7 = input.LA(1);

                         
                        int index59_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred80_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index59_7);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA59_8 = input.LA(1);

                         
                        int index59_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred80_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index59_8);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA59_9 = input.LA(1);

                         
                        int index59_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred80_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index59_9);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA59_10 = input.LA(1);

                         
                        int index59_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred80_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index59_10);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA59_11 = input.LA(1);

                         
                        int index59_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred80_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index59_11);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA59_12 = input.LA(1);

                         
                        int index59_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred80_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index59_12);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA59_13 = input.LA(1);

                         
                        int index59_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred80_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index59_13);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA59_14 = input.LA(1);

                         
                        int index59_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred80_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index59_14);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA59_15 = input.LA(1);

                         
                        int index59_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred80_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index59_15);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 59, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_73s = "\25\uffff";
    static final String dfa_74s = "\1\5\10\uffff\1\0\4\uffff\1\0\6\uffff";
    static final String dfa_75s = "\1\123\10\uffff\1\0\4\uffff\1\0\6\uffff";
    static final String dfa_76s = "\1\uffff\1\1\16\uffff\1\2\4\uffff";
    static final String dfa_77s = "\11\uffff\1\0\4\uffff\1\1\6\uffff}>";
    static final String[] dfa_78s = {
            "\2\1\13\uffff\1\1\1\uffff\2\1\1\uffff\1\1\1\uffff\1\11\1\1\2\uffff\1\1\1\uffff\2\1\1\16\16\uffff\2\20\6\uffff\1\20\1\uffff\2\20\23\uffff\1\1\2\uffff\2\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_73 = DFA.unpackEncodedString(dfa_73s);
    static final char[] dfa_74 = DFA.unpackEncodedStringToUnsignedChars(dfa_74s);
    static final char[] dfa_75 = DFA.unpackEncodedStringToUnsignedChars(dfa_75s);
    static final short[] dfa_76 = DFA.unpackEncodedString(dfa_76s);
    static final short[] dfa_77 = DFA.unpackEncodedString(dfa_77s);
    static final short[][] dfa_78 = unpackEncodedStringArray(dfa_78s);

    class DFA64 extends DFA {

        public DFA64(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 64;
            this.eot = dfa_73;
            this.eof = dfa_73;
            this.min = dfa_74;
            this.max = dfa_75;
            this.accept = dfa_76;
            this.special = dfa_77;
            this.transition = dfa_78;
        }
        public String getDescription() {
            return "5275:2: ( ( (lv_PrimaryExpr_0_0= rulePrimaryExpr ) ) | ( ( (lv_unary_op_1_0= ruleunary_op ) ) ( (lv_UnaryExpr_2_0= ruleUnaryExpr ) ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA64_9 = input.LA(1);

                         
                        int index64_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred86_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index64_9);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA64_14 = input.LA(1);

                         
                        int index64_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred86_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index64_14);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 64, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_79s = "\1\4\1\uffff\1\4\15\uffff\2\4\1\uffff\2\4";
    static final String dfa_80s = "\1\123\1\uffff\1\47\15\uffff\2\47\1\uffff\2\47";
    static final String dfa_81s = "\1\uffff\1\1\1\uffff\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\2\uffff\1\2\2\uffff";
    static final String dfa_82s = "\25\uffff}>";
    static final String[] dfa_83s = {
            "\1\3\1\2\1\3\13\uffff\1\3\1\uffff\2\3\1\uffff\1\3\1\12\2\3\2\uffff\1\3\1\uffff\3\3\1\1\1\uffff\2\1\12\uffff\2\3\6\uffff\1\3\1\uffff\2\3\2\uffff\1\13\1\uffff\1\14\2\uffff\1\16\1\uffff\1\4\1\15\1\5\1\6\1\7\1\10\1\11\1\17\2\uffff\1\3\2\uffff\2\3",
            "",
            "\1\3\1\20\1\21\13\uffff\1\3\1\uffff\2\3\5\uffff\1\3\12\uffff\1\3\1\22",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\3\1\23\1\24\13\uffff\1\3\1\uffff\2\3\5\uffff\1\3\12\uffff\1\3\1\22",
            "\1\3\1\20\1\21\13\uffff\1\3\1\uffff\2\3\5\uffff\1\3\12\uffff\1\3\1\22",
            "",
            "\1\3\1\23\1\24\13\uffff\1\3\1\uffff\2\3\5\uffff\1\3\12\uffff\1\3\1\22",
            "\1\3\1\23\1\24\13\uffff\1\3\1\uffff\2\3\5\uffff\1\3\12\uffff\1\3\1\22"
    };
    static final char[] dfa_79 = DFA.unpackEncodedStringToUnsignedChars(dfa_79s);
    static final char[] dfa_80 = DFA.unpackEncodedStringToUnsignedChars(dfa_80s);
    static final short[] dfa_81 = DFA.unpackEncodedString(dfa_81s);
    static final short[] dfa_82 = DFA.unpackEncodedString(dfa_82s);
    static final short[][] dfa_83 = unpackEncodedStringArray(dfa_83s);

    class DFA71 extends DFA {

        public DFA71(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 71;
            this.eot = dfa_73;
            this.eof = dfa_73;
            this.min = dfa_79;
            this.max = dfa_80;
            this.accept = dfa_81;
            this.special = dfa_82;
            this.transition = dfa_83;
        }
        public String getDescription() {
            return "5753:2: ( ( (lv_Declaration_0_0= ruleDeclaration ) ) | ( (lv_LabeledStmt_1_0= ruleLabeledStmt ) ) | ( (lv_SimpleStmt_2_0= ruleSimpleStmt ) ) | ( (lv_GoStmt_3_0= ruleGoStmt ) ) | ( (lv_ReturnStmt_4_0= ruleReturnStmt ) ) | ( (lv_BreakStmt_5_0= ruleBreakStmt ) ) | ( (lv_ContinueStmt_6_0= ruleContinueStmt ) ) | ( (lv_GotoStmt_7_0= ruleGotoStmt ) ) | ( (lv_FallthroughStmt_8_0= ruleFallthroughStmt ) ) | ( (lv_Block_9_0= ruleBlock ) ) | ( (lv_IfStmt_10_0= ruleIfStmt ) ) | ( (lv_SwitchStmt_11_0= ruleSwitchStmt ) ) | ( (lv_SelectStmt_12_0= ruleSelectStmt ) ) | ( (lv_ForStmt_13_0= ruleForStmt ) ) | ( (lv_DeferStmt_14_0= ruleDeferStmt ) ) )";
        }
    }
    static final String dfa_84s = "\33\uffff";
    static final String dfa_85s = "\1\4\1\uffff\24\0\5\uffff";
    static final String dfa_86s = "\1\123\1\uffff\24\0\5\uffff";
    static final String dfa_87s = "\1\uffff\1\1\24\uffff\1\2\1\3\1\4\1\5\1\6";
    static final String dfa_88s = "\2\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\5\uffff}>";
    static final String[] dfa_89s = {
            "\1\1\1\11\1\2\13\uffff\1\20\1\uffff\1\4\1\10\1\uffff\1\7\1\uffff\1\12\1\13\2\uffff\1\14\1\uffff\1\15\1\16\1\17\16\uffff\1\21\1\22\6\uffff\1\25\1\uffff\1\23\1\24\23\uffff\1\3\2\uffff\1\5\1\6",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_84 = DFA.unpackEncodedString(dfa_84s);
    static final char[] dfa_85 = DFA.unpackEncodedStringToUnsignedChars(dfa_85s);
    static final char[] dfa_86 = DFA.unpackEncodedStringToUnsignedChars(dfa_86s);
    static final short[] dfa_87 = DFA.unpackEncodedString(dfa_87s);
    static final short[] dfa_88 = DFA.unpackEncodedString(dfa_88s);
    static final short[][] dfa_89 = unpackEncodedStringArray(dfa_89s);

    class DFA72 extends DFA {

        public DFA72(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 72;
            this.eot = dfa_84;
            this.eof = dfa_84;
            this.min = dfa_85;
            this.max = dfa_86;
            this.accept = dfa_87;
            this.special = dfa_88;
            this.transition = dfa_89;
        }
        public String getDescription() {
            return "6071:2: ( ( (lv_EmptyStmt_0_0= ruleEmptyStmt ) ) | ( (lv_ExpressionStmt_1_0= ruleExpressionStmt ) ) | ( (lv_SendStmt_2_0= ruleSendStmt ) ) | ( (lv_IncDecStmt_3_0= ruleIncDecStmt ) ) | ( (lv_Assignment_4_0= ruleAssignment ) ) | ( (lv_ShortVarDecl_5_0= ruleShortVarDecl ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA72_2 = input.LA(1);

                         
                        int index72_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalGo()) ) {s = 22;}

                        else if ( (synpred128_InternalGo()) ) {s = 23;}

                        else if ( (synpred129_InternalGo()) ) {s = 24;}

                        else if ( (synpred130_InternalGo()) ) {s = 25;}

                         
                        input.seek(index72_2);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA72_3 = input.LA(1);

                         
                        int index72_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalGo()) ) {s = 22;}

                        else if ( (synpred128_InternalGo()) ) {s = 23;}

                        else if ( (synpred129_InternalGo()) ) {s = 24;}

                        else if ( (synpred130_InternalGo()) ) {s = 25;}

                         
                        input.seek(index72_3);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA72_4 = input.LA(1);

                         
                        int index72_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalGo()) ) {s = 22;}

                        else if ( (synpred128_InternalGo()) ) {s = 23;}

                        else if ( (synpred129_InternalGo()) ) {s = 24;}

                        else if ( (synpred130_InternalGo()) ) {s = 25;}

                         
                        input.seek(index72_4);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA72_5 = input.LA(1);

                         
                        int index72_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalGo()) ) {s = 22;}

                        else if ( (synpred128_InternalGo()) ) {s = 23;}

                        else if ( (synpred129_InternalGo()) ) {s = 24;}

                        else if ( (synpred130_InternalGo()) ) {s = 25;}

                         
                        input.seek(index72_5);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA72_6 = input.LA(1);

                         
                        int index72_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalGo()) ) {s = 22;}

                        else if ( (synpred128_InternalGo()) ) {s = 23;}

                        else if ( (synpred129_InternalGo()) ) {s = 24;}

                        else if ( (synpred130_InternalGo()) ) {s = 25;}

                         
                        input.seek(index72_6);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA72_7 = input.LA(1);

                         
                        int index72_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalGo()) ) {s = 22;}

                        else if ( (synpred128_InternalGo()) ) {s = 23;}

                        else if ( (synpred129_InternalGo()) ) {s = 24;}

                        else if ( (synpred130_InternalGo()) ) {s = 25;}

                         
                        input.seek(index72_7);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA72_8 = input.LA(1);

                         
                        int index72_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalGo()) ) {s = 22;}

                        else if ( (synpred128_InternalGo()) ) {s = 23;}

                        else if ( (synpred129_InternalGo()) ) {s = 24;}

                        else if ( (synpred130_InternalGo()) ) {s = 25;}

                         
                        input.seek(index72_8);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA72_9 = input.LA(1);

                         
                        int index72_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalGo()) ) {s = 22;}

                        else if ( (synpred128_InternalGo()) ) {s = 23;}

                        else if ( (synpred129_InternalGo()) ) {s = 24;}

                        else if ( (synpred130_InternalGo()) ) {s = 25;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index72_9);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA72_10 = input.LA(1);

                         
                        int index72_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalGo()) ) {s = 22;}

                        else if ( (synpred128_InternalGo()) ) {s = 23;}

                        else if ( (synpred129_InternalGo()) ) {s = 24;}

                        else if ( (synpred130_InternalGo()) ) {s = 25;}

                         
                        input.seek(index72_10);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA72_11 = input.LA(1);

                         
                        int index72_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalGo()) ) {s = 22;}

                        else if ( (synpred128_InternalGo()) ) {s = 23;}

                        else if ( (synpred129_InternalGo()) ) {s = 24;}

                        else if ( (synpred130_InternalGo()) ) {s = 25;}

                         
                        input.seek(index72_11);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA72_12 = input.LA(1);

                         
                        int index72_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalGo()) ) {s = 22;}

                        else if ( (synpred128_InternalGo()) ) {s = 23;}

                        else if ( (synpred129_InternalGo()) ) {s = 24;}

                        else if ( (synpred130_InternalGo()) ) {s = 25;}

                         
                        input.seek(index72_12);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA72_13 = input.LA(1);

                         
                        int index72_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalGo()) ) {s = 22;}

                        else if ( (synpred128_InternalGo()) ) {s = 23;}

                        else if ( (synpred129_InternalGo()) ) {s = 24;}

                        else if ( (synpred130_InternalGo()) ) {s = 25;}

                         
                        input.seek(index72_13);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA72_14 = input.LA(1);

                         
                        int index72_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalGo()) ) {s = 22;}

                        else if ( (synpred128_InternalGo()) ) {s = 23;}

                        else if ( (synpred129_InternalGo()) ) {s = 24;}

                        else if ( (synpred130_InternalGo()) ) {s = 25;}

                         
                        input.seek(index72_14);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA72_15 = input.LA(1);

                         
                        int index72_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalGo()) ) {s = 22;}

                        else if ( (synpred128_InternalGo()) ) {s = 23;}

                        else if ( (synpred129_InternalGo()) ) {s = 24;}

                        else if ( (synpred130_InternalGo()) ) {s = 25;}

                         
                        input.seek(index72_15);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA72_16 = input.LA(1);

                         
                        int index72_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalGo()) ) {s = 22;}

                        else if ( (synpred128_InternalGo()) ) {s = 23;}

                        else if ( (synpred129_InternalGo()) ) {s = 24;}

                        else if ( (synpred130_InternalGo()) ) {s = 25;}

                         
                        input.seek(index72_16);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA72_17 = input.LA(1);

                         
                        int index72_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalGo()) ) {s = 22;}

                        else if ( (synpred128_InternalGo()) ) {s = 23;}

                        else if ( (synpred129_InternalGo()) ) {s = 24;}

                        else if ( (synpred130_InternalGo()) ) {s = 25;}

                         
                        input.seek(index72_17);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA72_18 = input.LA(1);

                         
                        int index72_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalGo()) ) {s = 22;}

                        else if ( (synpred128_InternalGo()) ) {s = 23;}

                        else if ( (synpred129_InternalGo()) ) {s = 24;}

                        else if ( (synpred130_InternalGo()) ) {s = 25;}

                         
                        input.seek(index72_18);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA72_19 = input.LA(1);

                         
                        int index72_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalGo()) ) {s = 22;}

                        else if ( (synpred128_InternalGo()) ) {s = 23;}

                        else if ( (synpred129_InternalGo()) ) {s = 24;}

                        else if ( (synpred130_InternalGo()) ) {s = 25;}

                         
                        input.seek(index72_19);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA72_20 = input.LA(1);

                         
                        int index72_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalGo()) ) {s = 22;}

                        else if ( (synpred128_InternalGo()) ) {s = 23;}

                        else if ( (synpred129_InternalGo()) ) {s = 24;}

                        else if ( (synpred130_InternalGo()) ) {s = 25;}

                         
                        input.seek(index72_20);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA72_21 = input.LA(1);

                         
                        int index72_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalGo()) ) {s = 22;}

                        else if ( (synpred128_InternalGo()) ) {s = 23;}

                        else if ( (synpred129_InternalGo()) ) {s = 24;}

                        else if ( (synpred130_InternalGo()) ) {s = 25;}

                         
                        input.seek(index72_21);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 72, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_90s = "\27\uffff";
    static final String dfa_91s = "\1\4\1\uffff\24\0\1\uffff";
    static final String dfa_92s = "\1\123\1\uffff\24\0\1\uffff";
    static final String dfa_93s = "\1\uffff\1\1\24\uffff\1\2";
    static final String dfa_94s = "\2\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\uffff}>";
    static final String[] dfa_95s = {
            "\1\1\1\11\1\2\13\uffff\1\20\1\uffff\1\4\1\10\1\uffff\1\7\1\uffff\1\12\1\13\2\uffff\1\14\1\uffff\1\15\1\16\1\17\16\uffff\1\21\1\22\6\uffff\1\25\1\uffff\1\23\1\24\23\uffff\1\3\2\uffff\1\5\1\6",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            ""
    };

    static final short[] dfa_90 = DFA.unpackEncodedString(dfa_90s);
    static final char[] dfa_91 = DFA.unpackEncodedStringToUnsignedChars(dfa_91s);
    static final char[] dfa_92 = DFA.unpackEncodedStringToUnsignedChars(dfa_92s);
    static final short[] dfa_93 = DFA.unpackEncodedString(dfa_93s);
    static final short[] dfa_94 = DFA.unpackEncodedString(dfa_94s);
    static final short[][] dfa_95 = unpackEncodedStringArray(dfa_95s);

    class DFA75 extends DFA {

        public DFA75(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 75;
            this.eot = dfa_90;
            this.eof = dfa_90;
            this.min = dfa_91;
            this.max = dfa_92;
            this.accept = dfa_93;
            this.special = dfa_94;
            this.transition = dfa_95;
        }
        public String getDescription() {
            return "6640:3: ( ( (lv_SimpleStmt_1_0= ruleSimpleStmt ) ) otherlv_2= ';' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA75_2 = input.LA(1);

                         
                        int index75_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred134_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index75_2);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA75_3 = input.LA(1);

                         
                        int index75_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred134_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index75_3);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA75_4 = input.LA(1);

                         
                        int index75_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred134_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index75_4);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA75_5 = input.LA(1);

                         
                        int index75_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred134_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index75_5);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA75_6 = input.LA(1);

                         
                        int index75_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred134_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index75_6);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA75_7 = input.LA(1);

                         
                        int index75_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred134_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index75_7);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA75_8 = input.LA(1);

                         
                        int index75_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred134_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index75_8);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA75_9 = input.LA(1);

                         
                        int index75_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred134_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index75_9);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA75_10 = input.LA(1);

                         
                        int index75_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred134_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index75_10);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA75_11 = input.LA(1);

                         
                        int index75_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred134_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index75_11);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA75_12 = input.LA(1);

                         
                        int index75_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred134_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index75_12);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA75_13 = input.LA(1);

                         
                        int index75_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred134_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index75_13);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA75_14 = input.LA(1);

                         
                        int index75_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred134_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index75_14);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA75_15 = input.LA(1);

                         
                        int index75_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred134_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index75_15);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA75_16 = input.LA(1);

                         
                        int index75_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred134_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index75_16);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA75_17 = input.LA(1);

                         
                        int index75_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred134_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index75_17);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA75_18 = input.LA(1);

                         
                        int index75_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred134_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index75_18);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA75_19 = input.LA(1);

                         
                        int index75_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred134_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index75_19);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA75_20 = input.LA(1);

                         
                        int index75_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred134_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index75_20);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA75_21 = input.LA(1);

                         
                        int index75_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred134_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index75_21);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 75, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_96s = "\1\4\25\0\2\uffff";
    static final String dfa_97s = "\26\uffff\1\2\1\1";
    static final String[] dfa_98s = {
            "\1\1\1\11\1\2\13\uffff\1\20\1\uffff\1\4\1\10\1\uffff\1\7\1\26\1\12\1\13\2\uffff\1\14\1\uffff\1\15\1\16\1\17\16\uffff\1\21\1\22\6\uffff\1\25\1\uffff\1\23\1\24\23\uffff\1\3\2\uffff\1\5\1\6",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            ""
    };
    static final char[] dfa_96 = DFA.unpackEncodedStringToUnsignedChars(dfa_96s);
    static final short[] dfa_97 = DFA.unpackEncodedString(dfa_97s);
    static final short[][] dfa_98 = unpackEncodedStringArray(dfa_98s);

    class DFA78 extends DFA {

        public DFA78(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 78;
            this.eot = dfa_50;
            this.eof = dfa_50;
            this.min = dfa_96;
            this.max = dfa_52;
            this.accept = dfa_97;
            this.special = dfa_54;
            this.transition = dfa_98;
        }
        public String getDescription() {
            return "6773:3: (this_SimpleStmt_1= ruleSimpleStmt otherlv_2= ';' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA78_1 = input.LA(1);

                         
                        int index78_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred137_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index78_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA78_2 = input.LA(1);

                         
                        int index78_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred137_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index78_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA78_3 = input.LA(1);

                         
                        int index78_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred137_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index78_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA78_4 = input.LA(1);

                         
                        int index78_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred137_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index78_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA78_5 = input.LA(1);

                         
                        int index78_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred137_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index78_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA78_6 = input.LA(1);

                         
                        int index78_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred137_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index78_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA78_7 = input.LA(1);

                         
                        int index78_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred137_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index78_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA78_8 = input.LA(1);

                         
                        int index78_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred137_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index78_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA78_9 = input.LA(1);

                         
                        int index78_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred137_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index78_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA78_10 = input.LA(1);

                         
                        int index78_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred137_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index78_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA78_11 = input.LA(1);

                         
                        int index78_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred137_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index78_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA78_12 = input.LA(1);

                         
                        int index78_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred137_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index78_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA78_13 = input.LA(1);

                         
                        int index78_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred137_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index78_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA78_14 = input.LA(1);

                         
                        int index78_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred137_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index78_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA78_15 = input.LA(1);

                         
                        int index78_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred137_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index78_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA78_16 = input.LA(1);

                         
                        int index78_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred137_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index78_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA78_17 = input.LA(1);

                         
                        int index78_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred137_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index78_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA78_18 = input.LA(1);

                         
                        int index78_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred137_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index78_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA78_19 = input.LA(1);

                         
                        int index78_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred137_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index78_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA78_20 = input.LA(1);

                         
                        int index78_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred137_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index78_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA78_21 = input.LA(1);

                         
                        int index78_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred137_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index78_21);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 78, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_99s = "\1\4\17\0\10\uffff";
    static final String dfa_100s = "\1\123\17\0\10\uffff";
    static final String dfa_101s = "\20\uffff\1\2\5\uffff\1\3\1\1";
    static final String dfa_102s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\10\uffff}>";
    static final String[] dfa_103s = {
            "\1\26\1\1\1\2\13\uffff\1\17\1\uffff\1\4\1\10\1\uffff\1\7\1\20\1\11\1\12\2\uffff\1\13\1\uffff\1\14\1\15\1\16\16\uffff\2\20\6\uffff\1\20\1\uffff\2\20\23\uffff\1\3\2\uffff\1\5\1\6",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_99 = DFA.unpackEncodedStringToUnsignedChars(dfa_99s);
    static final char[] dfa_100 = DFA.unpackEncodedStringToUnsignedChars(dfa_100s);
    static final short[] dfa_101 = DFA.unpackEncodedString(dfa_101s);
    static final short[] dfa_102 = DFA.unpackEncodedString(dfa_102s);
    static final short[][] dfa_103 = unpackEncodedStringArray(dfa_103s);

    class DFA83 extends DFA {

        public DFA83(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 83;
            this.eot = dfa_50;
            this.eof = dfa_50;
            this.min = dfa_99;
            this.max = dfa_100;
            this.accept = dfa_101;
            this.special = dfa_102;
            this.transition = dfa_103;
        }
        public String getDescription() {
            return "6949:2: ( ( ( (lv_TypeSwitchGuard_0_0= ruleTypeSwitchGuard ) ) otherlv_1= '{' ( (lv_TypeCaseClause_2_0= ruleTypeCaseClause ) )* otherlv_3= '}' ( (lv_switch_stmt_linha_4_0= ruleswitch_stmt_linha ) ) ) | ( () ( (lv_Expression_6_0= ruleExpression ) )? otherlv_7= '{' ( (lv_ExprCaseClause_8_0= ruleExprCaseClause ) )* otherlv_9= '}' ( (lv_switch_stmt_linha_10_0= ruleswitch_stmt_linha ) ) ) | ( () this_ANY_OTHER_12= RULE_ANY_OTHER ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA83_1 = input.LA(1);

                         
                        int index83_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred140_InternalGo()) ) {s = 23;}

                        else if ( (synpred143_InternalGo()) ) {s = 16;}

                         
                        input.seek(index83_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA83_2 = input.LA(1);

                         
                        int index83_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred140_InternalGo()) ) {s = 23;}

                        else if ( (synpred143_InternalGo()) ) {s = 16;}

                         
                        input.seek(index83_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA83_3 = input.LA(1);

                         
                        int index83_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred140_InternalGo()) ) {s = 23;}

                        else if ( (synpred143_InternalGo()) ) {s = 16;}

                         
                        input.seek(index83_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA83_4 = input.LA(1);

                         
                        int index83_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred140_InternalGo()) ) {s = 23;}

                        else if ( (synpred143_InternalGo()) ) {s = 16;}

                         
                        input.seek(index83_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA83_5 = input.LA(1);

                         
                        int index83_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred140_InternalGo()) ) {s = 23;}

                        else if ( (synpred143_InternalGo()) ) {s = 16;}

                         
                        input.seek(index83_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA83_6 = input.LA(1);

                         
                        int index83_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred140_InternalGo()) ) {s = 23;}

                        else if ( (synpred143_InternalGo()) ) {s = 16;}

                         
                        input.seek(index83_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA83_7 = input.LA(1);

                         
                        int index83_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred140_InternalGo()) ) {s = 23;}

                        else if ( (synpred143_InternalGo()) ) {s = 16;}

                         
                        input.seek(index83_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA83_8 = input.LA(1);

                         
                        int index83_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred140_InternalGo()) ) {s = 23;}

                        else if ( (synpred143_InternalGo()) ) {s = 16;}

                         
                        input.seek(index83_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA83_9 = input.LA(1);

                         
                        int index83_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred140_InternalGo()) ) {s = 23;}

                        else if ( (synpred143_InternalGo()) ) {s = 16;}

                         
                        input.seek(index83_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA83_10 = input.LA(1);

                         
                        int index83_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred140_InternalGo()) ) {s = 23;}

                        else if ( (synpred143_InternalGo()) ) {s = 16;}

                         
                        input.seek(index83_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA83_11 = input.LA(1);

                         
                        int index83_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred140_InternalGo()) ) {s = 23;}

                        else if ( (synpred143_InternalGo()) ) {s = 16;}

                         
                        input.seek(index83_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA83_12 = input.LA(1);

                         
                        int index83_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred140_InternalGo()) ) {s = 23;}

                        else if ( (synpred143_InternalGo()) ) {s = 16;}

                         
                        input.seek(index83_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA83_13 = input.LA(1);

                         
                        int index83_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred140_InternalGo()) ) {s = 23;}

                        else if ( (synpred143_InternalGo()) ) {s = 16;}

                         
                        input.seek(index83_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA83_14 = input.LA(1);

                         
                        int index83_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred140_InternalGo()) ) {s = 23;}

                        else if ( (synpred143_InternalGo()) ) {s = 16;}

                         
                        input.seek(index83_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA83_15 = input.LA(1);

                         
                        int index83_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred140_InternalGo()) ) {s = 23;}

                        else if ( (synpred143_InternalGo()) ) {s = 16;}

                         
                        input.seek(index83_15);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 83, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_104s = "\1\5\1\4\1\uffff\2\4\1\uffff\2\4";
    static final String dfa_105s = "\1\123\1\46\1\uffff\2\46\1\uffff\2\46";
    static final String dfa_106s = "\2\uffff\1\2\2\uffff\1\1\2\uffff";
    static final String[] dfa_107s = {
            "\1\1\1\2\13\uffff\1\2\1\uffff\2\2\1\uffff\1\2\1\uffff\2\2\2\uffff\1\2\1\uffff\3\2\55\uffff\1\2\2\uffff\2\2",
            "\1\2\1\3\1\4\13\uffff\1\2\1\uffff\2\2\20\uffff\1\5",
            "",
            "\1\2\1\6\1\7\13\uffff\1\2\1\uffff\2\2\20\uffff\1\5",
            "\1\2\1\3\1\4\13\uffff\1\2\1\uffff\2\2\20\uffff\1\5",
            "",
            "\1\2\1\6\1\7\13\uffff\1\2\1\uffff\2\2\20\uffff\1\5",
            "\1\2\1\6\1\7\13\uffff\1\2\1\uffff\2\2\20\uffff\1\5"
    };
    static final char[] dfa_104 = DFA.unpackEncodedStringToUnsignedChars(dfa_104s);
    static final char[] dfa_105 = DFA.unpackEncodedStringToUnsignedChars(dfa_105s);
    static final short[] dfa_106 = DFA.unpackEncodedString(dfa_106s);
    static final short[][] dfa_107 = unpackEncodedStringArray(dfa_107s);

    class DFA84 extends DFA {

        public DFA84(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 84;
            this.eot = dfa_20;
            this.eof = dfa_20;
            this.min = dfa_104;
            this.max = dfa_105;
            this.accept = dfa_106;
            this.special = dfa_24;
            this.transition = dfa_107;
        }
        public String getDescription() {
            return "7131:3: ( ( (lv_identifier_0_0= ruleidentifier ) ) otherlv_1= ':=' )?";
        }
    }
    static final String dfa_108s = "\32\uffff";
    static final String dfa_109s = "\1\4\24\0\5\uffff";
    static final String dfa_110s = "\1\123\24\0\5\uffff";
    static final String dfa_111s = "\25\uffff\1\2\1\uffff\1\3\1\4\1\1";
    static final String dfa_112s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\5\uffff}>";
    static final String[] dfa_113s = {
            "\1\25\1\10\1\1\12\uffff\1\25\1\17\1\uffff\1\3\1\7\1\uffff\1\6\1\30\1\11\1\12\2\uffff\1\13\1\uffff\1\14\1\15\1\16\16\uffff\1\20\1\21\6\uffff\1\24\1\uffff\1\22\1\23\10\uffff\1\27\12\uffff\1\2\2\uffff\1\4\1\5",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_108 = DFA.unpackEncodedString(dfa_108s);
    static final char[] dfa_109 = DFA.unpackEncodedStringToUnsignedChars(dfa_109s);
    static final char[] dfa_110 = DFA.unpackEncodedStringToUnsignedChars(dfa_110s);
    static final short[] dfa_111 = DFA.unpackEncodedString(dfa_111s);
    static final short[] dfa_112 = DFA.unpackEncodedString(dfa_112s);
    static final short[][] dfa_113 = unpackEncodedStringArray(dfa_113s);

    class DFA87 extends DFA {

        public DFA87(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 87;
            this.eot = dfa_108;
            this.eof = dfa_108;
            this.min = dfa_109;
            this.max = dfa_110;
            this.accept = dfa_111;
            this.special = dfa_112;
            this.transition = dfa_113;
        }
        public String getDescription() {
            return "7399:3: ( ( (lv_Condition_1_0= ruleCondition ) ) | ( (lv_ForClause_2_0= ruleForClause ) ) | ( (lv_RangeClause_3_0= ruleRangeClause ) ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA87_1 = input.LA(1);

                         
                        int index87_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred147_InternalGo()) ) {s = 25;}

                        else if ( (synpred148_InternalGo()) ) {s = 21;}

                        else if ( (synpred149_InternalGo()) ) {s = 23;}

                         
                        input.seek(index87_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA87_2 = input.LA(1);

                         
                        int index87_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred147_InternalGo()) ) {s = 25;}

                        else if ( (synpred148_InternalGo()) ) {s = 21;}

                        else if ( (synpred149_InternalGo()) ) {s = 23;}

                         
                        input.seek(index87_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA87_3 = input.LA(1);

                         
                        int index87_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred147_InternalGo()) ) {s = 25;}

                        else if ( (synpred148_InternalGo()) ) {s = 21;}

                        else if ( (synpred149_InternalGo()) ) {s = 23;}

                         
                        input.seek(index87_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA87_4 = input.LA(1);

                         
                        int index87_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred147_InternalGo()) ) {s = 25;}

                        else if ( (synpred148_InternalGo()) ) {s = 21;}

                        else if ( (synpred149_InternalGo()) ) {s = 23;}

                         
                        input.seek(index87_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA87_5 = input.LA(1);

                         
                        int index87_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred147_InternalGo()) ) {s = 25;}

                        else if ( (synpred148_InternalGo()) ) {s = 21;}

                        else if ( (synpred149_InternalGo()) ) {s = 23;}

                         
                        input.seek(index87_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA87_6 = input.LA(1);

                         
                        int index87_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred147_InternalGo()) ) {s = 25;}

                        else if ( (synpred148_InternalGo()) ) {s = 21;}

                        else if ( (synpred149_InternalGo()) ) {s = 23;}

                         
                        input.seek(index87_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA87_7 = input.LA(1);

                         
                        int index87_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred147_InternalGo()) ) {s = 25;}

                        else if ( (synpred148_InternalGo()) ) {s = 21;}

                        else if ( (synpred149_InternalGo()) ) {s = 23;}

                         
                        input.seek(index87_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA87_8 = input.LA(1);

                         
                        int index87_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred147_InternalGo()) ) {s = 25;}

                        else if ( (synpred148_InternalGo()) ) {s = 21;}

                        else if ( (synpred149_InternalGo()) ) {s = 23;}

                         
                        input.seek(index87_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA87_9 = input.LA(1);

                         
                        int index87_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred147_InternalGo()) ) {s = 25;}

                        else if ( (synpred148_InternalGo()) ) {s = 21;}

                        else if ( (synpred149_InternalGo()) ) {s = 23;}

                         
                        input.seek(index87_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA87_10 = input.LA(1);

                         
                        int index87_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred147_InternalGo()) ) {s = 25;}

                        else if ( (synpred148_InternalGo()) ) {s = 21;}

                        else if ( (synpred149_InternalGo()) ) {s = 23;}

                         
                        input.seek(index87_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA87_11 = input.LA(1);

                         
                        int index87_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred147_InternalGo()) ) {s = 25;}

                        else if ( (synpred148_InternalGo()) ) {s = 21;}

                        else if ( (synpred149_InternalGo()) ) {s = 23;}

                         
                        input.seek(index87_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA87_12 = input.LA(1);

                         
                        int index87_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred147_InternalGo()) ) {s = 25;}

                        else if ( (synpred148_InternalGo()) ) {s = 21;}

                        else if ( (synpred149_InternalGo()) ) {s = 23;}

                         
                        input.seek(index87_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA87_13 = input.LA(1);

                         
                        int index87_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred147_InternalGo()) ) {s = 25;}

                        else if ( (synpred148_InternalGo()) ) {s = 21;}

                        else if ( (synpred149_InternalGo()) ) {s = 23;}

                         
                        input.seek(index87_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA87_14 = input.LA(1);

                         
                        int index87_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred147_InternalGo()) ) {s = 25;}

                        else if ( (synpred148_InternalGo()) ) {s = 21;}

                        else if ( (synpred149_InternalGo()) ) {s = 23;}

                         
                        input.seek(index87_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA87_15 = input.LA(1);

                         
                        int index87_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred147_InternalGo()) ) {s = 25;}

                        else if ( (synpred148_InternalGo()) ) {s = 21;}

                        else if ( (synpred149_InternalGo()) ) {s = 23;}

                         
                        input.seek(index87_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA87_16 = input.LA(1);

                         
                        int index87_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred147_InternalGo()) ) {s = 25;}

                        else if ( (synpred148_InternalGo()) ) {s = 21;}

                        else if ( (synpred149_InternalGo()) ) {s = 23;}

                         
                        input.seek(index87_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA87_17 = input.LA(1);

                         
                        int index87_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred147_InternalGo()) ) {s = 25;}

                        else if ( (synpred148_InternalGo()) ) {s = 21;}

                        else if ( (synpred149_InternalGo()) ) {s = 23;}

                         
                        input.seek(index87_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA87_18 = input.LA(1);

                         
                        int index87_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred147_InternalGo()) ) {s = 25;}

                        else if ( (synpred148_InternalGo()) ) {s = 21;}

                        else if ( (synpred149_InternalGo()) ) {s = 23;}

                         
                        input.seek(index87_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA87_19 = input.LA(1);

                         
                        int index87_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred147_InternalGo()) ) {s = 25;}

                        else if ( (synpred148_InternalGo()) ) {s = 21;}

                        else if ( (synpred149_InternalGo()) ) {s = 23;}

                         
                        input.seek(index87_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA87_20 = input.LA(1);

                         
                        int index87_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred147_InternalGo()) ) {s = 25;}

                        else if ( (synpred148_InternalGo()) ) {s = 21;}

                        else if ( (synpred149_InternalGo()) ) {s = 23;}

                         
                        input.seek(index87_20);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 87, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_114s = "\1\5\1\uffff\1\4\1\uffff\2\4\1\uffff\2\4";
    static final String dfa_115s = "\1\123\1\uffff\1\46\1\uffff\2\46\1\uffff\2\46";
    static final String dfa_116s = "\1\uffff\1\1\1\uffff\1\3\2\uffff\1\2\2\uffff";
    static final String[] dfa_117s = {
            "\1\2\1\1\13\uffff\1\1\1\uffff\2\1\1\uffff\1\1\1\uffff\2\1\2\uffff\1\1\1\uffff\3\1\16\uffff\2\1\6\uffff\1\1\1\uffff\2\1\10\uffff\1\3\12\uffff\1\1\2\uffff\2\1",
            "",
            "\1\1\1\4\1\5\13\uffff\1\1\1\uffff\2\1\5\uffff\1\6\12\uffff\1\6",
            "",
            "\1\1\1\7\1\10\13\uffff\1\1\1\uffff\2\1\5\uffff\1\6\12\uffff\1\6",
            "\1\1\1\4\1\5\13\uffff\1\1\1\uffff\2\1\5\uffff\1\6\12\uffff\1\6",
            "",
            "\1\1\1\7\1\10\13\uffff\1\1\1\uffff\2\1\5\uffff\1\6\12\uffff\1\6",
            "\1\1\1\7\1\10\13\uffff\1\1\1\uffff\2\1\5\uffff\1\6\12\uffff\1\6"
    };
    static final char[] dfa_114 = DFA.unpackEncodedStringToUnsignedChars(dfa_114s);
    static final char[] dfa_115 = DFA.unpackEncodedStringToUnsignedChars(dfa_115s);
    static final short[] dfa_116 = DFA.unpackEncodedString(dfa_116s);
    static final short[][] dfa_117 = unpackEncodedStringArray(dfa_117s);

    class DFA91 extends DFA {

        public DFA91(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 91;
            this.eot = dfa_56;
            this.eof = dfa_56;
            this.min = dfa_114;
            this.max = dfa_115;
            this.accept = dfa_116;
            this.special = dfa_61;
            this.transition = dfa_117;
        }
        public String getDescription() {
            return "7700:3: ( ( ( (lv_ExpressionList_0_0= ruleExpressionList ) ) otherlv_1= '=' ) | ( ( (lv_IdentifierList_2_0= ruleIdentifierList ) ) otherlv_3= ':=' ) )?";
        }
    }
    static final String dfa_118s = "\1\5\24\0\2\uffff";
    static final String dfa_119s = "\1\123\24\0\2\uffff";
    static final String dfa_120s = "\25\uffff\1\1\1\2";
    static final String dfa_121s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\2\uffff}>";
    static final String[] dfa_122s = {
            "\1\10\1\1\13\uffff\1\17\1\uffff\1\3\1\7\1\uffff\1\6\1\uffff\1\11\1\12\2\uffff\1\13\1\uffff\1\14\1\15\1\16\16\uffff\1\20\1\21\6\uffff\1\24\1\uffff\1\22\1\23\23\uffff\1\2\2\uffff\1\4\1\5",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            ""
    };
    static final char[] dfa_118 = DFA.unpackEncodedStringToUnsignedChars(dfa_118s);
    static final char[] dfa_119 = DFA.unpackEncodedStringToUnsignedChars(dfa_119s);
    static final short[] dfa_120 = DFA.unpackEncodedString(dfa_120s);
    static final short[] dfa_121 = DFA.unpackEncodedString(dfa_121s);
    static final short[][] dfa_122 = unpackEncodedStringArray(dfa_122s);

    class DFA93 extends DFA {

        public DFA93(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 93;
            this.eot = dfa_90;
            this.eof = dfa_90;
            this.min = dfa_118;
            this.max = dfa_119;
            this.accept = dfa_120;
            this.special = dfa_121;
            this.transition = dfa_122;
        }
        public String getDescription() {
            return "7963:4: ( ( (lv_SendStmt_1_0= ruleSendStmt ) ) | ( (lv_RecvStmt_2_0= ruleRecvStmt ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA93_1 = input.LA(1);

                         
                        int index93_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred156_InternalGo()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index93_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA93_2 = input.LA(1);

                         
                        int index93_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred156_InternalGo()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index93_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA93_3 = input.LA(1);

                         
                        int index93_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred156_InternalGo()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index93_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA93_4 = input.LA(1);

                         
                        int index93_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred156_InternalGo()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index93_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA93_5 = input.LA(1);

                         
                        int index93_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred156_InternalGo()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index93_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA93_6 = input.LA(1);

                         
                        int index93_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred156_InternalGo()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index93_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA93_7 = input.LA(1);

                         
                        int index93_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred156_InternalGo()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index93_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA93_8 = input.LA(1);

                         
                        int index93_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred156_InternalGo()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index93_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA93_9 = input.LA(1);

                         
                        int index93_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred156_InternalGo()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index93_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA93_10 = input.LA(1);

                         
                        int index93_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred156_InternalGo()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index93_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA93_11 = input.LA(1);

                         
                        int index93_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred156_InternalGo()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index93_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA93_12 = input.LA(1);

                         
                        int index93_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred156_InternalGo()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index93_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA93_13 = input.LA(1);

                         
                        int index93_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred156_InternalGo()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index93_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA93_14 = input.LA(1);

                         
                        int index93_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred156_InternalGo()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index93_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA93_15 = input.LA(1);

                         
                        int index93_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred156_InternalGo()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index93_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA93_16 = input.LA(1);

                         
                        int index93_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred156_InternalGo()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index93_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA93_17 = input.LA(1);

                         
                        int index93_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred156_InternalGo()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index93_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA93_18 = input.LA(1);

                         
                        int index93_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred156_InternalGo()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index93_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA93_19 = input.LA(1);

                         
                        int index93_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred156_InternalGo()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index93_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA93_20 = input.LA(1);

                         
                        int index93_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred156_InternalGo()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index93_20);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 93, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_123s = "\1\5\24\0\3\uffff";
    static final String dfa_124s = "\1\123\24\0\3\uffff";
    static final String dfa_125s = "\25\uffff\1\1\1\3\1\2";
    static final String dfa_126s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\3\uffff}>";
    static final String[] dfa_127s = {
            "\1\10\1\1\13\uffff\1\17\1\uffff\1\3\1\7\1\uffff\1\6\1\uffff\1\11\1\12\2\uffff\1\13\1\uffff\1\14\1\15\1\16\16\uffff\1\20\1\21\6\uffff\1\24\1\uffff\1\22\1\23\23\uffff\1\2\2\uffff\1\4\1\5",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            ""
    };
    static final char[] dfa_123 = DFA.unpackEncodedStringToUnsignedChars(dfa_123s);
    static final char[] dfa_124 = DFA.unpackEncodedStringToUnsignedChars(dfa_124s);
    static final short[] dfa_125 = DFA.unpackEncodedString(dfa_125s);
    static final short[] dfa_126 = DFA.unpackEncodedString(dfa_126s);
    static final short[][] dfa_127 = unpackEncodedStringArray(dfa_127s);

    class DFA95 extends DFA {

        public DFA95(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 95;
            this.eot = dfa_50;
            this.eof = dfa_50;
            this.min = dfa_123;
            this.max = dfa_124;
            this.accept = dfa_125;
            this.special = dfa_126;
            this.transition = dfa_127;
        }
        public String getDescription() {
            return "8041:3: ( ( ( (lv_ExpressionList_0_0= ruleExpressionList ) ) otherlv_1= '=' ) | ( ( (lv_IdentifierList_2_0= ruleIdentifierList ) ) otherlv_3= ':=' ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA95_1 = input.LA(1);

                         
                        int index95_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred158_InternalGo()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index95_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA95_2 = input.LA(1);

                         
                        int index95_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred158_InternalGo()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index95_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA95_3 = input.LA(1);

                         
                        int index95_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred158_InternalGo()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index95_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA95_4 = input.LA(1);

                         
                        int index95_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred158_InternalGo()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index95_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA95_5 = input.LA(1);

                         
                        int index95_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred158_InternalGo()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index95_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA95_6 = input.LA(1);

                         
                        int index95_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred158_InternalGo()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index95_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA95_7 = input.LA(1);

                         
                        int index95_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred158_InternalGo()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index95_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA95_8 = input.LA(1);

                         
                        int index95_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred158_InternalGo()) ) {s = 21;}

                        else if ( (synpred159_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index95_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA95_9 = input.LA(1);

                         
                        int index95_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred158_InternalGo()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index95_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA95_10 = input.LA(1);

                         
                        int index95_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred158_InternalGo()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index95_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA95_11 = input.LA(1);

                         
                        int index95_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred158_InternalGo()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index95_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA95_12 = input.LA(1);

                         
                        int index95_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred158_InternalGo()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index95_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA95_13 = input.LA(1);

                         
                        int index95_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred158_InternalGo()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index95_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA95_14 = input.LA(1);

                         
                        int index95_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred158_InternalGo()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index95_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA95_15 = input.LA(1);

                         
                        int index95_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred158_InternalGo()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index95_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA95_16 = input.LA(1);

                         
                        int index95_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred158_InternalGo()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index95_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA95_17 = input.LA(1);

                         
                        int index95_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred158_InternalGo()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index95_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA95_18 = input.LA(1);

                         
                        int index95_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred158_InternalGo()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index95_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA95_19 = input.LA(1);

                         
                        int index95_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred158_InternalGo()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index95_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA95_20 = input.LA(1);

                         
                        int index95_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred158_InternalGo()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index95_20);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 95, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_128s = "\2\6\1\uffff\1\6\2\uffff";
    static final String dfa_129s = "\1\24\1\127\1\uffff\1\127\2\uffff";
    static final String dfa_130s = "\2\uffff\1\3\1\uffff\1\2\1\1";
    static final String dfa_131s = "\6\uffff}>";
    static final String[] dfa_132s = {
            "\1\1\15\uffff\1\2",
            "\1\3\15\uffff\1\5\101\uffff\2\4",
            "",
            "\1\3\15\uffff\1\5\101\uffff\2\4",
            "",
            ""
    };
    static final char[] dfa_128 = DFA.unpackEncodedStringToUnsignedChars(dfa_128s);
    static final char[] dfa_129 = DFA.unpackEncodedStringToUnsignedChars(dfa_129s);
    static final short[] dfa_130 = DFA.unpackEncodedString(dfa_130s);
    static final short[] dfa_131 = DFA.unpackEncodedString(dfa_131s);
    static final short[][] dfa_132 = unpackEncodedStringArray(dfa_132s);

    class DFA111 extends DFA {

        public DFA111(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 111;
            this.eot = dfa_14;
            this.eof = dfa_14;
            this.min = dfa_128;
            this.max = dfa_129;
            this.accept = dfa_130;
            this.special = dfa_131;
            this.transition = dfa_132;
        }
        public String getDescription() {
            return "8945:2: ( (this_decimals_0= ruledecimals otherlv_1= '.' ( (lv_decimals_2_0= ruledecimals ) )? ( (lv_exponent_3_0= ruleexponent ) )? ) | (this_decimals_4= ruledecimals ( (lv_exponent_5_0= ruleexponent ) ) ) | (otherlv_6= '.' this_decimals_7= ruledecimals ( (lv_exponen_8_0= ruleexponent ) )? ) )";
        }
    }
    static final String dfa_133s = "\1\122\7\uffff\1\0\3\uffff";
    static final String dfa_134s = "\1\140\7\uffff\1\0\3\uffff";
    static final String dfa_135s = "\1\uffff\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\uffff\1\12\1\10\1\11";
    static final String dfa_136s = "\10\uffff\1\0\3\uffff}>";
    static final String[] dfa_137s = {
            "\1\10\1\11\6\uffff\1\1\1\2\1\3\1\4\1\5\1\6\1\7",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            ""
    };
    static final char[] dfa_133 = DFA.unpackEncodedStringToUnsignedChars(dfa_133s);
    static final char[] dfa_134 = DFA.unpackEncodedStringToUnsignedChars(dfa_134s);
    static final short[] dfa_135 = DFA.unpackEncodedString(dfa_135s);
    static final short[] dfa_136 = DFA.unpackEncodedString(dfa_136s);
    static final short[][] dfa_137 = unpackEncodedStringArray(dfa_137s);

    class DFA122 extends DFA {

        public DFA122(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 122;
            this.eot = dfa_8;
            this.eof = dfa_8;
            this.min = dfa_133;
            this.max = dfa_134;
            this.accept = dfa_135;
            this.special = dfa_136;
            this.transition = dfa_137;
        }
        public String getDescription() {
            return "9858:3: (kw= 'a' | kw= 'b' | kw= 'f' | kw= 'n' | kw= 'r' | kw= 't' | kw= 'v' | this_CHAR_8= ruleCHAR | kw= '\\'' | kw= '\"' )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA122_8 = input.LA(1);

                         
                        int index122_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred204_InternalGo()) ) {s = 10;}

                        else if ( (synpred205_InternalGo()) ) {s = 11;}

                         
                        input.seek(index122_8);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 122, _s, input);
            error(nvae);
            throw nvae;
        }
    }
 

    public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x0000003404000002L,0x0000000000004000L});
    public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x00000003A6A40020L});
    public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0000000000100030L});
    public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x0D030003A6F40070L,0x00000000000C8000L});
    public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x0000000000400000L});
    public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x0000000002020020L});
    public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x0000000000100042L,0x00000000000C8000L});
    public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x00000003A6A40022L});
    public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x00000003B6AC0020L});
    public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x0000000008080000L});
    public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x0000000008000002L});
    public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x00000003B6A40020L});
    public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0000000040000020L});
    public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x0000000040000000L});
    public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x0000000000200000L});
    public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x0000000200000000L});
    public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x4D030037E7B40070L,0x00000000000C9FE9L});
    public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x4D030037A7B40072L,0x00000000000C9FE9L});
    public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x0000000000040020L});
    public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x0000000001000002L});
    public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x0000000000080020L});
    public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x0000000BA6A40022L});
    public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x0D030003A6B40060L,0x00000000000C8000L});
    public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x0000000BA6A40020L});
    public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x0000000800000002L});
    public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x0000000000100000L});
    public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x0D030003B6F40060L,0x00000000000C8000L});
    public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x0D030003E7B40060L,0x00000000000C8000L});
    public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x0000000048000000L});
    public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x0D030003A7B40060L,0x00000000000C8000L});
    public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x0000008000000000L});
    public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x0000000000340010L});
    public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x0000008000400000L});
    public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x0000008000000040L});
    public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x0D030003A6BC0060L,0x00000000000C8000L});
    public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x0000000018080000L});
    public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x03FFFF0002000010L});
    public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x4D030037A7B40070L,0x00000000000C9FE9L});
    public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x3000000000000000L});
    public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x03FFFF0802000000L});
    public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x0D030003A6B40070L,0x00000000000C8000L});
    public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x8000000000000002L});
    public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x4000000001000000L});
    public static final BitSet FOLLOW_55 = new BitSet(new long[]{0x0D030003A7B40070L,0x00000000000C8000L});
    public static final BitSet FOLLOW_56 = new BitSet(new long[]{0x0000000040000000L,0x0000000000000006L});
    public static final BitSet FOLLOW_57 = new BitSet(new long[]{0x00000003A6B40060L,0x00000000000C8000L});
    public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x0000001000000000L});
    public static final BitSet FOLLOW_59 = new BitSet(new long[]{0x0D030003A7B60070L,0x00000000000C8010L});
    public static final BitSet FOLLOW_60 = new BitSet(new long[]{0x0D030003A6B60060L,0x00000000000C8000L});
    public static final BitSet FOLLOW_61 = new BitSet(new long[]{0x0D030003A6B40072L,0x00000000000C8000L});
    public static final BitSet FOLLOW_62 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000010L});
    public static final BitSet FOLLOW_63 = new BitSet(new long[]{0x0D030003A6B40062L,0x00000000000C8000L});
    public static final BitSet FOLLOW_64 = new BitSet(new long[]{0x0000000000000022L});
    public static final BitSet FOLLOW_65 = new BitSet(new long[]{0x0000000000140060L,0x00000000000C8000L});
    public static final BitSet FOLLOW_66 = new BitSet(new long[]{0x0000000000180060L,0x00000000000C8000L});
    public static final BitSet FOLLOW_67 = new BitSet(new long[]{0x0000000000100060L,0x00000000000C8000L});
    public static final BitSet FOLLOW_68 = new BitSet(new long[]{0x0000000000000062L});
    public static final BitSet FOLLOW_69 = new BitSet(new long[]{0x0000000000000042L});
    public static final BitSet FOLLOW_70 = new BitSet(new long[]{0x0000000000000082L});
    public static final BitSet FOLLOW_71 = new BitSet(new long[]{0x0000000000000000L,0x0000000000030000L});
    public static final BitSet FOLLOW_72 = new BitSet(new long[]{0x0000000000000100L});
    public static final BitSet FOLLOW_73 = new BitSet(new long[]{0x0000000000000102L});
    public static final BitSet FOLLOW_74 = new BitSet(new long[]{0x0000000000000042L,0x0000000000C00000L});
    public static final BitSet FOLLOW_75 = new BitSet(new long[]{0x0000000000000002L,0x0000000000C00000L});
    public static final BitSet FOLLOW_76 = new BitSet(new long[]{0x0000000000000000L,0x0000000000C00000L});
    public static final BitSet FOLLOW_77 = new BitSet(new long[]{0x0400000008100000L,0x0000000000340000L});
    public static final BitSet FOLLOW_78 = new BitSet(new long[]{0x0000000000000000L,0x0000000000040000L});
    public static final BitSet FOLLOW_79 = new BitSet(new long[]{0x0000000000000020L,0x00000000000C0000L});
    public static final BitSet FOLLOW_80 = new BitSet(new long[]{0x0000000000000000L,0x0000000000080000L});
    public static final BitSet FOLLOW_81 = new BitSet(new long[]{0x0003000000000040L});
    public static final BitSet FOLLOW_82 = new BitSet(new long[]{0x0000000000000020L,0x0000000000040000L});
    public static final BitSet FOLLOW_83 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_84 = new BitSet(new long[]{0x0000000000000000L,0x0000000000010000L});
    public static final BitSet FOLLOW_85 = new BitSet(new long[]{0x0000000000000000L,0x0000000001000000L});
    public static final BitSet FOLLOW_86 = new BitSet(new long[]{0x0000000000000000L,0x0000000002000000L});
    public static final BitSet FOLLOW_87 = new BitSet(new long[]{0x0000000000000000L,0x00000001FC0C0000L});

}