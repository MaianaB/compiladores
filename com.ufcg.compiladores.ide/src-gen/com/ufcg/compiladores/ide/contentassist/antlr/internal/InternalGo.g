/*
 * generated by Xtext 2.13.0
 */
grammar InternalGo;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
}

@lexer::header {
package com.ufcg.compiladores.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package com.ufcg.compiladores.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import com.ufcg.compiladores.services.GoGrammarAccess;

}
@parser::members {
	private GoGrammarAccess grammarAccess;

	public void setGrammarAccess(GoGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getGreetingsAssignment()); }
		(rule__Model__GreetingsAssignment)*
		{ after(grammarAccess.getModelAccess().getGreetingsAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGreeting
entryRuleGreeting
:
{ before(grammarAccess.getGreetingRule()); }
	 ruleGreeting
{ after(grammarAccess.getGreetingRule()); } 
	 EOF 
;

// Rule Greeting
ruleGreeting 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGreetingAccess().getGroup()); }
		(rule__Greeting__Group__0)
		{ after(grammarAccess.getGreetingAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleType
entryRuleType
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeAccess().getAlternatives()); }
		(rule__Type__Alternatives)
		{ after(grammarAccess.getTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypeName
entryRuleTypeName
:
{ before(grammarAccess.getTypeNameRule()); }
	 ruleTypeName
{ after(grammarAccess.getTypeNameRule()); } 
	 EOF 
;

// Rule TypeName
ruleTypeName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeNameAccess().getAlternatives()); }
		(rule__TypeName__Alternatives)
		{ after(grammarAccess.getTypeNameAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypeLit
entryRuleTypeLit
:
{ before(grammarAccess.getTypeLitRule()); }
	 ruleTypeLit
{ after(grammarAccess.getTypeLitRule()); } 
	 EOF 
;

// Rule TypeLit
ruleTypeLit 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeLitAccess().getAlternatives()); }
		(rule__TypeLit__Alternatives)
		{ after(grammarAccess.getTypeLitAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArrayLength
entryRuleArrayLength
:
{ before(grammarAccess.getArrayLengthRule()); }
	 ruleArrayLength
{ after(grammarAccess.getArrayLengthRule()); } 
	 EOF 
;

// Rule ArrayLength
ruleArrayLength 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArrayLengthAccess().getExpressionParserRuleCall()); }
		ruleExpression
		{ after(grammarAccess.getArrayLengthAccess().getExpressionParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArrayType
entryRuleArrayType
:
{ before(grammarAccess.getArrayTypeRule()); }
	 ruleArrayType
{ after(grammarAccess.getArrayTypeRule()); } 
	 EOF 
;

// Rule ArrayType
ruleArrayType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArrayTypeAccess().getGroup()); }
		(rule__ArrayType__Group__0)
		{ after(grammarAccess.getArrayTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleElementType
entryRuleElementType
:
{ before(grammarAccess.getElementTypeRule()); }
	 ruleElementType
{ after(grammarAccess.getElementTypeRule()); } 
	 EOF 
;

// Rule ElementType
ruleElementType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getElementTypeAccess().getTypeAssignment()); }
		(rule__ElementType__TypeAssignment)
		{ after(grammarAccess.getElementTypeAccess().getTypeAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSliceType
entryRuleSliceType
:
{ before(grammarAccess.getSliceTypeRule()); }
	 ruleSliceType
{ after(grammarAccess.getSliceTypeRule()); } 
	 EOF 
;

// Rule SliceType
ruleSliceType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSliceTypeAccess().getGroup()); }
		(rule__SliceType__Group__0)
		{ after(grammarAccess.getSliceTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStructType
entryRuleStructType
:
{ before(grammarAccess.getStructTypeRule()); }
	 ruleStructType
{ after(grammarAccess.getStructTypeRule()); } 
	 EOF 
;

// Rule StructType
ruleStructType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStructTypeAccess().getGroup()); }
		(rule__StructType__Group__0)
		{ after(grammarAccess.getStructTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFieldDecl
entryRuleFieldDecl
:
{ before(grammarAccess.getFieldDeclRule()); }
	 ruleFieldDecl
{ after(grammarAccess.getFieldDeclRule()); } 
	 EOF 
;

// Rule FieldDecl
ruleFieldDecl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFieldDeclAccess().getGroup()); }
		(rule__FieldDecl__Group__0)
		{ after(grammarAccess.getFieldDeclAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEmbeddedField
entryRuleEmbeddedField
:
{ before(grammarAccess.getEmbeddedFieldRule()); }
	 ruleEmbeddedField
{ after(grammarAccess.getEmbeddedFieldRule()); } 
	 EOF 
;

// Rule EmbeddedField
ruleEmbeddedField 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEmbeddedFieldAccess().getGroup()); }
		(rule__EmbeddedField__Group__0)
		{ after(grammarAccess.getEmbeddedFieldAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTag
entryRuleTag
:
{ before(grammarAccess.getTagRule()); }
	 ruleTag
{ after(grammarAccess.getTagRule()); } 
	 EOF 
;

// Rule Tag
ruleTag 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTagAccess().getString_litParserRuleCall()); }
		rulestring_lit
		{ after(grammarAccess.getTagAccess().getString_litParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePointerType
entryRulePointerType
:
{ before(grammarAccess.getPointerTypeRule()); }
	 rulePointerType
{ after(grammarAccess.getPointerTypeRule()); } 
	 EOF 
;

// Rule PointerType
rulePointerType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPointerTypeAccess().getGroup()); }
		(rule__PointerType__Group__0)
		{ after(grammarAccess.getPointerTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBaseType
entryRuleBaseType
:
{ before(grammarAccess.getBaseTypeRule()); }
	 ruleBaseType
{ after(grammarAccess.getBaseTypeRule()); } 
	 EOF 
;

// Rule BaseType
ruleBaseType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBaseTypeAccess().getTypeAssignment()); }
		(rule__BaseType__TypeAssignment)
		{ after(grammarAccess.getBaseTypeAccess().getTypeAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunctionType
entryRuleFunctionType
:
{ before(grammarAccess.getFunctionTypeRule()); }
	 ruleFunctionType
{ after(grammarAccess.getFunctionTypeRule()); } 
	 EOF 
;

// Rule FunctionType
ruleFunctionType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionTypeAccess().getGroup()); }
		(rule__FunctionType__Group__0)
		{ after(grammarAccess.getFunctionTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSignature
entryRuleSignature
:
{ before(grammarAccess.getSignatureRule()); }
	 ruleSignature
{ after(grammarAccess.getSignatureRule()); } 
	 EOF 
;

// Rule Signature
ruleSignature 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSignatureAccess().getGroup()); }
		(rule__Signature__Group__0)
		{ after(grammarAccess.getSignatureAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleResult
entryRuleResult
:
{ before(grammarAccess.getResultRule()); }
	 ruleResult
{ after(grammarAccess.getResultRule()); } 
	 EOF 
;

// Rule Result
ruleResult 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getResultAccess().getAlternatives()); }
		(rule__Result__Alternatives)
		{ after(grammarAccess.getResultAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParameters
entryRuleParameters
:
{ before(grammarAccess.getParametersRule()); }
	 ruleParameters
{ after(grammarAccess.getParametersRule()); } 
	 EOF 
;

// Rule Parameters
ruleParameters 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParametersAccess().getGroup()); }
		(rule__Parameters__Group__0)
		{ after(grammarAccess.getParametersAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParameterList
entryRuleParameterList
:
{ before(grammarAccess.getParameterListRule()); }
	 ruleParameterList
{ after(grammarAccess.getParameterListRule()); } 
	 EOF 
;

// Rule ParameterList
ruleParameterList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParameterListAccess().getGroup()); }
		(rule__ParameterList__Group__0)
		{ after(grammarAccess.getParameterListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParameterDecl
entryRuleParameterDecl
:
{ before(grammarAccess.getParameterDeclRule()); }
	 ruleParameterDecl
{ after(grammarAccess.getParameterDeclRule()); } 
	 EOF 
;

// Rule ParameterDecl
ruleParameterDecl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParameterDeclAccess().getGroup()); }
		(rule__ParameterDecl__Group__0)
		{ after(grammarAccess.getParameterDeclAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInterfaceType
entryRuleInterfaceType
:
{ before(grammarAccess.getInterfaceTypeRule()); }
	 ruleInterfaceType
{ after(grammarAccess.getInterfaceTypeRule()); } 
	 EOF 
;

// Rule InterfaceType
ruleInterfaceType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInterfaceTypeAccess().getGroup()); }
		(rule__InterfaceType__Group__0)
		{ after(grammarAccess.getInterfaceTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMethodSpec
entryRuleMethodSpec
:
{ before(grammarAccess.getMethodSpecRule()); }
	 ruleMethodSpec
{ after(grammarAccess.getMethodSpecRule()); } 
	 EOF 
;

// Rule MethodSpec
ruleMethodSpec 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMethodSpecAccess().getAlternatives()); }
		(rule__MethodSpec__Alternatives)
		{ after(grammarAccess.getMethodSpecAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMethodName
entryRuleMethodName
:
{ before(grammarAccess.getMethodNameRule()); }
	 ruleMethodName
{ after(grammarAccess.getMethodNameRule()); } 
	 EOF 
;

// Rule MethodName
ruleMethodName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMethodNameAccess().getIdentifierParserRuleCall()); }
		ruleidentifier
		{ after(grammarAccess.getMethodNameAccess().getIdentifierParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInterfaceTypeName
entryRuleInterfaceTypeName
:
{ before(grammarAccess.getInterfaceTypeNameRule()); }
	 ruleInterfaceTypeName
{ after(grammarAccess.getInterfaceTypeNameRule()); } 
	 EOF 
;

// Rule InterfaceTypeName
ruleInterfaceTypeName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInterfaceTypeNameAccess().getTypeNameParserRuleCall()); }
		ruleTypeName
		{ after(grammarAccess.getInterfaceTypeNameAccess().getTypeNameParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMapType
entryRuleMapType
:
{ before(grammarAccess.getMapTypeRule()); }
	 ruleMapType
{ after(grammarAccess.getMapTypeRule()); } 
	 EOF 
;

// Rule MapType
ruleMapType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMapTypeAccess().getGroup()); }
		(rule__MapType__Group__0)
		{ after(grammarAccess.getMapTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleKeyType
entryRuleKeyType
:
{ before(grammarAccess.getKeyTypeRule()); }
	 ruleKeyType
{ after(grammarAccess.getKeyTypeRule()); } 
	 EOF 
;

// Rule KeyType
ruleKeyType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getKeyTypeAccess().getTypeAssignment()); }
		(rule__KeyType__TypeAssignment)
		{ after(grammarAccess.getKeyTypeAccess().getTypeAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleChannelType
entryRuleChannelType
:
{ before(grammarAccess.getChannelTypeRule()); }
	 ruleChannelType
{ after(grammarAccess.getChannelTypeRule()); } 
	 EOF 
;

// Rule ChannelType
ruleChannelType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getChannelTypeAccess().getGroup()); }
		(rule__ChannelType__Group__0)
		{ after(grammarAccess.getChannelTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBlock
entryRuleBlock
:
{ before(grammarAccess.getBlockRule()); }
	 ruleBlock
{ after(grammarAccess.getBlockRule()); } 
	 EOF 
;

// Rule Block
ruleBlock 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBlockAccess().getGroup()); }
		(rule__Block__Group__0)
		{ after(grammarAccess.getBlockAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStatementList
entryRuleStatementList
:
{ before(grammarAccess.getStatementListRule()); }
	 ruleStatementList
{ after(grammarAccess.getStatementListRule()); } 
	 EOF 
;

// Rule StatementList
ruleStatementList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStatementListAccess().getGroup()); }
		(rule__StatementList__Group__0)?
		{ after(grammarAccess.getStatementListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDeclaration
entryRuleDeclaration
:
{ before(grammarAccess.getDeclarationRule()); }
	 ruleDeclaration
{ after(grammarAccess.getDeclarationRule()); } 
	 EOF 
;

// Rule Declaration
ruleDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDeclarationAccess().getAlternatives()); }
		(rule__Declaration__Alternatives)
		{ after(grammarAccess.getDeclarationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConstDecl
entryRuleConstDecl
:
{ before(grammarAccess.getConstDeclRule()); }
	 ruleConstDecl
{ after(grammarAccess.getConstDeclRule()); } 
	 EOF 
;

// Rule ConstDecl
ruleConstDecl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConstDeclAccess().getGroup()); }
		(rule__ConstDecl__Group__0)
		{ after(grammarAccess.getConstDeclAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConstSpec
entryRuleConstSpec
:
{ before(grammarAccess.getConstSpecRule()); }
	 ruleConstSpec
{ after(grammarAccess.getConstSpecRule()); } 
	 EOF 
;

// Rule ConstSpec
ruleConstSpec 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConstSpecAccess().getGroup()); }
		(rule__ConstSpec__Group__0)
		{ after(grammarAccess.getConstSpecAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIdentifierList
entryRuleIdentifierList
:
{ before(grammarAccess.getIdentifierListRule()); }
	 ruleIdentifierList
{ after(grammarAccess.getIdentifierListRule()); } 
	 EOF 
;

// Rule IdentifierList
ruleIdentifierList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIdentifierListAccess().getGroup()); }
		(rule__IdentifierList__Group__0)
		{ after(grammarAccess.getIdentifierListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpressionList
entryRuleExpressionList
:
{ before(grammarAccess.getExpressionListRule()); }
	 ruleExpressionList
{ after(grammarAccess.getExpressionListRule()); } 
	 EOF 
;

// Rule ExpressionList
ruleExpressionList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionListAccess().getGroup()); }
		(rule__ExpressionList__Group__0)
		{ after(grammarAccess.getExpressionListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypeDecl
entryRuleTypeDecl
:
{ before(grammarAccess.getTypeDeclRule()); }
	 ruleTypeDecl
{ after(grammarAccess.getTypeDeclRule()); } 
	 EOF 
;

// Rule TypeDecl
ruleTypeDecl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeDeclAccess().getGroup()); }
		(rule__TypeDecl__Group__0)
		{ after(grammarAccess.getTypeDeclAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypeSpec
entryRuleTypeSpec
:
{ before(grammarAccess.getTypeSpecRule()); }
	 ruleTypeSpec
{ after(grammarAccess.getTypeSpecRule()); } 
	 EOF 
;

// Rule TypeSpec
ruleTypeSpec 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeSpecAccess().getAlternatives()); }
		(rule__TypeSpec__Alternatives)
		{ after(grammarAccess.getTypeSpecAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAliasDecl
entryRuleAliasDecl
:
{ before(grammarAccess.getAliasDeclRule()); }
	 ruleAliasDecl
{ after(grammarAccess.getAliasDeclRule()); } 
	 EOF 
;

// Rule AliasDecl
ruleAliasDecl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAliasDeclAccess().getGroup()); }
		(rule__AliasDecl__Group__0)
		{ after(grammarAccess.getAliasDeclAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypeDef
entryRuleTypeDef
:
{ before(grammarAccess.getTypeDefRule()); }
	 ruleTypeDef
{ after(grammarAccess.getTypeDefRule()); } 
	 EOF 
;

// Rule TypeDef
ruleTypeDef 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeDefAccess().getGroup()); }
		(rule__TypeDef__Group__0)
		{ after(grammarAccess.getTypeDefAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVarDecl
entryRuleVarDecl
:
{ before(grammarAccess.getVarDeclRule()); }
	 ruleVarDecl
{ after(grammarAccess.getVarDeclRule()); } 
	 EOF 
;

// Rule VarDecl
ruleVarDecl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVarDeclAccess().getGroup()); }
		(rule__VarDecl__Group__0)
		{ after(grammarAccess.getVarDeclAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVarSpec
entryRuleVarSpec
:
{ before(grammarAccess.getVarSpecRule()); }
	 ruleVarSpec
{ after(grammarAccess.getVarSpecRule()); } 
	 EOF 
;

// Rule VarSpec
ruleVarSpec 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVarSpecAccess().getGroup()); }
		(rule__VarSpec__Group__0)
		{ after(grammarAccess.getVarSpecAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunctionDecl
entryRuleFunctionDecl
:
{ before(grammarAccess.getFunctionDeclRule()); }
	 ruleFunctionDecl
{ after(grammarAccess.getFunctionDeclRule()); } 
	 EOF 
;

// Rule FunctionDecl
ruleFunctionDecl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionDeclAccess().getGroup()); }
		(rule__FunctionDecl__Group__0)
		{ after(grammarAccess.getFunctionDeclAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunctionName
entryRuleFunctionName
:
{ before(grammarAccess.getFunctionNameRule()); }
	 ruleFunctionName
{ after(grammarAccess.getFunctionNameRule()); } 
	 EOF 
;

// Rule FunctionName
ruleFunctionName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionNameAccess().getIdentifierParserRuleCall()); }
		ruleidentifier
		{ after(grammarAccess.getFunctionNameAccess().getIdentifierParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunctionBody
entryRuleFunctionBody
:
{ before(grammarAccess.getFunctionBodyRule()); }
	 ruleFunctionBody
{ after(grammarAccess.getFunctionBodyRule()); } 
	 EOF 
;

// Rule FunctionBody
ruleFunctionBody 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionBodyAccess().getBlockParserRuleCall()); }
		ruleBlock
		{ after(grammarAccess.getFunctionBodyAccess().getBlockParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMethodDecl
entryRuleMethodDecl
:
{ before(grammarAccess.getMethodDeclRule()); }
	 ruleMethodDecl
{ after(grammarAccess.getMethodDeclRule()); } 
	 EOF 
;

// Rule MethodDecl
ruleMethodDecl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMethodDeclAccess().getGroup()); }
		(rule__MethodDecl__Group__0)
		{ after(grammarAccess.getMethodDeclAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleReceiver
entryRuleReceiver
:
{ before(grammarAccess.getReceiverRule()); }
	 ruleReceiver
{ after(grammarAccess.getReceiverRule()); } 
	 EOF 
;

// Rule Receiver
ruleReceiver 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getReceiverAccess().getParametersParserRuleCall()); }
		ruleParameters
		{ after(grammarAccess.getReceiverAccess().getParametersParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOperand
entryRuleOperand
:
{ before(grammarAccess.getOperandRule()); }
	 ruleOperand
{ after(grammarAccess.getOperandRule()); } 
	 EOF 
;

// Rule Operand
ruleOperand 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOperandAccess().getAlternatives()); }
		(rule__Operand__Alternatives)
		{ after(grammarAccess.getOperandAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLiteral
entryRuleLiteral
:
{ before(grammarAccess.getLiteralRule()); }
	 ruleLiteral
{ after(grammarAccess.getLiteralRule()); } 
	 EOF 
;

// Rule Literal
ruleLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLiteralAccess().getAlternatives()); }
		(rule__Literal__Alternatives)
		{ after(grammarAccess.getLiteralAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBasicLit
entryRuleBasicLit
:
{ before(grammarAccess.getBasicLitRule()); }
	 ruleBasicLit
{ after(grammarAccess.getBasicLitRule()); } 
	 EOF 
;

// Rule BasicLit
ruleBasicLit 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBasicLitAccess().getAlternatives()); }
		(rule__BasicLit__Alternatives)
		{ after(grammarAccess.getBasicLitAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOperandName
entryRuleOperandName
:
{ before(grammarAccess.getOperandNameRule()); }
	 ruleOperandName
{ after(grammarAccess.getOperandNameRule()); } 
	 EOF 
;

// Rule OperandName
ruleOperandName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOperandNameAccess().getAlternatives()); }
		(rule__OperandName__Alternatives)
		{ after(grammarAccess.getOperandNameAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQualifiedIdent
entryRuleQualifiedIdent
:
{ before(grammarAccess.getQualifiedIdentRule()); }
	 ruleQualifiedIdent
{ after(grammarAccess.getQualifiedIdentRule()); } 
	 EOF 
;

// Rule QualifiedIdent
ruleQualifiedIdent 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQualifiedIdentAccess().getGroup()); }
		(rule__QualifiedIdent__Group__0)
		{ after(grammarAccess.getQualifiedIdentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCompositeLit
entryRuleCompositeLit
:
{ before(grammarAccess.getCompositeLitRule()); }
	 ruleCompositeLit
{ after(grammarAccess.getCompositeLitRule()); } 
	 EOF 
;

// Rule CompositeLit
ruleCompositeLit 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCompositeLitAccess().getGroup()); }
		(rule__CompositeLit__Group__0)
		{ after(grammarAccess.getCompositeLitAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLiteralType
entryRuleLiteralType
:
{ before(grammarAccess.getLiteralTypeRule()); }
	 ruleLiteralType
{ after(grammarAccess.getLiteralTypeRule()); } 
	 EOF 
;

// Rule LiteralType
ruleLiteralType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLiteralTypeAccess().getAlternatives()); }
		(rule__LiteralType__Alternatives)
		{ after(grammarAccess.getLiteralTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLiteralValue
entryRuleLiteralValue
:
{ before(grammarAccess.getLiteralValueRule()); }
	 ruleLiteralValue
{ after(grammarAccess.getLiteralValueRule()); } 
	 EOF 
;

// Rule LiteralValue
ruleLiteralValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLiteralValueAccess().getGroup()); }
		(rule__LiteralValue__Group__0)
		{ after(grammarAccess.getLiteralValueAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleElementList
entryRuleElementList
:
{ before(grammarAccess.getElementListRule()); }
	 ruleElementList
{ after(grammarAccess.getElementListRule()); } 
	 EOF 
;

// Rule ElementList
ruleElementList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getElementListAccess().getGroup()); }
		(rule__ElementList__Group__0)
		{ after(grammarAccess.getElementListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleElement
entryRuleElement
:
{ before(grammarAccess.getElementRule()); }
	 ruleElement
{ after(grammarAccess.getElementRule()); } 
	 EOF 
;

// Rule Element
ruleElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getElementAccess().getAlternatives()); }
		(rule__Element__Alternatives)
		{ after(grammarAccess.getElementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleKeyedElement
entryRuleKeyedElement
:
{ before(grammarAccess.getKeyedElementRule()); }
	 ruleKeyedElement
{ after(grammarAccess.getKeyedElementRule()); } 
	 EOF 
;

// Rule KeyedElement
ruleKeyedElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getKeyedElementAccess().getGroup()); }
		(rule__KeyedElement__Group__0)
		{ after(grammarAccess.getKeyedElementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleKey
entryRuleKey
:
{ before(grammarAccess.getKeyRule()); }
	 ruleKey
{ after(grammarAccess.getKeyRule()); } 
	 EOF 
;

// Rule Key
ruleKey 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getKeyAccess().getAlternatives()); }
		(rule__Key__Alternatives)
		{ after(grammarAccess.getKeyAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFieldName
entryRuleFieldName
:
{ before(grammarAccess.getFieldNameRule()); }
	 ruleFieldName
{ after(grammarAccess.getFieldNameRule()); } 
	 EOF 
;

// Rule FieldName
ruleFieldName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFieldNameAccess().getIdentifierParserRuleCall()); }
		ruleidentifier
		{ after(grammarAccess.getFieldNameAccess().getIdentifierParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunctionLit
entryRuleFunctionLit
:
{ before(grammarAccess.getFunctionLitRule()); }
	 ruleFunctionLit
{ after(grammarAccess.getFunctionLitRule()); } 
	 EOF 
;

// Rule FunctionLit
ruleFunctionLit 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionLitAccess().getGroup()); }
		(rule__FunctionLit__Group__0)
		{ after(grammarAccess.getFunctionLitAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrimaryExpr
entryRulePrimaryExpr
:
{ before(grammarAccess.getPrimaryExprRule()); }
	 rulePrimaryExpr
{ after(grammarAccess.getPrimaryExprRule()); } 
	 EOF 
;

// Rule PrimaryExpr
rulePrimaryExpr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimaryExprAccess().getAlternatives()); }
		(rule__PrimaryExpr__Alternatives)
		{ after(grammarAccess.getPrimaryExprAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrimaryExprLinha
entryRulePrimaryExprLinha
:
{ before(grammarAccess.getPrimaryExprLinhaRule()); }
	 rulePrimaryExprLinha
{ after(grammarAccess.getPrimaryExprLinhaRule()); } 
	 EOF 
;

// Rule PrimaryExprLinha
rulePrimaryExprLinha 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimaryExprLinhaAccess().getFaKeyword()); }
		'fa'
		{ after(grammarAccess.getPrimaryExprLinhaAccess().getFaKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMethodExpr
entryRuleMethodExpr
:
{ before(grammarAccess.getMethodExprRule()); }
	 ruleMethodExpr
{ after(grammarAccess.getMethodExprRule()); } 
	 EOF 
;

// Rule MethodExpr
ruleMethodExpr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMethodExprAccess().getGroup()); }
		(rule__MethodExpr__Group__0)
		{ after(grammarAccess.getMethodExprAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleReceiverType
entryRuleReceiverType
:
{ before(grammarAccess.getReceiverTypeRule()); }
	 ruleReceiverType
{ after(grammarAccess.getReceiverTypeRule()); } 
	 EOF 
;

// Rule ReceiverType
ruleReceiverType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getReceiverTypeAccess().getTypeParserRuleCall()); }
		ruleType
		{ after(grammarAccess.getReceiverTypeAccess().getTypeParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpression
entryRuleExpression
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionAccess().getGroup()); }
		(rule__Expression__Group__0)
		{ after(grammarAccess.getExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpressionLinha
entryRuleExpressionLinha
:
{ before(grammarAccess.getExpressionLinhaRule()); }
	 ruleExpressionLinha
{ after(grammarAccess.getExpressionLinhaRule()); } 
	 EOF 
;

// Rule ExpressionLinha
ruleExpressionLinha 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionLinhaAccess().getGroup()); }
		(rule__ExpressionLinha__Group__0)?
		{ after(grammarAccess.getExpressionLinhaAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnaryExpr
entryRuleUnaryExpr
:
{ before(grammarAccess.getUnaryExprRule()); }
	 ruleUnaryExpr
{ after(grammarAccess.getUnaryExprRule()); } 
	 EOF 
;

// Rule UnaryExpr
ruleUnaryExpr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnaryExprAccess().getAlternatives()); }
		(rule__UnaryExpr__Alternatives)
		{ after(grammarAccess.getUnaryExprAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulebinary_op
entryRulebinary_op
:
{ before(grammarAccess.getBinary_opRule()); }
	 rulebinary_op
{ after(grammarAccess.getBinary_opRule()); } 
	 EOF 
;

// Rule binary_op
rulebinary_op 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBinary_opAccess().getAlternatives()); }
		(rule__Binary_op__Alternatives)
		{ after(grammarAccess.getBinary_opAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulerel_op
entryRulerel_op
:
{ before(grammarAccess.getRel_opRule()); }
	 rulerel_op
{ after(grammarAccess.getRel_opRule()); } 
	 EOF 
;

// Rule rel_op
rulerel_op 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRel_opAccess().getAlternatives()); }
		(rule__Rel_op__Alternatives)
		{ after(grammarAccess.getRel_opAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleadd_op
entryRuleadd_op
:
{ before(grammarAccess.getAdd_opRule()); }
	 ruleadd_op
{ after(grammarAccess.getAdd_opRule()); } 
	 EOF 
;

// Rule add_op
ruleadd_op 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAdd_opAccess().getAlternatives()); }
		(rule__Add_op__Alternatives)
		{ after(grammarAccess.getAdd_opAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulemul_op
entryRulemul_op
:
{ before(grammarAccess.getMul_opRule()); }
	 rulemul_op
{ after(grammarAccess.getMul_opRule()); } 
	 EOF 
;

// Rule mul_op
rulemul_op 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMul_opAccess().getAlternatives()); }
		(rule__Mul_op__Alternatives)
		{ after(grammarAccess.getMul_opAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleunary_op
entryRuleunary_op
:
{ before(grammarAccess.getUnary_opRule()); }
	 ruleunary_op
{ after(grammarAccess.getUnary_opRule()); } 
	 EOF 
;

// Rule unary_op
ruleunary_op 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnary_opAccess().getAlternatives()); }
		(rule__Unary_op__Alternatives)
		{ after(grammarAccess.getUnary_opAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConversion
entryRuleConversion
:
{ before(grammarAccess.getConversionRule()); }
	 ruleConversion
{ after(grammarAccess.getConversionRule()); } 
	 EOF 
;

// Rule Conversion
ruleConversion 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConversionAccess().getGroup()); }
		(rule__Conversion__Group__0)
		{ after(grammarAccess.getConversionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStatement
entryRuleStatement
:
{ before(grammarAccess.getStatementRule()); }
	 ruleStatement
{ after(grammarAccess.getStatementRule()); } 
	 EOF 
;

// Rule Statement
ruleStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStatementAccess().getOlaKeyword()); }
		'ola'
		{ after(grammarAccess.getStatementAccess().getOlaKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePackageName
entryRulePackageName
:
{ before(grammarAccess.getPackageNameRule()); }
	 rulePackageName
{ after(grammarAccess.getPackageNameRule()); } 
	 EOF 
;

// Rule PackageName
rulePackageName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPackageNameAccess().getCaraiKeyword()); }
		'carai'
		{ after(grammarAccess.getPackageNameAccess().getCaraiKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleidentifier
entryRuleidentifier
:
{ before(grammarAccess.getIdentifierRule()); }
	 ruleidentifier
{ after(grammarAccess.getIdentifierRule()); } 
	 EOF 
;

// Rule identifier
ruleidentifier 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIdentifierAccess().getGroup()); }
		(rule__Identifier__Group__0)
		{ after(grammarAccess.getIdentifierAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleint_lit
entryRuleint_lit
:
{ before(grammarAccess.getInt_litRule()); }
	 ruleint_lit
{ after(grammarAccess.getInt_litRule()); } 
	 EOF 
;

// Rule int_lit
ruleint_lit 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInt_litAccess().getAlternatives()); }
		(rule__Int_lit__Alternatives)
		{ after(grammarAccess.getInt_litAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuledecimal_lit
entryRuledecimal_lit
:
{ before(grammarAccess.getDecimal_litRule()); }
	 ruledecimal_lit
{ after(grammarAccess.getDecimal_litRule()); } 
	 EOF 
;

// Rule decimal_lit
ruledecimal_lit 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDecimal_litAccess().getGroup()); }
		(rule__Decimal_lit__Group__0)
		{ after(grammarAccess.getDecimal_litAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleoctal_lit
entryRuleoctal_lit
:
{ before(grammarAccess.getOctal_litRule()); }
	 ruleoctal_lit
{ after(grammarAccess.getOctal_litRule()); } 
	 EOF 
;

// Rule octal_lit
ruleoctal_lit 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOctal_litAccess().getGroup()); }
		(rule__Octal_lit__Group__0)
		{ after(grammarAccess.getOctal_litAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulehex_lit
entryRulehex_lit
:
{ before(grammarAccess.getHex_litRule()); }
	 rulehex_lit
{ after(grammarAccess.getHex_litRule()); } 
	 EOF 
;

// Rule hex_lit
rulehex_lit 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getHex_litAccess().getGroup()); }
		(rule__Hex_lit__Group__0)
		{ after(grammarAccess.getHex_litAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulefloat_lit
entryRulefloat_lit
:
{ before(grammarAccess.getFloat_litRule()); }
	 rulefloat_lit
{ after(grammarAccess.getFloat_litRule()); } 
	 EOF 
;

// Rule float_lit
rulefloat_lit 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFloat_litAccess().getAlternatives()); }
		(rule__Float_lit__Alternatives)
		{ after(grammarAccess.getFloat_litAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulestring_lit
entryRulestring_lit
:
{ before(grammarAccess.getString_litRule()); }
	 rulestring_lit
{ after(grammarAccess.getString_litRule()); } 
	 EOF 
;

// Rule string_lit
rulestring_lit 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getString_litAccess().getAlternatives()); }
		(rule__String_lit__Alternatives)
		{ after(grammarAccess.getString_litAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleraw_string_lit
entryRuleraw_string_lit
:
{ before(grammarAccess.getRaw_string_litRule()); }
	 ruleraw_string_lit
{ after(grammarAccess.getRaw_string_litRule()); } 
	 EOF 
;

// Rule raw_string_lit
ruleraw_string_lit 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRaw_string_litAccess().getGroup()); }
		(rule__Raw_string_lit__Group__0)
		{ after(grammarAccess.getRaw_string_litAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleinterpreted_string_lit
entryRuleinterpreted_string_lit
:
{ before(grammarAccess.getInterpreted_string_litRule()); }
	 ruleinterpreted_string_lit
{ after(grammarAccess.getInterpreted_string_litRule()); } 
	 EOF 
;

// Rule interpreted_string_lit
ruleinterpreted_string_lit 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInterpreted_string_litAccess().getGroup()); }
		(rule__Interpreted_string_lit__Group__0)
		{ after(grammarAccess.getInterpreted_string_litAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleunicode_char
entryRuleunicode_char
:
{ before(grammarAccess.getUnicode_charRule()); }
	 ruleunicode_char
{ after(grammarAccess.getUnicode_charRule()); } 
	 EOF 
;

// Rule unicode_char
ruleunicode_char 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnicode_charAccess().getAlternatives()); }
		(rule__Unicode_char__Alternatives)
		{ after(grammarAccess.getUnicode_charAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulenewline
entryRulenewline
:
{ before(grammarAccess.getNewlineRule()); }
	 rulenewline
{ after(grammarAccess.getNewlineRule()); } 
	 EOF 
;

// Rule newline
rulenewline 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNewlineAccess().getU000AKeyword()); }
		'U+000A'
		{ after(grammarAccess.getNewlineAccess().getU000AKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuledecimals
entryRuledecimals
:
{ before(grammarAccess.getDecimalsRule()); }
	 ruledecimals
{ after(grammarAccess.getDecimalsRule()); } 
	 EOF 
;

// Rule decimals
ruledecimals 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDecimalsAccess().getGroup()); }
		(rule__Decimals__Group__0)
		{ after(grammarAccess.getDecimalsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleexponent
entryRuleexponent
:
{ before(grammarAccess.getExponentRule()); }
	 ruleexponent
{ after(grammarAccess.getExponentRule()); } 
	 EOF 
;

// Rule exponent
ruleexponent 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExponentAccess().getGroup()); }
		(rule__Exponent__Group__0)
		{ after(grammarAccess.getExponentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulerune_lit
entryRulerune_lit
:
{ before(grammarAccess.getRune_litRule()); }
	 rulerune_lit
{ after(grammarAccess.getRune_litRule()); } 
	 EOF 
;

// Rule rune_lit
rulerune_lit 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRune_litAccess().getGroup()); }
		(rule__Rune_lit__Group__0)
		{ after(grammarAccess.getRune_litAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleunicode_value
entryRuleunicode_value
:
{ before(grammarAccess.getUnicode_valueRule()); }
	 ruleunicode_value
{ after(grammarAccess.getUnicode_valueRule()); } 
	 EOF 
;

// Rule unicode_value
ruleunicode_value 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnicode_valueAccess().getAlternatives()); }
		(rule__Unicode_value__Alternatives)
		{ after(grammarAccess.getUnicode_valueAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulebyte_value
entryRulebyte_value
:
{ before(grammarAccess.getByte_valueRule()); }
	 rulebyte_value
{ after(grammarAccess.getByte_valueRule()); } 
	 EOF 
;

// Rule byte_value
rulebyte_value 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getByte_valueAccess().getAlternatives()); }
		(rule__Byte_value__Alternatives)
		{ after(grammarAccess.getByte_valueAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleoctal_byte_value
entryRuleoctal_byte_value
:
{ before(grammarAccess.getOctal_byte_valueRule()); }
	 ruleoctal_byte_value
{ after(grammarAccess.getOctal_byte_valueRule()); } 
	 EOF 
;

// Rule octal_byte_value
ruleoctal_byte_value 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOctal_byte_valueAccess().getGroup()); }
		(rule__Octal_byte_value__Group__0)
		{ after(grammarAccess.getOctal_byte_valueAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulehex_byte_value
entryRulehex_byte_value
:
{ before(grammarAccess.getHex_byte_valueRule()); }
	 rulehex_byte_value
{ after(grammarAccess.getHex_byte_valueRule()); } 
	 EOF 
;

// Rule hex_byte_value
rulehex_byte_value 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getHex_byte_valueAccess().getGroup()); }
		(rule__Hex_byte_value__Group__0)
		{ after(grammarAccess.getHex_byte_valueAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulelittle_u_value
entryRulelittle_u_value
:
{ before(grammarAccess.getLittle_u_valueRule()); }
	 rulelittle_u_value
{ after(grammarAccess.getLittle_u_valueRule()); } 
	 EOF 
;

// Rule little_u_value
rulelittle_u_value 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLittle_u_valueAccess().getGroup()); }
		(rule__Little_u_value__Group__0)
		{ after(grammarAccess.getLittle_u_valueAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulebig_u_value
entryRulebig_u_value
:
{ before(grammarAccess.getBig_u_valueRule()); }
	 rulebig_u_value
{ after(grammarAccess.getBig_u_valueRule()); } 
	 EOF 
;

// Rule big_u_value
rulebig_u_value 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBig_u_valueAccess().getGroup()); }
		(rule__Big_u_value__Group__0)
		{ after(grammarAccess.getBig_u_valueAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleescaped_char
entryRuleescaped_char
:
{ before(grammarAccess.getEscaped_charRule()); }
	 ruleescaped_char
{ after(grammarAccess.getEscaped_charRule()); } 
	 EOF 
;

// Rule escaped_char
ruleescaped_char 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEscaped_charAccess().getGroup()); }
		(rule__Escaped_char__Group__0)
		{ after(grammarAccess.getEscaped_charAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCHAR
entryRuleCHAR
:
{ before(grammarAccess.getCHARRule()); }
	 ruleCHAR
{ after(grammarAccess.getCHARRule()); } 
	 EOF 
;

// Rule CHAR
ruleCHAR 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCHARAccess().getApostropheKeyword()); }
		'\''
		{ after(grammarAccess.getCHARAccess().getApostropheKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getTypeNameParserRuleCall_0()); }
		ruleTypeName
		{ after(grammarAccess.getTypeAccess().getTypeNameParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getTypeLitAssignment_1()); }
		(rule__Type__TypeLitAssignment_1)
		{ after(grammarAccess.getTypeAccess().getTypeLitAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getGroup_2()); }
		(rule__Type__Group_2__0)
		{ after(grammarAccess.getTypeAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeName__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeNameAccess().getIdentifierParserRuleCall_0()); }
		ruleidentifier
		{ after(grammarAccess.getTypeNameAccess().getIdentifierParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeNameAccess().getQualifiedIdentParserRuleCall_1()); }
		ruleQualifiedIdent
		{ after(grammarAccess.getTypeNameAccess().getQualifiedIdentParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeLit__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeLitAccess().getArrayTypeParserRuleCall_0()); }
		ruleArrayType
		{ after(grammarAccess.getTypeLitAccess().getArrayTypeParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeLitAccess().getStructTypeParserRuleCall_1()); }
		ruleStructType
		{ after(grammarAccess.getTypeLitAccess().getStructTypeParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getTypeLitAccess().getPointerTypeParserRuleCall_2()); }
		rulePointerType
		{ after(grammarAccess.getTypeLitAccess().getPointerTypeParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getTypeLitAccess().getFunctionTypeParserRuleCall_3()); }
		ruleFunctionType
		{ after(grammarAccess.getTypeLitAccess().getFunctionTypeParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getTypeLitAccess().getInterfaceTypeParserRuleCall_4()); }
		ruleInterfaceType
		{ after(grammarAccess.getTypeLitAccess().getInterfaceTypeParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getTypeLitAccess().getSliceTypeParserRuleCall_5()); }
		ruleSliceType
		{ after(grammarAccess.getTypeLitAccess().getSliceTypeParserRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getTypeLitAccess().getMapTypeParserRuleCall_6()); }
		ruleMapType
		{ after(grammarAccess.getTypeLitAccess().getMapTypeParserRuleCall_6()); }
	)
	|
	(
		{ before(grammarAccess.getTypeLitAccess().getChannelTypeParserRuleCall_7()); }
		ruleChannelType
		{ after(grammarAccess.getTypeLitAccess().getChannelTypeParserRuleCall_7()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldDecl__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldDeclAccess().getGroup_0_0()); }
		(rule__FieldDecl__Group_0_0__0)
		{ after(grammarAccess.getFieldDeclAccess().getGroup_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getFieldDeclAccess().getEmbeddedFieldParserRuleCall_0_1()); }
		ruleEmbeddedField
		{ after(grammarAccess.getFieldDeclAccess().getEmbeddedFieldParserRuleCall_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Result__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getResultAccess().getParametersParserRuleCall_0()); }
		ruleParameters
		{ after(grammarAccess.getResultAccess().getParametersParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getResultAccess().getTypeParserRuleCall_1()); }
		ruleType
		{ after(grammarAccess.getResultAccess().getTypeParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodSpec__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodSpecAccess().getGroup_0()); }
		(rule__MethodSpec__Group_0__0)
		{ after(grammarAccess.getMethodSpecAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getMethodSpecAccess().getInterfaceTypeNameParserRuleCall_1()); }
		ruleInterfaceTypeName
		{ after(grammarAccess.getMethodSpecAccess().getInterfaceTypeNameParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelType__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChannelTypeAccess().getChanKeyword_0_0()); }
		'chan'
		{ after(grammarAccess.getChannelTypeAccess().getChanKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getChannelTypeAccess().getGroup_0_1()); }
		(rule__ChannelType__Group_0_1__0)
		{ after(grammarAccess.getChannelTypeAccess().getGroup_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getChannelTypeAccess().getGroup_0_2()); }
		(rule__ChannelType__Group_0_2__0)
		{ after(grammarAccess.getChannelTypeAccess().getGroup_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclarationAccess().getConstDeclParserRuleCall_0()); }
		ruleConstDecl
		{ after(grammarAccess.getDeclarationAccess().getConstDeclParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getDeclarationAccess().getTypeDeclParserRuleCall_1()); }
		ruleTypeDecl
		{ after(grammarAccess.getDeclarationAccess().getTypeDeclParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getDeclarationAccess().getVarDeclParserRuleCall_2()); }
		ruleVarDecl
		{ after(grammarAccess.getDeclarationAccess().getVarDeclParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstDecl__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstDeclAccess().getConstSpecParserRuleCall_1_0()); }
		ruleConstSpec
		{ after(grammarAccess.getConstDeclAccess().getConstSpecParserRuleCall_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getConstDeclAccess().getGroup_1_1()); }
		(rule__ConstDecl__Group_1_1__0)
		{ after(grammarAccess.getConstDeclAccess().getGroup_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDecl__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeDeclAccess().getTypeSpecParserRuleCall_1_0()); }
		ruleTypeSpec
		{ after(grammarAccess.getTypeDeclAccess().getTypeSpecParserRuleCall_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeDeclAccess().getGroup_1_1()); }
		(rule__TypeDecl__Group_1_1__0)
		{ after(grammarAccess.getTypeDeclAccess().getGroup_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSpec__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeSpecAccess().getAliasDeclParserRuleCall_0()); }
		ruleAliasDecl
		{ after(grammarAccess.getTypeSpecAccess().getAliasDeclParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeSpecAccess().getTypeDefParserRuleCall_1()); }
		ruleTypeDef
		{ after(grammarAccess.getTypeSpecAccess().getTypeDefParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarDeclAccess().getVarSpecParserRuleCall_1_0()); }
		ruleVarSpec
		{ after(grammarAccess.getVarDeclAccess().getVarSpecParserRuleCall_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getVarDeclAccess().getGroup_1_1()); }
		(rule__VarDecl__Group_1_1__0)
		{ after(grammarAccess.getVarDeclAccess().getGroup_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarSpec__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarSpecAccess().getGroup_1_0()); }
		(rule__VarSpec__Group_1_0__0)
		{ after(grammarAccess.getVarSpecAccess().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getVarSpecAccess().getGroup_1_1()); }
		(rule__VarSpec__Group_1_1__0)
		{ after(grammarAccess.getVarSpecAccess().getGroup_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operand__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperandAccess().getLiteralParserRuleCall_0()); }
		ruleLiteral
		{ after(grammarAccess.getOperandAccess().getLiteralParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getOperandAccess().getOperandNameParserRuleCall_1()); }
		ruleOperandName
		{ after(grammarAccess.getOperandAccess().getOperandNameParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getOperandAccess().getGroup_2()); }
		(rule__Operand__Group_2__0)
		{ after(grammarAccess.getOperandAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralAccess().getBasicLitParserRuleCall_0()); }
		ruleBasicLit
		{ after(grammarAccess.getLiteralAccess().getBasicLitParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getCompositeLitParserRuleCall_1()); }
		ruleCompositeLit
		{ after(grammarAccess.getLiteralAccess().getCompositeLitParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getFunctionLitParserRuleCall_2()); }
		ruleFunctionLit
		{ after(grammarAccess.getLiteralAccess().getFunctionLitParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicLit__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBasicLitAccess().getInt_litParserRuleCall_0()); }
		ruleint_lit
		{ after(grammarAccess.getBasicLitAccess().getInt_litParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getBasicLitAccess().getFloat_litParserRuleCall_1()); }
		rulefloat_lit
		{ after(grammarAccess.getBasicLitAccess().getFloat_litParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getBasicLitAccess().getRune_litParserRuleCall_2()); }
		rulerune_lit
		{ after(grammarAccess.getBasicLitAccess().getRune_litParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getBasicLitAccess().getString_litParserRuleCall_3()); }
		rulestring_lit
		{ after(grammarAccess.getBasicLitAccess().getString_litParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperandName__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperandNameAccess().getIdentifierParserRuleCall_0()); }
		ruleidentifier
		{ after(grammarAccess.getOperandNameAccess().getIdentifierParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getOperandNameAccess().getQualifiedIdentParserRuleCall_1()); }
		ruleQualifiedIdent
		{ after(grammarAccess.getOperandNameAccess().getQualifiedIdentParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralTypeAccess().getStructTypeParserRuleCall_0()); }
		ruleStructType
		{ after(grammarAccess.getLiteralTypeAccess().getStructTypeParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralTypeAccess().getArrayTypeAssignment_1()); }
		(rule__LiteralType__ArrayTypeAssignment_1)
		{ after(grammarAccess.getLiteralTypeAccess().getArrayTypeAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralTypeAccess().getGroup_2()); }
		(rule__LiteralType__Group_2__0)
		{ after(grammarAccess.getLiteralTypeAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralTypeAccess().getSliceTypeParserRuleCall_3()); }
		ruleSliceType
		{ after(grammarAccess.getLiteralTypeAccess().getSliceTypeParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralTypeAccess().getMapTypeParserRuleCall_4()); }
		ruleMapType
		{ after(grammarAccess.getLiteralTypeAccess().getMapTypeParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralTypeAccess().getTypeNameParserRuleCall_5()); }
		ruleTypeName
		{ after(grammarAccess.getLiteralTypeAccess().getTypeNameParserRuleCall_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementAccess().getExpressionParserRuleCall_0()); }
		ruleExpression
		{ after(grammarAccess.getElementAccess().getExpressionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getElementAccess().getLiteralValueParserRuleCall_1()); }
		ruleLiteralValue
		{ after(grammarAccess.getElementAccess().getLiteralValueParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Key__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getKeyAccess().getFieldNameParserRuleCall_0()); }
		ruleFieldName
		{ after(grammarAccess.getKeyAccess().getFieldNameParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getKeyAccess().getExpressionParserRuleCall_1()); }
		ruleExpression
		{ after(grammarAccess.getKeyAccess().getExpressionParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getKeyAccess().getLiteralValueParserRuleCall_2()); }
		ruleLiteralValue
		{ after(grammarAccess.getKeyAccess().getLiteralValueParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExprAccess().getGroup_0()); }
		(rule__PrimaryExpr__Group_0__0)
		{ after(grammarAccess.getPrimaryExprAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExprAccess().getGroup_1()); }
		(rule__PrimaryExpr__Group_1__0)
		{ after(grammarAccess.getPrimaryExprAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExprAccess().getGroup_2()); }
		(rule__PrimaryExpr__Group_2__0)
		{ after(grammarAccess.getPrimaryExprAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryExprAccess().getPrimaryExprAssignment_0()); }
		(rule__UnaryExpr__PrimaryExprAssignment_0)
		{ after(grammarAccess.getUnaryExprAccess().getPrimaryExprAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getUnaryExprAccess().getGroup_1()); }
		(rule__UnaryExpr__Group_1__0)
		{ after(grammarAccess.getUnaryExprAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Binary_op__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBinary_opAccess().getVerticalLineVerticalLineKeyword_0()); }
		'||'
		{ after(grammarAccess.getBinary_opAccess().getVerticalLineVerticalLineKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getBinary_opAccess().getAmpersandAmpersandKeyword_1()); }
		'&&'
		{ after(grammarAccess.getBinary_opAccess().getAmpersandAmpersandKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getBinary_opAccess().getRel_opParserRuleCall_2()); }
		rulerel_op
		{ after(grammarAccess.getBinary_opAccess().getRel_opParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getBinary_opAccess().getAdd_opParserRuleCall_3()); }
		ruleadd_op
		{ after(grammarAccess.getBinary_opAccess().getAdd_opParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getBinary_opAccess().getMul_opParserRuleCall_4()); }
		rulemul_op
		{ after(grammarAccess.getBinary_opAccess().getMul_opParserRuleCall_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rel_op__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRel_opAccess().getEqualsSignEqualsSignKeyword_0()); }
		'=='
		{ after(grammarAccess.getRel_opAccess().getEqualsSignEqualsSignKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getRel_opAccess().getExclamationMarkEqualsSignKeyword_1()); }
		'!='
		{ after(grammarAccess.getRel_opAccess().getExclamationMarkEqualsSignKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getRel_opAccess().getLessThanSignKeyword_2()); }
		'<'
		{ after(grammarAccess.getRel_opAccess().getLessThanSignKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getRel_opAccess().getLessThanSignEqualsSignKeyword_3()); }
		'<='
		{ after(grammarAccess.getRel_opAccess().getLessThanSignEqualsSignKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getRel_opAccess().getGreaterThanSignKeyword_4()); }
		'>'
		{ after(grammarAccess.getRel_opAccess().getGreaterThanSignKeyword_4()); }
	)
	|
	(
		{ before(grammarAccess.getRel_opAccess().getGreaterThanSignEqualsSignKeyword_5()); }
		'>='
		{ after(grammarAccess.getRel_opAccess().getGreaterThanSignEqualsSignKeyword_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Add_op__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdd_opAccess().getPlusSignKeyword_0()); }
		'+'
		{ after(grammarAccess.getAdd_opAccess().getPlusSignKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getAdd_opAccess().getHyphenMinusKeyword_1()); }
		'-'
		{ after(grammarAccess.getAdd_opAccess().getHyphenMinusKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getAdd_opAccess().getVerticalLineKeyword_2()); }
		'|'
		{ after(grammarAccess.getAdd_opAccess().getVerticalLineKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getAdd_opAccess().getModifierLetterCircumflexAccentKeyword_3()); }
		'\u02C6'
		{ after(grammarAccess.getAdd_opAccess().getModifierLetterCircumflexAccentKeyword_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mul_op__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMul_opAccess().getAsteriskKeyword_0()); }
		'*'
		{ after(grammarAccess.getMul_opAccess().getAsteriskKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getMul_opAccess().getSolidusKeyword_1()); }
		'/'
		{ after(grammarAccess.getMul_opAccess().getSolidusKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getMul_opAccess().getPercentSignKeyword_2()); }
		'%'
		{ after(grammarAccess.getMul_opAccess().getPercentSignKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getMul_opAccess().getLessThanSignLessThanSignKeyword_3()); }
		'<<'
		{ after(grammarAccess.getMul_opAccess().getLessThanSignLessThanSignKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getMul_opAccess().getGreaterThanSignGreaterThanSignKeyword_4()); }
		'>>'
		{ after(grammarAccess.getMul_opAccess().getGreaterThanSignGreaterThanSignKeyword_4()); }
	)
	|
	(
		{ before(grammarAccess.getMul_opAccess().getAmpersandKeyword_5()); }
		'&'
		{ after(grammarAccess.getMul_opAccess().getAmpersandKeyword_5()); }
	)
	|
	(
		{ before(grammarAccess.getMul_opAccess().getAmpersandCircumflexAccentKeyword_6()); }
		'&^'
		{ after(grammarAccess.getMul_opAccess().getAmpersandCircumflexAccentKeyword_6()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary_op__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnary_opAccess().getPlusSignKeyword_0()); }
		'+'
		{ after(grammarAccess.getUnary_opAccess().getPlusSignKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getUnary_opAccess().getHyphenMinusKeyword_1()); }
		'-'
		{ after(grammarAccess.getUnary_opAccess().getHyphenMinusKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getUnary_opAccess().getExclamationMarkKeyword_2()); }
		'!'
		{ after(grammarAccess.getUnary_opAccess().getExclamationMarkKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getUnary_opAccess().getCircumflexAccentKeyword_3()); }
		'^'
		{ after(grammarAccess.getUnary_opAccess().getCircumflexAccentKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getUnary_opAccess().getAsteriskKeyword_4()); }
		'*'
		{ after(grammarAccess.getUnary_opAccess().getAsteriskKeyword_4()); }
	)
	|
	(
		{ before(grammarAccess.getUnary_opAccess().getAmpersandKeyword_5()); }
		'&'
		{ after(grammarAccess.getUnary_opAccess().getAmpersandKeyword_5()); }
	)
	|
	(
		{ before(grammarAccess.getUnary_opAccess().getLessThanSignHyphenMinusKeyword_6()); }
		'<-'
		{ after(grammarAccess.getUnary_opAccess().getLessThanSignHyphenMinusKeyword_6()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIdentifierAccess().getLETTERTerminalRuleCall_1_0()); }
		RULE_LETTER
		{ after(grammarAccess.getIdentifierAccess().getLETTERTerminalRuleCall_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getIdentifierAccess().getDECIMAL_DIGITTerminalRuleCall_1_1()); }
		RULE_DECIMAL_DIGIT
		{ after(grammarAccess.getIdentifierAccess().getDECIMAL_DIGITTerminalRuleCall_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Int_lit__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInt_litAccess().getDecimal_litParserRuleCall_0()); }
		ruledecimal_lit
		{ after(grammarAccess.getInt_litAccess().getDecimal_litParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getInt_litAccess().getOctal_litParserRuleCall_1()); }
		ruleoctal_lit
		{ after(grammarAccess.getInt_litAccess().getOctal_litParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getInt_litAccess().getHex_litParserRuleCall_2()); }
		rulehex_lit
		{ after(grammarAccess.getInt_litAccess().getHex_litParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Hex_lit__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHex_litAccess().getXKeyword_1_0()); }
		'x'
		{ after(grammarAccess.getHex_litAccess().getXKeyword_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getHex_litAccess().getXKeyword_1_1()); }
		'X'
		{ after(grammarAccess.getHex_litAccess().getXKeyword_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Float_lit__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFloat_litAccess().getGroup_0()); }
		(rule__Float_lit__Group_0__0)
		{ after(grammarAccess.getFloat_litAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getFloat_litAccess().getGroup_1()); }
		(rule__Float_lit__Group_1__0)
		{ after(grammarAccess.getFloat_litAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getFloat_litAccess().getGroup_2()); }
		(rule__Float_lit__Group_2__0)
		{ after(grammarAccess.getFloat_litAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__String_lit__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getString_litAccess().getRaw_string_litParserRuleCall_0()); }
		ruleraw_string_lit
		{ after(grammarAccess.getString_litAccess().getRaw_string_litParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getString_litAccess().getInterpreted_string_litParserRuleCall_1()); }
		ruleinterpreted_string_lit
		{ after(grammarAccess.getString_litAccess().getInterpreted_string_litParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Raw_string_lit__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRaw_string_litAccess().getUnicode_charParserRuleCall_1_0()); }
		ruleunicode_char
		{ after(grammarAccess.getRaw_string_litAccess().getUnicode_charParserRuleCall_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getRaw_string_litAccess().getNewlineParserRuleCall_1_1()); }
		rulenewline
		{ after(grammarAccess.getRaw_string_litAccess().getNewlineParserRuleCall_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interpreted_string_lit__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInterpreted_string_litAccess().getUnicode_valueParserRuleCall_1_0()); }
		ruleunicode_value
		{ after(grammarAccess.getInterpreted_string_litAccess().getUnicode_valueParserRuleCall_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getInterpreted_string_litAccess().getByte_valueParserRuleCall_1_1()); }
		rulebyte_value
		{ after(grammarAccess.getInterpreted_string_litAccess().getByte_valueParserRuleCall_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Unicode_char__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnicode_charAccess().getQuestionMarkKeyword_0()); }
		'?'
		{ after(grammarAccess.getUnicode_charAccess().getQuestionMarkKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getUnicode_charAccess().getFullStopKeyword_1()); }
		'.'
		{ after(grammarAccess.getUnicode_charAccess().getFullStopKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getUnicode_charAccess().getCommaKeyword_2()); }
		','
		{ after(grammarAccess.getUnicode_charAccess().getCommaKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getUnicode_charAccess().getExclamationMarkKeyword_3()); }
		'!'
		{ after(grammarAccess.getUnicode_charAccess().getExclamationMarkKeyword_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exponent__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExponentAccess().getEKeyword_0_0()); }
		'e'
		{ after(grammarAccess.getExponentAccess().getEKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getExponentAccess().getEKeyword_0_1()); }
		'E'
		{ after(grammarAccess.getExponentAccess().getEKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exponent__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExponentAccess().getPlusSignKeyword_1_0()); }
		'+'
		{ after(grammarAccess.getExponentAccess().getPlusSignKeyword_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getExponentAccess().getHyphenMinusKeyword_1_1()); }
		'-'
		{ after(grammarAccess.getExponentAccess().getHyphenMinusKeyword_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rune_lit__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRune_litAccess().getUnicode_valueParserRuleCall_1_0()); }
		ruleunicode_value
		{ after(grammarAccess.getRune_litAccess().getUnicode_valueParserRuleCall_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getRune_litAccess().getByte_valueParserRuleCall_1_1()); }
		rulebyte_value
		{ after(grammarAccess.getRune_litAccess().getByte_valueParserRuleCall_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Unicode_value__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnicode_valueAccess().getLETTERTerminalRuleCall_0()); }
		RULE_LETTER
		{ after(grammarAccess.getUnicode_valueAccess().getLETTERTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getUnicode_valueAccess().getLittle_u_valueParserRuleCall_1()); }
		rulelittle_u_value
		{ after(grammarAccess.getUnicode_valueAccess().getLittle_u_valueParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getUnicode_valueAccess().getBig_u_valueParserRuleCall_2()); }
		rulebig_u_value
		{ after(grammarAccess.getUnicode_valueAccess().getBig_u_valueParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getUnicode_valueAccess().getEscaped_charParserRuleCall_3()); }
		ruleescaped_char
		{ after(grammarAccess.getUnicode_valueAccess().getEscaped_charParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Byte_value__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getByte_valueAccess().getOctal_byte_valueParserRuleCall_0()); }
		ruleoctal_byte_value
		{ after(grammarAccess.getByte_valueAccess().getOctal_byte_valueParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getByte_valueAccess().getHex_byte_valueParserRuleCall_1()); }
		rulehex_byte_value
		{ after(grammarAccess.getByte_valueAccess().getHex_byte_valueParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Escaped_char__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEscaped_charAccess().getAKeyword_1_0()); }
		'a'
		{ after(grammarAccess.getEscaped_charAccess().getAKeyword_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getEscaped_charAccess().getBKeyword_1_1()); }
		'b'
		{ after(grammarAccess.getEscaped_charAccess().getBKeyword_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getEscaped_charAccess().getFKeyword_1_2()); }
		'f'
		{ after(grammarAccess.getEscaped_charAccess().getFKeyword_1_2()); }
	)
	|
	(
		{ before(grammarAccess.getEscaped_charAccess().getNKeyword_1_3()); }
		'n'
		{ after(grammarAccess.getEscaped_charAccess().getNKeyword_1_3()); }
	)
	|
	(
		{ before(grammarAccess.getEscaped_charAccess().getRKeyword_1_4()); }
		'r'
		{ after(grammarAccess.getEscaped_charAccess().getRKeyword_1_4()); }
	)
	|
	(
		{ before(grammarAccess.getEscaped_charAccess().getTKeyword_1_5()); }
		't'
		{ after(grammarAccess.getEscaped_charAccess().getTKeyword_1_5()); }
	)
	|
	(
		{ before(grammarAccess.getEscaped_charAccess().getVKeyword_1_6()); }
		'v'
		{ after(grammarAccess.getEscaped_charAccess().getVKeyword_1_6()); }
	)
	|
	(
		{ before(grammarAccess.getEscaped_charAccess().getCHARParserRuleCall_1_7()); }
		ruleCHAR
		{ after(grammarAccess.getEscaped_charAccess().getCHARParserRuleCall_1_7()); }
	)
	|
	(
		{ before(grammarAccess.getEscaped_charAccess().getApostropheKeyword_1_8()); }
		'\''
		{ after(grammarAccess.getEscaped_charAccess().getApostropheKeyword_1_8()); }
	)
	|
	(
		{ before(grammarAccess.getEscaped_charAccess().getQuotationMarkKeyword_1_9()); }
		'"'
		{ after(grammarAccess.getEscaped_charAccess().getQuotationMarkKeyword_1_9()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Greeting__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Greeting__Group__0__Impl
	rule__Greeting__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Greeting__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGreetingAccess().getHelloKeyword_0()); }
	'Hello'
	{ after(grammarAccess.getGreetingAccess().getHelloKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Greeting__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Greeting__Group__1__Impl
	rule__Greeting__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Greeting__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGreetingAccess().getNameAssignment_1()); }
	(rule__Greeting__NameAssignment_1)
	{ after(grammarAccess.getGreetingAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Greeting__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Greeting__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Greeting__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGreetingAccess().getExclamationMarkKeyword_2()); }
	'!'
	{ after(grammarAccess.getGreetingAccess().getExclamationMarkKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group_2__0__Impl
	rule__Type__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getLeftParenthesisKeyword_2_0()); }
	'('
	{ after(grammarAccess.getTypeAccess().getLeftParenthesisKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group_2__1__Impl
	rule__Type__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getTypeParserRuleCall_2_1()); }
	ruleType
	{ after(grammarAccess.getTypeAccess().getTypeParserRuleCall_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getRightParenthesisKeyword_2_2()); }
	')'
	{ after(grammarAccess.getTypeAccess().getRightParenthesisKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayType__Group__0__Impl
	rule__ArrayType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayTypeAccess().getLeftSquareBracketKeyword_0()); }
	'['
	{ after(grammarAccess.getArrayTypeAccess().getLeftSquareBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayType__Group__1__Impl
	rule__ArrayType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayTypeAccess().getArrayLengthParserRuleCall_1()); }
	ruleArrayLength
	{ after(grammarAccess.getArrayTypeAccess().getArrayLengthParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayType__Group__2__Impl
	rule__ArrayType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayTypeAccess().getRightSquareBracketKeyword_2()); }
	']'
	{ after(grammarAccess.getArrayTypeAccess().getRightSquareBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayType__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayTypeAccess().getTypeAssignment_3()); }
	(rule__ArrayType__TypeAssignment_3)
	{ after(grammarAccess.getArrayTypeAccess().getTypeAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SliceType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SliceType__Group__0__Impl
	rule__SliceType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SliceType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSliceTypeAccess().getLeftSquareBracketKeyword_0()); }
	'['
	{ after(grammarAccess.getSliceTypeAccess().getLeftSquareBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SliceType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SliceType__Group__1__Impl
	rule__SliceType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SliceType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSliceTypeAccess().getRightSquareBracketKeyword_1()); }
	']'
	{ after(grammarAccess.getSliceTypeAccess().getRightSquareBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SliceType__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SliceType__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SliceType__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSliceTypeAccess().getElementTypeParserRuleCall_2()); }
	ruleElementType
	{ after(grammarAccess.getSliceTypeAccess().getElementTypeParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StructType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructType__Group__0__Impl
	rule__StructType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructTypeAccess().getStructKeyword_0()); }
	'struct'
	{ after(grammarAccess.getStructTypeAccess().getStructKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructType__Group__1__Impl
	rule__StructType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructTypeAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getStructTypeAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructType__Group__2__Impl
	rule__StructType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructTypeAccess().getGroup_2()); }
	(rule__StructType__Group_2__0)*
	{ after(grammarAccess.getStructTypeAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructType__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructTypeAccess().getSemicolonKeyword_3()); }
	';'
	{ after(grammarAccess.getStructTypeAccess().getSemicolonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StructType__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructType__Group_2__0__Impl
	rule__StructType__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructTypeAccess().getFieldDeclAssignment_2_0()); }
	(rule__StructType__FieldDeclAssignment_2_0)
	{ after(grammarAccess.getStructTypeAccess().getFieldDeclAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructType__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructTypeAccess().getSemicolonKeyword_2_1()); }
	';'
	{ after(grammarAccess.getStructTypeAccess().getSemicolonKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FieldDecl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldDecl__Group__0__Impl
	rule__FieldDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldDecl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldDeclAccess().getAlternatives_0()); }
	(rule__FieldDecl__Alternatives_0)
	{ after(grammarAccess.getFieldDeclAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldDecl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldDecl__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldDecl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldDeclAccess().getTagParserRuleCall_1()); }
	(ruleTag)?
	{ after(grammarAccess.getFieldDeclAccess().getTagParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FieldDecl__Group_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldDecl__Group_0_0__0__Impl
	rule__FieldDecl__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldDecl__Group_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldDeclAccess().getIdentifierListParserRuleCall_0_0_0()); }
	ruleIdentifierList
	{ after(grammarAccess.getFieldDeclAccess().getIdentifierListParserRuleCall_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldDecl__Group_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldDecl__Group_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldDecl__Group_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldDeclAccess().getTypeParserRuleCall_0_0_1()); }
	ruleType
	{ after(grammarAccess.getFieldDeclAccess().getTypeParserRuleCall_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EmbeddedField__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EmbeddedField__Group__0__Impl
	rule__EmbeddedField__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EmbeddedField__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEmbeddedFieldAccess().getAsteriskKeyword_0()); }
	('*')?
	{ after(grammarAccess.getEmbeddedFieldAccess().getAsteriskKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EmbeddedField__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EmbeddedField__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EmbeddedField__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEmbeddedFieldAccess().getTypeNameParserRuleCall_1()); }
	ruleTypeName
	{ after(grammarAccess.getEmbeddedFieldAccess().getTypeNameParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PointerType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PointerType__Group__0__Impl
	rule__PointerType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PointerType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPointerTypeAccess().getAsteriskKeyword_0()); }
	'*'
	{ after(grammarAccess.getPointerTypeAccess().getAsteriskKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PointerType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PointerType__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PointerType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPointerTypeAccess().getBaseTypeParserRuleCall_1()); }
	ruleBaseType
	{ after(grammarAccess.getPointerTypeAccess().getBaseTypeParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionType__Group__0__Impl
	rule__FunctionType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionTypeAccess().getFuncKeyword_0()); }
	'func'
	{ after(grammarAccess.getFunctionTypeAccess().getFuncKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionType__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionTypeAccess().getSignatureAssignment_1()); }
	(rule__FunctionType__SignatureAssignment_1)
	{ after(grammarAccess.getFunctionTypeAccess().getSignatureAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Signature__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Signature__Group__0__Impl
	rule__Signature__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Signature__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSignatureAccess().getParametersParserRuleCall_0()); }
	ruleParameters
	{ after(grammarAccess.getSignatureAccess().getParametersParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Signature__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Signature__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Signature__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSignatureAccess().getResultAssignment_1()); }
	(rule__Signature__ResultAssignment_1)?
	{ after(grammarAccess.getSignatureAccess().getResultAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Parameters__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameters__Group__0__Impl
	rule__Parameters__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParametersAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getParametersAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameters__Group__1__Impl
	rule__Parameters__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParametersAccess().getGroup_1()); }
	(rule__Parameters__Group_1__0)?
	{ after(grammarAccess.getParametersAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameters__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParametersAccess().getRightParenthesisKeyword_2()); }
	')'
	{ after(grammarAccess.getParametersAccess().getRightParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Parameters__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameters__Group_1__0__Impl
	rule__Parameters__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParametersAccess().getParameterListParserRuleCall_1_0()); }
	ruleParameterList
	{ after(grammarAccess.getParametersAccess().getParameterListParserRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameters__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParametersAccess().getCommaKeyword_1_1()); }
	(',')?
	{ after(grammarAccess.getParametersAccess().getCommaKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterList__Group__0__Impl
	rule__ParameterList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterListAccess().getParameterDeclParserRuleCall_0()); }
	ruleParameterDecl
	{ after(grammarAccess.getParameterListAccess().getParameterDeclParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterListAccess().getGroup_1()); }
	(rule__ParameterList__Group_1__0)?
	{ after(grammarAccess.getParameterListAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterList__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterList__Group_1__0__Impl
	rule__ParameterList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterListAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getParameterListAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterListAccess().getParameterDeclAssignment_1_1()); }
	(rule__ParameterList__ParameterDeclAssignment_1_1)
	{ after(grammarAccess.getParameterListAccess().getParameterDeclAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterDecl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterDecl__Group__0__Impl
	rule__ParameterDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDecl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterDeclAccess().getIdentifierListParserRuleCall_0()); }
	(ruleIdentifierList)?
	{ after(grammarAccess.getParameterDeclAccess().getIdentifierListParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDecl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterDecl__Group__1__Impl
	rule__ParameterDecl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDecl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterDeclAccess().getFullStopFullStopFullStopKeyword_1()); }
	('...')?
	{ after(grammarAccess.getParameterDeclAccess().getFullStopFullStopFullStopKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDecl__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterDecl__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDecl__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterDeclAccess().getTypeParserRuleCall_2()); }
	ruleType
	{ after(grammarAccess.getParameterDeclAccess().getTypeParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InterfaceType__Group__0__Impl
	rule__InterfaceType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInterfaceTypeAccess().getInterfaceKeyword_0()); }
	'interface'
	{ after(grammarAccess.getInterfaceTypeAccess().getInterfaceKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InterfaceType__Group__1__Impl
	rule__InterfaceType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInterfaceTypeAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getInterfaceTypeAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceType__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InterfaceType__Group__2__Impl
	rule__InterfaceType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceType__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInterfaceTypeAccess().getGroup_2()); }
	(rule__InterfaceType__Group_2__0)?
	{ after(grammarAccess.getInterfaceTypeAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceType__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InterfaceType__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceType__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInterfaceTypeAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getInterfaceTypeAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceType__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InterfaceType__Group_2__0__Impl
	rule__InterfaceType__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceType__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInterfaceTypeAccess().getMethodSpecAssignment_2_0()); }
	(rule__InterfaceType__MethodSpecAssignment_2_0)
	{ after(grammarAccess.getInterfaceTypeAccess().getMethodSpecAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceType__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InterfaceType__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceType__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInterfaceTypeAccess().getSemicolonKeyword_2_1()); }
	';'
	{ after(grammarAccess.getInterfaceTypeAccess().getSemicolonKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MethodSpec__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodSpec__Group_0__0__Impl
	rule__MethodSpec__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodSpec__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodSpecAccess().getMethodNameParserRuleCall_0_0()); }
	ruleMethodName
	{ after(grammarAccess.getMethodSpecAccess().getMethodNameParserRuleCall_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodSpec__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodSpec__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodSpec__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodSpecAccess().getSignatureParserRuleCall_0_1()); }
	ruleSignature
	{ after(grammarAccess.getMethodSpecAccess().getSignatureParserRuleCall_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MapType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapType__Group__0__Impl
	rule__MapType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MapType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapTypeAccess().getMapKeyword_0()); }
	'map'
	{ after(grammarAccess.getMapTypeAccess().getMapKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapType__Group__1__Impl
	rule__MapType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MapType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapTypeAccess().getLeftSquareBracketKeyword_1()); }
	'['
	{ after(grammarAccess.getMapTypeAccess().getLeftSquareBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapType__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapType__Group__2__Impl
	rule__MapType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MapType__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapTypeAccess().getKeyTypeParserRuleCall_2()); }
	ruleKeyType
	{ after(grammarAccess.getMapTypeAccess().getKeyTypeParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapType__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapType__Group__3__Impl
	rule__MapType__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MapType__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapTypeAccess().getRightSquareBracketKeyword_3()); }
	']'
	{ after(grammarAccess.getMapTypeAccess().getRightSquareBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapType__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapType__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MapType__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapTypeAccess().getElementTypeAssignment_4()); }
	(rule__MapType__ElementTypeAssignment_4)
	{ after(grammarAccess.getMapTypeAccess().getElementTypeAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ChannelType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChannelType__Group__0__Impl
	rule__ChannelType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChannelTypeAccess().getAlternatives_0()); }
	(rule__ChannelType__Alternatives_0)
	{ after(grammarAccess.getChannelTypeAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChannelType__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChannelTypeAccess().getElementTypeParserRuleCall_1()); }
	ruleElementType
	{ after(grammarAccess.getChannelTypeAccess().getElementTypeParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ChannelType__Group_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChannelType__Group_0_1__0__Impl
	rule__ChannelType__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelType__Group_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChannelTypeAccess().getChanKeyword_0_1_0()); }
	'chan'
	{ after(grammarAccess.getChannelTypeAccess().getChanKeyword_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelType__Group_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChannelType__Group_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelType__Group_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChannelTypeAccess().getLessThanSignHyphenMinusKeyword_0_1_1()); }
	'<-'
	{ after(grammarAccess.getChannelTypeAccess().getLessThanSignHyphenMinusKeyword_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ChannelType__Group_0_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChannelType__Group_0_2__0__Impl
	rule__ChannelType__Group_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelType__Group_0_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChannelTypeAccess().getLessThanSignHyphenMinusKeyword_0_2_0()); }
	'<-'
	{ after(grammarAccess.getChannelTypeAccess().getLessThanSignHyphenMinusKeyword_0_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelType__Group_0_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChannelType__Group_0_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelType__Group_0_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChannelTypeAccess().getChanKeyword_0_2_1()); }
	'chan'
	{ after(grammarAccess.getChannelTypeAccess().getChanKeyword_0_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Block__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Block__Group__0__Impl
	rule__Block__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlockAccess().getLeftCurlyBracketKeyword_0()); }
	'{'
	{ after(grammarAccess.getBlockAccess().getLeftCurlyBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Block__Group__1__Impl
	rule__Block__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlockAccess().getStatementListParserRuleCall_1()); }
	ruleStatementList
	{ after(grammarAccess.getBlockAccess().getStatementListParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Block__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlockAccess().getRightCurlyBracketKeyword_2()); }
	'}'
	{ after(grammarAccess.getBlockAccess().getRightCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StatementList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatementList__Group__0__Impl
	rule__StatementList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementListAccess().getStatementParserRuleCall_0()); }
	ruleStatement
	{ after(grammarAccess.getStatementListAccess().getStatementParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatementList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementListAccess().getSemicolonKeyword_1()); }
	';'
	{ after(grammarAccess.getStatementListAccess().getSemicolonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConstDecl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstDecl__Group__0__Impl
	rule__ConstDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstDecl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstDeclAccess().getConstKeyword_0()); }
	'const'
	{ after(grammarAccess.getConstDeclAccess().getConstKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstDecl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstDecl__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstDecl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstDeclAccess().getAlternatives_1()); }
	(rule__ConstDecl__Alternatives_1)
	{ after(grammarAccess.getConstDeclAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConstDecl__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstDecl__Group_1_1__0__Impl
	rule__ConstDecl__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstDecl__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstDeclAccess().getLeftParenthesisKeyword_1_1_0()); }
	'('
	{ after(grammarAccess.getConstDeclAccess().getLeftParenthesisKeyword_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstDecl__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstDecl__Group_1_1__1__Impl
	rule__ConstDecl__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstDecl__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstDeclAccess().getGroup_1_1_1()); }
	(rule__ConstDecl__Group_1_1_1__0)?
	{ after(grammarAccess.getConstDeclAccess().getGroup_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstDecl__Group_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstDecl__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstDecl__Group_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstDeclAccess().getRightParenthesisKeyword_1_1_2()); }
	')'
	{ after(grammarAccess.getConstDeclAccess().getRightParenthesisKeyword_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConstDecl__Group_1_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstDecl__Group_1_1_1__0__Impl
	rule__ConstDecl__Group_1_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstDecl__Group_1_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstDeclAccess().getConstSpecParserRuleCall_1_1_1_0()); }
	ruleConstSpec
	{ after(grammarAccess.getConstDeclAccess().getConstSpecParserRuleCall_1_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstDecl__Group_1_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstDecl__Group_1_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstDecl__Group_1_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstDeclAccess().getSemicolonKeyword_1_1_1_1()); }
	';'
	{ after(grammarAccess.getConstDeclAccess().getSemicolonKeyword_1_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConstSpec__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstSpec__Group__0__Impl
	rule__ConstSpec__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstSpec__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstSpecAccess().getIdentifierListParserRuleCall_0()); }
	ruleIdentifierList
	{ after(grammarAccess.getConstSpecAccess().getIdentifierListParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstSpec__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstSpec__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstSpec__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstSpecAccess().getGroup_1()); }
	(rule__ConstSpec__Group_1__0)?
	{ after(grammarAccess.getConstSpecAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConstSpec__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstSpec__Group_1__0__Impl
	rule__ConstSpec__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstSpec__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstSpecAccess().getTypeParserRuleCall_1_0()); }
	(ruleType)?
	{ after(grammarAccess.getConstSpecAccess().getTypeParserRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstSpec__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstSpec__Group_1__1__Impl
	rule__ConstSpec__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstSpec__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstSpecAccess().getEqualsSignKeyword_1_1()); }
	'='
	{ after(grammarAccess.getConstSpecAccess().getEqualsSignKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstSpec__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstSpec__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstSpec__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstSpecAccess().getExpressionListAssignment_1_2()); }
	(rule__ConstSpec__ExpressionListAssignment_1_2)
	{ after(grammarAccess.getConstSpecAccess().getExpressionListAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IdentifierList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IdentifierList__Group__0__Impl
	rule__IdentifierList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IdentifierList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIdentifierListAccess().getIdentifierParserRuleCall_0()); }
	ruleidentifier
	{ after(grammarAccess.getIdentifierListAccess().getIdentifierParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IdentifierList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IdentifierList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IdentifierList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIdentifierListAccess().getGroup_1()); }
	(rule__IdentifierList__Group_1__0)?
	{ after(grammarAccess.getIdentifierListAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IdentifierList__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IdentifierList__Group_1__0__Impl
	rule__IdentifierList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IdentifierList__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIdentifierListAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getIdentifierListAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IdentifierList__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IdentifierList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IdentifierList__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIdentifierListAccess().getIdentifierParserRuleCall_1_1()); }
	ruleidentifier
	{ after(grammarAccess.getIdentifierListAccess().getIdentifierParserRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionList__Group__0__Impl
	rule__ExpressionList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionListAccess().getExpressionParserRuleCall_0()); }
	ruleExpression
	{ after(grammarAccess.getExpressionListAccess().getExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionListAccess().getGroup_1()); }
	(rule__ExpressionList__Group_1__0)?
	{ after(grammarAccess.getExpressionListAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionList__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionList__Group_1__0__Impl
	rule__ExpressionList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionList__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionListAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getExpressionListAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionList__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionList__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionListAccess().getExpressionAssignment_1_1()); }
	(rule__ExpressionList__ExpressionAssignment_1_1)
	{ after(grammarAccess.getExpressionListAccess().getExpressionAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeDecl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeDecl__Group__0__Impl
	rule__TypeDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDecl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeDeclAccess().getTypeKeyword_0()); }
	'type'
	{ after(grammarAccess.getTypeDeclAccess().getTypeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDecl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeDecl__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDecl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeDeclAccess().getAlternatives_1()); }
	(rule__TypeDecl__Alternatives_1)
	{ after(grammarAccess.getTypeDeclAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeDecl__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeDecl__Group_1_1__0__Impl
	rule__TypeDecl__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDecl__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeDeclAccess().getLeftParenthesisKeyword_1_1_0()); }
	'('
	{ after(grammarAccess.getTypeDeclAccess().getLeftParenthesisKeyword_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDecl__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeDecl__Group_1_1__1__Impl
	rule__TypeDecl__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDecl__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeDeclAccess().getGroup_1_1_1()); }
	(rule__TypeDecl__Group_1_1_1__0)?
	{ after(grammarAccess.getTypeDeclAccess().getGroup_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDecl__Group_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeDecl__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDecl__Group_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeDeclAccess().getRightParenthesisKeyword_1_1_2()); }
	')'
	{ after(grammarAccess.getTypeDeclAccess().getRightParenthesisKeyword_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeDecl__Group_1_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeDecl__Group_1_1_1__0__Impl
	rule__TypeDecl__Group_1_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDecl__Group_1_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeDeclAccess().getTypeSpecParserRuleCall_1_1_1_0()); }
	ruleTypeSpec
	{ after(grammarAccess.getTypeDeclAccess().getTypeSpecParserRuleCall_1_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDecl__Group_1_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeDecl__Group_1_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDecl__Group_1_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeDeclAccess().getSemicolonKeyword_1_1_1_1()); }
	';'
	{ after(grammarAccess.getTypeDeclAccess().getSemicolonKeyword_1_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AliasDecl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AliasDecl__Group__0__Impl
	rule__AliasDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AliasDecl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAliasDeclAccess().getIdentifierParserRuleCall_0()); }
	ruleidentifier
	{ after(grammarAccess.getAliasDeclAccess().getIdentifierParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AliasDecl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AliasDecl__Group__1__Impl
	rule__AliasDecl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AliasDecl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAliasDeclAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getAliasDeclAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AliasDecl__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AliasDecl__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AliasDecl__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAliasDeclAccess().getTypeParserRuleCall_2()); }
	ruleType
	{ after(grammarAccess.getAliasDeclAccess().getTypeParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeDef__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeDef__Group__0__Impl
	rule__TypeDef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDef__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeDefAccess().getIdentifierParserRuleCall_0()); }
	ruleidentifier
	{ after(grammarAccess.getTypeDefAccess().getIdentifierParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDef__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeDef__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDef__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeDefAccess().getTypeParserRuleCall_1()); }
	ruleType
	{ after(grammarAccess.getTypeDefAccess().getTypeParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VarDecl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarDecl__Group__0__Impl
	rule__VarDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarDeclAccess().getVarKeyword_0()); }
	'var'
	{ after(grammarAccess.getVarDeclAccess().getVarKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarDecl__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarDeclAccess().getAlternatives_1()); }
	(rule__VarDecl__Alternatives_1)
	{ after(grammarAccess.getVarDeclAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VarDecl__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarDecl__Group_1_1__0__Impl
	rule__VarDecl__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarDeclAccess().getLeftParenthesisKeyword_1_1_0()); }
	'('
	{ after(grammarAccess.getVarDeclAccess().getLeftParenthesisKeyword_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarDecl__Group_1_1__1__Impl
	rule__VarDecl__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarDeclAccess().getGroup_1_1_1()); }
	(rule__VarDecl__Group_1_1_1__0)?
	{ after(grammarAccess.getVarDeclAccess().getGroup_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarDecl__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarDeclAccess().getRightParenthesisKeyword_1_1_2()); }
	')'
	{ after(grammarAccess.getVarDeclAccess().getRightParenthesisKeyword_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VarDecl__Group_1_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarDecl__Group_1_1_1__0__Impl
	rule__VarDecl__Group_1_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group_1_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarDeclAccess().getVarSpecParserRuleCall_1_1_1_0()); }
	ruleVarSpec
	{ after(grammarAccess.getVarDeclAccess().getVarSpecParserRuleCall_1_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group_1_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarDecl__Group_1_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group_1_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarDeclAccess().getSemicolonKeyword_1_1_1_1()); }
	';'
	{ after(grammarAccess.getVarDeclAccess().getSemicolonKeyword_1_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VarSpec__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarSpec__Group__0__Impl
	rule__VarSpec__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarSpec__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarSpecAccess().getIdentifierListParserRuleCall_0()); }
	ruleIdentifierList
	{ after(grammarAccess.getVarSpecAccess().getIdentifierListParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarSpec__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarSpec__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarSpec__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarSpecAccess().getAlternatives_1()); }
	(rule__VarSpec__Alternatives_1)
	{ after(grammarAccess.getVarSpecAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VarSpec__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarSpec__Group_1_0__0__Impl
	rule__VarSpec__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarSpec__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarSpecAccess().getTypeParserRuleCall_1_0_0()); }
	ruleType
	{ after(grammarAccess.getVarSpecAccess().getTypeParserRuleCall_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarSpec__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarSpec__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarSpec__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarSpecAccess().getGroup_1_0_1()); }
	(rule__VarSpec__Group_1_0_1__0)?
	{ after(grammarAccess.getVarSpecAccess().getGroup_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VarSpec__Group_1_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarSpec__Group_1_0_1__0__Impl
	rule__VarSpec__Group_1_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarSpec__Group_1_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarSpecAccess().getEqualsSignKeyword_1_0_1_0()); }
	'='
	{ after(grammarAccess.getVarSpecAccess().getEqualsSignKeyword_1_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarSpec__Group_1_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarSpec__Group_1_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarSpec__Group_1_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarSpecAccess().getExpressionListAssignment_1_0_1_1()); }
	(rule__VarSpec__ExpressionListAssignment_1_0_1_1)
	{ after(grammarAccess.getVarSpecAccess().getExpressionListAssignment_1_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VarSpec__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarSpec__Group_1_1__0__Impl
	rule__VarSpec__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarSpec__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarSpecAccess().getEqualsSignKeyword_1_1_0()); }
	'='
	{ after(grammarAccess.getVarSpecAccess().getEqualsSignKeyword_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarSpec__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarSpec__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarSpec__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarSpecAccess().getExpressionListParserRuleCall_1_1_1()); }
	ruleExpressionList
	{ after(grammarAccess.getVarSpecAccess().getExpressionListParserRuleCall_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDecl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionDecl__Group__0__Impl
	rule__FunctionDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDecl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionDeclAccess().getFuncKeyword_0()); }
	'func'
	{ after(grammarAccess.getFunctionDeclAccess().getFuncKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDecl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionDecl__Group__1__Impl
	rule__FunctionDecl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDecl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionDeclAccess().getFunctionNameParserRuleCall_1()); }
	ruleFunctionName
	{ after(grammarAccess.getFunctionDeclAccess().getFunctionNameParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDecl__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionDecl__Group__2__Impl
	rule__FunctionDecl__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDecl__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionDeclAccess().getSignatureParserRuleCall_2()); }
	ruleSignature
	{ after(grammarAccess.getFunctionDeclAccess().getSignatureParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDecl__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionDecl__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDecl__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionDeclAccess().getFunctionBodyParserRuleCall_3()); }
	(ruleFunctionBody)?
	{ after(grammarAccess.getFunctionDeclAccess().getFunctionBodyParserRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MethodDecl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodDecl__Group__0__Impl
	rule__MethodDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDecl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodDeclAccess().getFuncKeyword_0()); }
	'func'
	{ after(grammarAccess.getMethodDeclAccess().getFuncKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDecl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodDecl__Group__1__Impl
	rule__MethodDecl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDecl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodDeclAccess().getReceiverParserRuleCall_1()); }
	ruleReceiver
	{ after(grammarAccess.getMethodDeclAccess().getReceiverParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDecl__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodDecl__Group__2__Impl
	rule__MethodDecl__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDecl__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodDeclAccess().getMethodNameParserRuleCall_2()); }
	ruleMethodName
	{ after(grammarAccess.getMethodDeclAccess().getMethodNameParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDecl__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodDecl__Group__3__Impl
	rule__MethodDecl__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDecl__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodDeclAccess().getSignatureAssignment_3()); }
	(rule__MethodDecl__SignatureAssignment_3)
	{ after(grammarAccess.getMethodDeclAccess().getSignatureAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDecl__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodDecl__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDecl__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodDeclAccess().getFunctionBodyParserRuleCall_4()); }
	(ruleFunctionBody)?
	{ after(grammarAccess.getMethodDeclAccess().getFunctionBodyParserRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Operand__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operand__Group_2__0__Impl
	rule__Operand__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Operand__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperandAccess().getLeftParenthesisKeyword_2_0()); }
	'('
	{ after(grammarAccess.getOperandAccess().getLeftParenthesisKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operand__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operand__Group_2__1__Impl
	rule__Operand__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Operand__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperandAccess().getExpressionParserRuleCall_2_1()); }
	ruleExpression
	{ after(grammarAccess.getOperandAccess().getExpressionParserRuleCall_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operand__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operand__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Operand__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperandAccess().getRightParenthesisKeyword_2_2()); }
	')'
	{ after(grammarAccess.getOperandAccess().getRightParenthesisKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedIdent__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedIdent__Group__0__Impl
	rule__QualifiedIdent__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedIdent__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedIdentAccess().getPackageNameParserRuleCall_0()); }
	rulePackageName
	{ after(grammarAccess.getQualifiedIdentAccess().getPackageNameParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedIdent__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedIdent__Group__1__Impl
	rule__QualifiedIdent__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedIdent__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedIdentAccess().getFullStopKeyword_1()); }
	'.'
	{ after(grammarAccess.getQualifiedIdentAccess().getFullStopKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedIdent__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedIdent__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedIdent__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedIdentAccess().getIdentifierParserRuleCall_2()); }
	ruleidentifier
	{ after(grammarAccess.getQualifiedIdentAccess().getIdentifierParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CompositeLit__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompositeLit__Group__0__Impl
	rule__CompositeLit__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeLit__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositeLitAccess().getLiteralTypeParserRuleCall_0()); }
	ruleLiteralType
	{ after(grammarAccess.getCompositeLitAccess().getLiteralTypeParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeLit__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompositeLit__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeLit__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositeLitAccess().getLiteralValueAssignment_1()); }
	(rule__CompositeLit__LiteralValueAssignment_1)
	{ after(grammarAccess.getCompositeLitAccess().getLiteralValueAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralType__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LiteralType__Group_2__0__Impl
	rule__LiteralType__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralType__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralTypeAccess().getLeftSquareBracketKeyword_2_0()); }
	'['
	{ after(grammarAccess.getLiteralTypeAccess().getLeftSquareBracketKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralType__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LiteralType__Group_2__1__Impl
	rule__LiteralType__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralType__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralTypeAccess().getFullStopFullStopFullStopKeyword_2_1()); }
	'...'
	{ after(grammarAccess.getLiteralTypeAccess().getFullStopFullStopFullStopKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralType__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LiteralType__Group_2__2__Impl
	rule__LiteralType__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralType__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralTypeAccess().getRightSquareBracketKeyword_2_2()); }
	']'
	{ after(grammarAccess.getLiteralTypeAccess().getRightSquareBracketKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralType__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LiteralType__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralType__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralTypeAccess().getElementTypeParserRuleCall_2_3()); }
	ruleElementType
	{ after(grammarAccess.getLiteralTypeAccess().getElementTypeParserRuleCall_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralValue__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LiteralValue__Group__0__Impl
	rule__LiteralValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralValue__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralValueAccess().getLeftCurlyBracketKeyword_0()); }
	'{'
	{ after(grammarAccess.getLiteralValueAccess().getLeftCurlyBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralValue__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LiteralValue__Group__1__Impl
	rule__LiteralValue__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralValue__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralValueAccess().getGroup_1()); }
	(rule__LiteralValue__Group_1__0)?
	{ after(grammarAccess.getLiteralValueAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralValue__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LiteralValue__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralValue__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralValueAccess().getRightCurlyBracketKeyword_2()); }
	'}'
	{ after(grammarAccess.getLiteralValueAccess().getRightCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralValue__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LiteralValue__Group_1__0__Impl
	rule__LiteralValue__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralValue__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralValueAccess().getElementListAssignment_1_0()); }
	(rule__LiteralValue__ElementListAssignment_1_0)
	{ after(grammarAccess.getLiteralValueAccess().getElementListAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralValue__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LiteralValue__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralValue__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralValueAccess().getCommaKeyword_1_1()); }
	(',')?
	{ after(grammarAccess.getLiteralValueAccess().getCommaKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ElementList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElementList__Group__0__Impl
	rule__ElementList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementListAccess().getKeyedElementParserRuleCall_0()); }
	ruleKeyedElement
	{ after(grammarAccess.getElementListAccess().getKeyedElementParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElementList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementListAccess().getGroup_1()); }
	(rule__ElementList__Group_1__0)?
	{ after(grammarAccess.getElementListAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ElementList__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElementList__Group_1__0__Impl
	rule__ElementList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementList__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementListAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getElementListAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementList__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElementList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementList__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementListAccess().getKeyedElementAssignment_1_1()); }
	(rule__ElementList__KeyedElementAssignment_1_1)
	{ after(grammarAccess.getElementListAccess().getKeyedElementAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__KeyedElement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__KeyedElement__Group__0__Impl
	rule__KeyedElement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyedElement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getKeyedElementAccess().getGroup_0()); }
	(rule__KeyedElement__Group_0__0)?
	{ after(grammarAccess.getKeyedElementAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyedElement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__KeyedElement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyedElement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getKeyedElementAccess().getElementAssignment_1()); }
	(rule__KeyedElement__ElementAssignment_1)
	{ after(grammarAccess.getKeyedElementAccess().getElementAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__KeyedElement__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__KeyedElement__Group_0__0__Impl
	rule__KeyedElement__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyedElement__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getKeyedElementAccess().getKeyParserRuleCall_0_0()); }
	ruleKey
	{ after(grammarAccess.getKeyedElementAccess().getKeyParserRuleCall_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyedElement__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__KeyedElement__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyedElement__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getKeyedElementAccess().getColonKeyword_0_1()); }
	':'
	{ after(grammarAccess.getKeyedElementAccess().getColonKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionLit__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionLit__Group__0__Impl
	rule__FunctionLit__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionLit__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionLitAccess().getFuncKeyword_0()); }
	'func'
	{ after(grammarAccess.getFunctionLitAccess().getFuncKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionLit__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionLit__Group__1__Impl
	rule__FunctionLit__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionLit__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionLitAccess().getSignatureParserRuleCall_1()); }
	ruleSignature
	{ after(grammarAccess.getFunctionLitAccess().getSignatureParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionLit__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionLit__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionLit__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionLitAccess().getFunctionBodyAssignment_2()); }
	(rule__FunctionLit__FunctionBodyAssignment_2)
	{ after(grammarAccess.getFunctionLitAccess().getFunctionBodyAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpr__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpr__Group_0__0__Impl
	rule__PrimaryExpr__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExprAccess().getOperandParserRuleCall_0_0()); }
	ruleOperand
	{ after(grammarAccess.getPrimaryExprAccess().getOperandParserRuleCall_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpr__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExprAccess().getPrimaryExprLinhaAssignment_0_1()); }
	(rule__PrimaryExpr__PrimaryExprLinhaAssignment_0_1)
	{ after(grammarAccess.getPrimaryExprAccess().getPrimaryExprLinhaAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpr__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpr__Group_1__0__Impl
	rule__PrimaryExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExprAccess().getConversionParserRuleCall_1_0()); }
	ruleConversion
	{ after(grammarAccess.getPrimaryExprAccess().getConversionParserRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpr__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExprAccess().getPrimaryExprLinhaAssignment_1_1()); }
	(rule__PrimaryExpr__PrimaryExprLinhaAssignment_1_1)
	{ after(grammarAccess.getPrimaryExprAccess().getPrimaryExprLinhaAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpr__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpr__Group_2__0__Impl
	rule__PrimaryExpr__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExprAccess().getMethodExprParserRuleCall_2_0()); }
	ruleMethodExpr
	{ after(grammarAccess.getPrimaryExprAccess().getMethodExprParserRuleCall_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpr__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExprAccess().getPrimaryExprLinhaAssignment_2_1()); }
	(rule__PrimaryExpr__PrimaryExprLinhaAssignment_2_1)
	{ after(grammarAccess.getPrimaryExprAccess().getPrimaryExprLinhaAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MethodExpr__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodExpr__Group__0__Impl
	rule__MethodExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpr__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodExprAccess().getReceiverTypeParserRuleCall_0()); }
	ruleReceiverType
	{ after(grammarAccess.getMethodExprAccess().getReceiverTypeParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpr__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodExpr__Group__1__Impl
	rule__MethodExpr__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpr__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodExprAccess().getFullStopKeyword_1()); }
	'.'
	{ after(grammarAccess.getMethodExprAccess().getFullStopKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpr__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodExpr__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpr__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodExprAccess().getMethodNameParserRuleCall_2()); }
	ruleMethodName
	{ after(grammarAccess.getMethodExprAccess().getMethodNameParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group__0__Impl
	rule__Expression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getUnaryExprParserRuleCall_0()); }
	ruleUnaryExpr
	{ after(grammarAccess.getExpressionAccess().getUnaryExprParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getExpressionLinhaAssignment_1()); }
	(rule__Expression__ExpressionLinhaAssignment_1)
	{ after(grammarAccess.getExpressionAccess().getExpressionLinhaAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionLinha__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLinha__Group__0__Impl
	rule__ExpressionLinha__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLinha__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLinhaAccess().getBinary_opParserRuleCall_0()); }
	rulebinary_op
	{ after(grammarAccess.getExpressionLinhaAccess().getBinary_opParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLinha__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLinha__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLinha__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLinhaAccess().getExpressionParserRuleCall_1()); }
	ruleExpression
	{ after(grammarAccess.getExpressionLinhaAccess().getExpressionParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpr__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryExpr__Group_1__0__Impl
	rule__UnaryExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryExprAccess().getUnary_opParserRuleCall_1_0()); }
	ruleunary_op
	{ after(grammarAccess.getUnaryExprAccess().getUnary_opParserRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryExpr__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryExprAccess().getUnaryExprParserRuleCall_1_1()); }
	ruleUnaryExpr
	{ after(grammarAccess.getUnaryExprAccess().getUnaryExprParserRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Conversion__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conversion__Group__0__Impl
	rule__Conversion__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Conversion__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConversionAccess().getTypeParserRuleCall_0()); }
	ruleType
	{ after(grammarAccess.getConversionAccess().getTypeParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conversion__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conversion__Group__1__Impl
	rule__Conversion__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Conversion__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConversionAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getConversionAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conversion__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conversion__Group__2__Impl
	rule__Conversion__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Conversion__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConversionAccess().getExpressionAssignment_2()); }
	(rule__Conversion__ExpressionAssignment_2)
	{ after(grammarAccess.getConversionAccess().getExpressionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conversion__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conversion__Group__3__Impl
	rule__Conversion__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Conversion__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConversionAccess().getCommaKeyword_3()); }
	(',')?
	{ after(grammarAccess.getConversionAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conversion__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conversion__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Conversion__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConversionAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getConversionAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Identifier__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Identifier__Group__0__Impl
	rule__Identifier__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIdentifierAccess().getLETTERTerminalRuleCall_0()); }
	RULE_LETTER
	{ after(grammarAccess.getIdentifierAccess().getLETTERTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Identifier__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIdentifierAccess().getAlternatives_1()); }
	(rule__Identifier__Alternatives_1)*
	{ after(grammarAccess.getIdentifierAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Decimal_lit__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Decimal_lit__Group__0__Impl
	rule__Decimal_lit__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Decimal_lit__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDecimal_litAccess().getDECIMAL_DIGITTerminalRuleCall_0()); }
	RULE_DECIMAL_DIGIT
	{ after(grammarAccess.getDecimal_litAccess().getDECIMAL_DIGITTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Decimal_lit__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Decimal_lit__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Decimal_lit__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDecimal_litAccess().getDECIMAL_DIGITTerminalRuleCall_1()); }
	(RULE_DECIMAL_DIGIT)*
	{ after(grammarAccess.getDecimal_litAccess().getDECIMAL_DIGITTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Octal_lit__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Octal_lit__Group__0__Impl
	rule__Octal_lit__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Octal_lit__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOctal_litAccess().getDigitZeroKeyword_0()); }
	'0'
	{ after(grammarAccess.getOctal_litAccess().getDigitZeroKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Octal_lit__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Octal_lit__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Octal_lit__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOctal_litAccess().getOCTAL_DIGITTerminalRuleCall_1()); }
	(RULE_OCTAL_DIGIT)*
	{ after(grammarAccess.getOctal_litAccess().getOCTAL_DIGITTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Hex_lit__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Hex_lit__Group__0__Impl
	rule__Hex_lit__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Hex_lit__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHex_litAccess().getDigitZeroKeyword_0()); }
	'0'
	{ after(grammarAccess.getHex_litAccess().getDigitZeroKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Hex_lit__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Hex_lit__Group__1__Impl
	rule__Hex_lit__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Hex_lit__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHex_litAccess().getAlternatives_1()); }
	(rule__Hex_lit__Alternatives_1)
	{ after(grammarAccess.getHex_litAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Hex_lit__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Hex_lit__Group__2__Impl
	rule__Hex_lit__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Hex_lit__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHex_litAccess().getHEX_DIGITTerminalRuleCall_2()); }
	RULE_HEX_DIGIT
	{ after(grammarAccess.getHex_litAccess().getHEX_DIGITTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Hex_lit__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Hex_lit__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Hex_lit__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHex_litAccess().getHEX_DIGITTerminalRuleCall_3()); }
	(RULE_HEX_DIGIT)*
	{ after(grammarAccess.getHex_litAccess().getHEX_DIGITTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Float_lit__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Float_lit__Group_0__0__Impl
	rule__Float_lit__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Float_lit__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFloat_litAccess().getDecimalsParserRuleCall_0_0()); }
	ruledecimals
	{ after(grammarAccess.getFloat_litAccess().getDecimalsParserRuleCall_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Float_lit__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Float_lit__Group_0__1__Impl
	rule__Float_lit__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Float_lit__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFloat_litAccess().getFullStopKeyword_0_1()); }
	'.'
	{ after(grammarAccess.getFloat_litAccess().getFullStopKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Float_lit__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Float_lit__Group_0__2__Impl
	rule__Float_lit__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Float_lit__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFloat_litAccess().getDecimalsParserRuleCall_0_2()); }
	(ruledecimals)?
	{ after(grammarAccess.getFloat_litAccess().getDecimalsParserRuleCall_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Float_lit__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Float_lit__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Float_lit__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFloat_litAccess().getExponentParserRuleCall_0_3()); }
	(ruleexponent)?
	{ after(grammarAccess.getFloat_litAccess().getExponentParserRuleCall_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Float_lit__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Float_lit__Group_1__0__Impl
	rule__Float_lit__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Float_lit__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFloat_litAccess().getDecimalsParserRuleCall_1_0()); }
	ruledecimals
	{ after(grammarAccess.getFloat_litAccess().getDecimalsParserRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Float_lit__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Float_lit__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Float_lit__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFloat_litAccess().getExponentParserRuleCall_1_1()); }
	ruleexponent
	{ after(grammarAccess.getFloat_litAccess().getExponentParserRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Float_lit__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Float_lit__Group_2__0__Impl
	rule__Float_lit__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Float_lit__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFloat_litAccess().getFullStopKeyword_2_0()); }
	'.'
	{ after(grammarAccess.getFloat_litAccess().getFullStopKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Float_lit__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Float_lit__Group_2__1__Impl
	rule__Float_lit__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Float_lit__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFloat_litAccess().getDecimalsParserRuleCall_2_1()); }
	ruledecimals
	{ after(grammarAccess.getFloat_litAccess().getDecimalsParserRuleCall_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Float_lit__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Float_lit__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Float_lit__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFloat_litAccess().getExponentParserRuleCall_2_2()); }
	(ruleexponent)?
	{ after(grammarAccess.getFloat_litAccess().getExponentParserRuleCall_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Raw_string_lit__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Raw_string_lit__Group__0__Impl
	rule__Raw_string_lit__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Raw_string_lit__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRaw_string_litAccess().getApostropheKeyword_0()); }
	'\''
	{ after(grammarAccess.getRaw_string_litAccess().getApostropheKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Raw_string_lit__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Raw_string_lit__Group__1__Impl
	rule__Raw_string_lit__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Raw_string_lit__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRaw_string_litAccess().getAlternatives_1()); }
	(rule__Raw_string_lit__Alternatives_1)?
	{ after(grammarAccess.getRaw_string_litAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Raw_string_lit__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Raw_string_lit__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Raw_string_lit__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRaw_string_litAccess().getApostropheKeyword_2()); }
	'\''
	{ after(grammarAccess.getRaw_string_litAccess().getApostropheKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Interpreted_string_lit__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Interpreted_string_lit__Group__0__Impl
	rule__Interpreted_string_lit__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Interpreted_string_lit__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInterpreted_string_litAccess().getQuotationMarkKeyword_0()); }
	'"'
	{ after(grammarAccess.getInterpreted_string_litAccess().getQuotationMarkKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interpreted_string_lit__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Interpreted_string_lit__Group__1__Impl
	rule__Interpreted_string_lit__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Interpreted_string_lit__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInterpreted_string_litAccess().getAlternatives_1()); }
	(rule__Interpreted_string_lit__Alternatives_1)?
	{ after(grammarAccess.getInterpreted_string_litAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interpreted_string_lit__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Interpreted_string_lit__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Interpreted_string_lit__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInterpreted_string_litAccess().getQuotationMarkKeyword_2()); }
	'"'
	{ after(grammarAccess.getInterpreted_string_litAccess().getQuotationMarkKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Decimals__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Decimals__Group__0__Impl
	rule__Decimals__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Decimals__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDecimalsAccess().getDECIMAL_DIGITTerminalRuleCall_0()); }
	RULE_DECIMAL_DIGIT
	{ after(grammarAccess.getDecimalsAccess().getDECIMAL_DIGITTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Decimals__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Decimals__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Decimals__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDecimalsAccess().getDECIMAL_DIGITTerminalRuleCall_1()); }
	(RULE_DECIMAL_DIGIT)*
	{ after(grammarAccess.getDecimalsAccess().getDECIMAL_DIGITTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Exponent__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exponent__Group__0__Impl
	rule__Exponent__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Exponent__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExponentAccess().getAlternatives_0()); }
	(rule__Exponent__Alternatives_0)
	{ after(grammarAccess.getExponentAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exponent__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exponent__Group__1__Impl
	rule__Exponent__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Exponent__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExponentAccess().getAlternatives_1()); }
	(rule__Exponent__Alternatives_1)?
	{ after(grammarAccess.getExponentAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exponent__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exponent__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Exponent__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExponentAccess().getDecimalsParserRuleCall_2()); }
	ruledecimals
	{ after(grammarAccess.getExponentAccess().getDecimalsParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Rune_lit__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rune_lit__Group__0__Impl
	rule__Rune_lit__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Rune_lit__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRune_litAccess().getApostropheKeyword_0()); }
	'\''
	{ after(grammarAccess.getRune_litAccess().getApostropheKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rune_lit__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rune_lit__Group__1__Impl
	rule__Rune_lit__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Rune_lit__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRune_litAccess().getAlternatives_1()); }
	(rule__Rune_lit__Alternatives_1)
	{ after(grammarAccess.getRune_litAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rune_lit__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rune_lit__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Rune_lit__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRune_litAccess().getApostropheKeyword_2()); }
	'\''
	{ after(grammarAccess.getRune_litAccess().getApostropheKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Octal_byte_value__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Octal_byte_value__Group__0__Impl
	rule__Octal_byte_value__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Octal_byte_value__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOctal_byte_valueAccess().getCHARParserRuleCall_0()); }
	ruleCHAR
	{ after(grammarAccess.getOctal_byte_valueAccess().getCHARParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Octal_byte_value__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Octal_byte_value__Group__1__Impl
	rule__Octal_byte_value__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Octal_byte_value__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOctal_byte_valueAccess().getOCTAL_DIGITTerminalRuleCall_1()); }
	RULE_OCTAL_DIGIT
	{ after(grammarAccess.getOctal_byte_valueAccess().getOCTAL_DIGITTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Octal_byte_value__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Octal_byte_value__Group__2__Impl
	rule__Octal_byte_value__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Octal_byte_value__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOctal_byte_valueAccess().getOCTAL_DIGITTerminalRuleCall_2()); }
	RULE_OCTAL_DIGIT
	{ after(grammarAccess.getOctal_byte_valueAccess().getOCTAL_DIGITTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Octal_byte_value__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Octal_byte_value__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Octal_byte_value__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOctal_byte_valueAccess().getOCTAL_DIGITTerminalRuleCall_3()); }
	RULE_OCTAL_DIGIT
	{ after(grammarAccess.getOctal_byte_valueAccess().getOCTAL_DIGITTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Hex_byte_value__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Hex_byte_value__Group__0__Impl
	rule__Hex_byte_value__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Hex_byte_value__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHex_byte_valueAccess().getCHARParserRuleCall_0()); }
	ruleCHAR
	{ after(grammarAccess.getHex_byte_valueAccess().getCHARParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Hex_byte_value__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Hex_byte_value__Group__1__Impl
	rule__Hex_byte_value__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Hex_byte_value__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHex_byte_valueAccess().getXKeyword_1()); }
	'x'
	{ after(grammarAccess.getHex_byte_valueAccess().getXKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Hex_byte_value__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Hex_byte_value__Group__2__Impl
	rule__Hex_byte_value__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Hex_byte_value__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHex_byte_valueAccess().getHEX_DIGITTerminalRuleCall_2()); }
	RULE_HEX_DIGIT
	{ after(grammarAccess.getHex_byte_valueAccess().getHEX_DIGITTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Hex_byte_value__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Hex_byte_value__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Hex_byte_value__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHex_byte_valueAccess().getHEX_DIGITTerminalRuleCall_3()); }
	RULE_HEX_DIGIT
	{ after(grammarAccess.getHex_byte_valueAccess().getHEX_DIGITTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Little_u_value__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Little_u_value__Group__0__Impl
	rule__Little_u_value__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Little_u_value__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLittle_u_valueAccess().getCHARParserRuleCall_0()); }
	ruleCHAR
	{ after(grammarAccess.getLittle_u_valueAccess().getCHARParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Little_u_value__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Little_u_value__Group__1__Impl
	rule__Little_u_value__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Little_u_value__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLittle_u_valueAccess().getUKeyword_1()); }
	'u'
	{ after(grammarAccess.getLittle_u_valueAccess().getUKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Little_u_value__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Little_u_value__Group__2__Impl
	rule__Little_u_value__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Little_u_value__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLittle_u_valueAccess().getHEX_DIGITTerminalRuleCall_2()); }
	RULE_HEX_DIGIT
	{ after(grammarAccess.getLittle_u_valueAccess().getHEX_DIGITTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Little_u_value__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Little_u_value__Group__3__Impl
	rule__Little_u_value__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Little_u_value__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLittle_u_valueAccess().getHEX_DIGITTerminalRuleCall_3()); }
	RULE_HEX_DIGIT
	{ after(grammarAccess.getLittle_u_valueAccess().getHEX_DIGITTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Little_u_value__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Little_u_value__Group__4__Impl
	rule__Little_u_value__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Little_u_value__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLittle_u_valueAccess().getHEX_DIGITTerminalRuleCall_4()); }
	RULE_HEX_DIGIT
	{ after(grammarAccess.getLittle_u_valueAccess().getHEX_DIGITTerminalRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Little_u_value__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Little_u_value__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Little_u_value__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLittle_u_valueAccess().getHEX_DIGITTerminalRuleCall_5()); }
	RULE_HEX_DIGIT
	{ after(grammarAccess.getLittle_u_valueAccess().getHEX_DIGITTerminalRuleCall_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Big_u_value__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Big_u_value__Group__0__Impl
	rule__Big_u_value__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Big_u_value__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBig_u_valueAccess().getCHARParserRuleCall_0()); }
	ruleCHAR
	{ after(grammarAccess.getBig_u_valueAccess().getCHARParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Big_u_value__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Big_u_value__Group__1__Impl
	rule__Big_u_value__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Big_u_value__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBig_u_valueAccess().getUKeyword_1()); }
	'U'
	{ after(grammarAccess.getBig_u_valueAccess().getUKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Big_u_value__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Big_u_value__Group__2__Impl
	rule__Big_u_value__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Big_u_value__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBig_u_valueAccess().getHEX_DIGITTerminalRuleCall_2()); }
	RULE_HEX_DIGIT
	{ after(grammarAccess.getBig_u_valueAccess().getHEX_DIGITTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Big_u_value__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Big_u_value__Group__3__Impl
	rule__Big_u_value__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Big_u_value__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBig_u_valueAccess().getHEX_DIGITTerminalRuleCall_3()); }
	RULE_HEX_DIGIT
	{ after(grammarAccess.getBig_u_valueAccess().getHEX_DIGITTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Big_u_value__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Big_u_value__Group__4__Impl
	rule__Big_u_value__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Big_u_value__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBig_u_valueAccess().getHEX_DIGITTerminalRuleCall_4()); }
	RULE_HEX_DIGIT
	{ after(grammarAccess.getBig_u_valueAccess().getHEX_DIGITTerminalRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Big_u_value__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Big_u_value__Group__5__Impl
	rule__Big_u_value__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Big_u_value__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBig_u_valueAccess().getHEX_DIGITTerminalRuleCall_5()); }
	RULE_HEX_DIGIT
	{ after(grammarAccess.getBig_u_valueAccess().getHEX_DIGITTerminalRuleCall_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Big_u_value__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Big_u_value__Group__6__Impl
	rule__Big_u_value__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Big_u_value__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBig_u_valueAccess().getHEX_DIGITTerminalRuleCall_6()); }
	RULE_HEX_DIGIT
	{ after(grammarAccess.getBig_u_valueAccess().getHEX_DIGITTerminalRuleCall_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Big_u_value__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Big_u_value__Group__7__Impl
	rule__Big_u_value__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Big_u_value__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBig_u_valueAccess().getHEX_DIGITTerminalRuleCall_7()); }
	RULE_HEX_DIGIT
	{ after(grammarAccess.getBig_u_valueAccess().getHEX_DIGITTerminalRuleCall_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Big_u_value__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Big_u_value__Group__8__Impl
	rule__Big_u_value__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Big_u_value__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBig_u_valueAccess().getHEX_DIGITTerminalRuleCall_8()); }
	RULE_HEX_DIGIT
	{ after(grammarAccess.getBig_u_valueAccess().getHEX_DIGITTerminalRuleCall_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Big_u_value__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Big_u_value__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Big_u_value__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBig_u_valueAccess().getHEX_DIGITTerminalRuleCall_9()); }
	RULE_HEX_DIGIT
	{ after(grammarAccess.getBig_u_valueAccess().getHEX_DIGITTerminalRuleCall_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Escaped_char__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Escaped_char__Group__0__Impl
	rule__Escaped_char__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Escaped_char__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEscaped_charAccess().getCHARParserRuleCall_0()); }
	ruleCHAR
	{ after(grammarAccess.getEscaped_charAccess().getCHARParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Escaped_char__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Escaped_char__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Escaped_char__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEscaped_charAccess().getAlternatives_1()); }
	(rule__Escaped_char__Alternatives_1)
	{ after(grammarAccess.getEscaped_charAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__GreetingsAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getGreetingsGreetingParserRuleCall_0()); }
		ruleGreeting
		{ after(grammarAccess.getModelAccess().getGreetingsGreetingParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Greeting__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGreetingAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getGreetingAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__TypeLitAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getTypeLitTypeLitParserRuleCall_1_0()); }
		ruleTypeLit
		{ after(grammarAccess.getTypeAccess().getTypeLitTypeLitParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__TypeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArrayTypeAccess().getTypeTypeParserRuleCall_3_0()); }
		ruleType
		{ after(grammarAccess.getArrayTypeAccess().getTypeTypeParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementType__TypeAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementTypeAccess().getTypeTypeParserRuleCall_0()); }
		ruleType
		{ after(grammarAccess.getElementTypeAccess().getTypeTypeParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__FieldDeclAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStructTypeAccess().getFieldDeclFieldDeclParserRuleCall_2_0_0()); }
		ruleFieldDecl
		{ after(grammarAccess.getStructTypeAccess().getFieldDeclFieldDeclParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BaseType__TypeAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBaseTypeAccess().getTypeTypeParserRuleCall_0()); }
		ruleType
		{ after(grammarAccess.getBaseTypeAccess().getTypeTypeParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionType__SignatureAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionTypeAccess().getSignatureSignatureParserRuleCall_1_0()); }
		ruleSignature
		{ after(grammarAccess.getFunctionTypeAccess().getSignatureSignatureParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Signature__ResultAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSignatureAccess().getResultResultParserRuleCall_1_0()); }
		ruleResult
		{ after(grammarAccess.getSignatureAccess().getResultResultParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__ParameterDeclAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterListAccess().getParameterDeclParameterDeclParserRuleCall_1_1_0()); }
		ruleParameterDecl
		{ after(grammarAccess.getParameterListAccess().getParameterDeclParameterDeclParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceType__MethodSpecAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInterfaceTypeAccess().getMethodSpecMethodSpecParserRuleCall_2_0_0()); }
		ruleMethodSpec
		{ after(grammarAccess.getInterfaceTypeAccess().getMethodSpecMethodSpecParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapType__ElementTypeAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMapTypeAccess().getElementTypeElementTypeParserRuleCall_4_0()); }
		ruleElementType
		{ after(grammarAccess.getMapTypeAccess().getElementTypeElementTypeParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyType__TypeAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getKeyTypeAccess().getTypeTypeParserRuleCall_0()); }
		ruleType
		{ after(grammarAccess.getKeyTypeAccess().getTypeTypeParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstSpec__ExpressionListAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstSpecAccess().getExpressionListExpressionListParserRuleCall_1_2_0()); }
		ruleExpressionList
		{ after(grammarAccess.getConstSpecAccess().getExpressionListExpressionListParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionList__ExpressionAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionListAccess().getExpressionExpressionParserRuleCall_1_1_0()); }
		ruleExpression
		{ after(grammarAccess.getExpressionListAccess().getExpressionExpressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarSpec__ExpressionListAssignment_1_0_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarSpecAccess().getExpressionListExpressionListParserRuleCall_1_0_1_1_0()); }
		ruleExpressionList
		{ after(grammarAccess.getVarSpecAccess().getExpressionListExpressionListParserRuleCall_1_0_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDecl__SignatureAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodDeclAccess().getSignatureSignatureParserRuleCall_3_0()); }
		ruleSignature
		{ after(grammarAccess.getMethodDeclAccess().getSignatureSignatureParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeLit__LiteralValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompositeLitAccess().getLiteralValueLiteralValueParserRuleCall_1_0()); }
		ruleLiteralValue
		{ after(grammarAccess.getCompositeLitAccess().getLiteralValueLiteralValueParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralType__ArrayTypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralTypeAccess().getArrayTypeArrayTypeParserRuleCall_1_0()); }
		ruleArrayType
		{ after(grammarAccess.getLiteralTypeAccess().getArrayTypeArrayTypeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralValue__ElementListAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralValueAccess().getElementListElementListParserRuleCall_1_0_0()); }
		ruleElementList
		{ after(grammarAccess.getLiteralValueAccess().getElementListElementListParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementList__KeyedElementAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementListAccess().getKeyedElementKeyedElementParserRuleCall_1_1_0()); }
		ruleKeyedElement
		{ after(grammarAccess.getElementListAccess().getKeyedElementKeyedElementParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyedElement__ElementAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getKeyedElementAccess().getElementElementParserRuleCall_1_0()); }
		ruleElement
		{ after(grammarAccess.getKeyedElementAccess().getElementElementParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionLit__FunctionBodyAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionLitAccess().getFunctionBodyFunctionBodyParserRuleCall_2_0()); }
		ruleFunctionBody
		{ after(grammarAccess.getFunctionLitAccess().getFunctionBodyFunctionBodyParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__PrimaryExprLinhaAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExprAccess().getPrimaryExprLinhaPrimaryExprLinhaParserRuleCall_0_1_0()); }
		rulePrimaryExprLinha
		{ after(grammarAccess.getPrimaryExprAccess().getPrimaryExprLinhaPrimaryExprLinhaParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__PrimaryExprLinhaAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExprAccess().getPrimaryExprLinhaPrimaryExprLinhaParserRuleCall_1_1_0()); }
		rulePrimaryExprLinha
		{ after(grammarAccess.getPrimaryExprAccess().getPrimaryExprLinhaPrimaryExprLinhaParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__PrimaryExprLinhaAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExprAccess().getPrimaryExprLinhaPrimaryExprLinhaParserRuleCall_2_1_0()); }
		rulePrimaryExprLinha
		{ after(grammarAccess.getPrimaryExprAccess().getPrimaryExprLinhaPrimaryExprLinhaParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__ExpressionLinhaAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getExpressionLinhaExpressionLinhaParserRuleCall_1_0()); }
		ruleExpressionLinha
		{ after(grammarAccess.getExpressionAccess().getExpressionLinhaExpressionLinhaParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__PrimaryExprAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryExprAccess().getPrimaryExprPrimaryExprParserRuleCall_0_0()); }
		rulePrimaryExpr
		{ after(grammarAccess.getUnaryExprAccess().getPrimaryExprPrimaryExprParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conversion__ExpressionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConversionAccess().getExpressionExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getConversionAccess().getExpressionExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_LETTER : ('a'..'z'|'A'..'Z'|'_');

RULE_OCTAL_DIGIT : '0'..'7';

RULE_DECIMAL_DIGIT : '0'..'9';

RULE_HEX_DIGIT : (RULE_DECIMAL_DIGIT|'A'..'F'|'a'..'f');

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
