/*
 * generated by Xtext 2.14.0
 */
grammar InternalGo;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
}

@lexer::header {
package com.ufcg.compiladores.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package com.ufcg.compiladores.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import com.ufcg.compiladores.services.GoGrammarAccess;

}
@parser::members {
	private GoGrammarAccess grammarAccess;

	public void setGrammarAccess(GoGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleSouceFile
entryRuleSouceFile
:
{ before(grammarAccess.getSouceFileRule()); }
	 ruleSouceFile
{ after(grammarAccess.getSouceFileRule()); } 
	 EOF 
;

// Rule SouceFile
ruleSouceFile 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSouceFileAccess().getGroup()); }
		(rule__SouceFile__Group__0)
		{ after(grammarAccess.getSouceFileAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleType
entryRuleType
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeAccess().getAlternatives()); }
		(rule__Type__Alternatives)
		{ after(grammarAccess.getTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypeName
entryRuleTypeName
:
{ before(grammarAccess.getTypeNameRule()); }
	 ruleTypeName
{ after(grammarAccess.getTypeNameRule()); } 
	 EOF 
;

// Rule TypeName
ruleTypeName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeNameAccess().getGroup()); }
		(rule__TypeName__Group__0)
		{ after(grammarAccess.getTypeNameAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypeNameLinha
entryRuleTypeNameLinha
:
{ before(grammarAccess.getTypeNameLinhaRule()); }
	 ruleTypeNameLinha
{ after(grammarAccess.getTypeNameLinhaRule()); } 
	 EOF 
;

// Rule TypeNameLinha
ruleTypeNameLinha 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeNameLinhaAccess().getAlternatives()); }
		(rule__TypeNameLinha__Alternatives)
		{ after(grammarAccess.getTypeNameLinhaAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypeLit
entryRuleTypeLit
:
{ before(grammarAccess.getTypeLitRule()); }
	 ruleTypeLit
{ after(grammarAccess.getTypeLitRule()); } 
	 EOF 
;

// Rule TypeLit
ruleTypeLit 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeLitAccess().getAlternatives()); }
		(rule__TypeLit__Alternatives)
		{ after(grammarAccess.getTypeLitAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypeLitLinha
entryRuleTypeLitLinha
:
{ before(grammarAccess.getTypeLitLinhaRule()); }
	 ruleTypeLitLinha
{ after(grammarAccess.getTypeLitLinhaRule()); } 
	 EOF 
;

// Rule TypeLitLinha
ruleTypeLitLinha 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeLitLinhaAccess().getAlternatives()); }
		(rule__TypeLitLinha__Alternatives)
		{ after(grammarAccess.getTypeLitLinhaAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArrayLength
entryRuleArrayLength
:
{ before(grammarAccess.getArrayLengthRule()); }
	 ruleArrayLength
{ after(grammarAccess.getArrayLengthRule()); } 
	 EOF 
;

// Rule ArrayLength
ruleArrayLength 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArrayLengthAccess().getExpressionAssignment()); }
		(rule__ArrayLength__ExpressionAssignment)
		{ after(grammarAccess.getArrayLengthAccess().getExpressionAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleElementType
entryRuleElementType
:
{ before(grammarAccess.getElementTypeRule()); }
	 ruleElementType
{ after(grammarAccess.getElementTypeRule()); } 
	 EOF 
;

// Rule ElementType
ruleElementType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getElementTypeAccess().getTypeAssignment()); }
		(rule__ElementType__TypeAssignment)
		{ after(grammarAccess.getElementTypeAccess().getTypeAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStructType
entryRuleStructType
:
{ before(grammarAccess.getStructTypeRule()); }
	 ruleStructType
{ after(grammarAccess.getStructTypeRule()); } 
	 EOF 
;

// Rule StructType
ruleStructType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStructTypeAccess().getGroup()); }
		(rule__StructType__Group__0)
		{ after(grammarAccess.getStructTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFieldDecl
entryRuleFieldDecl
:
{ before(grammarAccess.getFieldDeclRule()); }
	 ruleFieldDecl
{ after(grammarAccess.getFieldDeclRule()); } 
	 EOF 
;

// Rule FieldDecl
ruleFieldDecl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFieldDeclAccess().getGroup()); }
		(rule__FieldDecl__Group__0)
		{ after(grammarAccess.getFieldDeclAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEmbeddedField
entryRuleEmbeddedField
:
{ before(grammarAccess.getEmbeddedFieldRule()); }
	 ruleEmbeddedField
{ after(grammarAccess.getEmbeddedFieldRule()); } 
	 EOF 
;

// Rule EmbeddedField
ruleEmbeddedField 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEmbeddedFieldAccess().getGroup()); }
		(rule__EmbeddedField__Group__0)
		{ after(grammarAccess.getEmbeddedFieldAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTag
entryRuleTag
:
{ before(grammarAccess.getTagRule()); }
	 ruleTag
{ after(grammarAccess.getTagRule()); } 
	 EOF 
;

// Rule Tag
ruleTag 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTagAccess().getString_litAssignment()); }
		(rule__Tag__String_litAssignment)
		{ after(grammarAccess.getTagAccess().getString_litAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePointerType
entryRulePointerType
:
{ before(grammarAccess.getPointerTypeRule()); }
	 rulePointerType
{ after(grammarAccess.getPointerTypeRule()); } 
	 EOF 
;

// Rule PointerType
rulePointerType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPointerTypeAccess().getGroup()); }
		(rule__PointerType__Group__0)
		{ after(grammarAccess.getPointerTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunctionType
entryRuleFunctionType
:
{ before(grammarAccess.getFunctionTypeRule()); }
	 ruleFunctionType
{ after(grammarAccess.getFunctionTypeRule()); } 
	 EOF 
;

// Rule FunctionType
ruleFunctionType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionTypeAccess().getGroup()); }
		(rule__FunctionType__Group__0)
		{ after(grammarAccess.getFunctionTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSignature
entryRuleSignature
:
{ before(grammarAccess.getSignatureRule()); }
	 ruleSignature
{ after(grammarAccess.getSignatureRule()); } 
	 EOF 
;

// Rule Signature
ruleSignature 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSignatureAccess().getGroup()); }
		(rule__Signature__Group__0)
		{ after(grammarAccess.getSignatureAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleResult
entryRuleResult
:
{ before(grammarAccess.getResultRule()); }
	 ruleResult
{ after(grammarAccess.getResultRule()); } 
	 EOF 
;

// Rule Result
ruleResult 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getResultAccess().getAlternatives()); }
		(rule__Result__Alternatives)
		{ after(grammarAccess.getResultAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParameters
entryRuleParameters
:
{ before(grammarAccess.getParametersRule()); }
	 ruleParameters
{ after(grammarAccess.getParametersRule()); } 
	 EOF 
;

// Rule Parameters
ruleParameters 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParametersAccess().getGroup()); }
		(rule__Parameters__Group__0)
		{ after(grammarAccess.getParametersAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParameterList
entryRuleParameterList
:
{ before(grammarAccess.getParameterListRule()); }
	 ruleParameterList
{ after(grammarAccess.getParameterListRule()); } 
	 EOF 
;

// Rule ParameterList
ruleParameterList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParameterListAccess().getGroup()); }
		(rule__ParameterList__Group__0)
		{ after(grammarAccess.getParameterListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParameterDecl
entryRuleParameterDecl
:
{ before(grammarAccess.getParameterDeclRule()); }
	 ruleParameterDecl
{ after(grammarAccess.getParameterDeclRule()); } 
	 EOF 
;

// Rule ParameterDecl
ruleParameterDecl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParameterDeclAccess().getGroup()); }
		(rule__ParameterDecl__Group__0)
		{ after(grammarAccess.getParameterDeclAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInterfaceType
entryRuleInterfaceType
:
{ before(grammarAccess.getInterfaceTypeRule()); }
	 ruleInterfaceType
{ after(grammarAccess.getInterfaceTypeRule()); } 
	 EOF 
;

// Rule InterfaceType
ruleInterfaceType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInterfaceTypeAccess().getGroup()); }
		(rule__InterfaceType__Group__0)
		{ after(grammarAccess.getInterfaceTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMethodSpec
entryRuleMethodSpec
:
{ before(grammarAccess.getMethodSpecRule()); }
	 ruleMethodSpec
{ after(grammarAccess.getMethodSpecRule()); } 
	 EOF 
;

// Rule MethodSpec
ruleMethodSpec 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMethodSpecAccess().getAlternatives()); }
		(rule__MethodSpec__Alternatives)
		{ after(grammarAccess.getMethodSpecAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMethodName
entryRuleMethodName
:
{ before(grammarAccess.getMethodNameRule()); }
	 ruleMethodName
{ after(grammarAccess.getMethodNameRule()); } 
	 EOF 
;

// Rule MethodName
ruleMethodName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMethodNameAccess().getIdentifierAssignment()); }
		(rule__MethodName__IdentifierAssignment)
		{ after(grammarAccess.getMethodNameAccess().getIdentifierAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInterfaceTypeName
entryRuleInterfaceTypeName
:
{ before(grammarAccess.getInterfaceTypeNameRule()); }
	 ruleInterfaceTypeName
{ after(grammarAccess.getInterfaceTypeNameRule()); } 
	 EOF 
;

// Rule InterfaceTypeName
ruleInterfaceTypeName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInterfaceTypeNameAccess().getTypeNameAssignment()); }
		(rule__InterfaceTypeName__TypeNameAssignment)
		{ after(grammarAccess.getInterfaceTypeNameAccess().getTypeNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMapType
entryRuleMapType
:
{ before(grammarAccess.getMapTypeRule()); }
	 ruleMapType
{ after(grammarAccess.getMapTypeRule()); } 
	 EOF 
;

// Rule MapType
ruleMapType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMapTypeAccess().getGroup()); }
		(rule__MapType__Group__0)
		{ after(grammarAccess.getMapTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleKeyType
entryRuleKeyType
:
{ before(grammarAccess.getKeyTypeRule()); }
	 ruleKeyType
{ after(grammarAccess.getKeyTypeRule()); } 
	 EOF 
;

// Rule KeyType
ruleKeyType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getKeyTypeAccess().getTypeAssignment()); }
		(rule__KeyType__TypeAssignment)
		{ after(grammarAccess.getKeyTypeAccess().getTypeAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleChannelType
entryRuleChannelType
:
{ before(grammarAccess.getChannelTypeRule()); }
	 ruleChannelType
{ after(grammarAccess.getChannelTypeRule()); } 
	 EOF 
;

// Rule ChannelType
ruleChannelType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getChannelTypeAccess().getGroup()); }
		(rule__ChannelType__Group__0)
		{ after(grammarAccess.getChannelTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBlock
entryRuleBlock
:
{ before(grammarAccess.getBlockRule()); }
	 ruleBlock
{ after(grammarAccess.getBlockRule()); } 
	 EOF 
;

// Rule Block
ruleBlock 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBlockAccess().getGroup()); }
		(rule__Block__Group__0)
		{ after(grammarAccess.getBlockAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStatementList
entryRuleStatementList
:
{ before(grammarAccess.getStatementListRule()); }
	 ruleStatementList
{ after(grammarAccess.getStatementListRule()); } 
	 EOF 
;

// Rule StatementList
ruleStatementList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStatementListAccess().getGroup()); }
		(rule__StatementList__Group__0)
		{ after(grammarAccess.getStatementListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDeclaration
entryRuleDeclaration
:
{ before(grammarAccess.getDeclarationRule()); }
	 ruleDeclaration
{ after(grammarAccess.getDeclarationRule()); } 
	 EOF 
;

// Rule Declaration
ruleDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDeclarationAccess().getAlternatives()); }
		(rule__Declaration__Alternatives)
		{ after(grammarAccess.getDeclarationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTopLevelDecl
entryRuleTopLevelDecl
:
{ before(grammarAccess.getTopLevelDeclRule()); }
	 ruleTopLevelDecl
{ after(grammarAccess.getTopLevelDeclRule()); } 
	 EOF 
;

// Rule TopLevelDecl
ruleTopLevelDecl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTopLevelDeclAccess().getAlternatives()); }
		(rule__TopLevelDecl__Alternatives)
		{ after(grammarAccess.getTopLevelDeclAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuletopLevelDeclLinha
entryRuletopLevelDeclLinha
:
{ before(grammarAccess.getTopLevelDeclLinhaRule()); }
	 ruletopLevelDeclLinha
{ after(grammarAccess.getTopLevelDeclLinhaRule()); } 
	 EOF 
;

// Rule topLevelDeclLinha
ruletopLevelDeclLinha 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTopLevelDeclLinhaAccess().getAlternatives()); }
		(rule__TopLevelDeclLinha__Alternatives)
		{ after(grammarAccess.getTopLevelDeclLinhaAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConstDecl
entryRuleConstDecl
:
{ before(grammarAccess.getConstDeclRule()); }
	 ruleConstDecl
{ after(grammarAccess.getConstDeclRule()); } 
	 EOF 
;

// Rule ConstDecl
ruleConstDecl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConstDeclAccess().getGroup()); }
		(rule__ConstDecl__Group__0)
		{ after(grammarAccess.getConstDeclAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConstSpec
entryRuleConstSpec
:
{ before(grammarAccess.getConstSpecRule()); }
	 ruleConstSpec
{ after(grammarAccess.getConstSpecRule()); } 
	 EOF 
;

// Rule ConstSpec
ruleConstSpec 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConstSpecAccess().getGroup()); }
		(rule__ConstSpec__Group__0)
		{ after(grammarAccess.getConstSpecAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIdentifierList
entryRuleIdentifierList
:
{ before(grammarAccess.getIdentifierListRule()); }
	 ruleIdentifierList
{ after(grammarAccess.getIdentifierListRule()); } 
	 EOF 
;

// Rule IdentifierList
ruleIdentifierList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIdentifierListAccess().getGroup()); }
		(rule__IdentifierList__Group__0)
		{ after(grammarAccess.getIdentifierListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpressionList
entryRuleExpressionList
:
{ before(grammarAccess.getExpressionListRule()); }
	 ruleExpressionList
{ after(grammarAccess.getExpressionListRule()); } 
	 EOF 
;

// Rule ExpressionList
ruleExpressionList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionListAccess().getGroup()); }
		(rule__ExpressionList__Group__0)
		{ after(grammarAccess.getExpressionListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypeDecl
entryRuleTypeDecl
:
{ before(grammarAccess.getTypeDeclRule()); }
	 ruleTypeDecl
{ after(grammarAccess.getTypeDeclRule()); } 
	 EOF 
;

// Rule TypeDecl
ruleTypeDecl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeDeclAccess().getGroup()); }
		(rule__TypeDecl__Group__0)
		{ after(grammarAccess.getTypeDeclAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypeSpec
entryRuleTypeSpec
:
{ before(grammarAccess.getTypeSpecRule()); }
	 ruleTypeSpec
{ after(grammarAccess.getTypeSpecRule()); } 
	 EOF 
;

// Rule TypeSpec
ruleTypeSpec 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeSpecAccess().getAlternatives()); }
		(rule__TypeSpec__Alternatives)
		{ after(grammarAccess.getTypeSpecAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAliasDecl
entryRuleAliasDecl
:
{ before(grammarAccess.getAliasDeclRule()); }
	 ruleAliasDecl
{ after(grammarAccess.getAliasDeclRule()); } 
	 EOF 
;

// Rule AliasDecl
ruleAliasDecl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAliasDeclAccess().getGroup()); }
		(rule__AliasDecl__Group__0)
		{ after(grammarAccess.getAliasDeclAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypeDef
entryRuleTypeDef
:
{ before(grammarAccess.getTypeDefRule()); }
	 ruleTypeDef
{ after(grammarAccess.getTypeDefRule()); } 
	 EOF 
;

// Rule TypeDef
ruleTypeDef 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeDefAccess().getGroup()); }
		(rule__TypeDef__Group__0)
		{ after(grammarAccess.getTypeDefAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVarDecl
entryRuleVarDecl
:
{ before(grammarAccess.getVarDeclRule()); }
	 ruleVarDecl
{ after(grammarAccess.getVarDeclRule()); } 
	 EOF 
;

// Rule VarDecl
ruleVarDecl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVarDeclAccess().getGroup()); }
		(rule__VarDecl__Group__0)
		{ after(grammarAccess.getVarDeclAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVarSpec
entryRuleVarSpec
:
{ before(grammarAccess.getVarSpecRule()); }
	 ruleVarSpec
{ after(grammarAccess.getVarSpecRule()); } 
	 EOF 
;

// Rule VarSpec
ruleVarSpec 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVarSpecAccess().getGroup()); }
		(rule__VarSpec__Group__0)
		{ after(grammarAccess.getVarSpecAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleShortVarDecl
entryRuleShortVarDecl
:
{ before(grammarAccess.getShortVarDeclRule()); }
	 ruleShortVarDecl
{ after(grammarAccess.getShortVarDeclRule()); } 
	 EOF 
;

// Rule ShortVarDecl
ruleShortVarDecl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getShortVarDeclAccess().getGroup()); }
		(rule__ShortVarDecl__Group__0)
		{ after(grammarAccess.getShortVarDeclAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunctionName
entryRuleFunctionName
:
{ before(grammarAccess.getFunctionNameRule()); }
	 ruleFunctionName
{ after(grammarAccess.getFunctionNameRule()); } 
	 EOF 
;

// Rule FunctionName
ruleFunctionName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionNameAccess().getIdentifierAssignment()); }
		(rule__FunctionName__IdentifierAssignment)
		{ after(grammarAccess.getFunctionNameAccess().getIdentifierAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunctionBody
entryRuleFunctionBody
:
{ before(grammarAccess.getFunctionBodyRule()); }
	 ruleFunctionBody
{ after(grammarAccess.getFunctionBodyRule()); } 
	 EOF 
;

// Rule FunctionBody
ruleFunctionBody 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionBodyAccess().getBlockAssignment()); }
		(rule__FunctionBody__BlockAssignment)
		{ after(grammarAccess.getFunctionBodyAccess().getBlockAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleReceiver
entryRuleReceiver
:
{ before(grammarAccess.getReceiverRule()); }
	 ruleReceiver
{ after(grammarAccess.getReceiverRule()); } 
	 EOF 
;

// Rule Receiver
ruleReceiver 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getReceiverAccess().getParametersParserRuleCall()); }
		ruleParameters
		{ after(grammarAccess.getReceiverAccess().getParametersParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOperand
entryRuleOperand
:
{ before(grammarAccess.getOperandRule()); }
	 ruleOperand
{ after(grammarAccess.getOperandRule()); } 
	 EOF 
;

// Rule Operand
ruleOperand 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOperandAccess().getAlternatives()); }
		(rule__Operand__Alternatives)
		{ after(grammarAccess.getOperandAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLiteral
entryRuleLiteral
:
{ before(grammarAccess.getLiteralRule()); }
	 ruleLiteral
{ after(grammarAccess.getLiteralRule()); } 
	 EOF 
;

// Rule Literal
ruleLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLiteralAccess().getAlternatives()); }
		(rule__Literal__Alternatives)
		{ after(grammarAccess.getLiteralAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBasicLit
entryRuleBasicLit
:
{ before(grammarAccess.getBasicLitRule()); }
	 ruleBasicLit
{ after(grammarAccess.getBasicLitRule()); } 
	 EOF 
;

// Rule BasicLit
ruleBasicLit 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBasicLitAccess().getAlternatives()); }
		(rule__BasicLit__Alternatives)
		{ after(grammarAccess.getBasicLitAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOperandName
entryRuleOperandName
:
{ before(grammarAccess.getOperandNameRule()); }
	 ruleOperandName
{ after(grammarAccess.getOperandNameRule()); } 
	 EOF 
;

// Rule OperandName
ruleOperandName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOperandNameAccess().getAlternatives()); }
		(rule__OperandName__Alternatives)
		{ after(grammarAccess.getOperandNameAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQualifiedIdent
entryRuleQualifiedIdent
:
{ before(grammarAccess.getQualifiedIdentRule()); }
	 ruleQualifiedIdent
{ after(grammarAccess.getQualifiedIdentRule()); } 
	 EOF 
;

// Rule QualifiedIdent
ruleQualifiedIdent 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQualifiedIdentAccess().getGroup()); }
		(rule__QualifiedIdent__Group__0)
		{ after(grammarAccess.getQualifiedIdentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCompositeLit
entryRuleCompositeLit
:
{ before(grammarAccess.getCompositeLitRule()); }
	 ruleCompositeLit
{ after(grammarAccess.getCompositeLitRule()); } 
	 EOF 
;

// Rule CompositeLit
ruleCompositeLit 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCompositeLitAccess().getGroup()); }
		(rule__CompositeLit__Group__0)
		{ after(grammarAccess.getCompositeLitAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLiteralType
entryRuleLiteralType
:
{ before(grammarAccess.getLiteralTypeRule()); }
	 ruleLiteralType
{ after(grammarAccess.getLiteralTypeRule()); } 
	 EOF 
;

// Rule LiteralType
ruleLiteralType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLiteralTypeAccess().getAlternatives()); }
		(rule__LiteralType__Alternatives)
		{ after(grammarAccess.getLiteralTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLiteralTypeLinha
entryRuleLiteralTypeLinha
:
{ before(grammarAccess.getLiteralTypeLinhaRule()); }
	 ruleLiteralTypeLinha
{ after(grammarAccess.getLiteralTypeLinhaRule()); } 
	 EOF 
;

// Rule LiteralTypeLinha
ruleLiteralTypeLinha 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLiteralTypeLinhaAccess().getAlternatives()); }
		(rule__LiteralTypeLinha__Alternatives)
		{ after(grammarAccess.getLiteralTypeLinhaAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLiteralValue
entryRuleLiteralValue
:
{ before(grammarAccess.getLiteralValueRule()); }
	 ruleLiteralValue
{ after(grammarAccess.getLiteralValueRule()); } 
	 EOF 
;

// Rule LiteralValue
ruleLiteralValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLiteralValueAccess().getGroup()); }
		(rule__LiteralValue__Group__0)
		{ after(grammarAccess.getLiteralValueAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleElementList
entryRuleElementList
:
{ before(grammarAccess.getElementListRule()); }
	 ruleElementList
{ after(grammarAccess.getElementListRule()); } 
	 EOF 
;

// Rule ElementList
ruleElementList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getElementListAccess().getGroup()); }
		(rule__ElementList__Group__0)
		{ after(grammarAccess.getElementListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleElement
entryRuleElement
:
{ before(grammarAccess.getElementRule()); }
	 ruleElement
{ after(grammarAccess.getElementRule()); } 
	 EOF 
;

// Rule Element
ruleElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getElementAccess().getAlternatives()); }
		(rule__Element__Alternatives)
		{ after(grammarAccess.getElementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleKeyedElement
entryRuleKeyedElement
:
{ before(grammarAccess.getKeyedElementRule()); }
	 ruleKeyedElement
{ after(grammarAccess.getKeyedElementRule()); } 
	 EOF 
;

// Rule KeyedElement
ruleKeyedElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getKeyedElementAccess().getGroup()); }
		(rule__KeyedElement__Group__0)
		{ after(grammarAccess.getKeyedElementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleKey
entryRuleKey
:
{ before(grammarAccess.getKeyRule()); }
	 ruleKey
{ after(grammarAccess.getKeyRule()); } 
	 EOF 
;

// Rule Key
ruleKey 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getKeyAccess().getAlternatives()); }
		(rule__Key__Alternatives)
		{ after(grammarAccess.getKeyAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFieldName
entryRuleFieldName
:
{ before(grammarAccess.getFieldNameRule()); }
	 ruleFieldName
{ after(grammarAccess.getFieldNameRule()); } 
	 EOF 
;

// Rule FieldName
ruleFieldName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFieldNameAccess().getIdentifierAssignment()); }
		(rule__FieldName__IdentifierAssignment)
		{ after(grammarAccess.getFieldNameAccess().getIdentifierAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunctionLit
entryRuleFunctionLit
:
{ before(grammarAccess.getFunctionLitRule()); }
	 ruleFunctionLit
{ after(grammarAccess.getFunctionLitRule()); } 
	 EOF 
;

// Rule FunctionLit
ruleFunctionLit 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionLitAccess().getGroup()); }
		(rule__FunctionLit__Group__0)
		{ after(grammarAccess.getFunctionLitAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrimaryExpr
entryRulePrimaryExpr
:
{ before(grammarAccess.getPrimaryExprRule()); }
	 rulePrimaryExpr
{ after(grammarAccess.getPrimaryExprRule()); } 
	 EOF 
;

// Rule PrimaryExpr
rulePrimaryExpr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimaryExprAccess().getAlternatives()); }
		(rule__PrimaryExpr__Alternatives)
		{ after(grammarAccess.getPrimaryExprAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrimaryExprLinha
entryRulePrimaryExprLinha
:
{ before(grammarAccess.getPrimaryExprLinhaRule()); }
	 rulePrimaryExprLinha
{ after(grammarAccess.getPrimaryExprLinhaRule()); } 
	 EOF 
;

// Rule PrimaryExprLinha
rulePrimaryExprLinha 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimaryExprLinhaAccess().getAlternatives()); }
		(rule__PrimaryExprLinha__Alternatives)
		{ after(grammarAccess.getPrimaryExprLinhaAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleponto
entryRuleponto
:
{ before(grammarAccess.getPontoRule()); }
	 ruleponto
{ after(grammarAccess.getPontoRule()); } 
	 EOF 
;

// Rule ponto
ruleponto 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPontoAccess().getAlternatives()); }
		(rule__Ponto__Alternatives)
		{ after(grammarAccess.getPontoAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulecochetes
entryRulecochetes
:
{ before(grammarAccess.getCochetesRule()); }
	 rulecochetes
{ after(grammarAccess.getCochetesRule()); } 
	 EOF 
;

// Rule cochetes
rulecochetes 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCochetesAccess().getAlternatives()); }
		(rule__Cochetes__Alternatives)
		{ after(grammarAccess.getCochetesAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSelector
entryRuleSelector
:
{ before(grammarAccess.getSelectorRule()); }
	 ruleSelector
{ after(grammarAccess.getSelectorRule()); } 
	 EOF 
;

// Rule Selector
ruleSelector 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSelectorAccess().getIdentifierAssignment()); }
		(rule__Selector__IdentifierAssignment)
		{ after(grammarAccess.getSelectorAccess().getIdentifierAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIndex
entryRuleIndex
:
{ before(grammarAccess.getIndexRule()); }
	 ruleIndex
{ after(grammarAccess.getIndexRule()); } 
	 EOF 
;

// Rule Index
ruleIndex 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIndexAccess().getAlternatives()); }
		(rule__Index__Alternatives)
		{ after(grammarAccess.getIndexAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSlice
entryRuleSlice
:
{ before(grammarAccess.getSliceRule()); }
	 ruleSlice
{ after(grammarAccess.getSliceRule()); } 
	 EOF 
;

// Rule Slice
ruleSlice 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSliceAccess().getGroup()); }
		(rule__Slice__Group__0)
		{ after(grammarAccess.getSliceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypeAssertion
entryRuleTypeAssertion
:
{ before(grammarAccess.getTypeAssertionRule()); }
	 ruleTypeAssertion
{ after(grammarAccess.getTypeAssertionRule()); } 
	 EOF 
;

// Rule TypeAssertion
ruleTypeAssertion 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeAssertionAccess().getGroup()); }
		(rule__TypeAssertion__Group__0)
		{ after(grammarAccess.getTypeAssertionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArguments
entryRuleArguments
:
{ before(grammarAccess.getArgumentsRule()); }
	 ruleArguments
{ after(grammarAccess.getArgumentsRule()); } 
	 EOF 
;

// Rule Arguments
ruleArguments 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArgumentsAccess().getGroup()); }
		(rule__Arguments__Group__0)
		{ after(grammarAccess.getArgumentsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMethodExpr
entryRuleMethodExpr
:
{ before(grammarAccess.getMethodExprRule()); }
	 ruleMethodExpr
{ after(grammarAccess.getMethodExprRule()); } 
	 EOF 
;

// Rule MethodExpr
ruleMethodExpr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMethodExprAccess().getGroup()); }
		(rule__MethodExpr__Group__0)
		{ after(grammarAccess.getMethodExprAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleReceiverType
entryRuleReceiverType
:
{ before(grammarAccess.getReceiverTypeRule()); }
	 ruleReceiverType
{ after(grammarAccess.getReceiverTypeRule()); } 
	 EOF 
;

// Rule ReceiverType
ruleReceiverType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getReceiverTypeAccess().getTypeAssignment()); }
		(rule__ReceiverType__TypeAssignment)
		{ after(grammarAccess.getReceiverTypeAccess().getTypeAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpression
entryRuleExpression
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionAccess().getGroup()); }
		(rule__Expression__Group__0)
		{ after(grammarAccess.getExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpressionLinha
entryRuleExpressionLinha
:
{ before(grammarAccess.getExpressionLinhaRule()); }
	 ruleExpressionLinha
{ after(grammarAccess.getExpressionLinhaRule()); } 
	 EOF 
;

// Rule ExpressionLinha
ruleExpressionLinha 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionLinhaAccess().getAlternatives()); }
		(rule__ExpressionLinha__Alternatives)
		{ after(grammarAccess.getExpressionLinhaAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnaryExpr
entryRuleUnaryExpr
:
{ before(grammarAccess.getUnaryExprRule()); }
	 ruleUnaryExpr
{ after(grammarAccess.getUnaryExprRule()); } 
	 EOF 
;

// Rule UnaryExpr
ruleUnaryExpr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnaryExprAccess().getAlternatives()); }
		(rule__UnaryExpr__Alternatives)
		{ after(grammarAccess.getUnaryExprAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulebinary_op
entryRulebinary_op
:
{ before(grammarAccess.getBinary_opRule()); }
	 rulebinary_op
{ after(grammarAccess.getBinary_opRule()); } 
	 EOF 
;

// Rule binary_op
rulebinary_op 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBinary_opAccess().getAlternatives()); }
		(rule__Binary_op__Alternatives)
		{ after(grammarAccess.getBinary_opAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulerel_op
entryRulerel_op
:
{ before(grammarAccess.getRel_opRule()); }
	 rulerel_op
{ after(grammarAccess.getRel_opRule()); } 
	 EOF 
;

// Rule rel_op
rulerel_op 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRel_opAccess().getAlternatives()); }
		(rule__Rel_op__Alternatives)
		{ after(grammarAccess.getRel_opAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleadd_op
entryRuleadd_op
:
{ before(grammarAccess.getAdd_opRule()); }
	 ruleadd_op
{ after(grammarAccess.getAdd_opRule()); } 
	 EOF 
;

// Rule add_op
ruleadd_op 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAdd_opAccess().getAlternatives()); }
		(rule__Add_op__Alternatives)
		{ after(grammarAccess.getAdd_opAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulemul_op
entryRulemul_op
:
{ before(grammarAccess.getMul_opRule()); }
	 rulemul_op
{ after(grammarAccess.getMul_opRule()); } 
	 EOF 
;

// Rule mul_op
rulemul_op 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMul_opAccess().getAlternatives()); }
		(rule__Mul_op__Alternatives)
		{ after(grammarAccess.getMul_opAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleunary_op
entryRuleunary_op
:
{ before(grammarAccess.getUnary_opRule()); }
	 ruleunary_op
{ after(grammarAccess.getUnary_opRule()); } 
	 EOF 
;

// Rule unary_op
ruleunary_op 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnary_opAccess().getAlternatives()); }
		(rule__Unary_op__Alternatives)
		{ after(grammarAccess.getUnary_opAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConversion
entryRuleConversion
:
{ before(grammarAccess.getConversionRule()); }
	 ruleConversion
{ after(grammarAccess.getConversionRule()); } 
	 EOF 
;

// Rule Conversion
ruleConversion 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConversionAccess().getGroup()); }
		(rule__Conversion__Group__0)
		{ after(grammarAccess.getConversionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStatement
entryRuleStatement
:
{ before(grammarAccess.getStatementRule()); }
	 ruleStatement
{ after(grammarAccess.getStatementRule()); } 
	 EOF 
;

// Rule Statement
ruleStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStatementAccess().getAlternatives()); }
		(rule__Statement__Alternatives)
		{ after(grammarAccess.getStatementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSimpleStmt
entryRuleSimpleStmt
:
{ before(grammarAccess.getSimpleStmtRule()); }
	 ruleSimpleStmt
{ after(grammarAccess.getSimpleStmtRule()); } 
	 EOF 
;

// Rule SimpleStmt
ruleSimpleStmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSimpleStmtAccess().getAlternatives()); }
		(rule__SimpleStmt__Alternatives)
		{ after(grammarAccess.getSimpleStmtAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEmptyStmt
entryRuleEmptyStmt
:
{ before(grammarAccess.getEmptyStmtRule()); }
	 ruleEmptyStmt
{ after(grammarAccess.getEmptyStmtRule()); } 
	 EOF 
;

// Rule EmptyStmt
ruleEmptyStmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEmptyStmtAccess().getANY_OTHERTerminalRuleCall()); }
		RULE_ANY_OTHER
		{ after(grammarAccess.getEmptyStmtAccess().getANY_OTHERTerminalRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLabeledStmt
entryRuleLabeledStmt
:
{ before(grammarAccess.getLabeledStmtRule()); }
	 ruleLabeledStmt
{ after(grammarAccess.getLabeledStmtRule()); } 
	 EOF 
;

// Rule LabeledStmt
ruleLabeledStmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLabeledStmtAccess().getGroup()); }
		(rule__LabeledStmt__Group__0)
		{ after(grammarAccess.getLabeledStmtAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLabel
entryRuleLabel
:
{ before(grammarAccess.getLabelRule()); }
	 ruleLabel
{ after(grammarAccess.getLabelRule()); } 
	 EOF 
;

// Rule Label
ruleLabel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLabelAccess().getIdentifierAssignment()); }
		(rule__Label__IdentifierAssignment)
		{ after(grammarAccess.getLabelAccess().getIdentifierAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpressionStmt
entryRuleExpressionStmt
:
{ before(grammarAccess.getExpressionStmtRule()); }
	 ruleExpressionStmt
{ after(grammarAccess.getExpressionStmtRule()); } 
	 EOF 
;

// Rule ExpressionStmt
ruleExpressionStmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionStmtAccess().getExpressionAssignment()); }
		(rule__ExpressionStmt__ExpressionAssignment)
		{ after(grammarAccess.getExpressionStmtAccess().getExpressionAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSendStmt
entryRuleSendStmt
:
{ before(grammarAccess.getSendStmtRule()); }
	 ruleSendStmt
{ after(grammarAccess.getSendStmtRule()); } 
	 EOF 
;

// Rule SendStmt
ruleSendStmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSendStmtAccess().getGroup()); }
		(rule__SendStmt__Group__0)
		{ after(grammarAccess.getSendStmtAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleChannel
entryRuleChannel
:
{ before(grammarAccess.getChannelRule()); }
	 ruleChannel
{ after(grammarAccess.getChannelRule()); } 
	 EOF 
;

// Rule Channel
ruleChannel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getChannelAccess().getExpressionAssignment()); }
		(rule__Channel__ExpressionAssignment)
		{ after(grammarAccess.getChannelAccess().getExpressionAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIncDecStmt
entryRuleIncDecStmt
:
{ before(grammarAccess.getIncDecStmtRule()); }
	 ruleIncDecStmt
{ after(grammarAccess.getIncDecStmtRule()); } 
	 EOF 
;

// Rule IncDecStmt
ruleIncDecStmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIncDecStmtAccess().getGroup()); }
		(rule__IncDecStmt__Group__0)
		{ after(grammarAccess.getIncDecStmtAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAssignment
entryRuleAssignment
:
{ before(grammarAccess.getAssignmentRule()); }
	 ruleAssignment
{ after(grammarAccess.getAssignmentRule()); } 
	 EOF 
;

// Rule Assignment
ruleAssignment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAssignmentAccess().getGroup()); }
		(rule__Assignment__Group__0)
		{ after(grammarAccess.getAssignmentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleassign_op
entryRuleassign_op
:
{ before(grammarAccess.getAssign_opRule()); }
	 ruleassign_op
{ after(grammarAccess.getAssign_opRule()); } 
	 EOF 
;

// Rule assign_op
ruleassign_op 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAssign_opAccess().getGroup()); }
		(rule__Assign_op__Group__0)
		{ after(grammarAccess.getAssign_opAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIfStmt
entryRuleIfStmt
:
{ before(grammarAccess.getIfStmtRule()); }
	 ruleIfStmt
{ after(grammarAccess.getIfStmtRule()); } 
	 EOF 
;

// Rule IfStmt
ruleIfStmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIfStmtAccess().getGroup()); }
		(rule__IfStmt__Group__0)
		{ after(grammarAccess.getIfStmtAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSwitchStmt
entryRuleSwitchStmt
:
{ before(grammarAccess.getSwitchStmtRule()); }
	 ruleSwitchStmt
{ after(grammarAccess.getSwitchStmtRule()); } 
	 EOF 
;

// Rule SwitchStmt
ruleSwitchStmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSwitchStmtAccess().getGroup()); }
		(rule__SwitchStmt__Group__0)
		{ after(grammarAccess.getSwitchStmtAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExprCaseClause
entryRuleExprCaseClause
:
{ before(grammarAccess.getExprCaseClauseRule()); }
	 ruleExprCaseClause
{ after(grammarAccess.getExprCaseClauseRule()); } 
	 EOF 
;

// Rule ExprCaseClause
ruleExprCaseClause 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExprCaseClauseAccess().getGroup()); }
		(rule__ExprCaseClause__Group__0)
		{ after(grammarAccess.getExprCaseClauseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExprSwitchCase
entryRuleExprSwitchCase
:
{ before(grammarAccess.getExprSwitchCaseRule()); }
	 ruleExprSwitchCase
{ after(grammarAccess.getExprSwitchCaseRule()); } 
	 EOF 
;

// Rule ExprSwitchCase
ruleExprSwitchCase 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExprSwitchCaseAccess().getAlternatives()); }
		(rule__ExprSwitchCase__Alternatives)
		{ after(grammarAccess.getExprSwitchCaseAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleswitch_stmt_linha
entryRuleswitch_stmt_linha
:
{ before(grammarAccess.getSwitch_stmt_linhaRule()); }
	 ruleswitch_stmt_linha
{ after(grammarAccess.getSwitch_stmt_linhaRule()); } 
	 EOF 
;

// Rule switch_stmt_linha
ruleswitch_stmt_linha 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSwitch_stmt_linhaAccess().getAlternatives()); }
		(rule__Switch_stmt_linha__Alternatives)
		{ after(grammarAccess.getSwitch_stmt_linhaAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypeSwitchGuard
entryRuleTypeSwitchGuard
:
{ before(grammarAccess.getTypeSwitchGuardRule()); }
	 ruleTypeSwitchGuard
{ after(grammarAccess.getTypeSwitchGuardRule()); } 
	 EOF 
;

// Rule TypeSwitchGuard
ruleTypeSwitchGuard 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeSwitchGuardAccess().getGroup()); }
		(rule__TypeSwitchGuard__Group__0)
		{ after(grammarAccess.getTypeSwitchGuardAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypeCaseClause
entryRuleTypeCaseClause
:
{ before(grammarAccess.getTypeCaseClauseRule()); }
	 ruleTypeCaseClause
{ after(grammarAccess.getTypeCaseClauseRule()); } 
	 EOF 
;

// Rule TypeCaseClause
ruleTypeCaseClause 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeCaseClauseAccess().getGroup()); }
		(rule__TypeCaseClause__Group__0)
		{ after(grammarAccess.getTypeCaseClauseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypeSwitchCase
entryRuleTypeSwitchCase
:
{ before(grammarAccess.getTypeSwitchCaseRule()); }
	 ruleTypeSwitchCase
{ after(grammarAccess.getTypeSwitchCaseRule()); } 
	 EOF 
;

// Rule TypeSwitchCase
ruleTypeSwitchCase 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeSwitchCaseAccess().getAlternatives()); }
		(rule__TypeSwitchCase__Alternatives)
		{ after(grammarAccess.getTypeSwitchCaseAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypeList
entryRuleTypeList
:
{ before(grammarAccess.getTypeListRule()); }
	 ruleTypeList
{ after(grammarAccess.getTypeListRule()); } 
	 EOF 
;

// Rule TypeList
ruleTypeList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeListAccess().getGroup()); }
		(rule__TypeList__Group__0)
		{ after(grammarAccess.getTypeListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleForStmt
entryRuleForStmt
:
{ before(grammarAccess.getForStmtRule()); }
	 ruleForStmt
{ after(grammarAccess.getForStmtRule()); } 
	 EOF 
;

// Rule ForStmt
ruleForStmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getForStmtAccess().getGroup()); }
		(rule__ForStmt__Group__0)
		{ after(grammarAccess.getForStmtAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCondition
entryRuleCondition
:
{ before(grammarAccess.getConditionRule()); }
	 ruleCondition
{ after(grammarAccess.getConditionRule()); } 
	 EOF 
;

// Rule Condition
ruleCondition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConditionAccess().getExpressionAssignment()); }
		(rule__Condition__ExpressionAssignment)
		{ after(grammarAccess.getConditionAccess().getExpressionAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleForClause
entryRuleForClause
:
{ before(grammarAccess.getForClauseRule()); }
	 ruleForClause
{ after(grammarAccess.getForClauseRule()); } 
	 EOF 
;

// Rule ForClause
ruleForClause 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getForClauseAccess().getGroup()); }
		(rule__ForClause__Group__0)
		{ after(grammarAccess.getForClauseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInitStmt
entryRuleInitStmt
:
{ before(grammarAccess.getInitStmtRule()); }
	 ruleInitStmt
{ after(grammarAccess.getInitStmtRule()); } 
	 EOF 
;

// Rule InitStmt
ruleInitStmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInitStmtAccess().getSimpleStmtAssignment()); }
		(rule__InitStmt__SimpleStmtAssignment)
		{ after(grammarAccess.getInitStmtAccess().getSimpleStmtAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePostStmt
entryRulePostStmt
:
{ before(grammarAccess.getPostStmtRule()); }
	 rulePostStmt
{ after(grammarAccess.getPostStmtRule()); } 
	 EOF 
;

// Rule PostStmt
rulePostStmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPostStmtAccess().getSimpleStmtAssignment()); }
		(rule__PostStmt__SimpleStmtAssignment)
		{ after(grammarAccess.getPostStmtAccess().getSimpleStmtAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRangeClause
entryRuleRangeClause
:
{ before(grammarAccess.getRangeClauseRule()); }
	 ruleRangeClause
{ after(grammarAccess.getRangeClauseRule()); } 
	 EOF 
;

// Rule RangeClause
ruleRangeClause 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRangeClauseAccess().getGroup()); }
		(rule__RangeClause__Group__0)
		{ after(grammarAccess.getRangeClauseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGoStmt
entryRuleGoStmt
:
{ before(grammarAccess.getGoStmtRule()); }
	 ruleGoStmt
{ after(grammarAccess.getGoStmtRule()); } 
	 EOF 
;

// Rule GoStmt
ruleGoStmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGoStmtAccess().getGroup()); }
		(rule__GoStmt__Group__0)
		{ after(grammarAccess.getGoStmtAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSelectStmt
entryRuleSelectStmt
:
{ before(grammarAccess.getSelectStmtRule()); }
	 ruleSelectStmt
{ after(grammarAccess.getSelectStmtRule()); } 
	 EOF 
;

// Rule SelectStmt
ruleSelectStmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSelectStmtAccess().getGroup()); }
		(rule__SelectStmt__Group__0)
		{ after(grammarAccess.getSelectStmtAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCommClause
entryRuleCommClause
:
{ before(grammarAccess.getCommClauseRule()); }
	 ruleCommClause
{ after(grammarAccess.getCommClauseRule()); } 
	 EOF 
;

// Rule CommClause
ruleCommClause 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCommClauseAccess().getGroup()); }
		(rule__CommClause__Group__0)
		{ after(grammarAccess.getCommClauseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCommCase
entryRuleCommCase
:
{ before(grammarAccess.getCommCaseRule()); }
	 ruleCommCase
{ after(grammarAccess.getCommCaseRule()); } 
	 EOF 
;

// Rule CommCase
ruleCommCase 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCommCaseAccess().getAlternatives()); }
		(rule__CommCase__Alternatives)
		{ after(grammarAccess.getCommCaseAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRecvStmt
entryRuleRecvStmt
:
{ before(grammarAccess.getRecvStmtRule()); }
	 ruleRecvStmt
{ after(grammarAccess.getRecvStmtRule()); } 
	 EOF 
;

// Rule RecvStmt
ruleRecvStmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRecvStmtAccess().getGroup()); }
		(rule__RecvStmt__Group__0)
		{ after(grammarAccess.getRecvStmtAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRecvExpr
entryRuleRecvExpr
:
{ before(grammarAccess.getRecvExprRule()); }
	 ruleRecvExpr
{ after(grammarAccess.getRecvExprRule()); } 
	 EOF 
;

// Rule RecvExpr
ruleRecvExpr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRecvExprAccess().getExpressionAssignment()); }
		(rule__RecvExpr__ExpressionAssignment)
		{ after(grammarAccess.getRecvExprAccess().getExpressionAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleReturnStmt
entryRuleReturnStmt
:
{ before(grammarAccess.getReturnStmtRule()); }
	 ruleReturnStmt
{ after(grammarAccess.getReturnStmtRule()); } 
	 EOF 
;

// Rule ReturnStmt
ruleReturnStmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getReturnStmtAccess().getGroup()); }
		(rule__ReturnStmt__Group__0)
		{ after(grammarAccess.getReturnStmtAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBreakStmt
entryRuleBreakStmt
:
{ before(grammarAccess.getBreakStmtRule()); }
	 ruleBreakStmt
{ after(grammarAccess.getBreakStmtRule()); } 
	 EOF 
;

// Rule BreakStmt
ruleBreakStmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBreakStmtAccess().getGroup()); }
		(rule__BreakStmt__Group__0)
		{ after(grammarAccess.getBreakStmtAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleContinueStmt
entryRuleContinueStmt
:
{ before(grammarAccess.getContinueStmtRule()); }
	 ruleContinueStmt
{ after(grammarAccess.getContinueStmtRule()); } 
	 EOF 
;

// Rule ContinueStmt
ruleContinueStmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getContinueStmtAccess().getGroup()); }
		(rule__ContinueStmt__Group__0)
		{ after(grammarAccess.getContinueStmtAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGotoStmt
entryRuleGotoStmt
:
{ before(grammarAccess.getGotoStmtRule()); }
	 ruleGotoStmt
{ after(grammarAccess.getGotoStmtRule()); } 
	 EOF 
;

// Rule GotoStmt
ruleGotoStmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGotoStmtAccess().getGroup()); }
		(rule__GotoStmt__Group__0)
		{ after(grammarAccess.getGotoStmtAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFallthroughStmt
entryRuleFallthroughStmt
:
{ before(grammarAccess.getFallthroughStmtRule()); }
	 ruleFallthroughStmt
{ after(grammarAccess.getFallthroughStmtRule()); } 
	 EOF 
;

// Rule FallthroughStmt
ruleFallthroughStmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFallthroughStmtAccess().getFallthroughKeyword()); }
		'fallthrough'
		{ after(grammarAccess.getFallthroughStmtAccess().getFallthroughKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDeferStmt
entryRuleDeferStmt
:
{ before(grammarAccess.getDeferStmtRule()); }
	 ruleDeferStmt
{ after(grammarAccess.getDeferStmtRule()); } 
	 EOF 
;

// Rule DeferStmt
ruleDeferStmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDeferStmtAccess().getGroup()); }
		(rule__DeferStmt__Group__0)
		{ after(grammarAccess.getDeferStmtAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePackageClause
entryRulePackageClause
:
{ before(grammarAccess.getPackageClauseRule()); }
	 rulePackageClause
{ after(grammarAccess.getPackageClauseRule()); } 
	 EOF 
;

// Rule PackageClause
rulePackageClause 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPackageClauseAccess().getGroup()); }
		(rule__PackageClause__Group__0)
		{ after(grammarAccess.getPackageClauseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePackageName
entryRulePackageName
:
{ before(grammarAccess.getPackageNameRule()); }
	 rulePackageName
{ after(grammarAccess.getPackageNameRule()); } 
	 EOF 
;

// Rule PackageName
rulePackageName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPackageNameAccess().getIdentifierAssignment()); }
		(rule__PackageName__IdentifierAssignment)
		{ after(grammarAccess.getPackageNameAccess().getIdentifierAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleImportDecl
entryRuleImportDecl
:
{ before(grammarAccess.getImportDeclRule()); }
	 ruleImportDecl
{ after(grammarAccess.getImportDeclRule()); } 
	 EOF 
;

// Rule ImportDecl
ruleImportDecl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImportDeclAccess().getGroup()); }
		(rule__ImportDecl__Group__0)
		{ after(grammarAccess.getImportDeclAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleImportSpec
entryRuleImportSpec
:
{ before(grammarAccess.getImportSpecRule()); }
	 ruleImportSpec
{ after(grammarAccess.getImportSpecRule()); } 
	 EOF 
;

// Rule ImportSpec
ruleImportSpec 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImportSpecAccess().getGroup()); }
		(rule__ImportSpec__Group__0)
		{ after(grammarAccess.getImportSpecAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleImportPath
entryRuleImportPath
:
{ before(grammarAccess.getImportPathRule()); }
	 ruleImportPath
{ after(grammarAccess.getImportPathRule()); } 
	 EOF 
;

// Rule ImportPath
ruleImportPath 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImportPathAccess().getString_litAssignment()); }
		(rule__ImportPath__String_litAssignment)
		{ after(grammarAccess.getImportPathAccess().getString_litAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleidentifier
entryRuleidentifier
:
{ before(grammarAccess.getIdentifierRule()); }
	 ruleidentifier
{ after(grammarAccess.getIdentifierRule()); } 
	 EOF 
;

// Rule identifier
ruleidentifier 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIdentifierAccess().getGroup()); }
		(rule__Identifier__Group__0)
		{ after(grammarAccess.getIdentifierAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleint_lit
entryRuleint_lit
:
{ before(grammarAccess.getInt_litRule()); }
	 ruleint_lit
{ after(grammarAccess.getInt_litRule()); } 
	 EOF 
;

// Rule int_lit
ruleint_lit 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInt_litAccess().getAlternatives()); }
		(rule__Int_lit__Alternatives)
		{ after(grammarAccess.getInt_litAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuledecimal_lit
entryRuledecimal_lit
:
{ before(grammarAccess.getDecimal_litRule()); }
	 ruledecimal_lit
{ after(grammarAccess.getDecimal_litRule()); } 
	 EOF 
;

// Rule decimal_lit
ruledecimal_lit 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDecimal_litAccess().getGroup()); }
		(rule__Decimal_lit__Group__0)
		{ after(grammarAccess.getDecimal_litAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleoctal_lit
entryRuleoctal_lit
:
{ before(grammarAccess.getOctal_litRule()); }
	 ruleoctal_lit
{ after(grammarAccess.getOctal_litRule()); } 
	 EOF 
;

// Rule octal_lit
ruleoctal_lit 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOctal_litAccess().getGroup()); }
		(rule__Octal_lit__Group__0)
		{ after(grammarAccess.getOctal_litAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulehex_lit
entryRulehex_lit
:
{ before(grammarAccess.getHex_litRule()); }
	 rulehex_lit
{ after(grammarAccess.getHex_litRule()); } 
	 EOF 
;

// Rule hex_lit
rulehex_lit 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getHex_litAccess().getGroup()); }
		(rule__Hex_lit__Group__0)
		{ after(grammarAccess.getHex_litAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulefloat_lit
entryRulefloat_lit
:
{ before(grammarAccess.getFloat_litRule()); }
	 rulefloat_lit
{ after(grammarAccess.getFloat_litRule()); } 
	 EOF 
;

// Rule float_lit
rulefloat_lit 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFloat_litAccess().getAlternatives()); }
		(rule__Float_lit__Alternatives)
		{ after(grammarAccess.getFloat_litAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulestring_lit
entryRulestring_lit
:
{ before(grammarAccess.getString_litRule()); }
	 rulestring_lit
{ after(grammarAccess.getString_litRule()); } 
	 EOF 
;

// Rule string_lit
rulestring_lit 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getString_litAccess().getAlternatives()); }
		(rule__String_lit__Alternatives)
		{ after(grammarAccess.getString_litAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleraw_string_lit
entryRuleraw_string_lit
:
{ before(grammarAccess.getRaw_string_litRule()); }
	 ruleraw_string_lit
{ after(grammarAccess.getRaw_string_litRule()); } 
	 EOF 
;

// Rule raw_string_lit
ruleraw_string_lit 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRaw_string_litAccess().getGroup()); }
		(rule__Raw_string_lit__Group__0)
		{ after(grammarAccess.getRaw_string_litAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleinterpreted_string_lit
entryRuleinterpreted_string_lit
:
{ before(grammarAccess.getInterpreted_string_litRule()); }
	 ruleinterpreted_string_lit
{ after(grammarAccess.getInterpreted_string_litRule()); } 
	 EOF 
;

// Rule interpreted_string_lit
ruleinterpreted_string_lit 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInterpreted_string_litAccess().getGroup()); }
		(rule__Interpreted_string_lit__Group__0)
		{ after(grammarAccess.getInterpreted_string_litAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleunicode_char
entryRuleunicode_char
:
{ before(grammarAccess.getUnicode_charRule()); }
	 ruleunicode_char
{ after(grammarAccess.getUnicode_charRule()); } 
	 EOF 
;

// Rule unicode_char
ruleunicode_char 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnicode_charAccess().getAlternatives()); }
		(rule__Unicode_char__Alternatives)
		{ after(grammarAccess.getUnicode_charAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulenewline
entryRulenewline
:
{ before(grammarAccess.getNewlineRule()); }
	 rulenewline
{ after(grammarAccess.getNewlineRule()); } 
	 EOF 
;

// Rule newline
rulenewline 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNewlineAccess().getU000AKeyword()); }
		'U+000A'
		{ after(grammarAccess.getNewlineAccess().getU000AKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuledecimals
entryRuledecimals
:
{ before(grammarAccess.getDecimalsRule()); }
	 ruledecimals
{ after(grammarAccess.getDecimalsRule()); } 
	 EOF 
;

// Rule decimals
ruledecimals 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDecimalsAccess().getGroup()); }
		(rule__Decimals__Group__0)
		{ after(grammarAccess.getDecimalsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleexponent
entryRuleexponent
:
{ before(grammarAccess.getExponentRule()); }
	 ruleexponent
{ after(grammarAccess.getExponentRule()); } 
	 EOF 
;

// Rule exponent
ruleexponent 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExponentAccess().getGroup()); }
		(rule__Exponent__Group__0)
		{ after(grammarAccess.getExponentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulerune_lit
entryRulerune_lit
:
{ before(grammarAccess.getRune_litRule()); }
	 rulerune_lit
{ after(grammarAccess.getRune_litRule()); } 
	 EOF 
;

// Rule rune_lit
rulerune_lit 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRune_litAccess().getGroup()); }
		(rule__Rune_lit__Group__0)
		{ after(grammarAccess.getRune_litAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleunicode_value
entryRuleunicode_value
:
{ before(grammarAccess.getUnicode_valueRule()); }
	 ruleunicode_value
{ after(grammarAccess.getUnicode_valueRule()); } 
	 EOF 
;

// Rule unicode_value
ruleunicode_value 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnicode_valueAccess().getAlternatives()); }
		(rule__Unicode_value__Alternatives)
		{ after(grammarAccess.getUnicode_valueAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulebyte_value
entryRulebyte_value
:
{ before(grammarAccess.getByte_valueRule()); }
	 rulebyte_value
{ after(grammarAccess.getByte_valueRule()); } 
	 EOF 
;

// Rule byte_value
rulebyte_value 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getByte_valueAccess().getAlternatives()); }
		(rule__Byte_value__Alternatives)
		{ after(grammarAccess.getByte_valueAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleoctal_byte_value
entryRuleoctal_byte_value
:
{ before(grammarAccess.getOctal_byte_valueRule()); }
	 ruleoctal_byte_value
{ after(grammarAccess.getOctal_byte_valueRule()); } 
	 EOF 
;

// Rule octal_byte_value
ruleoctal_byte_value 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOctal_byte_valueAccess().getGroup()); }
		(rule__Octal_byte_value__Group__0)
		{ after(grammarAccess.getOctal_byte_valueAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulehex_byte_value
entryRulehex_byte_value
:
{ before(grammarAccess.getHex_byte_valueRule()); }
	 rulehex_byte_value
{ after(grammarAccess.getHex_byte_valueRule()); } 
	 EOF 
;

// Rule hex_byte_value
rulehex_byte_value 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getHex_byte_valueAccess().getGroup()); }
		(rule__Hex_byte_value__Group__0)
		{ after(grammarAccess.getHex_byte_valueAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulelittle_u_value
entryRulelittle_u_value
:
{ before(grammarAccess.getLittle_u_valueRule()); }
	 rulelittle_u_value
{ after(grammarAccess.getLittle_u_valueRule()); } 
	 EOF 
;

// Rule little_u_value
rulelittle_u_value 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLittle_u_valueAccess().getGroup()); }
		(rule__Little_u_value__Group__0)
		{ after(grammarAccess.getLittle_u_valueAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulebig_u_value
entryRulebig_u_value
:
{ before(grammarAccess.getBig_u_valueRule()); }
	 rulebig_u_value
{ after(grammarAccess.getBig_u_valueRule()); } 
	 EOF 
;

// Rule big_u_value
rulebig_u_value 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBig_u_valueAccess().getGroup()); }
		(rule__Big_u_value__Group__0)
		{ after(grammarAccess.getBig_u_valueAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleescaped_char
entryRuleescaped_char
:
{ before(grammarAccess.getEscaped_charRule()); }
	 ruleescaped_char
{ after(grammarAccess.getEscaped_charRule()); } 
	 EOF 
;

// Rule escaped_char
ruleescaped_char 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEscaped_charAccess().getGroup()); }
		(rule__Escaped_char__Group__0)
		{ after(grammarAccess.getEscaped_charAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCHAR
entryRuleCHAR
:
{ before(grammarAccess.getCHARRule()); }
	 ruleCHAR
{ after(grammarAccess.getCHARRule()); } 
	 EOF 
;

// Rule CHAR
ruleCHAR 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCHARAccess().getApostropheKeyword()); }
		'\''
		{ after(grammarAccess.getCHARAccess().getApostropheKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getTypeNameAssignment_0()); }
		(rule__Type__TypeNameAssignment_0)
		{ after(grammarAccess.getTypeAccess().getTypeNameAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getTypeLitAssignment_1()); }
		(rule__Type__TypeLitAssignment_1)
		{ after(grammarAccess.getTypeAccess().getTypeLitAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getGroup_2()); }
		(rule__Type__Group_2__0)
		{ after(grammarAccess.getTypeAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeNameLinha__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeNameLinhaAccess().getGroup_0()); }
		(rule__TypeNameLinha__Group_0__0)
		{ after(grammarAccess.getTypeNameLinhaAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeNameLinhaAccess().getGroup_1()); }
		(rule__TypeNameLinha__Group_1__0)
		{ after(grammarAccess.getTypeNameLinhaAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getTypeNameLinhaAccess().getGroup_2()); }
		(rule__TypeNameLinha__Group_2__0)
		{ after(grammarAccess.getTypeNameLinhaAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeLit__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeLitAccess().getGroup_0()); }
		(rule__TypeLit__Group_0__0)
		{ after(grammarAccess.getTypeLitAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeLitAccess().getStructTypeAssignment_1()); }
		(rule__TypeLit__StructTypeAssignment_1)
		{ after(grammarAccess.getTypeLitAccess().getStructTypeAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getTypeLitAccess().getPointerTypeAssignment_2()); }
		(rule__TypeLit__PointerTypeAssignment_2)
		{ after(grammarAccess.getTypeLitAccess().getPointerTypeAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getTypeLitAccess().getFunctionTypeAssignment_3()); }
		(rule__TypeLit__FunctionTypeAssignment_3)
		{ after(grammarAccess.getTypeLitAccess().getFunctionTypeAssignment_3()); }
	)
	|
	(
		{ before(grammarAccess.getTypeLitAccess().getInterfaceTypeAssignment_4()); }
		(rule__TypeLit__InterfaceTypeAssignment_4)
		{ after(grammarAccess.getTypeLitAccess().getInterfaceTypeAssignment_4()); }
	)
	|
	(
		{ before(grammarAccess.getTypeLitAccess().getMapTypeAssignment_5()); }
		(rule__TypeLit__MapTypeAssignment_5)
		{ after(grammarAccess.getTypeLitAccess().getMapTypeAssignment_5()); }
	)
	|
	(
		{ before(grammarAccess.getTypeLitAccess().getChannelTypeAssignment_6()); }
		(rule__TypeLit__ChannelTypeAssignment_6)
		{ after(grammarAccess.getTypeLitAccess().getChannelTypeAssignment_6()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeLitLinha__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeLitLinhaAccess().getGroup_0()); }
		(rule__TypeLitLinha__Group_0__0)
		{ after(grammarAccess.getTypeLitLinhaAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeLitLinhaAccess().getGroup_1()); }
		(rule__TypeLitLinha__Group_1__0)
		{ after(grammarAccess.getTypeLitLinhaAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getTypeLitLinhaAccess().getGroup_2()); }
		(rule__TypeLitLinha__Group_2__0)
		{ after(grammarAccess.getTypeLitLinhaAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldDecl__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldDeclAccess().getGroup_0_0()); }
		(rule__FieldDecl__Group_0_0__0)
		{ after(grammarAccess.getFieldDeclAccess().getGroup_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getFieldDeclAccess().getEmbeddedFieldAssignment_0_1()); }
		(rule__FieldDecl__EmbeddedFieldAssignment_0_1)
		{ after(grammarAccess.getFieldDeclAccess().getEmbeddedFieldAssignment_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Result__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getResultAccess().getParametersAssignment_0()); }
		(rule__Result__ParametersAssignment_0)
		{ after(grammarAccess.getResultAccess().getParametersAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getResultAccess().getTypeAssignment_1()); }
		(rule__Result__TypeAssignment_1)
		{ after(grammarAccess.getResultAccess().getTypeAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodSpec__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodSpecAccess().getGroup_0()); }
		(rule__MethodSpec__Group_0__0)
		{ after(grammarAccess.getMethodSpecAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getMethodSpecAccess().getInterfaceTypeNameAssignment_1()); }
		(rule__MethodSpec__InterfaceTypeNameAssignment_1)
		{ after(grammarAccess.getMethodSpecAccess().getInterfaceTypeNameAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelType__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChannelTypeAccess().getChanKeyword_0_0()); }
		'chan'
		{ after(grammarAccess.getChannelTypeAccess().getChanKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getChannelTypeAccess().getGroup_0_1()); }
		(rule__ChannelType__Group_0_1__0)
		{ after(grammarAccess.getChannelTypeAccess().getGroup_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getChannelTypeAccess().getGroup_0_2()); }
		(rule__ChannelType__Group_0_2__0)
		{ after(grammarAccess.getChannelTypeAccess().getGroup_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclarationAccess().getConstDeclAssignment_0()); }
		(rule__Declaration__ConstDeclAssignment_0)
		{ after(grammarAccess.getDeclarationAccess().getConstDeclAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getDeclarationAccess().getTypeDeclAssignment_1()); }
		(rule__Declaration__TypeDeclAssignment_1)
		{ after(grammarAccess.getDeclarationAccess().getTypeDeclAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getDeclarationAccess().getVarDeclAssignment_2()); }
		(rule__Declaration__VarDeclAssignment_2)
		{ after(grammarAccess.getDeclarationAccess().getVarDeclAssignment_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TopLevelDecl__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTopLevelDeclAccess().getDeclarationAssignment_0()); }
		(rule__TopLevelDecl__DeclarationAssignment_0)
		{ after(grammarAccess.getTopLevelDeclAccess().getDeclarationAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getTopLevelDeclAccess().getGroup_1()); }
		(rule__TopLevelDecl__Group_1__0)
		{ after(grammarAccess.getTopLevelDeclAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TopLevelDeclLinha__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTopLevelDeclLinhaAccess().getGroup_0()); }
		(rule__TopLevelDeclLinha__Group_0__0)
		{ after(grammarAccess.getTopLevelDeclLinhaAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getTopLevelDeclLinhaAccess().getGroup_1()); }
		(rule__TopLevelDeclLinha__Group_1__0)
		{ after(grammarAccess.getTopLevelDeclLinhaAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstDecl__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstDeclAccess().getConstSpecAssignment_2_0()); }
		(rule__ConstDecl__ConstSpecAssignment_2_0)
		{ after(grammarAccess.getConstDeclAccess().getConstSpecAssignment_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getConstDeclAccess().getGroup_2_1()); }
		(rule__ConstDecl__Group_2_1__0)
		{ after(grammarAccess.getConstDeclAccess().getGroup_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDecl__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeDeclAccess().getTypeSpecAssignment_2_0()); }
		(rule__TypeDecl__TypeSpecAssignment_2_0)
		{ after(grammarAccess.getTypeDeclAccess().getTypeSpecAssignment_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeDeclAccess().getGroup_2_1()); }
		(rule__TypeDecl__Group_2_1__0)
		{ after(grammarAccess.getTypeDeclAccess().getGroup_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSpec__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeSpecAccess().getAliasDeclParserRuleCall_0()); }
		ruleAliasDecl
		{ after(grammarAccess.getTypeSpecAccess().getAliasDeclParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeSpecAccess().getTypeDefParserRuleCall_1()); }
		ruleTypeDef
		{ after(grammarAccess.getTypeSpecAccess().getTypeDefParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarDeclAccess().getVarSpecAssignment_2_0()); }
		(rule__VarDecl__VarSpecAssignment_2_0)
		{ after(grammarAccess.getVarDeclAccess().getVarSpecAssignment_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getVarDeclAccess().getGroup_2_1()); }
		(rule__VarDecl__Group_2_1__0)
		{ after(grammarAccess.getVarDeclAccess().getGroup_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarSpec__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarSpecAccess().getGroup_1_0()); }
		(rule__VarSpec__Group_1_0__0)
		{ after(grammarAccess.getVarSpecAccess().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getVarSpecAccess().getGroup_1_1()); }
		(rule__VarSpec__Group_1_1__0)
		{ after(grammarAccess.getVarSpecAccess().getGroup_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operand__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperandAccess().getLiteralAssignment_0()); }
		(rule__Operand__LiteralAssignment_0)
		{ after(grammarAccess.getOperandAccess().getLiteralAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getOperandAccess().getOperandNameAssignment_1()); }
		(rule__Operand__OperandNameAssignment_1)
		{ after(grammarAccess.getOperandAccess().getOperandNameAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getOperandAccess().getGroup_2()); }
		(rule__Operand__Group_2__0)
		{ after(grammarAccess.getOperandAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralAccess().getBasicLitAssignment_0()); }
		(rule__Literal__BasicLitAssignment_0)
		{ after(grammarAccess.getLiteralAccess().getBasicLitAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getCompositeLitParserRuleCall_1()); }
		ruleCompositeLit
		{ after(grammarAccess.getLiteralAccess().getCompositeLitParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getFunctionLitParserRuleCall_2()); }
		ruleFunctionLit
		{ after(grammarAccess.getLiteralAccess().getFunctionLitParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicLit__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBasicLitAccess().getGroup_0()); }
		(rule__BasicLit__Group_0__0)
		{ after(grammarAccess.getBasicLitAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getBasicLitAccess().getFloat_litAssignment_1()); }
		(rule__BasicLit__Float_litAssignment_1)
		{ after(grammarAccess.getBasicLitAccess().getFloat_litAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getBasicLitAccess().getRune_litAssignment_2()); }
		(rule__BasicLit__Rune_litAssignment_2)
		{ after(grammarAccess.getBasicLitAccess().getRune_litAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getBasicLitAccess().getString_litAssignment_3()); }
		(rule__BasicLit__String_litAssignment_3)
		{ after(grammarAccess.getBasicLitAccess().getString_litAssignment_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperandName__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperandNameAccess().getIdentifierParserRuleCall_0()); }
		ruleidentifier
		{ after(grammarAccess.getOperandNameAccess().getIdentifierParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getOperandNameAccess().getQualifiedIdentParserRuleCall_1()); }
		ruleQualifiedIdent
		{ after(grammarAccess.getOperandNameAccess().getQualifiedIdentParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralTypeAccess().getStructTypeAssignment_0()); }
		(rule__LiteralType__StructTypeAssignment_0)
		{ after(grammarAccess.getLiteralTypeAccess().getStructTypeAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralTypeAccess().getGroup_1()); }
		(rule__LiteralType__Group_1__0)
		{ after(grammarAccess.getLiteralTypeAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralTypeAccess().getElementTypeAssignment_2()); }
		(rule__LiteralType__ElementTypeAssignment_2)
		{ after(grammarAccess.getLiteralTypeAccess().getElementTypeAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralTypeAccess().getMapTypeAssignment_3()); }
		(rule__LiteralType__MapTypeAssignment_3)
		{ after(grammarAccess.getLiteralTypeAccess().getMapTypeAssignment_3()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralTypeAccess().getTypeNameAssignment_4()); }
		(rule__LiteralType__TypeNameAssignment_4)
		{ after(grammarAccess.getLiteralTypeAccess().getTypeNameAssignment_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTypeLinha__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralTypeLinhaAccess().getGroup_0()); }
		(rule__LiteralTypeLinha__Group_0__0)
		{ after(grammarAccess.getLiteralTypeLinhaAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralTypeLinhaAccess().getGroup_1()); }
		(rule__LiteralTypeLinha__Group_1__0)
		{ after(grammarAccess.getLiteralTypeLinhaAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralTypeLinhaAccess().getGroup_2()); }
		(rule__LiteralTypeLinha__Group_2__0)
		{ after(grammarAccess.getLiteralTypeLinhaAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementAccess().getExpressionAssignment_0()); }
		(rule__Element__ExpressionAssignment_0)
		{ after(grammarAccess.getElementAccess().getExpressionAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getElementAccess().getLiteralValueAssignment_1()); }
		(rule__Element__LiteralValueAssignment_1)
		{ after(grammarAccess.getElementAccess().getLiteralValueAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Key__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getKeyAccess().getFieldNameAssignment_0()); }
		(rule__Key__FieldNameAssignment_0)
		{ after(grammarAccess.getKeyAccess().getFieldNameAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getKeyAccess().getExpressionAssignment_1()); }
		(rule__Key__ExpressionAssignment_1)
		{ after(grammarAccess.getKeyAccess().getExpressionAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getKeyAccess().getLiteralValueAssignment_2()); }
		(rule__Key__LiteralValueAssignment_2)
		{ after(grammarAccess.getKeyAccess().getLiteralValueAssignment_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExprAccess().getGroup_0()); }
		(rule__PrimaryExpr__Group_0__0)
		{ after(grammarAccess.getPrimaryExprAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExprAccess().getGroup_1()); }
		(rule__PrimaryExpr__Group_1__0)
		{ after(grammarAccess.getPrimaryExprAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExprAccess().getGroup_2()); }
		(rule__PrimaryExpr__Group_2__0)
		{ after(grammarAccess.getPrimaryExprAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprLinha__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExprLinhaAccess().getGroup_0()); }
		(rule__PrimaryExprLinha__Group_0__0)
		{ after(grammarAccess.getPrimaryExprLinhaAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExprLinhaAccess().getGroup_1()); }
		(rule__PrimaryExprLinha__Group_1__0)
		{ after(grammarAccess.getPrimaryExprLinhaAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExprLinhaAccess().getGroup_2()); }
		(rule__PrimaryExprLinha__Group_2__0)
		{ after(grammarAccess.getPrimaryExprLinhaAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExprLinhaAccess().getGroup_3()); }
		(rule__PrimaryExprLinha__Group_3__0)
		{ after(grammarAccess.getPrimaryExprLinhaAccess().getGroup_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ponto__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPontoAccess().getGroup_0()); }
		(rule__Ponto__Group_0__0)
		{ after(grammarAccess.getPontoAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getPontoAccess().getGroup_1()); }
		(rule__Ponto__Group_1__0)
		{ after(grammarAccess.getPontoAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cochetes__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCochetesAccess().getGroup_0()); }
		(rule__Cochetes__Group_0__0)
		{ after(grammarAccess.getCochetesAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getCochetesAccess().getGroup_1()); }
		(rule__Cochetes__Group_1__0)
		{ after(grammarAccess.getCochetesAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Index__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIndexAccess().getGroup_0()); }
		(rule__Index__Group_0__0)
		{ after(grammarAccess.getIndexAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getIndexAccess().getSliceAssignment_1()); }
		(rule__Index__SliceAssignment_1)
		{ after(grammarAccess.getIndexAccess().getSliceAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Alternatives_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgumentsAccess().getExpressionListAssignment_2_0_0()); }
		(rule__Arguments__ExpressionListAssignment_2_0_0)
		{ after(grammarAccess.getArgumentsAccess().getExpressionListAssignment_2_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getArgumentsAccess().getGroup_2_0_1()); }
		(rule__Arguments__Group_2_0_1__0)
		{ after(grammarAccess.getArgumentsAccess().getGroup_2_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLinha__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionLinhaAccess().getGroup_0()); }
		(rule__ExpressionLinha__Group_0__0)
		{ after(grammarAccess.getExpressionLinhaAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionLinhaAccess().getGroup_1()); }
		(rule__ExpressionLinha__Group_1__0)
		{ after(grammarAccess.getExpressionLinhaAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryExprAccess().getPrimaryExprAssignment_0()); }
		(rule__UnaryExpr__PrimaryExprAssignment_0)
		{ after(grammarAccess.getUnaryExprAccess().getPrimaryExprAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getUnaryExprAccess().getGroup_1()); }
		(rule__UnaryExpr__Group_1__0)
		{ after(grammarAccess.getUnaryExprAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Binary_op__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBinary_opAccess().getGroup_0()); }
		(rule__Binary_op__Group_0__0)
		{ after(grammarAccess.getBinary_opAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getBinary_opAccess().getGroup_1()); }
		(rule__Binary_op__Group_1__0)
		{ after(grammarAccess.getBinary_opAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getBinary_opAccess().getRel_opAssignment_2()); }
		(rule__Binary_op__Rel_opAssignment_2)
		{ after(grammarAccess.getBinary_opAccess().getRel_opAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getBinary_opAccess().getAdd_opAssignment_3()); }
		(rule__Binary_op__Add_opAssignment_3)
		{ after(grammarAccess.getBinary_opAccess().getAdd_opAssignment_3()); }
	)
	|
	(
		{ before(grammarAccess.getBinary_opAccess().getMul_opAssignment_4()); }
		(rule__Binary_op__Mul_opAssignment_4)
		{ after(grammarAccess.getBinary_opAccess().getMul_opAssignment_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rel_op__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRel_opAccess().getEqualsSignEqualsSignKeyword_0()); }
		'=='
		{ after(grammarAccess.getRel_opAccess().getEqualsSignEqualsSignKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getRel_opAccess().getExclamationMarkEqualsSignKeyword_1()); }
		'!='
		{ after(grammarAccess.getRel_opAccess().getExclamationMarkEqualsSignKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getRel_opAccess().getLessThanSignKeyword_2()); }
		'<'
		{ after(grammarAccess.getRel_opAccess().getLessThanSignKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getRel_opAccess().getLessThanSignEqualsSignKeyword_3()); }
		'<='
		{ after(grammarAccess.getRel_opAccess().getLessThanSignEqualsSignKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getRel_opAccess().getGreaterThanSignKeyword_4()); }
		'>'
		{ after(grammarAccess.getRel_opAccess().getGreaterThanSignKeyword_4()); }
	)
	|
	(
		{ before(grammarAccess.getRel_opAccess().getGreaterThanSignEqualsSignKeyword_5()); }
		'>='
		{ after(grammarAccess.getRel_opAccess().getGreaterThanSignEqualsSignKeyword_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Add_op__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdd_opAccess().getPlusSignKeyword_0()); }
		'+'
		{ after(grammarAccess.getAdd_opAccess().getPlusSignKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getAdd_opAccess().getHyphenMinusKeyword_1()); }
		'-'
		{ after(grammarAccess.getAdd_opAccess().getHyphenMinusKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getAdd_opAccess().getVerticalLineKeyword_2()); }
		'|'
		{ after(grammarAccess.getAdd_opAccess().getVerticalLineKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getAdd_opAccess().getModifierLetterCircumflexAccentKeyword_3()); }
		'\u02C6'
		{ after(grammarAccess.getAdd_opAccess().getModifierLetterCircumflexAccentKeyword_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mul_op__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMul_opAccess().getAsteriskKeyword_0()); }
		'*'
		{ after(grammarAccess.getMul_opAccess().getAsteriskKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getMul_opAccess().getSolidusKeyword_1()); }
		'/'
		{ after(grammarAccess.getMul_opAccess().getSolidusKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getMul_opAccess().getPercentSignKeyword_2()); }
		'%'
		{ after(grammarAccess.getMul_opAccess().getPercentSignKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getMul_opAccess().getLessThanSignLessThanSignKeyword_3()); }
		'<<'
		{ after(grammarAccess.getMul_opAccess().getLessThanSignLessThanSignKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getMul_opAccess().getGreaterThanSignGreaterThanSignKeyword_4()); }
		'>>'
		{ after(grammarAccess.getMul_opAccess().getGreaterThanSignGreaterThanSignKeyword_4()); }
	)
	|
	(
		{ before(grammarAccess.getMul_opAccess().getAmpersandKeyword_5()); }
		'&'
		{ after(grammarAccess.getMul_opAccess().getAmpersandKeyword_5()); }
	)
	|
	(
		{ before(grammarAccess.getMul_opAccess().getAmpersandCircumflexAccentKeyword_6()); }
		'&^'
		{ after(grammarAccess.getMul_opAccess().getAmpersandCircumflexAccentKeyword_6()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary_op__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnary_opAccess().getPlusSignKeyword_0()); }
		'+'
		{ after(grammarAccess.getUnary_opAccess().getPlusSignKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getUnary_opAccess().getHyphenMinusKeyword_1()); }
		'-'
		{ after(grammarAccess.getUnary_opAccess().getHyphenMinusKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getUnary_opAccess().getExclamationMarkKeyword_2()); }
		'!'
		{ after(grammarAccess.getUnary_opAccess().getExclamationMarkKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getUnary_opAccess().getCircumflexAccentKeyword_3()); }
		'^'
		{ after(grammarAccess.getUnary_opAccess().getCircumflexAccentKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getUnary_opAccess().getAsteriskKeyword_4()); }
		'*'
		{ after(grammarAccess.getUnary_opAccess().getAsteriskKeyword_4()); }
	)
	|
	(
		{ before(grammarAccess.getUnary_opAccess().getAmpersandKeyword_5()); }
		'&'
		{ after(grammarAccess.getUnary_opAccess().getAmpersandKeyword_5()); }
	)
	|
	(
		{ before(grammarAccess.getUnary_opAccess().getLessThanSignHyphenMinusKeyword_6()); }
		'<-'
		{ after(grammarAccess.getUnary_opAccess().getLessThanSignHyphenMinusKeyword_6()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getDeclarationAssignment_0()); }
		(rule__Statement__DeclarationAssignment_0)
		{ after(grammarAccess.getStatementAccess().getDeclarationAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getLabeledStmtAssignment_1()); }
		(rule__Statement__LabeledStmtAssignment_1)
		{ after(grammarAccess.getStatementAccess().getLabeledStmtAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getSimpleStmtAssignment_2()); }
		(rule__Statement__SimpleStmtAssignment_2)
		{ after(grammarAccess.getStatementAccess().getSimpleStmtAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getGoStmtAssignment_3()); }
		(rule__Statement__GoStmtAssignment_3)
		{ after(grammarAccess.getStatementAccess().getGoStmtAssignment_3()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getReturnStmtAssignment_4()); }
		(rule__Statement__ReturnStmtAssignment_4)
		{ after(grammarAccess.getStatementAccess().getReturnStmtAssignment_4()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getBreakStmtAssignment_5()); }
		(rule__Statement__BreakStmtAssignment_5)
		{ after(grammarAccess.getStatementAccess().getBreakStmtAssignment_5()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getContinueStmtAssignment_6()); }
		(rule__Statement__ContinueStmtAssignment_6)
		{ after(grammarAccess.getStatementAccess().getContinueStmtAssignment_6()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getGotoStmtAssignment_7()); }
		(rule__Statement__GotoStmtAssignment_7)
		{ after(grammarAccess.getStatementAccess().getGotoStmtAssignment_7()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getFallthroughStmtAssignment_8()); }
		(rule__Statement__FallthroughStmtAssignment_8)
		{ after(grammarAccess.getStatementAccess().getFallthroughStmtAssignment_8()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getBlockAssignment_9()); }
		(rule__Statement__BlockAssignment_9)
		{ after(grammarAccess.getStatementAccess().getBlockAssignment_9()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getIfStmtAssignment_10()); }
		(rule__Statement__IfStmtAssignment_10)
		{ after(grammarAccess.getStatementAccess().getIfStmtAssignment_10()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getSwitchStmtAssignment_11()); }
		(rule__Statement__SwitchStmtAssignment_11)
		{ after(grammarAccess.getStatementAccess().getSwitchStmtAssignment_11()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getSelectStmtAssignment_12()); }
		(rule__Statement__SelectStmtAssignment_12)
		{ after(grammarAccess.getStatementAccess().getSelectStmtAssignment_12()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getForStmtAssignment_13()); }
		(rule__Statement__ForStmtAssignment_13)
		{ after(grammarAccess.getStatementAccess().getForStmtAssignment_13()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getDeferStmtAssignment_14()); }
		(rule__Statement__DeferStmtAssignment_14)
		{ after(grammarAccess.getStatementAccess().getDeferStmtAssignment_14()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStmt__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleStmtAccess().getEmptyStmtAssignment_0()); }
		(rule__SimpleStmt__EmptyStmtAssignment_0)
		{ after(grammarAccess.getSimpleStmtAccess().getEmptyStmtAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getSimpleStmtAccess().getExpressionStmtAssignment_1()); }
		(rule__SimpleStmt__ExpressionStmtAssignment_1)
		{ after(grammarAccess.getSimpleStmtAccess().getExpressionStmtAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getSimpleStmtAccess().getSendStmtAssignment_2()); }
		(rule__SimpleStmt__SendStmtAssignment_2)
		{ after(grammarAccess.getSimpleStmtAccess().getSendStmtAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getSimpleStmtAccess().getIncDecStmtAssignment_3()); }
		(rule__SimpleStmt__IncDecStmtAssignment_3)
		{ after(grammarAccess.getSimpleStmtAccess().getIncDecStmtAssignment_3()); }
	)
	|
	(
		{ before(grammarAccess.getSimpleStmtAccess().getAssignmentAssignment_4()); }
		(rule__SimpleStmt__AssignmentAssignment_4)
		{ after(grammarAccess.getSimpleStmtAccess().getAssignmentAssignment_4()); }
	)
	|
	(
		{ before(grammarAccess.getSimpleStmtAccess().getShortVarDeclAssignment_5()); }
		(rule__SimpleStmt__ShortVarDeclAssignment_5)
		{ after(grammarAccess.getSimpleStmtAccess().getShortVarDeclAssignment_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IncDecStmt__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIncDecStmtAccess().getPlusSignPlusSignKeyword_1_0()); }
		'++'
		{ after(grammarAccess.getIncDecStmtAccess().getPlusSignPlusSignKeyword_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getIncDecStmtAccess().getHyphenMinusHyphenMinusKeyword_1_1()); }
		'--'
		{ after(grammarAccess.getIncDecStmtAccess().getHyphenMinusHyphenMinusKeyword_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assign_op__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssign_opAccess().getAdd_opParserRuleCall_0_0()); }
		ruleadd_op
		{ after(grammarAccess.getAssign_opAccess().getAdd_opParserRuleCall_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getAssign_opAccess().getMul_opParserRuleCall_0_1()); }
		rulemul_op
		{ after(grammarAccess.getAssign_opAccess().getMul_opParserRuleCall_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Alternatives_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfStmtAccess().getIfStmtAssignment_4_1_0()); }
		(rule__IfStmt__IfStmtAssignment_4_1_0)
		{ after(grammarAccess.getIfStmtAccess().getIfStmtAssignment_4_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getIfStmtAccess().getBlockAssignment_4_1_1()); }
		(rule__IfStmt__BlockAssignment_4_1_1)
		{ after(grammarAccess.getIfStmtAccess().getBlockAssignment_4_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSwitchCase__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprSwitchCaseAccess().getGroup_0()); }
		(rule__ExprSwitchCase__Group_0__0)
		{ after(grammarAccess.getExprSwitchCaseAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getExprSwitchCaseAccess().getGroup_1()); }
		(rule__ExprSwitchCase__Group_1__0)
		{ after(grammarAccess.getExprSwitchCaseAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Switch_stmt_linha__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSwitch_stmt_linhaAccess().getGroup_0()); }
		(rule__Switch_stmt_linha__Group_0__0)
		{ after(grammarAccess.getSwitch_stmt_linhaAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getSwitch_stmt_linhaAccess().getGroup_1()); }
		(rule__Switch_stmt_linha__Group_1__0)
		{ after(grammarAccess.getSwitch_stmt_linhaAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getSwitch_stmt_linhaAccess().getGroup_2()); }
		(rule__Switch_stmt_linha__Group_2__0)
		{ after(grammarAccess.getSwitch_stmt_linhaAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSwitchCase__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeSwitchCaseAccess().getGroup_0()); }
		(rule__TypeSwitchCase__Group_0__0)
		{ after(grammarAccess.getTypeSwitchCaseAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeSwitchCaseAccess().getGroup_1()); }
		(rule__TypeSwitchCase__Group_1__0)
		{ after(grammarAccess.getTypeSwitchCaseAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForStmtAccess().getConditionAssignment_1_0()); }
		(rule__ForStmt__ConditionAssignment_1_0)
		{ after(grammarAccess.getForStmtAccess().getConditionAssignment_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getForStmtAccess().getForClauseAssignment_1_1()); }
		(rule__ForStmt__ForClauseAssignment_1_1)
		{ after(grammarAccess.getForStmtAccess().getForClauseAssignment_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getForStmtAccess().getRangeClauseAssignment_1_2()); }
		(rule__ForStmt__RangeClauseAssignment_1_2)
		{ after(grammarAccess.getForStmtAccess().getRangeClauseAssignment_1_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeClause__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRangeClauseAccess().getGroup_0_0()); }
		(rule__RangeClause__Group_0_0__0)
		{ after(grammarAccess.getRangeClauseAccess().getGroup_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getRangeClauseAccess().getGroup_0_1()); }
		(rule__RangeClause__Group_0_1__0)
		{ after(grammarAccess.getRangeClauseAccess().getGroup_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommCase__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommCaseAccess().getGroup_0()); }
		(rule__CommCase__Group_0__0)
		{ after(grammarAccess.getCommCaseAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getCommCaseAccess().getGroup_1()); }
		(rule__CommCase__Group_1__0)
		{ after(grammarAccess.getCommCaseAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommCase__Alternatives_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommCaseAccess().getSendStmtAssignment_0_1_0()); }
		(rule__CommCase__SendStmtAssignment_0_1_0)
		{ after(grammarAccess.getCommCaseAccess().getSendStmtAssignment_0_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getCommCaseAccess().getRecvStmtAssignment_0_1_1()); }
		(rule__CommCase__RecvStmtAssignment_0_1_1)
		{ after(grammarAccess.getCommCaseAccess().getRecvStmtAssignment_0_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RecvStmt__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRecvStmtAccess().getGroup_0_0()); }
		(rule__RecvStmt__Group_0_0__0)
		{ after(grammarAccess.getRecvStmtAccess().getGroup_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getRecvStmtAccess().getGroup_0_1()); }
		(rule__RecvStmt__Group_0_1__0)
		{ after(grammarAccess.getRecvStmtAccess().getGroup_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDecl__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportDeclAccess().getImportSpecAssignment_2_0()); }
		(rule__ImportDecl__ImportSpecAssignment_2_0)
		{ after(grammarAccess.getImportDeclAccess().getImportSpecAssignment_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getImportDeclAccess().getGroup_2_1()); }
		(rule__ImportDecl__Group_2_1__0)
		{ after(grammarAccess.getImportDeclAccess().getGroup_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportSpec__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportSpecAccess().getFullStopKeyword_0_0()); }
		'.'
		{ after(grammarAccess.getImportSpecAccess().getFullStopKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getImportSpecAccess().getPackageNameAssignment_0_1()); }
		(rule__ImportSpec__PackageNameAssignment_0_1)
		{ after(grammarAccess.getImportSpecAccess().getPackageNameAssignment_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIdentifierAccess().getLETTERAssignment_1_0()); }
		(rule__Identifier__LETTERAssignment_1_0)
		{ after(grammarAccess.getIdentifierAccess().getLETTERAssignment_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getIdentifierAccess().getDECIMAL_DIGITAssignment_1_1()); }
		(rule__Identifier__DECIMAL_DIGITAssignment_1_1)
		{ after(grammarAccess.getIdentifierAccess().getDECIMAL_DIGITAssignment_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Int_lit__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInt_litAccess().getDecimal_litParserRuleCall_0()); }
		ruledecimal_lit
		{ after(grammarAccess.getInt_litAccess().getDecimal_litParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getInt_litAccess().getOctal_litParserRuleCall_1()); }
		ruleoctal_lit
		{ after(grammarAccess.getInt_litAccess().getOctal_litParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getInt_litAccess().getHex_litParserRuleCall_2()); }
		rulehex_lit
		{ after(grammarAccess.getInt_litAccess().getHex_litParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Hex_lit__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHex_litAccess().getXKeyword_1_0()); }
		'x'
		{ after(grammarAccess.getHex_litAccess().getXKeyword_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getHex_litAccess().getXKeyword_1_1()); }
		'X'
		{ after(grammarAccess.getHex_litAccess().getXKeyword_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Float_lit__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFloat_litAccess().getGroup_0()); }
		(rule__Float_lit__Group_0__0)
		{ after(grammarAccess.getFloat_litAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getFloat_litAccess().getGroup_1()); }
		(rule__Float_lit__Group_1__0)
		{ after(grammarAccess.getFloat_litAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getFloat_litAccess().getGroup_2()); }
		(rule__Float_lit__Group_2__0)
		{ after(grammarAccess.getFloat_litAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__String_lit__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getString_litAccess().getRaw_string_litAssignment_0()); }
		(rule__String_lit__Raw_string_litAssignment_0)
		{ after(grammarAccess.getString_litAccess().getRaw_string_litAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getString_litAccess().getInterpreted_string_litAssignment_1()); }
		(rule__String_lit__Interpreted_string_litAssignment_1)
		{ after(grammarAccess.getString_litAccess().getInterpreted_string_litAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Raw_string_lit__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRaw_string_litAccess().getUnicode_charParserRuleCall_1_0()); }
		ruleunicode_char
		{ after(grammarAccess.getRaw_string_litAccess().getUnicode_charParserRuleCall_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getRaw_string_litAccess().getNewlineParserRuleCall_1_1()); }
		rulenewline
		{ after(grammarAccess.getRaw_string_litAccess().getNewlineParserRuleCall_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interpreted_string_lit__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInterpreted_string_litAccess().getUnicode_valueParserRuleCall_1_0()); }
		ruleunicode_value
		{ after(grammarAccess.getInterpreted_string_litAccess().getUnicode_valueParserRuleCall_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getInterpreted_string_litAccess().getByte_valueParserRuleCall_1_1()); }
		rulebyte_value
		{ after(grammarAccess.getInterpreted_string_litAccess().getByte_valueParserRuleCall_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Unicode_char__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnicode_charAccess().getQuestionMarkKeyword_0()); }
		'?'
		{ after(grammarAccess.getUnicode_charAccess().getQuestionMarkKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getUnicode_charAccess().getFullStopKeyword_1()); }
		'.'
		{ after(grammarAccess.getUnicode_charAccess().getFullStopKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getUnicode_charAccess().getCommaKeyword_2()); }
		','
		{ after(grammarAccess.getUnicode_charAccess().getCommaKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getUnicode_charAccess().getExclamationMarkKeyword_3()); }
		'!'
		{ after(grammarAccess.getUnicode_charAccess().getExclamationMarkKeyword_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exponent__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExponentAccess().getEKeyword_0_0()); }
		'e'
		{ after(grammarAccess.getExponentAccess().getEKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getExponentAccess().getEKeyword_0_1()); }
		'E'
		{ after(grammarAccess.getExponentAccess().getEKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exponent__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExponentAccess().getPlusSignKeyword_1_0()); }
		'+'
		{ after(grammarAccess.getExponentAccess().getPlusSignKeyword_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getExponentAccess().getHyphenMinusKeyword_1_1()); }
		'-'
		{ after(grammarAccess.getExponentAccess().getHyphenMinusKeyword_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rune_lit__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRune_litAccess().getUnicode_valueAssignment_1_0()); }
		(rule__Rune_lit__Unicode_valueAssignment_1_0)
		{ after(grammarAccess.getRune_litAccess().getUnicode_valueAssignment_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getRune_litAccess().getByte_valueAssignment_1_1()); }
		(rule__Rune_lit__Byte_valueAssignment_1_1)
		{ after(grammarAccess.getRune_litAccess().getByte_valueAssignment_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Unicode_value__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnicode_valueAccess().getLETTERTerminalRuleCall_0()); }
		RULE_LETTER
		{ after(grammarAccess.getUnicode_valueAccess().getLETTERTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getUnicode_valueAccess().getLittle_u_valueParserRuleCall_1()); }
		rulelittle_u_value
		{ after(grammarAccess.getUnicode_valueAccess().getLittle_u_valueParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getUnicode_valueAccess().getBig_u_valueParserRuleCall_2()); }
		rulebig_u_value
		{ after(grammarAccess.getUnicode_valueAccess().getBig_u_valueParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getUnicode_valueAccess().getEscaped_charParserRuleCall_3()); }
		ruleescaped_char
		{ after(grammarAccess.getUnicode_valueAccess().getEscaped_charParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Byte_value__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getByte_valueAccess().getOctal_byte_valueParserRuleCall_0()); }
		ruleoctal_byte_value
		{ after(grammarAccess.getByte_valueAccess().getOctal_byte_valueParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getByte_valueAccess().getHex_byte_valueParserRuleCall_1()); }
		rulehex_byte_value
		{ after(grammarAccess.getByte_valueAccess().getHex_byte_valueParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Escaped_char__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEscaped_charAccess().getAKeyword_1_0()); }
		'a'
		{ after(grammarAccess.getEscaped_charAccess().getAKeyword_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getEscaped_charAccess().getBKeyword_1_1()); }
		'b'
		{ after(grammarAccess.getEscaped_charAccess().getBKeyword_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getEscaped_charAccess().getFKeyword_1_2()); }
		'f'
		{ after(grammarAccess.getEscaped_charAccess().getFKeyword_1_2()); }
	)
	|
	(
		{ before(grammarAccess.getEscaped_charAccess().getNKeyword_1_3()); }
		'n'
		{ after(grammarAccess.getEscaped_charAccess().getNKeyword_1_3()); }
	)
	|
	(
		{ before(grammarAccess.getEscaped_charAccess().getRKeyword_1_4()); }
		'r'
		{ after(grammarAccess.getEscaped_charAccess().getRKeyword_1_4()); }
	)
	|
	(
		{ before(grammarAccess.getEscaped_charAccess().getTKeyword_1_5()); }
		't'
		{ after(grammarAccess.getEscaped_charAccess().getTKeyword_1_5()); }
	)
	|
	(
		{ before(grammarAccess.getEscaped_charAccess().getVKeyword_1_6()); }
		'v'
		{ after(grammarAccess.getEscaped_charAccess().getVKeyword_1_6()); }
	)
	|
	(
		{ before(grammarAccess.getEscaped_charAccess().getCHARParserRuleCall_1_7()); }
		ruleCHAR
		{ after(grammarAccess.getEscaped_charAccess().getCHARParserRuleCall_1_7()); }
	)
	|
	(
		{ before(grammarAccess.getEscaped_charAccess().getApostropheKeyword_1_8()); }
		'\''
		{ after(grammarAccess.getEscaped_charAccess().getApostropheKeyword_1_8()); }
	)
	|
	(
		{ before(grammarAccess.getEscaped_charAccess().getQuotationMarkKeyword_1_9()); }
		'"'
		{ after(grammarAccess.getEscaped_charAccess().getQuotationMarkKeyword_1_9()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SouceFile__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SouceFile__Group__0__Impl
	rule__SouceFile__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SouceFile__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSouceFileAccess().getPackageClauseAssignment_0()); }
	(rule__SouceFile__PackageClauseAssignment_0)
	{ after(grammarAccess.getSouceFileAccess().getPackageClauseAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SouceFile__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SouceFile__Group__1__Impl
	rule__SouceFile__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SouceFile__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSouceFileAccess().getSemicolonKeyword_1()); }
	';'
	{ after(grammarAccess.getSouceFileAccess().getSemicolonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SouceFile__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SouceFile__Group__2__Impl
	rule__SouceFile__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SouceFile__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSouceFileAccess().getGroup_2()); }
	(rule__SouceFile__Group_2__0)*
	{ after(grammarAccess.getSouceFileAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SouceFile__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SouceFile__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SouceFile__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSouceFileAccess().getGroup_3()); }
	(rule__SouceFile__Group_3__0)?
	{ after(grammarAccess.getSouceFileAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SouceFile__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SouceFile__Group_2__0__Impl
	rule__SouceFile__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SouceFile__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSouceFileAccess().getImportDeclAssignment_2_0()); }
	(rule__SouceFile__ImportDeclAssignment_2_0)
	{ after(grammarAccess.getSouceFileAccess().getImportDeclAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SouceFile__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SouceFile__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SouceFile__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSouceFileAccess().getSemicolonKeyword_2_1()); }
	';'
	{ after(grammarAccess.getSouceFileAccess().getSemicolonKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SouceFile__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SouceFile__Group_3__0__Impl
	rule__SouceFile__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SouceFile__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSouceFileAccess().getTopLevelDeclAssignment_3_0()); }
	(rule__SouceFile__TopLevelDeclAssignment_3_0)
	{ after(grammarAccess.getSouceFileAccess().getTopLevelDeclAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SouceFile__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SouceFile__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SouceFile__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSouceFileAccess().getSemicolonKeyword_3_1()); }
	';'
	{ after(grammarAccess.getSouceFileAccess().getSemicolonKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group_2__0__Impl
	rule__Type__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getLeftParenthesisKeyword_2_0()); }
	'('
	{ after(grammarAccess.getTypeAccess().getLeftParenthesisKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group_2__1__Impl
	rule__Type__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getTypeAssignment_2_1()); }
	(rule__Type__TypeAssignment_2_1)
	{ after(grammarAccess.getTypeAccess().getTypeAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getRightParenthesisKeyword_2_2()); }
	')'
	{ after(grammarAccess.getTypeAccess().getRightParenthesisKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeName__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeName__Group__0__Impl
	rule__TypeName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeName__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeNameAccess().getIdentifierAssignment_0()); }
	(rule__TypeName__IdentifierAssignment_0)
	{ after(grammarAccess.getTypeNameAccess().getIdentifierAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeName__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeName__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeNameAccess().getTypeNameLinhaAssignment_1()); }
	(rule__TypeName__TypeNameLinhaAssignment_1)
	{ after(grammarAccess.getTypeNameAccess().getTypeNameLinhaAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeNameLinha__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeNameLinha__Group_0__0__Impl
	rule__TypeNameLinha__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeNameLinha__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeNameLinhaAccess().getFullStopKeyword_0_0()); }
	'.'
	{ after(grammarAccess.getTypeNameLinhaAccess().getFullStopKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeNameLinha__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeNameLinha__Group_0__1__Impl
	rule__TypeNameLinha__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeNameLinha__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeNameLinhaAccess().getIdentifierAssignment_0_1()); }
	(rule__TypeNameLinha__IdentifierAssignment_0_1)
	{ after(grammarAccess.getTypeNameLinhaAccess().getIdentifierAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeNameLinha__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeNameLinha__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeNameLinha__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeNameLinhaAccess().getTypeNameLinhaAssignment_0_2()); }
	(rule__TypeNameLinha__TypeNameLinhaAssignment_0_2)
	{ after(grammarAccess.getTypeNameLinhaAccess().getTypeNameLinhaAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeNameLinha__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeNameLinha__Group_1__0__Impl
	rule__TypeNameLinha__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeNameLinha__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeNameLinhaAccess().getQualifiedIdentAssignment_1_0()); }
	(rule__TypeNameLinha__QualifiedIdentAssignment_1_0)
	{ after(grammarAccess.getTypeNameLinhaAccess().getQualifiedIdentAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeNameLinha__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeNameLinha__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeNameLinha__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeNameLinhaAccess().getTypeNameLinhaAssignment_1_1()); }
	(rule__TypeNameLinha__TypeNameLinhaAssignment_1_1)
	{ after(grammarAccess.getTypeNameLinhaAccess().getTypeNameLinhaAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeNameLinha__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeNameLinha__Group_2__0__Impl
	rule__TypeNameLinha__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeNameLinha__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeNameLinhaAccess().getTypeNameLinhaAction_2_0()); }
	()
	{ after(grammarAccess.getTypeNameLinhaAccess().getTypeNameLinhaAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeNameLinha__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeNameLinha__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeNameLinha__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeNameLinhaAccess().getANY_OTHERTerminalRuleCall_2_1()); }
	RULE_ANY_OTHER
	{ after(grammarAccess.getTypeNameLinhaAccess().getANY_OTHERTerminalRuleCall_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeLit__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeLit__Group_0__0__Impl
	rule__TypeLit__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeLit__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeLitAccess().getLeftSquareBracketKeyword_0_0()); }
	'['
	{ after(grammarAccess.getTypeLitAccess().getLeftSquareBracketKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeLit__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeLit__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeLit__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeLitAccess().getTypeLitLinhaAssignment_0_1()); }
	(rule__TypeLit__TypeLitLinhaAssignment_0_1)
	{ after(grammarAccess.getTypeLitAccess().getTypeLitLinhaAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeLitLinha__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeLitLinha__Group_0__0__Impl
	rule__TypeLitLinha__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeLitLinha__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeLitLinhaAccess().getArrayLengthAssignment_0_0()); }
	(rule__TypeLitLinha__ArrayLengthAssignment_0_0)
	{ after(grammarAccess.getTypeLitLinhaAccess().getArrayLengthAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeLitLinha__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeLitLinha__Group_0__1__Impl
	rule__TypeLitLinha__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeLitLinha__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeLitLinhaAccess().getRightSquareBracketKeyword_0_1()); }
	']'
	{ after(grammarAccess.getTypeLitLinhaAccess().getRightSquareBracketKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeLitLinha__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeLitLinha__Group_0__2__Impl
	rule__TypeLitLinha__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeLitLinha__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeLitLinhaAccess().getElementTypeAssignment_0_2()); }
	(rule__TypeLitLinha__ElementTypeAssignment_0_2)
	{ after(grammarAccess.getTypeLitLinhaAccess().getElementTypeAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeLitLinha__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeLitLinha__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeLitLinha__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeLitLinhaAccess().getTypeLitLinhaAssignment_0_3()); }
	(rule__TypeLitLinha__TypeLitLinhaAssignment_0_3)
	{ after(grammarAccess.getTypeLitLinhaAccess().getTypeLitLinhaAssignment_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeLitLinha__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeLitLinha__Group_1__0__Impl
	rule__TypeLitLinha__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeLitLinha__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeLitLinhaAccess().getRightSquareBracketKeyword_1_0()); }
	']'
	{ after(grammarAccess.getTypeLitLinhaAccess().getRightSquareBracketKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeLitLinha__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeLitLinha__Group_1__1__Impl
	rule__TypeLitLinha__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeLitLinha__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeLitLinhaAccess().getElementTypeAssignment_1_1()); }
	(rule__TypeLitLinha__ElementTypeAssignment_1_1)
	{ after(grammarAccess.getTypeLitLinhaAccess().getElementTypeAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeLitLinha__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeLitLinha__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeLitLinha__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeLitLinhaAccess().getTypeLitLinhaAssignment_1_2()); }
	(rule__TypeLitLinha__TypeLitLinhaAssignment_1_2)
	{ after(grammarAccess.getTypeLitLinhaAccess().getTypeLitLinhaAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeLitLinha__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeLitLinha__Group_2__0__Impl
	rule__TypeLitLinha__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeLitLinha__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeLitLinhaAccess().getTypeLitLinhaAction_2_0()); }
	()
	{ after(grammarAccess.getTypeLitLinhaAccess().getTypeLitLinhaAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeLitLinha__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeLitLinha__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeLitLinha__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeLitLinhaAccess().getANY_OTHERTerminalRuleCall_2_1()); }
	RULE_ANY_OTHER
	{ after(grammarAccess.getTypeLitLinhaAccess().getANY_OTHERTerminalRuleCall_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StructType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructType__Group__0__Impl
	rule__StructType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructTypeAccess().getStructTypeAction_0()); }
	()
	{ after(grammarAccess.getStructTypeAccess().getStructTypeAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructType__Group__1__Impl
	rule__StructType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructTypeAccess().getStructKeyword_1()); }
	'struct'
	{ after(grammarAccess.getStructTypeAccess().getStructKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructType__Group__2__Impl
	rule__StructType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructTypeAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getStructTypeAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructType__Group__3__Impl
	rule__StructType__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructTypeAccess().getGroup_3()); }
	(rule__StructType__Group_3__0)*
	{ after(grammarAccess.getStructTypeAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructType__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructTypeAccess().getSemicolonKeyword_4()); }
	';'
	{ after(grammarAccess.getStructTypeAccess().getSemicolonKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StructType__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructType__Group_3__0__Impl
	rule__StructType__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructTypeAccess().getFieldDeclAssignment_3_0()); }
	(rule__StructType__FieldDeclAssignment_3_0)
	{ after(grammarAccess.getStructTypeAccess().getFieldDeclAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructType__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructTypeAccess().getSemicolonKeyword_3_1()); }
	';'
	{ after(grammarAccess.getStructTypeAccess().getSemicolonKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FieldDecl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldDecl__Group__0__Impl
	rule__FieldDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldDecl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldDeclAccess().getAlternatives_0()); }
	(rule__FieldDecl__Alternatives_0)
	{ after(grammarAccess.getFieldDeclAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldDecl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldDecl__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldDecl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldDeclAccess().getTagAssignment_1()); }
	(rule__FieldDecl__TagAssignment_1)?
	{ after(grammarAccess.getFieldDeclAccess().getTagAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FieldDecl__Group_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldDecl__Group_0_0__0__Impl
	rule__FieldDecl__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldDecl__Group_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldDeclAccess().getIdentifierListAssignment_0_0_0()); }
	(rule__FieldDecl__IdentifierListAssignment_0_0_0)
	{ after(grammarAccess.getFieldDeclAccess().getIdentifierListAssignment_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldDecl__Group_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldDecl__Group_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldDecl__Group_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldDeclAccess().getTypeAssignment_0_0_1()); }
	(rule__FieldDecl__TypeAssignment_0_0_1)
	{ after(grammarAccess.getFieldDeclAccess().getTypeAssignment_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EmbeddedField__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EmbeddedField__Group__0__Impl
	rule__EmbeddedField__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EmbeddedField__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEmbeddedFieldAccess().getAsteriskKeyword_0()); }
	('*')?
	{ after(grammarAccess.getEmbeddedFieldAccess().getAsteriskKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EmbeddedField__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EmbeddedField__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EmbeddedField__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEmbeddedFieldAccess().getTypeNameAssignment_1()); }
	(rule__EmbeddedField__TypeNameAssignment_1)
	{ after(grammarAccess.getEmbeddedFieldAccess().getTypeNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PointerType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PointerType__Group__0__Impl
	rule__PointerType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PointerType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPointerTypeAccess().getAsteriskKeyword_0()); }
	'*'
	{ after(grammarAccess.getPointerTypeAccess().getAsteriskKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PointerType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PointerType__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PointerType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPointerTypeAccess().getTypeAssignment_1()); }
	(rule__PointerType__TypeAssignment_1)
	{ after(grammarAccess.getPointerTypeAccess().getTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionType__Group__0__Impl
	rule__FunctionType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionTypeAccess().getFuncKeyword_0()); }
	'func'
	{ after(grammarAccess.getFunctionTypeAccess().getFuncKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionType__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionTypeAccess().getSignatureAssignment_1()); }
	(rule__FunctionType__SignatureAssignment_1)
	{ after(grammarAccess.getFunctionTypeAccess().getSignatureAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Signature__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Signature__Group__0__Impl
	rule__Signature__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Signature__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSignatureAccess().getParametersAssignment_0()); }
	(rule__Signature__ParametersAssignment_0)
	{ after(grammarAccess.getSignatureAccess().getParametersAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Signature__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Signature__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Signature__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSignatureAccess().getResultAssignment_1()); }
	(rule__Signature__ResultAssignment_1)?
	{ after(grammarAccess.getSignatureAccess().getResultAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Parameters__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameters__Group__0__Impl
	rule__Parameters__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParametersAccess().getParametersAction_0()); }
	()
	{ after(grammarAccess.getParametersAccess().getParametersAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameters__Group__1__Impl
	rule__Parameters__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParametersAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getParametersAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameters__Group__2__Impl
	rule__Parameters__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParametersAccess().getGroup_2()); }
	(rule__Parameters__Group_2__0)?
	{ after(grammarAccess.getParametersAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameters__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParametersAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getParametersAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Parameters__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameters__Group_2__0__Impl
	rule__Parameters__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParametersAccess().getParameterListAssignment_2_0()); }
	(rule__Parameters__ParameterListAssignment_2_0)
	{ after(grammarAccess.getParametersAccess().getParameterListAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameters__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParametersAccess().getCommaKeyword_2_1()); }
	(',')?
	{ after(grammarAccess.getParametersAccess().getCommaKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterList__Group__0__Impl
	rule__ParameterList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterListAccess().getParameterDeclAssignment_0()); }
	(rule__ParameterList__ParameterDeclAssignment_0)
	{ after(grammarAccess.getParameterListAccess().getParameterDeclAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterListAccess().getGroup_1()); }
	(rule__ParameterList__Group_1__0)?
	{ after(grammarAccess.getParameterListAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterList__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterList__Group_1__0__Impl
	rule__ParameterList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterListAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getParameterListAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterListAccess().getParameterDeclAssignment_1_1()); }
	(rule__ParameterList__ParameterDeclAssignment_1_1)
	{ after(grammarAccess.getParameterListAccess().getParameterDeclAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterDecl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterDecl__Group__0__Impl
	rule__ParameterDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDecl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterDeclAccess().getIdentifierListAssignment_0()); }
	(rule__ParameterDecl__IdentifierListAssignment_0)?
	{ after(grammarAccess.getParameterDeclAccess().getIdentifierListAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDecl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterDecl__Group__1__Impl
	rule__ParameterDecl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDecl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterDeclAccess().getFullStopFullStopFullStopKeyword_1()); }
	('...')?
	{ after(grammarAccess.getParameterDeclAccess().getFullStopFullStopFullStopKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDecl__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterDecl__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDecl__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterDeclAccess().getTypeAssignment_2()); }
	(rule__ParameterDecl__TypeAssignment_2)
	{ after(grammarAccess.getParameterDeclAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InterfaceType__Group__0__Impl
	rule__InterfaceType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInterfaceTypeAccess().getInterfaceTypeAction_0()); }
	()
	{ after(grammarAccess.getInterfaceTypeAccess().getInterfaceTypeAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InterfaceType__Group__1__Impl
	rule__InterfaceType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInterfaceTypeAccess().getInterfaceKeyword_1()); }
	'interface'
	{ after(grammarAccess.getInterfaceTypeAccess().getInterfaceKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceType__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InterfaceType__Group__2__Impl
	rule__InterfaceType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceType__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInterfaceTypeAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getInterfaceTypeAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceType__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InterfaceType__Group__3__Impl
	rule__InterfaceType__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceType__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInterfaceTypeAccess().getGroup_3()); }
	(rule__InterfaceType__Group_3__0)?
	{ after(grammarAccess.getInterfaceTypeAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceType__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InterfaceType__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceType__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInterfaceTypeAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getInterfaceTypeAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceType__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InterfaceType__Group_3__0__Impl
	rule__InterfaceType__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceType__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInterfaceTypeAccess().getMethodSpecAssignment_3_0()); }
	(rule__InterfaceType__MethodSpecAssignment_3_0)
	{ after(grammarAccess.getInterfaceTypeAccess().getMethodSpecAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceType__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InterfaceType__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceType__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInterfaceTypeAccess().getSemicolonKeyword_3_1()); }
	';'
	{ after(grammarAccess.getInterfaceTypeAccess().getSemicolonKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MethodSpec__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodSpec__Group_0__0__Impl
	rule__MethodSpec__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodSpec__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodSpecAccess().getMethodNameAssignment_0_0()); }
	(rule__MethodSpec__MethodNameAssignment_0_0)
	{ after(grammarAccess.getMethodSpecAccess().getMethodNameAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodSpec__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodSpec__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodSpec__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodSpecAccess().getSignatureAssignment_0_1()); }
	(rule__MethodSpec__SignatureAssignment_0_1)
	{ after(grammarAccess.getMethodSpecAccess().getSignatureAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MapType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapType__Group__0__Impl
	rule__MapType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MapType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapTypeAccess().getMapKeyword_0()); }
	'map'
	{ after(grammarAccess.getMapTypeAccess().getMapKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapType__Group__1__Impl
	rule__MapType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MapType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapTypeAccess().getLeftSquareBracketKeyword_1()); }
	'['
	{ after(grammarAccess.getMapTypeAccess().getLeftSquareBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapType__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapType__Group__2__Impl
	rule__MapType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MapType__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapTypeAccess().getKeyTypeAssignment_2()); }
	(rule__MapType__KeyTypeAssignment_2)
	{ after(grammarAccess.getMapTypeAccess().getKeyTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapType__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapType__Group__3__Impl
	rule__MapType__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MapType__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapTypeAccess().getRightSquareBracketKeyword_3()); }
	']'
	{ after(grammarAccess.getMapTypeAccess().getRightSquareBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapType__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapType__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MapType__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapTypeAccess().getElementTypeAssignment_4()); }
	(rule__MapType__ElementTypeAssignment_4)
	{ after(grammarAccess.getMapTypeAccess().getElementTypeAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ChannelType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChannelType__Group__0__Impl
	rule__ChannelType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChannelTypeAccess().getAlternatives_0()); }
	(rule__ChannelType__Alternatives_0)
	{ after(grammarAccess.getChannelTypeAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChannelType__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChannelTypeAccess().getElementTypeAssignment_1()); }
	(rule__ChannelType__ElementTypeAssignment_1)
	{ after(grammarAccess.getChannelTypeAccess().getElementTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ChannelType__Group_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChannelType__Group_0_1__0__Impl
	rule__ChannelType__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelType__Group_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChannelTypeAccess().getChanKeyword_0_1_0()); }
	'chan'
	{ after(grammarAccess.getChannelTypeAccess().getChanKeyword_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelType__Group_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChannelType__Group_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelType__Group_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChannelTypeAccess().getLessThanSignHyphenMinusKeyword_0_1_1()); }
	'<-'
	{ after(grammarAccess.getChannelTypeAccess().getLessThanSignHyphenMinusKeyword_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ChannelType__Group_0_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChannelType__Group_0_2__0__Impl
	rule__ChannelType__Group_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelType__Group_0_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChannelTypeAccess().getLessThanSignHyphenMinusKeyword_0_2_0()); }
	'<-'
	{ after(grammarAccess.getChannelTypeAccess().getLessThanSignHyphenMinusKeyword_0_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelType__Group_0_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChannelType__Group_0_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelType__Group_0_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChannelTypeAccess().getChanKeyword_0_2_1()); }
	'chan'
	{ after(grammarAccess.getChannelTypeAccess().getChanKeyword_0_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Block__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Block__Group__0__Impl
	rule__Block__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlockAccess().getLeftCurlyBracketKeyword_0()); }
	'{'
	{ after(grammarAccess.getBlockAccess().getLeftCurlyBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Block__Group__1__Impl
	rule__Block__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlockAccess().getStatementListAssignment_1()); }
	(rule__Block__StatementListAssignment_1)
	{ after(grammarAccess.getBlockAccess().getStatementListAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Block__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlockAccess().getRightCurlyBracketKeyword_2()); }
	'}'
	{ after(grammarAccess.getBlockAccess().getRightCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StatementList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatementList__Group__0__Impl
	rule__StatementList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementListAccess().getStatementListAction_0()); }
	()
	{ after(grammarAccess.getStatementListAccess().getStatementListAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatementList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementListAccess().getGroup_1()); }
	(rule__StatementList__Group_1__0)*
	{ after(grammarAccess.getStatementListAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StatementList__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatementList__Group_1__0__Impl
	rule__StatementList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementList__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementListAccess().getStatementAssignment_1_0()); }
	(rule__StatementList__StatementAssignment_1_0)
	{ after(grammarAccess.getStatementListAccess().getStatementAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementList__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatementList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementList__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementListAccess().getSemicolonKeyword_1_1()); }
	';'
	{ after(grammarAccess.getStatementListAccess().getSemicolonKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TopLevelDecl__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TopLevelDecl__Group_1__0__Impl
	rule__TopLevelDecl__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TopLevelDecl__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTopLevelDeclAccess().getFuncKeyword_1_0()); }
	'func'
	{ after(grammarAccess.getTopLevelDeclAccess().getFuncKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TopLevelDecl__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TopLevelDecl__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TopLevelDecl__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTopLevelDeclAccess().getTopLevelDeclLinhaAssignment_1_1()); }
	(rule__TopLevelDecl__TopLevelDeclLinhaAssignment_1_1)
	{ after(grammarAccess.getTopLevelDeclAccess().getTopLevelDeclLinhaAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TopLevelDeclLinha__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TopLevelDeclLinha__Group_0__0__Impl
	rule__TopLevelDeclLinha__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TopLevelDeclLinha__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTopLevelDeclLinhaAccess().getFunctionNameAssignment_0_0()); }
	(rule__TopLevelDeclLinha__FunctionNameAssignment_0_0)
	{ after(grammarAccess.getTopLevelDeclLinhaAccess().getFunctionNameAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TopLevelDeclLinha__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TopLevelDeclLinha__Group_0__1__Impl
	rule__TopLevelDeclLinha__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TopLevelDeclLinha__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTopLevelDeclLinhaAccess().getSignatureAssignment_0_1()); }
	(rule__TopLevelDeclLinha__SignatureAssignment_0_1)
	{ after(grammarAccess.getTopLevelDeclLinhaAccess().getSignatureAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TopLevelDeclLinha__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TopLevelDeclLinha__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TopLevelDeclLinha__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTopLevelDeclLinhaAccess().getFunctionBodyAssignment_0_2()); }
	(rule__TopLevelDeclLinha__FunctionBodyAssignment_0_2)?
	{ after(grammarAccess.getTopLevelDeclLinhaAccess().getFunctionBodyAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TopLevelDeclLinha__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TopLevelDeclLinha__Group_1__0__Impl
	rule__TopLevelDeclLinha__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TopLevelDeclLinha__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTopLevelDeclLinhaAccess().getReceiverAssignment_1_0()); }
	(rule__TopLevelDeclLinha__ReceiverAssignment_1_0)
	{ after(grammarAccess.getTopLevelDeclLinhaAccess().getReceiverAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TopLevelDeclLinha__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TopLevelDeclLinha__Group_1__1__Impl
	rule__TopLevelDeclLinha__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TopLevelDeclLinha__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTopLevelDeclLinhaAccess().getMethodNameAssignment_1_1()); }
	(rule__TopLevelDeclLinha__MethodNameAssignment_1_1)
	{ after(grammarAccess.getTopLevelDeclLinhaAccess().getMethodNameAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TopLevelDeclLinha__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TopLevelDeclLinha__Group_1__2__Impl
	rule__TopLevelDeclLinha__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TopLevelDeclLinha__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTopLevelDeclLinhaAccess().getSignatureAssignment_1_2()); }
	(rule__TopLevelDeclLinha__SignatureAssignment_1_2)
	{ after(grammarAccess.getTopLevelDeclLinhaAccess().getSignatureAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TopLevelDeclLinha__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TopLevelDeclLinha__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TopLevelDeclLinha__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTopLevelDeclLinhaAccess().getFunctionBodyAssignment_1_3()); }
	(rule__TopLevelDeclLinha__FunctionBodyAssignment_1_3)?
	{ after(grammarAccess.getTopLevelDeclLinhaAccess().getFunctionBodyAssignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConstDecl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstDecl__Group__0__Impl
	rule__ConstDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstDecl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstDeclAccess().getConstDeclAction_0()); }
	()
	{ after(grammarAccess.getConstDeclAccess().getConstDeclAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstDecl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstDecl__Group__1__Impl
	rule__ConstDecl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstDecl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstDeclAccess().getConstKeyword_1()); }
	'const'
	{ after(grammarAccess.getConstDeclAccess().getConstKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstDecl__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstDecl__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstDecl__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstDeclAccess().getAlternatives_2()); }
	(rule__ConstDecl__Alternatives_2)
	{ after(grammarAccess.getConstDeclAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConstDecl__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstDecl__Group_2_1__0__Impl
	rule__ConstDecl__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstDecl__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstDeclAccess().getLeftParenthesisKeyword_2_1_0()); }
	'('
	{ after(grammarAccess.getConstDeclAccess().getLeftParenthesisKeyword_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstDecl__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstDecl__Group_2_1__1__Impl
	rule__ConstDecl__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstDecl__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstDeclAccess().getGroup_2_1_1()); }
	(rule__ConstDecl__Group_2_1_1__0)?
	{ after(grammarAccess.getConstDeclAccess().getGroup_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstDecl__Group_2_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstDecl__Group_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstDecl__Group_2_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstDeclAccess().getRightParenthesisKeyword_2_1_2()); }
	')'
	{ after(grammarAccess.getConstDeclAccess().getRightParenthesisKeyword_2_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConstDecl__Group_2_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstDecl__Group_2_1_1__0__Impl
	rule__ConstDecl__Group_2_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstDecl__Group_2_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstDeclAccess().getConstSpecAssignment_2_1_1_0()); }
	(rule__ConstDecl__ConstSpecAssignment_2_1_1_0)
	{ after(grammarAccess.getConstDeclAccess().getConstSpecAssignment_2_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstDecl__Group_2_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstDecl__Group_2_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstDecl__Group_2_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstDeclAccess().getSemicolonKeyword_2_1_1_1()); }
	';'
	{ after(grammarAccess.getConstDeclAccess().getSemicolonKeyword_2_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConstSpec__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstSpec__Group__0__Impl
	rule__ConstSpec__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstSpec__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstSpecAccess().getIdentifierListAssignment_0()); }
	(rule__ConstSpec__IdentifierListAssignment_0)
	{ after(grammarAccess.getConstSpecAccess().getIdentifierListAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstSpec__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstSpec__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstSpec__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstSpecAccess().getGroup_1()); }
	(rule__ConstSpec__Group_1__0)?
	{ after(grammarAccess.getConstSpecAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConstSpec__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstSpec__Group_1__0__Impl
	rule__ConstSpec__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstSpec__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstSpecAccess().getTypeAssignment_1_0()); }
	(rule__ConstSpec__TypeAssignment_1_0)?
	{ after(grammarAccess.getConstSpecAccess().getTypeAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstSpec__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstSpec__Group_1__1__Impl
	rule__ConstSpec__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstSpec__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstSpecAccess().getEqualsSignKeyword_1_1()); }
	'='
	{ after(grammarAccess.getConstSpecAccess().getEqualsSignKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstSpec__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstSpec__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstSpec__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstSpecAccess().getExpressionListAssignment_1_2()); }
	(rule__ConstSpec__ExpressionListAssignment_1_2)
	{ after(grammarAccess.getConstSpecAccess().getExpressionListAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IdentifierList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IdentifierList__Group__0__Impl
	rule__IdentifierList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IdentifierList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIdentifierListAccess().getIdentifierAssignment_0()); }
	(rule__IdentifierList__IdentifierAssignment_0)
	{ after(grammarAccess.getIdentifierListAccess().getIdentifierAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IdentifierList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IdentifierList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IdentifierList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIdentifierListAccess().getGroup_1()); }
	(rule__IdentifierList__Group_1__0)?
	{ after(grammarAccess.getIdentifierListAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IdentifierList__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IdentifierList__Group_1__0__Impl
	rule__IdentifierList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IdentifierList__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIdentifierListAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getIdentifierListAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IdentifierList__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IdentifierList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IdentifierList__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIdentifierListAccess().getIdentifierAssignment_1_1()); }
	(rule__IdentifierList__IdentifierAssignment_1_1)
	{ after(grammarAccess.getIdentifierListAccess().getIdentifierAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionList__Group__0__Impl
	rule__ExpressionList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionListAccess().getExpressionAssignment_0()); }
	(rule__ExpressionList__ExpressionAssignment_0)
	{ after(grammarAccess.getExpressionListAccess().getExpressionAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionListAccess().getGroup_1()); }
	(rule__ExpressionList__Group_1__0)?
	{ after(grammarAccess.getExpressionListAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionList__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionList__Group_1__0__Impl
	rule__ExpressionList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionList__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionListAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getExpressionListAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionList__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionList__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionListAccess().getExpressionAssignment_1_1()); }
	(rule__ExpressionList__ExpressionAssignment_1_1)
	{ after(grammarAccess.getExpressionListAccess().getExpressionAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeDecl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeDecl__Group__0__Impl
	rule__TypeDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDecl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeDeclAccess().getTypeDeclAction_0()); }
	()
	{ after(grammarAccess.getTypeDeclAccess().getTypeDeclAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDecl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeDecl__Group__1__Impl
	rule__TypeDecl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDecl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeDeclAccess().getTypeKeyword_1()); }
	'type'
	{ after(grammarAccess.getTypeDeclAccess().getTypeKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDecl__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeDecl__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDecl__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeDeclAccess().getAlternatives_2()); }
	(rule__TypeDecl__Alternatives_2)
	{ after(grammarAccess.getTypeDeclAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeDecl__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeDecl__Group_2_1__0__Impl
	rule__TypeDecl__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDecl__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeDeclAccess().getLeftParenthesisKeyword_2_1_0()); }
	'('
	{ after(grammarAccess.getTypeDeclAccess().getLeftParenthesisKeyword_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDecl__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeDecl__Group_2_1__1__Impl
	rule__TypeDecl__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDecl__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeDeclAccess().getGroup_2_1_1()); }
	(rule__TypeDecl__Group_2_1_1__0)?
	{ after(grammarAccess.getTypeDeclAccess().getGroup_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDecl__Group_2_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeDecl__Group_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDecl__Group_2_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeDeclAccess().getRightParenthesisKeyword_2_1_2()); }
	')'
	{ after(grammarAccess.getTypeDeclAccess().getRightParenthesisKeyword_2_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeDecl__Group_2_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeDecl__Group_2_1_1__0__Impl
	rule__TypeDecl__Group_2_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDecl__Group_2_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeDeclAccess().getTypeSpecAssignment_2_1_1_0()); }
	(rule__TypeDecl__TypeSpecAssignment_2_1_1_0)
	{ after(grammarAccess.getTypeDeclAccess().getTypeSpecAssignment_2_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDecl__Group_2_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeDecl__Group_2_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDecl__Group_2_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeDeclAccess().getSemicolonKeyword_2_1_1_1()); }
	';'
	{ after(grammarAccess.getTypeDeclAccess().getSemicolonKeyword_2_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AliasDecl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AliasDecl__Group__0__Impl
	rule__AliasDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AliasDecl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAliasDeclAccess().getIdentifierAssignment_0()); }
	(rule__AliasDecl__IdentifierAssignment_0)
	{ after(grammarAccess.getAliasDeclAccess().getIdentifierAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AliasDecl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AliasDecl__Group__1__Impl
	rule__AliasDecl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AliasDecl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAliasDeclAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getAliasDeclAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AliasDecl__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AliasDecl__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AliasDecl__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAliasDeclAccess().getTypeAssignment_2()); }
	(rule__AliasDecl__TypeAssignment_2)
	{ after(grammarAccess.getAliasDeclAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeDef__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeDef__Group__0__Impl
	rule__TypeDef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDef__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeDefAccess().getIdentifierAssignment_0()); }
	(rule__TypeDef__IdentifierAssignment_0)
	{ after(grammarAccess.getTypeDefAccess().getIdentifierAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDef__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeDef__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDef__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeDefAccess().getTypeAssignment_1()); }
	(rule__TypeDef__TypeAssignment_1)
	{ after(grammarAccess.getTypeDefAccess().getTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VarDecl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarDecl__Group__0__Impl
	rule__VarDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarDeclAccess().getVarDeclAction_0()); }
	()
	{ after(grammarAccess.getVarDeclAccess().getVarDeclAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarDecl__Group__1__Impl
	rule__VarDecl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarDeclAccess().getVarKeyword_1()); }
	'var'
	{ after(grammarAccess.getVarDeclAccess().getVarKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarDecl__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarDeclAccess().getAlternatives_2()); }
	(rule__VarDecl__Alternatives_2)
	{ after(grammarAccess.getVarDeclAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VarDecl__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarDecl__Group_2_1__0__Impl
	rule__VarDecl__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarDeclAccess().getLeftParenthesisKeyword_2_1_0()); }
	'('
	{ after(grammarAccess.getVarDeclAccess().getLeftParenthesisKeyword_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarDecl__Group_2_1__1__Impl
	rule__VarDecl__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarDeclAccess().getGroup_2_1_1()); }
	(rule__VarDecl__Group_2_1_1__0)?
	{ after(grammarAccess.getVarDeclAccess().getGroup_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group_2_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarDecl__Group_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group_2_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarDeclAccess().getRightParenthesisKeyword_2_1_2()); }
	')'
	{ after(grammarAccess.getVarDeclAccess().getRightParenthesisKeyword_2_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VarDecl__Group_2_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarDecl__Group_2_1_1__0__Impl
	rule__VarDecl__Group_2_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group_2_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarDeclAccess().getVarSpecAssignment_2_1_1_0()); }
	(rule__VarDecl__VarSpecAssignment_2_1_1_0)
	{ after(grammarAccess.getVarDeclAccess().getVarSpecAssignment_2_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group_2_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarDecl__Group_2_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group_2_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarDeclAccess().getSemicolonKeyword_2_1_1_1()); }
	';'
	{ after(grammarAccess.getVarDeclAccess().getSemicolonKeyword_2_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VarSpec__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarSpec__Group__0__Impl
	rule__VarSpec__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarSpec__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarSpecAccess().getIdentifierListAssignment_0()); }
	(rule__VarSpec__IdentifierListAssignment_0)
	{ after(grammarAccess.getVarSpecAccess().getIdentifierListAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarSpec__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarSpec__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarSpec__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarSpecAccess().getAlternatives_1()); }
	(rule__VarSpec__Alternatives_1)
	{ after(grammarAccess.getVarSpecAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VarSpec__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarSpec__Group_1_0__0__Impl
	rule__VarSpec__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarSpec__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarSpecAccess().getTypeAssignment_1_0_0()); }
	(rule__VarSpec__TypeAssignment_1_0_0)
	{ after(grammarAccess.getVarSpecAccess().getTypeAssignment_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarSpec__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarSpec__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarSpec__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarSpecAccess().getGroup_1_0_1()); }
	(rule__VarSpec__Group_1_0_1__0)?
	{ after(grammarAccess.getVarSpecAccess().getGroup_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VarSpec__Group_1_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarSpec__Group_1_0_1__0__Impl
	rule__VarSpec__Group_1_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarSpec__Group_1_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarSpecAccess().getEqualsSignKeyword_1_0_1_0()); }
	'='
	{ after(grammarAccess.getVarSpecAccess().getEqualsSignKeyword_1_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarSpec__Group_1_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarSpec__Group_1_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarSpec__Group_1_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarSpecAccess().getExpressionListAssignment_1_0_1_1()); }
	(rule__VarSpec__ExpressionListAssignment_1_0_1_1)
	{ after(grammarAccess.getVarSpecAccess().getExpressionListAssignment_1_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VarSpec__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarSpec__Group_1_1__0__Impl
	rule__VarSpec__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarSpec__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarSpecAccess().getEqualsSignKeyword_1_1_0()); }
	'='
	{ after(grammarAccess.getVarSpecAccess().getEqualsSignKeyword_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarSpec__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarSpec__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarSpec__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarSpecAccess().getExpressionListAssignment_1_1_1()); }
	(rule__VarSpec__ExpressionListAssignment_1_1_1)
	{ after(grammarAccess.getVarSpecAccess().getExpressionListAssignment_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ShortVarDecl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ShortVarDecl__Group__0__Impl
	rule__ShortVarDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ShortVarDecl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShortVarDeclAccess().getIdentifierListAssignment_0()); }
	(rule__ShortVarDecl__IdentifierListAssignment_0)
	{ after(grammarAccess.getShortVarDeclAccess().getIdentifierListAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShortVarDecl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ShortVarDecl__Group__1__Impl
	rule__ShortVarDecl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ShortVarDecl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShortVarDeclAccess().getColonEqualsSignKeyword_1()); }
	':='
	{ after(grammarAccess.getShortVarDeclAccess().getColonEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShortVarDecl__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ShortVarDecl__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ShortVarDecl__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShortVarDeclAccess().getExpressionListAssignment_2()); }
	(rule__ShortVarDecl__ExpressionListAssignment_2)
	{ after(grammarAccess.getShortVarDeclAccess().getExpressionListAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Operand__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operand__Group_2__0__Impl
	rule__Operand__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Operand__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperandAccess().getLeftParenthesisKeyword_2_0()); }
	'('
	{ after(grammarAccess.getOperandAccess().getLeftParenthesisKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operand__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operand__Group_2__1__Impl
	rule__Operand__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Operand__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperandAccess().getExpressionAssignment_2_1()); }
	(rule__Operand__ExpressionAssignment_2_1)
	{ after(grammarAccess.getOperandAccess().getExpressionAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operand__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operand__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Operand__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperandAccess().getRightParenthesisKeyword_2_2()); }
	')'
	{ after(grammarAccess.getOperandAccess().getRightParenthesisKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BasicLit__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BasicLit__Group_0__0__Impl
	rule__BasicLit__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicLit__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBasicLitAccess().getBasicLitAction_0_0()); }
	()
	{ after(grammarAccess.getBasicLitAccess().getBasicLitAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicLit__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BasicLit__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicLit__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBasicLitAccess().getInt_litAssignment_0_1()); }
	(rule__BasicLit__Int_litAssignment_0_1)
	{ after(grammarAccess.getBasicLitAccess().getInt_litAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedIdent__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedIdent__Group__0__Impl
	rule__QualifiedIdent__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedIdent__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedIdentAccess().getPackageNameAssignment_0()); }
	(rule__QualifiedIdent__PackageNameAssignment_0)
	{ after(grammarAccess.getQualifiedIdentAccess().getPackageNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedIdent__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedIdent__Group__1__Impl
	rule__QualifiedIdent__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedIdent__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedIdentAccess().getFullStopKeyword_1()); }
	'.'
	{ after(grammarAccess.getQualifiedIdentAccess().getFullStopKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedIdent__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedIdent__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedIdent__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedIdentAccess().getIdentifierAssignment_2()); }
	(rule__QualifiedIdent__IdentifierAssignment_2)
	{ after(grammarAccess.getQualifiedIdentAccess().getIdentifierAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CompositeLit__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompositeLit__Group__0__Impl
	rule__CompositeLit__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeLit__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositeLitAccess().getLiteralTypeAssignment_0()); }
	(rule__CompositeLit__LiteralTypeAssignment_0)
	{ after(grammarAccess.getCompositeLitAccess().getLiteralTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeLit__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompositeLit__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeLit__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositeLitAccess().getLiteralValueAssignment_1()); }
	(rule__CompositeLit__LiteralValueAssignment_1)
	{ after(grammarAccess.getCompositeLitAccess().getLiteralValueAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralType__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LiteralType__Group_1__0__Impl
	rule__LiteralType__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralType__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralTypeAccess().getLeftSquareBracketKeyword_1_0()); }
	'['
	{ after(grammarAccess.getLiteralTypeAccess().getLeftSquareBracketKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralType__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LiteralType__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralType__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralTypeAccess().getLiteralTypeLinhaAssignment_1_1()); }
	(rule__LiteralType__LiteralTypeLinhaAssignment_1_1)
	{ after(grammarAccess.getLiteralTypeAccess().getLiteralTypeLinhaAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralTypeLinha__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LiteralTypeLinha__Group_0__0__Impl
	rule__LiteralTypeLinha__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTypeLinha__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralTypeLinhaAccess().getArrayLengthAssignment_0_0()); }
	(rule__LiteralTypeLinha__ArrayLengthAssignment_0_0)
	{ after(grammarAccess.getLiteralTypeLinhaAccess().getArrayLengthAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTypeLinha__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LiteralTypeLinha__Group_0__1__Impl
	rule__LiteralTypeLinha__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTypeLinha__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralTypeLinhaAccess().getRightSquareBracketKeyword_0_1()); }
	']'
	{ after(grammarAccess.getLiteralTypeLinhaAccess().getRightSquareBracketKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTypeLinha__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LiteralTypeLinha__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTypeLinha__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralTypeLinhaAccess().getElementTypeAssignment_0_2()); }
	(rule__LiteralTypeLinha__ElementTypeAssignment_0_2)
	{ after(grammarAccess.getLiteralTypeLinhaAccess().getElementTypeAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralTypeLinha__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LiteralTypeLinha__Group_1__0__Impl
	rule__LiteralTypeLinha__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTypeLinha__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralTypeLinhaAccess().getRightSquareBracketKeyword_1_0()); }
	']'
	{ after(grammarAccess.getLiteralTypeLinhaAccess().getRightSquareBracketKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTypeLinha__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LiteralTypeLinha__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTypeLinha__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralTypeLinhaAccess().getElementTypeAssignment_1_1()); }
	(rule__LiteralTypeLinha__ElementTypeAssignment_1_1)
	{ after(grammarAccess.getLiteralTypeLinhaAccess().getElementTypeAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralTypeLinha__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LiteralTypeLinha__Group_2__0__Impl
	rule__LiteralTypeLinha__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTypeLinha__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralTypeLinhaAccess().getLiteralTypeLinhaAction_2_0()); }
	()
	{ after(grammarAccess.getLiteralTypeLinhaAccess().getLiteralTypeLinhaAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTypeLinha__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LiteralTypeLinha__Group_2__1__Impl
	rule__LiteralTypeLinha__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTypeLinha__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralTypeLinhaAccess().getFullStopFullStopFullStopKeyword_2_1()); }
	'...'
	{ after(grammarAccess.getLiteralTypeLinhaAccess().getFullStopFullStopFullStopKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTypeLinha__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LiteralTypeLinha__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTypeLinha__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralTypeLinhaAccess().getRightSquareBracketKeyword_2_2()); }
	']'
	{ after(grammarAccess.getLiteralTypeLinhaAccess().getRightSquareBracketKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralValue__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LiteralValue__Group__0__Impl
	rule__LiteralValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralValue__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralValueAccess().getLiteralValueAction_0()); }
	()
	{ after(grammarAccess.getLiteralValueAccess().getLiteralValueAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralValue__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LiteralValue__Group__1__Impl
	rule__LiteralValue__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralValue__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralValueAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getLiteralValueAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralValue__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LiteralValue__Group__2__Impl
	rule__LiteralValue__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralValue__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralValueAccess().getGroup_2()); }
	(rule__LiteralValue__Group_2__0)?
	{ after(grammarAccess.getLiteralValueAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralValue__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LiteralValue__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralValue__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralValueAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getLiteralValueAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralValue__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LiteralValue__Group_2__0__Impl
	rule__LiteralValue__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralValue__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralValueAccess().getElementListAssignment_2_0()); }
	(rule__LiteralValue__ElementListAssignment_2_0)
	{ after(grammarAccess.getLiteralValueAccess().getElementListAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralValue__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LiteralValue__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralValue__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralValueAccess().getCommaKeyword_2_1()); }
	(',')?
	{ after(grammarAccess.getLiteralValueAccess().getCommaKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ElementList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElementList__Group__0__Impl
	rule__ElementList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementListAccess().getKeyedElementAssignment_0()); }
	(rule__ElementList__KeyedElementAssignment_0)
	{ after(grammarAccess.getElementListAccess().getKeyedElementAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElementList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementListAccess().getGroup_1()); }
	(rule__ElementList__Group_1__0)?
	{ after(grammarAccess.getElementListAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ElementList__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElementList__Group_1__0__Impl
	rule__ElementList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementList__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementListAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getElementListAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementList__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElementList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementList__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementListAccess().getKeyedElementAssignment_1_1()); }
	(rule__ElementList__KeyedElementAssignment_1_1)
	{ after(grammarAccess.getElementListAccess().getKeyedElementAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__KeyedElement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__KeyedElement__Group__0__Impl
	rule__KeyedElement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyedElement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getKeyedElementAccess().getGroup_0()); }
	(rule__KeyedElement__Group_0__0)?
	{ after(grammarAccess.getKeyedElementAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyedElement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__KeyedElement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyedElement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getKeyedElementAccess().getElementAssignment_1()); }
	(rule__KeyedElement__ElementAssignment_1)
	{ after(grammarAccess.getKeyedElementAccess().getElementAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__KeyedElement__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__KeyedElement__Group_0__0__Impl
	rule__KeyedElement__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyedElement__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getKeyedElementAccess().getKeyAssignment_0_0()); }
	(rule__KeyedElement__KeyAssignment_0_0)
	{ after(grammarAccess.getKeyedElementAccess().getKeyAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyedElement__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__KeyedElement__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyedElement__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getKeyedElementAccess().getColonKeyword_0_1()); }
	':'
	{ after(grammarAccess.getKeyedElementAccess().getColonKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionLit__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionLit__Group__0__Impl
	rule__FunctionLit__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionLit__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionLitAccess().getFuncKeyword_0()); }
	'func'
	{ after(grammarAccess.getFunctionLitAccess().getFuncKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionLit__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionLit__Group__1__Impl
	rule__FunctionLit__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionLit__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionLitAccess().getSignatureAssignment_1()); }
	(rule__FunctionLit__SignatureAssignment_1)
	{ after(grammarAccess.getFunctionLitAccess().getSignatureAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionLit__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionLit__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionLit__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionLitAccess().getFunctionBodyAssignment_2()); }
	(rule__FunctionLit__FunctionBodyAssignment_2)
	{ after(grammarAccess.getFunctionLitAccess().getFunctionBodyAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpr__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpr__Group_0__0__Impl
	rule__PrimaryExpr__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExprAccess().getOperandAssignment_0_0()); }
	(rule__PrimaryExpr__OperandAssignment_0_0)
	{ after(grammarAccess.getPrimaryExprAccess().getOperandAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpr__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExprAccess().getPrimaryExprLinhaAssignment_0_1()); }
	(rule__PrimaryExpr__PrimaryExprLinhaAssignment_0_1)
	{ after(grammarAccess.getPrimaryExprAccess().getPrimaryExprLinhaAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpr__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpr__Group_1__0__Impl
	rule__PrimaryExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExprAccess().getConversionAssignment_1_0()); }
	(rule__PrimaryExpr__ConversionAssignment_1_0)
	{ after(grammarAccess.getPrimaryExprAccess().getConversionAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpr__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExprAccess().getPrimaryExprLinhaAssignment_1_1()); }
	(rule__PrimaryExpr__PrimaryExprLinhaAssignment_1_1)
	{ after(grammarAccess.getPrimaryExprAccess().getPrimaryExprLinhaAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpr__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpr__Group_2__0__Impl
	rule__PrimaryExpr__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExprAccess().getMethodExprAssignment_2_0()); }
	(rule__PrimaryExpr__MethodExprAssignment_2_0)
	{ after(grammarAccess.getPrimaryExprAccess().getMethodExprAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpr__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExprAccess().getPrimaryExprLinhaAssignment_2_1()); }
	(rule__PrimaryExpr__PrimaryExprLinhaAssignment_2_1)
	{ after(grammarAccess.getPrimaryExprAccess().getPrimaryExprLinhaAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExprLinha__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExprLinha__Group_0__0__Impl
	rule__PrimaryExprLinha__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprLinha__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExprLinhaAccess().getArgumentsAssignment_0_0()); }
	(rule__PrimaryExprLinha__ArgumentsAssignment_0_0)
	{ after(grammarAccess.getPrimaryExprLinhaAccess().getArgumentsAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprLinha__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExprLinha__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprLinha__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExprLinhaAccess().getPrimaryExprLinhaAssignment_0_1()); }
	(rule__PrimaryExprLinha__PrimaryExprLinhaAssignment_0_1)
	{ after(grammarAccess.getPrimaryExprLinhaAccess().getPrimaryExprLinhaAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExprLinha__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExprLinha__Group_1__0__Impl
	rule__PrimaryExprLinha__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprLinha__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExprLinhaAccess().getFullStopKeyword_1_0()); }
	'.'
	{ after(grammarAccess.getPrimaryExprLinhaAccess().getFullStopKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprLinha__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExprLinha__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprLinha__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExprLinhaAccess().getPontoAssignment_1_1()); }
	(rule__PrimaryExprLinha__PontoAssignment_1_1)
	{ after(grammarAccess.getPrimaryExprLinhaAccess().getPontoAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExprLinha__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExprLinha__Group_2__0__Impl
	rule__PrimaryExprLinha__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprLinha__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExprLinhaAccess().getLeftSquareBracketKeyword_2_0()); }
	'['
	{ after(grammarAccess.getPrimaryExprLinhaAccess().getLeftSquareBracketKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprLinha__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExprLinha__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprLinha__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExprLinhaAccess().getCochetesAssignment_2_1()); }
	(rule__PrimaryExprLinha__CochetesAssignment_2_1)
	{ after(grammarAccess.getPrimaryExprLinhaAccess().getCochetesAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExprLinha__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExprLinha__Group_3__0__Impl
	rule__PrimaryExprLinha__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprLinha__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExprLinhaAccess().getPrimaryExprLinhaAction_3_0()); }
	()
	{ after(grammarAccess.getPrimaryExprLinhaAccess().getPrimaryExprLinhaAction_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprLinha__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExprLinha__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprLinha__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExprLinhaAccess().getANY_OTHERTerminalRuleCall_3_1()); }
	RULE_ANY_OTHER
	{ after(grammarAccess.getPrimaryExprLinhaAccess().getANY_OTHERTerminalRuleCall_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Ponto__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ponto__Group_0__0__Impl
	rule__Ponto__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ponto__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPontoAccess().getSelectorAssignment_0_0()); }
	(rule__Ponto__SelectorAssignment_0_0)
	{ after(grammarAccess.getPontoAccess().getSelectorAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ponto__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ponto__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ponto__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPontoAccess().getPrimaryExprLinhaAssignment_0_1()); }
	(rule__Ponto__PrimaryExprLinhaAssignment_0_1)
	{ after(grammarAccess.getPontoAccess().getPrimaryExprLinhaAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Ponto__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ponto__Group_1__0__Impl
	rule__Ponto__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ponto__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPontoAccess().getTypeAssertionAssignment_1_0()); }
	(rule__Ponto__TypeAssertionAssignment_1_0)
	{ after(grammarAccess.getPontoAccess().getTypeAssertionAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ponto__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ponto__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ponto__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPontoAccess().getPrimaryExprLinhaAssignment_1_1()); }
	(rule__Ponto__PrimaryExprLinhaAssignment_1_1)
	{ after(grammarAccess.getPontoAccess().getPrimaryExprLinhaAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Cochetes__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cochetes__Group_0__0__Impl
	rule__Cochetes__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Cochetes__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCochetesAccess().getIndexAssignment_0_0()); }
	(rule__Cochetes__IndexAssignment_0_0)
	{ after(grammarAccess.getCochetesAccess().getIndexAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cochetes__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cochetes__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Cochetes__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCochetesAccess().getPrimaryExprLinhaAssignment_0_1()); }
	(rule__Cochetes__PrimaryExprLinhaAssignment_0_1)
	{ after(grammarAccess.getCochetesAccess().getPrimaryExprLinhaAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Cochetes__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cochetes__Group_1__0__Impl
	rule__Cochetes__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Cochetes__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCochetesAccess().getSliceAssignment_1_0()); }
	(rule__Cochetes__SliceAssignment_1_0)
	{ after(grammarAccess.getCochetesAccess().getSliceAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cochetes__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cochetes__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Cochetes__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCochetesAccess().getPrimaryExprLinhaAssignment_1_1()); }
	(rule__Cochetes__PrimaryExprLinhaAssignment_1_1)
	{ after(grammarAccess.getCochetesAccess().getPrimaryExprLinhaAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Index__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Index__Group_0__0__Impl
	rule__Index__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Index__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndexAccess().getIndexAction_0_0()); }
	()
	{ after(grammarAccess.getIndexAccess().getIndexAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Index__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Index__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Index__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndexAccess().getRightSquareBracketKeyword_0_1()); }
	']'
	{ after(grammarAccess.getIndexAccess().getRightSquareBracketKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Slice__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Slice__Group__0__Impl
	rule__Slice__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Slice__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSliceAccess().getColonKeyword_0()); }
	':'
	{ after(grammarAccess.getSliceAccess().getColonKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Slice__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Slice__Group__1__Impl
	rule__Slice__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Slice__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSliceAccess().getDecimalsAssignment_1()); }
	(rule__Slice__DecimalsAssignment_1)?
	{ after(grammarAccess.getSliceAccess().getDecimalsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Slice__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Slice__Group__2__Impl
	rule__Slice__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Slice__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSliceAccess().getColonKeyword_2()); }
	':'
	{ after(grammarAccess.getSliceAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Slice__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Slice__Group__3__Impl
	rule__Slice__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Slice__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSliceAccess().getDecimalsAssignment_3()); }
	(rule__Slice__DecimalsAssignment_3)
	{ after(grammarAccess.getSliceAccess().getDecimalsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Slice__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Slice__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Slice__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSliceAccess().getRightSquareBracketKeyword_4()); }
	']'
	{ after(grammarAccess.getSliceAccess().getRightSquareBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeAssertion__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeAssertion__Group__0__Impl
	rule__TypeAssertion__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeAssertion__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAssertionAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getTypeAssertionAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeAssertion__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeAssertion__Group__1__Impl
	rule__TypeAssertion__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeAssertion__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAssertionAccess().getTypeAssignment_1()); }
	(rule__TypeAssertion__TypeAssignment_1)
	{ after(grammarAccess.getTypeAssertionAccess().getTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeAssertion__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeAssertion__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeAssertion__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAssertionAccess().getRightParenthesisKeyword_2()); }
	')'
	{ after(grammarAccess.getTypeAssertionAccess().getRightParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Arguments__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arguments__Group__0__Impl
	rule__Arguments__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentsAccess().getArgumentsAction_0()); }
	()
	{ after(grammarAccess.getArgumentsAccess().getArgumentsAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arguments__Group__1__Impl
	rule__Arguments__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentsAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getArgumentsAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arguments__Group__2__Impl
	rule__Arguments__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentsAccess().getGroup_2()); }
	(rule__Arguments__Group_2__0)?
	{ after(grammarAccess.getArgumentsAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arguments__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentsAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getArgumentsAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Arguments__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arguments__Group_2__0__Impl
	rule__Arguments__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentsAccess().getAlternatives_2_0()); }
	(rule__Arguments__Alternatives_2_0)
	{ after(grammarAccess.getArgumentsAccess().getAlternatives_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arguments__Group_2__1__Impl
	rule__Arguments__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentsAccess().getFullStopFullStopFullStopKeyword_2_1()); }
	('...')?
	{ after(grammarAccess.getArgumentsAccess().getFullStopFullStopFullStopKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arguments__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentsAccess().getCommaKeyword_2_2()); }
	(',')?
	{ after(grammarAccess.getArgumentsAccess().getCommaKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Arguments__Group_2_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arguments__Group_2_0_1__0__Impl
	rule__Arguments__Group_2_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Group_2_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentsAccess().getTypeAssignment_2_0_1_0()); }
	(rule__Arguments__TypeAssignment_2_0_1_0)
	{ after(grammarAccess.getArgumentsAccess().getTypeAssignment_2_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Group_2_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arguments__Group_2_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Group_2_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentsAccess().getGroup_2_0_1_1()); }
	(rule__Arguments__Group_2_0_1_1__0)?
	{ after(grammarAccess.getArgumentsAccess().getGroup_2_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Arguments__Group_2_0_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arguments__Group_2_0_1_1__0__Impl
	rule__Arguments__Group_2_0_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Group_2_0_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentsAccess().getCommaKeyword_2_0_1_1_0()); }
	','
	{ after(grammarAccess.getArgumentsAccess().getCommaKeyword_2_0_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Group_2_0_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arguments__Group_2_0_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Group_2_0_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentsAccess().getExpressionListAssignment_2_0_1_1_1()); }
	(rule__Arguments__ExpressionListAssignment_2_0_1_1_1)
	{ after(grammarAccess.getArgumentsAccess().getExpressionListAssignment_2_0_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MethodExpr__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodExpr__Group__0__Impl
	rule__MethodExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpr__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodExprAccess().getReceiverTypeAssignment_0()); }
	(rule__MethodExpr__ReceiverTypeAssignment_0)
	{ after(grammarAccess.getMethodExprAccess().getReceiverTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpr__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodExpr__Group__1__Impl
	rule__MethodExpr__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpr__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodExprAccess().getFullStopKeyword_1()); }
	'.'
	{ after(grammarAccess.getMethodExprAccess().getFullStopKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpr__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodExpr__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpr__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodExprAccess().getMethodNameAssignment_2()); }
	(rule__MethodExpr__MethodNameAssignment_2)
	{ after(grammarAccess.getMethodExprAccess().getMethodNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group__0__Impl
	rule__Expression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getUnaryExprAssignment_0()); }
	(rule__Expression__UnaryExprAssignment_0)
	{ after(grammarAccess.getExpressionAccess().getUnaryExprAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getExpressionLinhaAssignment_1()); }
	(rule__Expression__ExpressionLinhaAssignment_1)
	{ after(grammarAccess.getExpressionAccess().getExpressionLinhaAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionLinha__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLinha__Group_0__0__Impl
	rule__ExpressionLinha__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLinha__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLinhaAccess().getBinary_opAssignment_0_0()); }
	(rule__ExpressionLinha__Binary_opAssignment_0_0)
	{ after(grammarAccess.getExpressionLinhaAccess().getBinary_opAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLinha__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLinha__Group_0__1__Impl
	rule__ExpressionLinha__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLinha__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLinhaAccess().getExpressionAssignment_0_1()); }
	(rule__ExpressionLinha__ExpressionAssignment_0_1)
	{ after(grammarAccess.getExpressionLinhaAccess().getExpressionAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLinha__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLinha__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLinha__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLinhaAccess().getExpressionLinhaAssignment_0_2()); }
	(rule__ExpressionLinha__ExpressionLinhaAssignment_0_2)
	{ after(grammarAccess.getExpressionLinhaAccess().getExpressionLinhaAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionLinha__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLinha__Group_1__0__Impl
	rule__ExpressionLinha__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLinha__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLinhaAccess().getExpressionLinhaAction_1_0()); }
	()
	{ after(grammarAccess.getExpressionLinhaAccess().getExpressionLinhaAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLinha__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLinha__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLinha__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLinhaAccess().getANY_OTHERTerminalRuleCall_1_1()); }
	RULE_ANY_OTHER
	{ after(grammarAccess.getExpressionLinhaAccess().getANY_OTHERTerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpr__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryExpr__Group_1__0__Impl
	rule__UnaryExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryExprAccess().getUnary_opAssignment_1_0()); }
	(rule__UnaryExpr__Unary_opAssignment_1_0)
	{ after(grammarAccess.getUnaryExprAccess().getUnary_opAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryExpr__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryExprAccess().getUnaryExprAssignment_1_1()); }
	(rule__UnaryExpr__UnaryExprAssignment_1_1)
	{ after(grammarAccess.getUnaryExprAccess().getUnaryExprAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Binary_op__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Binary_op__Group_0__0__Impl
	rule__Binary_op__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Binary_op__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinary_opAccess().getBinary_opAction_0_0()); }
	()
	{ after(grammarAccess.getBinary_opAccess().getBinary_opAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Binary_op__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Binary_op__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Binary_op__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinary_opAccess().getVerticalLineVerticalLineKeyword_0_1()); }
	'||'
	{ after(grammarAccess.getBinary_opAccess().getVerticalLineVerticalLineKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Binary_op__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Binary_op__Group_1__0__Impl
	rule__Binary_op__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Binary_op__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinary_opAccess().getBinary_opAction_1_0()); }
	()
	{ after(grammarAccess.getBinary_opAccess().getBinary_opAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Binary_op__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Binary_op__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Binary_op__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinary_opAccess().getAmpersandAmpersandKeyword_1_1()); }
	'&&'
	{ after(grammarAccess.getBinary_opAccess().getAmpersandAmpersandKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Conversion__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conversion__Group__0__Impl
	rule__Conversion__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Conversion__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConversionAccess().getTypeAssignment_0()); }
	(rule__Conversion__TypeAssignment_0)
	{ after(grammarAccess.getConversionAccess().getTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conversion__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conversion__Group__1__Impl
	rule__Conversion__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Conversion__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConversionAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getConversionAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conversion__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conversion__Group__2__Impl
	rule__Conversion__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Conversion__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConversionAccess().getExpressionAssignment_2()); }
	(rule__Conversion__ExpressionAssignment_2)
	{ after(grammarAccess.getConversionAccess().getExpressionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conversion__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conversion__Group__3__Impl
	rule__Conversion__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Conversion__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConversionAccess().getCommaKeyword_3()); }
	(',')?
	{ after(grammarAccess.getConversionAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conversion__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conversion__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Conversion__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConversionAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getConversionAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LabeledStmt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LabeledStmt__Group__0__Impl
	rule__LabeledStmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LabeledStmt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLabeledStmtAccess().getLabelAssignment_0()); }
	(rule__LabeledStmt__LabelAssignment_0)
	{ after(grammarAccess.getLabeledStmtAccess().getLabelAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LabeledStmt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LabeledStmt__Group__1__Impl
	rule__LabeledStmt__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LabeledStmt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLabeledStmtAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getLabeledStmtAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LabeledStmt__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LabeledStmt__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LabeledStmt__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLabeledStmtAccess().getStatementAssignment_2()); }
	(rule__LabeledStmt__StatementAssignment_2)
	{ after(grammarAccess.getLabeledStmtAccess().getStatementAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SendStmt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SendStmt__Group__0__Impl
	rule__SendStmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SendStmt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSendStmtAccess().getChannelAssignment_0()); }
	(rule__SendStmt__ChannelAssignment_0)
	{ after(grammarAccess.getSendStmtAccess().getChannelAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SendStmt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SendStmt__Group__1__Impl
	rule__SendStmt__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SendStmt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSendStmtAccess().getLessThanSignHyphenMinusKeyword_1()); }
	'<-'
	{ after(grammarAccess.getSendStmtAccess().getLessThanSignHyphenMinusKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SendStmt__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SendStmt__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SendStmt__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSendStmtAccess().getExpressionAssignment_2()); }
	(rule__SendStmt__ExpressionAssignment_2)
	{ after(grammarAccess.getSendStmtAccess().getExpressionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IncDecStmt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IncDecStmt__Group__0__Impl
	rule__IncDecStmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IncDecStmt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIncDecStmtAccess().getExpressionAssignment_0()); }
	(rule__IncDecStmt__ExpressionAssignment_0)
	{ after(grammarAccess.getIncDecStmtAccess().getExpressionAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IncDecStmt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IncDecStmt__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IncDecStmt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIncDecStmtAccess().getAlternatives_1()); }
	(rule__IncDecStmt__Alternatives_1)
	{ after(grammarAccess.getIncDecStmtAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment__Group__0__Impl
	rule__Assignment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentAccess().getExpressionListAssignment_0()); }
	(rule__Assignment__ExpressionListAssignment_0)
	{ after(grammarAccess.getAssignmentAccess().getExpressionListAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment__Group__1__Impl
	rule__Assignment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentAccess().getAssign_opAssignment_1()); }
	(rule__Assignment__Assign_opAssignment_1)
	{ after(grammarAccess.getAssignmentAccess().getAssign_opAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentAccess().getExpressionListAssignment_2()); }
	(rule__Assignment__ExpressionListAssignment_2)
	{ after(grammarAccess.getAssignmentAccess().getExpressionListAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Assign_op__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assign_op__Group__0__Impl
	rule__Assign_op__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Assign_op__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssign_opAccess().getAlternatives_0()); }
	(rule__Assign_op__Alternatives_0)?
	{ after(grammarAccess.getAssign_opAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assign_op__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assign_op__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Assign_op__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssign_opAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getAssign_opAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfStmt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStmt__Group__0__Impl
	rule__IfStmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStmtAccess().getIfKeyword_0()); }
	'if'
	{ after(grammarAccess.getIfStmtAccess().getIfKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStmt__Group__1__Impl
	rule__IfStmt__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStmtAccess().getGroup_1()); }
	(rule__IfStmt__Group_1__0)?
	{ after(grammarAccess.getIfStmtAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStmt__Group__2__Impl
	rule__IfStmt__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStmtAccess().getExpressionAssignment_2()); }
	(rule__IfStmt__ExpressionAssignment_2)
	{ after(grammarAccess.getIfStmtAccess().getExpressionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStmt__Group__3__Impl
	rule__IfStmt__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStmtAccess().getBlockAssignment_3()); }
	(rule__IfStmt__BlockAssignment_3)
	{ after(grammarAccess.getIfStmtAccess().getBlockAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStmt__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStmtAccess().getGroup_4()); }
	(rule__IfStmt__Group_4__0)?
	{ after(grammarAccess.getIfStmtAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfStmt__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStmt__Group_1__0__Impl
	rule__IfStmt__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStmtAccess().getSimpleStmtAssignment_1_0()); }
	(rule__IfStmt__SimpleStmtAssignment_1_0)
	{ after(grammarAccess.getIfStmtAccess().getSimpleStmtAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStmt__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStmtAccess().getSemicolonKeyword_1_1()); }
	';'
	{ after(grammarAccess.getIfStmtAccess().getSemicolonKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfStmt__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStmt__Group_4__0__Impl
	rule__IfStmt__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStmtAccess().getElseKeyword_4_0()); }
	'else'
	{ after(grammarAccess.getIfStmtAccess().getElseKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStmt__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStmtAccess().getAlternatives_4_1()); }
	(rule__IfStmt__Alternatives_4_1)
	{ after(grammarAccess.getIfStmtAccess().getAlternatives_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchStmt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SwitchStmt__Group__0__Impl
	rule__SwitchStmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStmt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitchStmtAccess().getSwitchKeyword_0()); }
	'switch'
	{ after(grammarAccess.getSwitchStmtAccess().getSwitchKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStmt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SwitchStmt__Group__1__Impl
	rule__SwitchStmt__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStmt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitchStmtAccess().getGroup_1()); }
	(rule__SwitchStmt__Group_1__0)?
	{ after(grammarAccess.getSwitchStmtAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStmt__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SwitchStmt__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStmt__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitchStmtAccess().getSwitch_stmt_linhaAssignment_2()); }
	(rule__SwitchStmt__Switch_stmt_linhaAssignment_2)
	{ after(grammarAccess.getSwitchStmtAccess().getSwitch_stmt_linhaAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchStmt__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SwitchStmt__Group_1__0__Impl
	rule__SwitchStmt__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStmt__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitchStmtAccess().getSimpleStmtParserRuleCall_1_0()); }
	ruleSimpleStmt
	{ after(grammarAccess.getSwitchStmtAccess().getSimpleStmtParserRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStmt__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SwitchStmt__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStmt__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitchStmtAccess().getSemicolonKeyword_1_1()); }
	';'
	{ after(grammarAccess.getSwitchStmtAccess().getSemicolonKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExprCaseClause__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprCaseClause__Group__0__Impl
	rule__ExprCaseClause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprCaseClause__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprCaseClauseAccess().getExprSwitchCaseAssignment_0()); }
	(rule__ExprCaseClause__ExprSwitchCaseAssignment_0)
	{ after(grammarAccess.getExprCaseClauseAccess().getExprSwitchCaseAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprCaseClause__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprCaseClause__Group__1__Impl
	rule__ExprCaseClause__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprCaseClause__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprCaseClauseAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getExprCaseClauseAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprCaseClause__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprCaseClause__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprCaseClause__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprCaseClauseAccess().getStatementListAssignment_2()); }
	(rule__ExprCaseClause__StatementListAssignment_2)
	{ after(grammarAccess.getExprCaseClauseAccess().getStatementListAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExprSwitchCase__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprSwitchCase__Group_0__0__Impl
	rule__ExprSwitchCase__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSwitchCase__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprSwitchCaseAccess().getCaseKeyword_0_0()); }
	'case'
	{ after(grammarAccess.getExprSwitchCaseAccess().getCaseKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSwitchCase__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprSwitchCase__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSwitchCase__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprSwitchCaseAccess().getExpressionListAssignment_0_1()); }
	(rule__ExprSwitchCase__ExpressionListAssignment_0_1)
	{ after(grammarAccess.getExprSwitchCaseAccess().getExpressionListAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExprSwitchCase__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprSwitchCase__Group_1__0__Impl
	rule__ExprSwitchCase__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSwitchCase__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprSwitchCaseAccess().getExprSwitchCaseAction_1_0()); }
	()
	{ after(grammarAccess.getExprSwitchCaseAccess().getExprSwitchCaseAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSwitchCase__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprSwitchCase__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSwitchCase__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprSwitchCaseAccess().getDefaultKeyword_1_1()); }
	'default'
	{ after(grammarAccess.getExprSwitchCaseAccess().getDefaultKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Switch_stmt_linha__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Switch_stmt_linha__Group_0__0__Impl
	rule__Switch_stmt_linha__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Switch_stmt_linha__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitch_stmt_linhaAccess().getTypeSwitchGuardAssignment_0_0()); }
	(rule__Switch_stmt_linha__TypeSwitchGuardAssignment_0_0)
	{ after(grammarAccess.getSwitch_stmt_linhaAccess().getTypeSwitchGuardAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Switch_stmt_linha__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Switch_stmt_linha__Group_0__1__Impl
	rule__Switch_stmt_linha__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Switch_stmt_linha__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitch_stmt_linhaAccess().getLeftCurlyBracketKeyword_0_1()); }
	'{'
	{ after(grammarAccess.getSwitch_stmt_linhaAccess().getLeftCurlyBracketKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Switch_stmt_linha__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Switch_stmt_linha__Group_0__2__Impl
	rule__Switch_stmt_linha__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Switch_stmt_linha__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitch_stmt_linhaAccess().getTypeCaseClauseAssignment_0_2()); }
	(rule__Switch_stmt_linha__TypeCaseClauseAssignment_0_2)*
	{ after(grammarAccess.getSwitch_stmt_linhaAccess().getTypeCaseClauseAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Switch_stmt_linha__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Switch_stmt_linha__Group_0__3__Impl
	rule__Switch_stmt_linha__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Switch_stmt_linha__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitch_stmt_linhaAccess().getRightCurlyBracketKeyword_0_3()); }
	'}'
	{ after(grammarAccess.getSwitch_stmt_linhaAccess().getRightCurlyBracketKeyword_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Switch_stmt_linha__Group_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Switch_stmt_linha__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Switch_stmt_linha__Group_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitch_stmt_linhaAccess().getSwitch_stmt_linhaAssignment_0_4()); }
	(rule__Switch_stmt_linha__Switch_stmt_linhaAssignment_0_4)
	{ after(grammarAccess.getSwitch_stmt_linhaAccess().getSwitch_stmt_linhaAssignment_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Switch_stmt_linha__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Switch_stmt_linha__Group_1__0__Impl
	rule__Switch_stmt_linha__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Switch_stmt_linha__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitch_stmt_linhaAccess().getSwitch_stmt_linhaAction_1_0()); }
	()
	{ after(grammarAccess.getSwitch_stmt_linhaAccess().getSwitch_stmt_linhaAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Switch_stmt_linha__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Switch_stmt_linha__Group_1__1__Impl
	rule__Switch_stmt_linha__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Switch_stmt_linha__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitch_stmt_linhaAccess().getExpressionAssignment_1_1()); }
	(rule__Switch_stmt_linha__ExpressionAssignment_1_1)?
	{ after(grammarAccess.getSwitch_stmt_linhaAccess().getExpressionAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Switch_stmt_linha__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Switch_stmt_linha__Group_1__2__Impl
	rule__Switch_stmt_linha__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Switch_stmt_linha__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitch_stmt_linhaAccess().getLeftCurlyBracketKeyword_1_2()); }
	'{'
	{ after(grammarAccess.getSwitch_stmt_linhaAccess().getLeftCurlyBracketKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Switch_stmt_linha__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Switch_stmt_linha__Group_1__3__Impl
	rule__Switch_stmt_linha__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Switch_stmt_linha__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitch_stmt_linhaAccess().getExprCaseClauseAssignment_1_3()); }
	(rule__Switch_stmt_linha__ExprCaseClauseAssignment_1_3)*
	{ after(grammarAccess.getSwitch_stmt_linhaAccess().getExprCaseClauseAssignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Switch_stmt_linha__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Switch_stmt_linha__Group_1__4__Impl
	rule__Switch_stmt_linha__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Switch_stmt_linha__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitch_stmt_linhaAccess().getRightCurlyBracketKeyword_1_4()); }
	'}'
	{ after(grammarAccess.getSwitch_stmt_linhaAccess().getRightCurlyBracketKeyword_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Switch_stmt_linha__Group_1__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Switch_stmt_linha__Group_1__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Switch_stmt_linha__Group_1__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitch_stmt_linhaAccess().getSwitch_stmt_linhaAssignment_1_5()); }
	(rule__Switch_stmt_linha__Switch_stmt_linhaAssignment_1_5)
	{ after(grammarAccess.getSwitch_stmt_linhaAccess().getSwitch_stmt_linhaAssignment_1_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Switch_stmt_linha__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Switch_stmt_linha__Group_2__0__Impl
	rule__Switch_stmt_linha__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Switch_stmt_linha__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitch_stmt_linhaAccess().getSwitch_stmt_linhaAction_2_0()); }
	()
	{ after(grammarAccess.getSwitch_stmt_linhaAccess().getSwitch_stmt_linhaAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Switch_stmt_linha__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Switch_stmt_linha__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Switch_stmt_linha__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitch_stmt_linhaAccess().getANY_OTHERTerminalRuleCall_2_1()); }
	RULE_ANY_OTHER
	{ after(grammarAccess.getSwitch_stmt_linhaAccess().getANY_OTHERTerminalRuleCall_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeSwitchGuard__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeSwitchGuard__Group__0__Impl
	rule__TypeSwitchGuard__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSwitchGuard__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeSwitchGuardAccess().getGroup_0()); }
	(rule__TypeSwitchGuard__Group_0__0)?
	{ after(grammarAccess.getTypeSwitchGuardAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSwitchGuard__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeSwitchGuard__Group__1__Impl
	rule__TypeSwitchGuard__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSwitchGuard__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeSwitchGuardAccess().getPrimaryExprAssignment_1()); }
	(rule__TypeSwitchGuard__PrimaryExprAssignment_1)
	{ after(grammarAccess.getTypeSwitchGuardAccess().getPrimaryExprAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSwitchGuard__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeSwitchGuard__Group__2__Impl
	rule__TypeSwitchGuard__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSwitchGuard__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeSwitchGuardAccess().getFullStopKeyword_2()); }
	'.'
	{ after(grammarAccess.getTypeSwitchGuardAccess().getFullStopKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSwitchGuard__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeSwitchGuard__Group__3__Impl
	rule__TypeSwitchGuard__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSwitchGuard__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeSwitchGuardAccess().getLeftParenthesisKeyword_3()); }
	'('
	{ after(grammarAccess.getTypeSwitchGuardAccess().getLeftParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSwitchGuard__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeSwitchGuard__Group__4__Impl
	rule__TypeSwitchGuard__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSwitchGuard__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeSwitchGuardAccess().getTypeKeyword_4()); }
	'type'
	{ after(grammarAccess.getTypeSwitchGuardAccess().getTypeKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSwitchGuard__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeSwitchGuard__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSwitchGuard__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeSwitchGuardAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getTypeSwitchGuardAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeSwitchGuard__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeSwitchGuard__Group_0__0__Impl
	rule__TypeSwitchGuard__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSwitchGuard__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeSwitchGuardAccess().getIdentifierAssignment_0_0()); }
	(rule__TypeSwitchGuard__IdentifierAssignment_0_0)
	{ after(grammarAccess.getTypeSwitchGuardAccess().getIdentifierAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSwitchGuard__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeSwitchGuard__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSwitchGuard__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeSwitchGuardAccess().getColonEqualsSignKeyword_0_1()); }
	':='
	{ after(grammarAccess.getTypeSwitchGuardAccess().getColonEqualsSignKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeCaseClause__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeCaseClause__Group__0__Impl
	rule__TypeCaseClause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeCaseClause__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeCaseClauseAccess().getTypeSwitchCaseAssignment_0()); }
	(rule__TypeCaseClause__TypeSwitchCaseAssignment_0)
	{ after(grammarAccess.getTypeCaseClauseAccess().getTypeSwitchCaseAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeCaseClause__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeCaseClause__Group__1__Impl
	rule__TypeCaseClause__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeCaseClause__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeCaseClauseAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getTypeCaseClauseAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeCaseClause__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeCaseClause__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeCaseClause__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeCaseClauseAccess().getStatementListAssignment_2()); }
	(rule__TypeCaseClause__StatementListAssignment_2)
	{ after(grammarAccess.getTypeCaseClauseAccess().getStatementListAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeSwitchCase__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeSwitchCase__Group_0__0__Impl
	rule__TypeSwitchCase__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSwitchCase__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeSwitchCaseAccess().getCaseKeyword_0_0()); }
	'case'
	{ after(grammarAccess.getTypeSwitchCaseAccess().getCaseKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSwitchCase__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeSwitchCase__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSwitchCase__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeSwitchCaseAccess().getTypeListAssignment_0_1()); }
	(rule__TypeSwitchCase__TypeListAssignment_0_1)
	{ after(grammarAccess.getTypeSwitchCaseAccess().getTypeListAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeSwitchCase__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeSwitchCase__Group_1__0__Impl
	rule__TypeSwitchCase__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSwitchCase__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeSwitchCaseAccess().getTypeSwitchCaseAction_1_0()); }
	()
	{ after(grammarAccess.getTypeSwitchCaseAccess().getTypeSwitchCaseAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSwitchCase__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeSwitchCase__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSwitchCase__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeSwitchCaseAccess().getDefaultKeyword_1_1()); }
	'default'
	{ after(grammarAccess.getTypeSwitchCaseAccess().getDefaultKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeList__Group__0__Impl
	rule__TypeList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeListAccess().getTypeAssignment_0()); }
	(rule__TypeList__TypeAssignment_0)
	{ after(grammarAccess.getTypeListAccess().getTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeListAccess().getGroup_1()); }
	(rule__TypeList__Group_1__0)*
	{ after(grammarAccess.getTypeListAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeList__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeList__Group_1__0__Impl
	rule__TypeList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeList__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeListAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getTypeListAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeList__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeList__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeListAccess().getTypeAssignment_1_1()); }
	(rule__TypeList__TypeAssignment_1_1)
	{ after(grammarAccess.getTypeListAccess().getTypeAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ForStmt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStmt__Group__0__Impl
	rule__ForStmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStmtAccess().getForKeyword_0()); }
	'for'
	{ after(grammarAccess.getForStmtAccess().getForKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStmt__Group__1__Impl
	rule__ForStmt__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStmtAccess().getAlternatives_1()); }
	(rule__ForStmt__Alternatives_1)?
	{ after(grammarAccess.getForStmtAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStmt__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStmtAccess().getBlockAssignment_2()); }
	(rule__ForStmt__BlockAssignment_2)
	{ after(grammarAccess.getForStmtAccess().getBlockAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ForClause__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForClause__Group__0__Impl
	rule__ForClause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForClause__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForClauseAccess().getForClauseAction_0()); }
	()
	{ after(grammarAccess.getForClauseAccess().getForClauseAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForClause__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForClause__Group__1__Impl
	rule__ForClause__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ForClause__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForClauseAccess().getInitStmtAssignment_1()); }
	(rule__ForClause__InitStmtAssignment_1)?
	{ after(grammarAccess.getForClauseAccess().getInitStmtAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForClause__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForClause__Group__2__Impl
	rule__ForClause__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ForClause__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForClauseAccess().getSemicolonKeyword_2()); }
	';'
	{ after(grammarAccess.getForClauseAccess().getSemicolonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForClause__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForClause__Group__3__Impl
	rule__ForClause__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ForClause__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForClauseAccess().getConditionAssignment_3()); }
	(rule__ForClause__ConditionAssignment_3)?
	{ after(grammarAccess.getForClauseAccess().getConditionAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForClause__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForClause__Group__4__Impl
	rule__ForClause__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ForClause__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForClauseAccess().getSemicolonKeyword_4()); }
	';'
	{ after(grammarAccess.getForClauseAccess().getSemicolonKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForClause__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForClause__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForClause__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForClauseAccess().getPostStmtAssignment_5()); }
	(rule__ForClause__PostStmtAssignment_5)?
	{ after(grammarAccess.getForClauseAccess().getPostStmtAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RangeClause__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RangeClause__Group__0__Impl
	rule__RangeClause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeClause__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeClauseAccess().getAlternatives_0()); }
	(rule__RangeClause__Alternatives_0)?
	{ after(grammarAccess.getRangeClauseAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeClause__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RangeClause__Group__1__Impl
	rule__RangeClause__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeClause__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeClauseAccess().getRangeKeyword_1()); }
	'range'
	{ after(grammarAccess.getRangeClauseAccess().getRangeKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeClause__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RangeClause__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeClause__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeClauseAccess().getExpressionAssignment_2()); }
	(rule__RangeClause__ExpressionAssignment_2)
	{ after(grammarAccess.getRangeClauseAccess().getExpressionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RangeClause__Group_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RangeClause__Group_0_0__0__Impl
	rule__RangeClause__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeClause__Group_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeClauseAccess().getExpressionListAssignment_0_0_0()); }
	(rule__RangeClause__ExpressionListAssignment_0_0_0)
	{ after(grammarAccess.getRangeClauseAccess().getExpressionListAssignment_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeClause__Group_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RangeClause__Group_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeClause__Group_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeClauseAccess().getEqualsSignKeyword_0_0_1()); }
	'='
	{ after(grammarAccess.getRangeClauseAccess().getEqualsSignKeyword_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RangeClause__Group_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RangeClause__Group_0_1__0__Impl
	rule__RangeClause__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeClause__Group_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeClauseAccess().getIdentifierListAssignment_0_1_0()); }
	(rule__RangeClause__IdentifierListAssignment_0_1_0)
	{ after(grammarAccess.getRangeClauseAccess().getIdentifierListAssignment_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeClause__Group_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RangeClause__Group_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeClause__Group_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeClauseAccess().getColonEqualsSignKeyword_0_1_1()); }
	':='
	{ after(grammarAccess.getRangeClauseAccess().getColonEqualsSignKeyword_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GoStmt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GoStmt__Group__0__Impl
	rule__GoStmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GoStmt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGoStmtAccess().getGoKeyword_0()); }
	'go'
	{ after(grammarAccess.getGoStmtAccess().getGoKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GoStmt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GoStmt__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GoStmt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGoStmtAccess().getExpressionAssignment_1()); }
	(rule__GoStmt__ExpressionAssignment_1)
	{ after(grammarAccess.getGoStmtAccess().getExpressionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SelectStmt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectStmt__Group__0__Impl
	rule__SelectStmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStmt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectStmtAccess().getSelectStmtAction_0()); }
	()
	{ after(grammarAccess.getSelectStmtAccess().getSelectStmtAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStmt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectStmt__Group__1__Impl
	rule__SelectStmt__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStmt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectStmtAccess().getSelectKeyword_1()); }
	'select'
	{ after(grammarAccess.getSelectStmtAccess().getSelectKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStmt__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectStmt__Group__2__Impl
	rule__SelectStmt__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStmt__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectStmtAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getSelectStmtAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStmt__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectStmt__Group__3__Impl
	rule__SelectStmt__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStmt__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectStmtAccess().getCommClauseAssignment_3()); }
	(rule__SelectStmt__CommClauseAssignment_3)*
	{ after(grammarAccess.getSelectStmtAccess().getCommClauseAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStmt__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectStmt__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStmt__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectStmtAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getSelectStmtAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CommClause__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CommClause__Group__0__Impl
	rule__CommClause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CommClause__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommClauseAccess().getCommCaseAssignment_0()); }
	(rule__CommClause__CommCaseAssignment_0)
	{ after(grammarAccess.getCommClauseAccess().getCommCaseAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommClause__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CommClause__Group__1__Impl
	rule__CommClause__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CommClause__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommClauseAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getCommClauseAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommClause__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CommClause__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CommClause__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommClauseAccess().getStatementListAssignment_2()); }
	(rule__CommClause__StatementListAssignment_2)
	{ after(grammarAccess.getCommClauseAccess().getStatementListAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CommCase__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CommCase__Group_0__0__Impl
	rule__CommCase__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CommCase__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommCaseAccess().getCaseKeyword_0_0()); }
	'case'
	{ after(grammarAccess.getCommCaseAccess().getCaseKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommCase__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CommCase__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CommCase__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommCaseAccess().getAlternatives_0_1()); }
	(rule__CommCase__Alternatives_0_1)
	{ after(grammarAccess.getCommCaseAccess().getAlternatives_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CommCase__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CommCase__Group_1__0__Impl
	rule__CommCase__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CommCase__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommCaseAccess().getCommCaseAction_1_0()); }
	()
	{ after(grammarAccess.getCommCaseAccess().getCommCaseAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommCase__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CommCase__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CommCase__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommCaseAccess().getDefaultKeyword_1_1()); }
	'default'
	{ after(grammarAccess.getCommCaseAccess().getDefaultKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RecvStmt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RecvStmt__Group__0__Impl
	rule__RecvStmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RecvStmt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRecvStmtAccess().getAlternatives_0()); }
	(rule__RecvStmt__Alternatives_0)?
	{ after(grammarAccess.getRecvStmtAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RecvStmt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RecvStmt__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RecvStmt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRecvStmtAccess().getRecvExprAssignment_1()); }
	(rule__RecvStmt__RecvExprAssignment_1)
	{ after(grammarAccess.getRecvStmtAccess().getRecvExprAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RecvStmt__Group_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RecvStmt__Group_0_0__0__Impl
	rule__RecvStmt__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RecvStmt__Group_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRecvStmtAccess().getExpressionListAssignment_0_0_0()); }
	(rule__RecvStmt__ExpressionListAssignment_0_0_0)
	{ after(grammarAccess.getRecvStmtAccess().getExpressionListAssignment_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RecvStmt__Group_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RecvStmt__Group_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RecvStmt__Group_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRecvStmtAccess().getEqualsSignKeyword_0_0_1()); }
	'='
	{ after(grammarAccess.getRecvStmtAccess().getEqualsSignKeyword_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RecvStmt__Group_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RecvStmt__Group_0_1__0__Impl
	rule__RecvStmt__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RecvStmt__Group_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRecvStmtAccess().getIdentifierListAssignment_0_1_0()); }
	(rule__RecvStmt__IdentifierListAssignment_0_1_0)
	{ after(grammarAccess.getRecvStmtAccess().getIdentifierListAssignment_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RecvStmt__Group_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RecvStmt__Group_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RecvStmt__Group_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRecvStmtAccess().getColonEqualsSignKeyword_0_1_1()); }
	':='
	{ after(grammarAccess.getRecvStmtAccess().getColonEqualsSignKeyword_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ReturnStmt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReturnStmt__Group__0__Impl
	rule__ReturnStmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStmt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReturnStmtAccess().getReturnStmtAction_0()); }
	()
	{ after(grammarAccess.getReturnStmtAccess().getReturnStmtAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStmt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReturnStmt__Group__1__Impl
	rule__ReturnStmt__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStmt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReturnStmtAccess().getReturnKeyword_1()); }
	'return'
	{ after(grammarAccess.getReturnStmtAccess().getReturnKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStmt__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReturnStmt__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStmt__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReturnStmtAccess().getExpressionListAssignment_2()); }
	(rule__ReturnStmt__ExpressionListAssignment_2)?
	{ after(grammarAccess.getReturnStmtAccess().getExpressionListAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BreakStmt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BreakStmt__Group__0__Impl
	rule__BreakStmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BreakStmt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBreakStmtAccess().getBreakStmtAction_0()); }
	()
	{ after(grammarAccess.getBreakStmtAccess().getBreakStmtAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BreakStmt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BreakStmt__Group__1__Impl
	rule__BreakStmt__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BreakStmt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBreakStmtAccess().getBreakKeyword_1()); }
	'break'
	{ after(grammarAccess.getBreakStmtAccess().getBreakKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BreakStmt__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BreakStmt__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BreakStmt__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBreakStmtAccess().getLabelAssignment_2()); }
	(rule__BreakStmt__LabelAssignment_2)?
	{ after(grammarAccess.getBreakStmtAccess().getLabelAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ContinueStmt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ContinueStmt__Group__0__Impl
	rule__ContinueStmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ContinueStmt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContinueStmtAccess().getContinueStmtAction_0()); }
	()
	{ after(grammarAccess.getContinueStmtAccess().getContinueStmtAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContinueStmt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ContinueStmt__Group__1__Impl
	rule__ContinueStmt__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ContinueStmt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContinueStmtAccess().getContinueKeyword_1()); }
	'continue'
	{ after(grammarAccess.getContinueStmtAccess().getContinueKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContinueStmt__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ContinueStmt__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ContinueStmt__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContinueStmtAccess().getLabelAssignment_2()); }
	(rule__ContinueStmt__LabelAssignment_2)?
	{ after(grammarAccess.getContinueStmtAccess().getLabelAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GotoStmt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GotoStmt__Group__0__Impl
	rule__GotoStmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GotoStmt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGotoStmtAccess().getGotoKeyword_0()); }
	'goto'
	{ after(grammarAccess.getGotoStmtAccess().getGotoKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GotoStmt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GotoStmt__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GotoStmt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGotoStmtAccess().getLabelAssignment_1()); }
	(rule__GotoStmt__LabelAssignment_1)
	{ after(grammarAccess.getGotoStmtAccess().getLabelAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DeferStmt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeferStmt__Group__0__Impl
	rule__DeferStmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DeferStmt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeferStmtAccess().getDeferKeyword_0()); }
	'defer'
	{ after(grammarAccess.getDeferStmtAccess().getDeferKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeferStmt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeferStmt__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DeferStmt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeferStmtAccess().getExpressionAssignment_1()); }
	(rule__DeferStmt__ExpressionAssignment_1)
	{ after(grammarAccess.getDeferStmtAccess().getExpressionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PackageClause__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageClause__Group__0__Impl
	rule__PackageClause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageClause__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageClauseAccess().getPackageKeyword_0()); }
	'package'
	{ after(grammarAccess.getPackageClauseAccess().getPackageKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageClause__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageClause__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageClause__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageClauseAccess().getPackageNameAssignment_1()); }
	(rule__PackageClause__PackageNameAssignment_1)
	{ after(grammarAccess.getPackageClauseAccess().getPackageNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ImportDecl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportDecl__Group__0__Impl
	rule__ImportDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDecl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportDeclAccess().getImportDeclAction_0()); }
	()
	{ after(grammarAccess.getImportDeclAccess().getImportDeclAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDecl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportDecl__Group__1__Impl
	rule__ImportDecl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDecl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportDeclAccess().getImportKeyword_1()); }
	'import'
	{ after(grammarAccess.getImportDeclAccess().getImportKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDecl__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportDecl__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDecl__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportDeclAccess().getAlternatives_2()); }
	(rule__ImportDecl__Alternatives_2)
	{ after(grammarAccess.getImportDeclAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ImportDecl__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportDecl__Group_2_1__0__Impl
	rule__ImportDecl__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDecl__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportDeclAccess().getLeftParenthesisKeyword_2_1_0()); }
	'('
	{ after(grammarAccess.getImportDeclAccess().getLeftParenthesisKeyword_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDecl__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportDecl__Group_2_1__1__Impl
	rule__ImportDecl__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDecl__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportDeclAccess().getGroup_2_1_1()); }
	(rule__ImportDecl__Group_2_1_1__0)*
	{ after(grammarAccess.getImportDeclAccess().getGroup_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDecl__Group_2_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportDecl__Group_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDecl__Group_2_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportDeclAccess().getRightParenthesisKeyword_2_1_2()); }
	')'
	{ after(grammarAccess.getImportDeclAccess().getRightParenthesisKeyword_2_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ImportDecl__Group_2_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportDecl__Group_2_1_1__0__Impl
	rule__ImportDecl__Group_2_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDecl__Group_2_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportDeclAccess().getImportSpecAssignment_2_1_1_0()); }
	(rule__ImportDecl__ImportSpecAssignment_2_1_1_0)
	{ after(grammarAccess.getImportDeclAccess().getImportSpecAssignment_2_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDecl__Group_2_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportDecl__Group_2_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDecl__Group_2_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportDeclAccess().getSemicolonKeyword_2_1_1_1()); }
	';'
	{ after(grammarAccess.getImportDeclAccess().getSemicolonKeyword_2_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ImportSpec__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportSpec__Group__0__Impl
	rule__ImportSpec__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportSpec__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportSpecAccess().getAlternatives_0()); }
	(rule__ImportSpec__Alternatives_0)?
	{ after(grammarAccess.getImportSpecAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportSpec__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportSpec__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportSpec__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportSpecAccess().getImportPathAssignment_1()); }
	(rule__ImportSpec__ImportPathAssignment_1)
	{ after(grammarAccess.getImportSpecAccess().getImportPathAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Identifier__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Identifier__Group__0__Impl
	rule__Identifier__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIdentifierAccess().getLETTERAssignment_0()); }
	(rule__Identifier__LETTERAssignment_0)
	{ after(grammarAccess.getIdentifierAccess().getLETTERAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Identifier__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIdentifierAccess().getAlternatives_1()); }
	(rule__Identifier__Alternatives_1)*
	{ after(grammarAccess.getIdentifierAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Decimal_lit__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Decimal_lit__Group__0__Impl
	rule__Decimal_lit__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Decimal_lit__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDecimal_litAccess().getDECIMAL_DIGITTerminalRuleCall_0()); }
	RULE_DECIMAL_DIGIT
	{ after(grammarAccess.getDecimal_litAccess().getDECIMAL_DIGITTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Decimal_lit__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Decimal_lit__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Decimal_lit__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDecimal_litAccess().getDECIMAL_DIGITTerminalRuleCall_1()); }
	(RULE_DECIMAL_DIGIT)*
	{ after(grammarAccess.getDecimal_litAccess().getDECIMAL_DIGITTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Octal_lit__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Octal_lit__Group__0__Impl
	rule__Octal_lit__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Octal_lit__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOctal_litAccess().getDigitZeroKeyword_0()); }
	'0'
	{ after(grammarAccess.getOctal_litAccess().getDigitZeroKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Octal_lit__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Octal_lit__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Octal_lit__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOctal_litAccess().getOCTAL_DIGITTerminalRuleCall_1()); }
	(RULE_OCTAL_DIGIT)*
	{ after(grammarAccess.getOctal_litAccess().getOCTAL_DIGITTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Hex_lit__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Hex_lit__Group__0__Impl
	rule__Hex_lit__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Hex_lit__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHex_litAccess().getDigitZeroKeyword_0()); }
	'0'
	{ after(grammarAccess.getHex_litAccess().getDigitZeroKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Hex_lit__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Hex_lit__Group__1__Impl
	rule__Hex_lit__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Hex_lit__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHex_litAccess().getAlternatives_1()); }
	(rule__Hex_lit__Alternatives_1)
	{ after(grammarAccess.getHex_litAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Hex_lit__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Hex_lit__Group__2__Impl
	rule__Hex_lit__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Hex_lit__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHex_litAccess().getHEX_DIGITTerminalRuleCall_2()); }
	RULE_HEX_DIGIT
	{ after(grammarAccess.getHex_litAccess().getHEX_DIGITTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Hex_lit__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Hex_lit__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Hex_lit__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHex_litAccess().getHEX_DIGITTerminalRuleCall_3()); }
	(RULE_HEX_DIGIT)*
	{ after(grammarAccess.getHex_litAccess().getHEX_DIGITTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Float_lit__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Float_lit__Group_0__0__Impl
	rule__Float_lit__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Float_lit__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFloat_litAccess().getDecimalsParserRuleCall_0_0()); }
	ruledecimals
	{ after(grammarAccess.getFloat_litAccess().getDecimalsParserRuleCall_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Float_lit__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Float_lit__Group_0__1__Impl
	rule__Float_lit__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Float_lit__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFloat_litAccess().getFullStopKeyword_0_1()); }
	'.'
	{ after(grammarAccess.getFloat_litAccess().getFullStopKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Float_lit__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Float_lit__Group_0__2__Impl
	rule__Float_lit__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Float_lit__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFloat_litAccess().getDecimalsAssignment_0_2()); }
	(rule__Float_lit__DecimalsAssignment_0_2)?
	{ after(grammarAccess.getFloat_litAccess().getDecimalsAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Float_lit__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Float_lit__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Float_lit__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFloat_litAccess().getExponentAssignment_0_3()); }
	(rule__Float_lit__ExponentAssignment_0_3)?
	{ after(grammarAccess.getFloat_litAccess().getExponentAssignment_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Float_lit__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Float_lit__Group_1__0__Impl
	rule__Float_lit__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Float_lit__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFloat_litAccess().getDecimalsParserRuleCall_1_0()); }
	ruledecimals
	{ after(grammarAccess.getFloat_litAccess().getDecimalsParserRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Float_lit__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Float_lit__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Float_lit__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFloat_litAccess().getExponentAssignment_1_1()); }
	(rule__Float_lit__ExponentAssignment_1_1)
	{ after(grammarAccess.getFloat_litAccess().getExponentAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Float_lit__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Float_lit__Group_2__0__Impl
	rule__Float_lit__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Float_lit__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFloat_litAccess().getFullStopKeyword_2_0()); }
	'.'
	{ after(grammarAccess.getFloat_litAccess().getFullStopKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Float_lit__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Float_lit__Group_2__1__Impl
	rule__Float_lit__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Float_lit__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFloat_litAccess().getDecimalsParserRuleCall_2_1()); }
	ruledecimals
	{ after(grammarAccess.getFloat_litAccess().getDecimalsParserRuleCall_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Float_lit__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Float_lit__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Float_lit__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFloat_litAccess().getExponenAssignment_2_2()); }
	(rule__Float_lit__ExponenAssignment_2_2)?
	{ after(grammarAccess.getFloat_litAccess().getExponenAssignment_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Raw_string_lit__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Raw_string_lit__Group__0__Impl
	rule__Raw_string_lit__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Raw_string_lit__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRaw_string_litAccess().getApostropheKeyword_0()); }
	'\''
	{ after(grammarAccess.getRaw_string_litAccess().getApostropheKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Raw_string_lit__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Raw_string_lit__Group__1__Impl
	rule__Raw_string_lit__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Raw_string_lit__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRaw_string_litAccess().getAlternatives_1()); }
	(rule__Raw_string_lit__Alternatives_1)?
	{ after(grammarAccess.getRaw_string_litAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Raw_string_lit__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Raw_string_lit__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Raw_string_lit__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRaw_string_litAccess().getApostropheKeyword_2()); }
	'\''
	{ after(grammarAccess.getRaw_string_litAccess().getApostropheKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Interpreted_string_lit__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Interpreted_string_lit__Group__0__Impl
	rule__Interpreted_string_lit__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Interpreted_string_lit__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInterpreted_string_litAccess().getQuotationMarkKeyword_0()); }
	'"'
	{ after(grammarAccess.getInterpreted_string_litAccess().getQuotationMarkKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interpreted_string_lit__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Interpreted_string_lit__Group__1__Impl
	rule__Interpreted_string_lit__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Interpreted_string_lit__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInterpreted_string_litAccess().getAlternatives_1()); }
	(rule__Interpreted_string_lit__Alternatives_1)?
	{ after(grammarAccess.getInterpreted_string_litAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interpreted_string_lit__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Interpreted_string_lit__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Interpreted_string_lit__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInterpreted_string_litAccess().getQuotationMarkKeyword_2()); }
	'"'
	{ after(grammarAccess.getInterpreted_string_litAccess().getQuotationMarkKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Decimals__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Decimals__Group__0__Impl
	rule__Decimals__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Decimals__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDecimalsAccess().getDECIMAL_DIGITAssignment_0()); }
	(rule__Decimals__DECIMAL_DIGITAssignment_0)
	{ after(grammarAccess.getDecimalsAccess().getDECIMAL_DIGITAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Decimals__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Decimals__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Decimals__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDecimalsAccess().getDECIMAL_DIGITAssignment_1()); }
	(rule__Decimals__DECIMAL_DIGITAssignment_1)*
	{ after(grammarAccess.getDecimalsAccess().getDECIMAL_DIGITAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Exponent__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exponent__Group__0__Impl
	rule__Exponent__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Exponent__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExponentAccess().getAlternatives_0()); }
	(rule__Exponent__Alternatives_0)
	{ after(grammarAccess.getExponentAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exponent__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exponent__Group__1__Impl
	rule__Exponent__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Exponent__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExponentAccess().getAlternatives_1()); }
	(rule__Exponent__Alternatives_1)?
	{ after(grammarAccess.getExponentAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exponent__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exponent__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Exponent__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExponentAccess().getDecimalsAssignment_2()); }
	(rule__Exponent__DecimalsAssignment_2)
	{ after(grammarAccess.getExponentAccess().getDecimalsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Rune_lit__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rune_lit__Group__0__Impl
	rule__Rune_lit__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Rune_lit__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRune_litAccess().getApostropheKeyword_0()); }
	'\''
	{ after(grammarAccess.getRune_litAccess().getApostropheKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rune_lit__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rune_lit__Group__1__Impl
	rule__Rune_lit__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Rune_lit__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRune_litAccess().getAlternatives_1()); }
	(rule__Rune_lit__Alternatives_1)
	{ after(grammarAccess.getRune_litAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rune_lit__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rune_lit__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Rune_lit__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRune_litAccess().getApostropheKeyword_2()); }
	'\''
	{ after(grammarAccess.getRune_litAccess().getApostropheKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Octal_byte_value__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Octal_byte_value__Group__0__Impl
	rule__Octal_byte_value__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Octal_byte_value__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOctal_byte_valueAccess().getCHARParserRuleCall_0()); }
	ruleCHAR
	{ after(grammarAccess.getOctal_byte_valueAccess().getCHARParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Octal_byte_value__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Octal_byte_value__Group__1__Impl
	rule__Octal_byte_value__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Octal_byte_value__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOctal_byte_valueAccess().getOCTAL_DIGITTerminalRuleCall_1()); }
	RULE_OCTAL_DIGIT
	{ after(grammarAccess.getOctal_byte_valueAccess().getOCTAL_DIGITTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Octal_byte_value__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Octal_byte_value__Group__2__Impl
	rule__Octal_byte_value__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Octal_byte_value__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOctal_byte_valueAccess().getOCTAL_DIGITTerminalRuleCall_2()); }
	RULE_OCTAL_DIGIT
	{ after(grammarAccess.getOctal_byte_valueAccess().getOCTAL_DIGITTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Octal_byte_value__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Octal_byte_value__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Octal_byte_value__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOctal_byte_valueAccess().getOCTAL_DIGITTerminalRuleCall_3()); }
	RULE_OCTAL_DIGIT
	{ after(grammarAccess.getOctal_byte_valueAccess().getOCTAL_DIGITTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Hex_byte_value__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Hex_byte_value__Group__0__Impl
	rule__Hex_byte_value__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Hex_byte_value__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHex_byte_valueAccess().getCHARParserRuleCall_0()); }
	ruleCHAR
	{ after(grammarAccess.getHex_byte_valueAccess().getCHARParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Hex_byte_value__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Hex_byte_value__Group__1__Impl
	rule__Hex_byte_value__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Hex_byte_value__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHex_byte_valueAccess().getXKeyword_1()); }
	'x'
	{ after(grammarAccess.getHex_byte_valueAccess().getXKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Hex_byte_value__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Hex_byte_value__Group__2__Impl
	rule__Hex_byte_value__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Hex_byte_value__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHex_byte_valueAccess().getHEX_DIGITTerminalRuleCall_2()); }
	RULE_HEX_DIGIT
	{ after(grammarAccess.getHex_byte_valueAccess().getHEX_DIGITTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Hex_byte_value__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Hex_byte_value__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Hex_byte_value__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHex_byte_valueAccess().getHEX_DIGITTerminalRuleCall_3()); }
	RULE_HEX_DIGIT
	{ after(grammarAccess.getHex_byte_valueAccess().getHEX_DIGITTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Little_u_value__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Little_u_value__Group__0__Impl
	rule__Little_u_value__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Little_u_value__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLittle_u_valueAccess().getCHARParserRuleCall_0()); }
	ruleCHAR
	{ after(grammarAccess.getLittle_u_valueAccess().getCHARParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Little_u_value__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Little_u_value__Group__1__Impl
	rule__Little_u_value__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Little_u_value__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLittle_u_valueAccess().getUKeyword_1()); }
	'u'
	{ after(grammarAccess.getLittle_u_valueAccess().getUKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Little_u_value__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Little_u_value__Group__2__Impl
	rule__Little_u_value__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Little_u_value__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLittle_u_valueAccess().getHEX_DIGITTerminalRuleCall_2()); }
	RULE_HEX_DIGIT
	{ after(grammarAccess.getLittle_u_valueAccess().getHEX_DIGITTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Little_u_value__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Little_u_value__Group__3__Impl
	rule__Little_u_value__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Little_u_value__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLittle_u_valueAccess().getHEX_DIGITTerminalRuleCall_3()); }
	RULE_HEX_DIGIT
	{ after(grammarAccess.getLittle_u_valueAccess().getHEX_DIGITTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Little_u_value__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Little_u_value__Group__4__Impl
	rule__Little_u_value__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Little_u_value__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLittle_u_valueAccess().getHEX_DIGITTerminalRuleCall_4()); }
	RULE_HEX_DIGIT
	{ after(grammarAccess.getLittle_u_valueAccess().getHEX_DIGITTerminalRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Little_u_value__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Little_u_value__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Little_u_value__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLittle_u_valueAccess().getHEX_DIGITTerminalRuleCall_5()); }
	RULE_HEX_DIGIT
	{ after(grammarAccess.getLittle_u_valueAccess().getHEX_DIGITTerminalRuleCall_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Big_u_value__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Big_u_value__Group__0__Impl
	rule__Big_u_value__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Big_u_value__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBig_u_valueAccess().getCHARParserRuleCall_0()); }
	ruleCHAR
	{ after(grammarAccess.getBig_u_valueAccess().getCHARParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Big_u_value__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Big_u_value__Group__1__Impl
	rule__Big_u_value__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Big_u_value__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBig_u_valueAccess().getUKeyword_1()); }
	'U'
	{ after(grammarAccess.getBig_u_valueAccess().getUKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Big_u_value__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Big_u_value__Group__2__Impl
	rule__Big_u_value__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Big_u_value__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBig_u_valueAccess().getHEX_DIGITTerminalRuleCall_2()); }
	RULE_HEX_DIGIT
	{ after(grammarAccess.getBig_u_valueAccess().getHEX_DIGITTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Big_u_value__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Big_u_value__Group__3__Impl
	rule__Big_u_value__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Big_u_value__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBig_u_valueAccess().getHEX_DIGITTerminalRuleCall_3()); }
	RULE_HEX_DIGIT
	{ after(grammarAccess.getBig_u_valueAccess().getHEX_DIGITTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Big_u_value__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Big_u_value__Group__4__Impl
	rule__Big_u_value__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Big_u_value__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBig_u_valueAccess().getHEX_DIGITTerminalRuleCall_4()); }
	RULE_HEX_DIGIT
	{ after(grammarAccess.getBig_u_valueAccess().getHEX_DIGITTerminalRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Big_u_value__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Big_u_value__Group__5__Impl
	rule__Big_u_value__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Big_u_value__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBig_u_valueAccess().getHEX_DIGITTerminalRuleCall_5()); }
	RULE_HEX_DIGIT
	{ after(grammarAccess.getBig_u_valueAccess().getHEX_DIGITTerminalRuleCall_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Big_u_value__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Big_u_value__Group__6__Impl
	rule__Big_u_value__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Big_u_value__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBig_u_valueAccess().getHEX_DIGITTerminalRuleCall_6()); }
	RULE_HEX_DIGIT
	{ after(grammarAccess.getBig_u_valueAccess().getHEX_DIGITTerminalRuleCall_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Big_u_value__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Big_u_value__Group__7__Impl
	rule__Big_u_value__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Big_u_value__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBig_u_valueAccess().getHEX_DIGITTerminalRuleCall_7()); }
	RULE_HEX_DIGIT
	{ after(grammarAccess.getBig_u_valueAccess().getHEX_DIGITTerminalRuleCall_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Big_u_value__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Big_u_value__Group__8__Impl
	rule__Big_u_value__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Big_u_value__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBig_u_valueAccess().getHEX_DIGITTerminalRuleCall_8()); }
	RULE_HEX_DIGIT
	{ after(grammarAccess.getBig_u_valueAccess().getHEX_DIGITTerminalRuleCall_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Big_u_value__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Big_u_value__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Big_u_value__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBig_u_valueAccess().getHEX_DIGITTerminalRuleCall_9()); }
	RULE_HEX_DIGIT
	{ after(grammarAccess.getBig_u_valueAccess().getHEX_DIGITTerminalRuleCall_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Escaped_char__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Escaped_char__Group__0__Impl
	rule__Escaped_char__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Escaped_char__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEscaped_charAccess().getCHARParserRuleCall_0()); }
	ruleCHAR
	{ after(grammarAccess.getEscaped_charAccess().getCHARParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Escaped_char__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Escaped_char__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Escaped_char__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEscaped_charAccess().getAlternatives_1()); }
	(rule__Escaped_char__Alternatives_1)
	{ after(grammarAccess.getEscaped_charAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SouceFile__PackageClauseAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSouceFileAccess().getPackageClausePackageClauseParserRuleCall_0_0()); }
		rulePackageClause
		{ after(grammarAccess.getSouceFileAccess().getPackageClausePackageClauseParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SouceFile__ImportDeclAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSouceFileAccess().getImportDeclImportDeclParserRuleCall_2_0_0()); }
		ruleImportDecl
		{ after(grammarAccess.getSouceFileAccess().getImportDeclImportDeclParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SouceFile__TopLevelDeclAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSouceFileAccess().getTopLevelDeclTopLevelDeclParserRuleCall_3_0_0()); }
		ruleTopLevelDecl
		{ after(grammarAccess.getSouceFileAccess().getTopLevelDeclTopLevelDeclParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__TypeNameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getTypeNameTypeNameParserRuleCall_0_0()); }
		ruleTypeName
		{ after(grammarAccess.getTypeAccess().getTypeNameTypeNameParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__TypeLitAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getTypeLitTypeLitParserRuleCall_1_0()); }
		ruleTypeLit
		{ after(grammarAccess.getTypeAccess().getTypeLitTypeLitParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__TypeAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getTypeTypeParserRuleCall_2_1_0()); }
		ruleType
		{ after(grammarAccess.getTypeAccess().getTypeTypeParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeName__IdentifierAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeNameAccess().getIdentifierIdentifierParserRuleCall_0_0()); }
		ruleidentifier
		{ after(grammarAccess.getTypeNameAccess().getIdentifierIdentifierParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeName__TypeNameLinhaAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeNameAccess().getTypeNameLinhaTypeNameLinhaParserRuleCall_1_0()); }
		ruleTypeNameLinha
		{ after(grammarAccess.getTypeNameAccess().getTypeNameLinhaTypeNameLinhaParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeNameLinha__IdentifierAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeNameLinhaAccess().getIdentifierIdentifierParserRuleCall_0_1_0()); }
		ruleidentifier
		{ after(grammarAccess.getTypeNameLinhaAccess().getIdentifierIdentifierParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeNameLinha__TypeNameLinhaAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeNameLinhaAccess().getTypeNameLinhaTypeNameLinhaParserRuleCall_0_2_0()); }
		ruleTypeNameLinha
		{ after(grammarAccess.getTypeNameLinhaAccess().getTypeNameLinhaTypeNameLinhaParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeNameLinha__QualifiedIdentAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeNameLinhaAccess().getQualifiedIdentQualifiedIdentParserRuleCall_1_0_0()); }
		ruleQualifiedIdent
		{ after(grammarAccess.getTypeNameLinhaAccess().getQualifiedIdentQualifiedIdentParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeNameLinha__TypeNameLinhaAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeNameLinhaAccess().getTypeNameLinhaTypeNameLinhaParserRuleCall_1_1_0()); }
		ruleTypeNameLinha
		{ after(grammarAccess.getTypeNameLinhaAccess().getTypeNameLinhaTypeNameLinhaParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeLit__TypeLitLinhaAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeLitAccess().getTypeLitLinhaTypeLitLinhaParserRuleCall_0_1_0()); }
		ruleTypeLitLinha
		{ after(grammarAccess.getTypeLitAccess().getTypeLitLinhaTypeLitLinhaParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeLit__StructTypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeLitAccess().getStructTypeStructTypeParserRuleCall_1_0()); }
		ruleStructType
		{ after(grammarAccess.getTypeLitAccess().getStructTypeStructTypeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeLit__PointerTypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeLitAccess().getPointerTypePointerTypeParserRuleCall_2_0()); }
		rulePointerType
		{ after(grammarAccess.getTypeLitAccess().getPointerTypePointerTypeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeLit__FunctionTypeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeLitAccess().getFunctionTypeFunctionTypeParserRuleCall_3_0()); }
		ruleFunctionType
		{ after(grammarAccess.getTypeLitAccess().getFunctionTypeFunctionTypeParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeLit__InterfaceTypeAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeLitAccess().getInterfaceTypeInterfaceTypeParserRuleCall_4_0()); }
		ruleInterfaceType
		{ after(grammarAccess.getTypeLitAccess().getInterfaceTypeInterfaceTypeParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeLit__MapTypeAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeLitAccess().getMapTypeMapTypeParserRuleCall_5_0()); }
		ruleMapType
		{ after(grammarAccess.getTypeLitAccess().getMapTypeMapTypeParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeLit__ChannelTypeAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeLitAccess().getChannelTypeChannelTypeParserRuleCall_6_0()); }
		ruleChannelType
		{ after(grammarAccess.getTypeLitAccess().getChannelTypeChannelTypeParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeLitLinha__ArrayLengthAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeLitLinhaAccess().getArrayLengthArrayLengthParserRuleCall_0_0_0()); }
		ruleArrayLength
		{ after(grammarAccess.getTypeLitLinhaAccess().getArrayLengthArrayLengthParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeLitLinha__ElementTypeAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeLitLinhaAccess().getElementTypeElementTypeParserRuleCall_0_2_0()); }
		ruleElementType
		{ after(grammarAccess.getTypeLitLinhaAccess().getElementTypeElementTypeParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeLitLinha__TypeLitLinhaAssignment_0_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeLitLinhaAccess().getTypeLitLinhaTypeLitLinhaParserRuleCall_0_3_0()); }
		ruleTypeLitLinha
		{ after(grammarAccess.getTypeLitLinhaAccess().getTypeLitLinhaTypeLitLinhaParserRuleCall_0_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeLitLinha__ElementTypeAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeLitLinhaAccess().getElementTypeElementTypeParserRuleCall_1_1_0()); }
		ruleElementType
		{ after(grammarAccess.getTypeLitLinhaAccess().getElementTypeElementTypeParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeLitLinha__TypeLitLinhaAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeLitLinhaAccess().getTypeLitLinhaTypeLitLinhaParserRuleCall_1_2_0()); }
		ruleTypeLitLinha
		{ after(grammarAccess.getTypeLitLinhaAccess().getTypeLitLinhaTypeLitLinhaParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayLength__ExpressionAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArrayLengthAccess().getExpressionExpressionParserRuleCall_0()); }
		ruleExpression
		{ after(grammarAccess.getArrayLengthAccess().getExpressionExpressionParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementType__TypeAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementTypeAccess().getTypeTypeParserRuleCall_0()); }
		ruleType
		{ after(grammarAccess.getElementTypeAccess().getTypeTypeParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__FieldDeclAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStructTypeAccess().getFieldDeclFieldDeclParserRuleCall_3_0_0()); }
		ruleFieldDecl
		{ after(grammarAccess.getStructTypeAccess().getFieldDeclFieldDeclParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldDecl__IdentifierListAssignment_0_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldDeclAccess().getIdentifierListIdentifierListParserRuleCall_0_0_0_0()); }
		ruleIdentifierList
		{ after(grammarAccess.getFieldDeclAccess().getIdentifierListIdentifierListParserRuleCall_0_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldDecl__TypeAssignment_0_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldDeclAccess().getTypeTypeParserRuleCall_0_0_1_0()); }
		ruleType
		{ after(grammarAccess.getFieldDeclAccess().getTypeTypeParserRuleCall_0_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldDecl__EmbeddedFieldAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldDeclAccess().getEmbeddedFieldEmbeddedFieldParserRuleCall_0_1_0()); }
		ruleEmbeddedField
		{ after(grammarAccess.getFieldDeclAccess().getEmbeddedFieldEmbeddedFieldParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldDecl__TagAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldDeclAccess().getTagTagParserRuleCall_1_0()); }
		ruleTag
		{ after(grammarAccess.getFieldDeclAccess().getTagTagParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EmbeddedField__TypeNameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEmbeddedFieldAccess().getTypeNameTypeNameParserRuleCall_1_0()); }
		ruleTypeName
		{ after(grammarAccess.getEmbeddedFieldAccess().getTypeNameTypeNameParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Tag__String_litAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTagAccess().getString_litString_litParserRuleCall_0()); }
		rulestring_lit
		{ after(grammarAccess.getTagAccess().getString_litString_litParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PointerType__TypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPointerTypeAccess().getTypeTypeParserRuleCall_1_0()); }
		ruleType
		{ after(grammarAccess.getPointerTypeAccess().getTypeTypeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionType__SignatureAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionTypeAccess().getSignatureSignatureParserRuleCall_1_0()); }
		ruleSignature
		{ after(grammarAccess.getFunctionTypeAccess().getSignatureSignatureParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Signature__ParametersAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSignatureAccess().getParametersParametersParserRuleCall_0_0()); }
		ruleParameters
		{ after(grammarAccess.getSignatureAccess().getParametersParametersParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Signature__ResultAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSignatureAccess().getResultResultParserRuleCall_1_0()); }
		ruleResult
		{ after(grammarAccess.getSignatureAccess().getResultResultParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Result__ParametersAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getResultAccess().getParametersParametersParserRuleCall_0_0()); }
		ruleParameters
		{ after(grammarAccess.getResultAccess().getParametersParametersParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Result__TypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getResultAccess().getTypeTypeParserRuleCall_1_0()); }
		ruleType
		{ after(grammarAccess.getResultAccess().getTypeTypeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__ParameterListAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParametersAccess().getParameterListParameterListParserRuleCall_2_0_0()); }
		ruleParameterList
		{ after(grammarAccess.getParametersAccess().getParameterListParameterListParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__ParameterDeclAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterListAccess().getParameterDeclParameterDeclParserRuleCall_0_0()); }
		ruleParameterDecl
		{ after(grammarAccess.getParameterListAccess().getParameterDeclParameterDeclParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__ParameterDeclAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterListAccess().getParameterDeclParameterDeclParserRuleCall_1_1_0()); }
		ruleParameterDecl
		{ after(grammarAccess.getParameterListAccess().getParameterDeclParameterDeclParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDecl__IdentifierListAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterDeclAccess().getIdentifierListIdentifierListParserRuleCall_0_0()); }
		ruleIdentifierList
		{ after(grammarAccess.getParameterDeclAccess().getIdentifierListIdentifierListParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDecl__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterDeclAccess().getTypeTypeParserRuleCall_2_0()); }
		ruleType
		{ after(grammarAccess.getParameterDeclAccess().getTypeTypeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceType__MethodSpecAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInterfaceTypeAccess().getMethodSpecMethodSpecParserRuleCall_3_0_0()); }
		ruleMethodSpec
		{ after(grammarAccess.getInterfaceTypeAccess().getMethodSpecMethodSpecParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodSpec__MethodNameAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodSpecAccess().getMethodNameMethodNameParserRuleCall_0_0_0()); }
		ruleMethodName
		{ after(grammarAccess.getMethodSpecAccess().getMethodNameMethodNameParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodSpec__SignatureAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodSpecAccess().getSignatureSignatureParserRuleCall_0_1_0()); }
		ruleSignature
		{ after(grammarAccess.getMethodSpecAccess().getSignatureSignatureParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodSpec__InterfaceTypeNameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodSpecAccess().getInterfaceTypeNameInterfaceTypeNameParserRuleCall_1_0()); }
		ruleInterfaceTypeName
		{ after(grammarAccess.getMethodSpecAccess().getInterfaceTypeNameInterfaceTypeNameParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodName__IdentifierAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodNameAccess().getIdentifierIdentifierParserRuleCall_0()); }
		ruleidentifier
		{ after(grammarAccess.getMethodNameAccess().getIdentifierIdentifierParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceTypeName__TypeNameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInterfaceTypeNameAccess().getTypeNameTypeNameParserRuleCall_0()); }
		ruleTypeName
		{ after(grammarAccess.getInterfaceTypeNameAccess().getTypeNameTypeNameParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapType__KeyTypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMapTypeAccess().getKeyTypeKeyTypeParserRuleCall_2_0()); }
		ruleKeyType
		{ after(grammarAccess.getMapTypeAccess().getKeyTypeKeyTypeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapType__ElementTypeAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMapTypeAccess().getElementTypeElementTypeParserRuleCall_4_0()); }
		ruleElementType
		{ after(grammarAccess.getMapTypeAccess().getElementTypeElementTypeParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyType__TypeAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getKeyTypeAccess().getTypeTypeParserRuleCall_0()); }
		ruleType
		{ after(grammarAccess.getKeyTypeAccess().getTypeTypeParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelType__ElementTypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChannelTypeAccess().getElementTypeElementTypeParserRuleCall_1_0()); }
		ruleElementType
		{ after(grammarAccess.getChannelTypeAccess().getElementTypeElementTypeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__StatementListAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBlockAccess().getStatementListStatementListParserRuleCall_1_0()); }
		ruleStatementList
		{ after(grammarAccess.getBlockAccess().getStatementListStatementListParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementList__StatementAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementListAccess().getStatementStatementParserRuleCall_1_0_0()); }
		ruleStatement
		{ after(grammarAccess.getStatementListAccess().getStatementStatementParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__ConstDeclAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclarationAccess().getConstDeclConstDeclParserRuleCall_0_0()); }
		ruleConstDecl
		{ after(grammarAccess.getDeclarationAccess().getConstDeclConstDeclParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__TypeDeclAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclarationAccess().getTypeDeclTypeDeclParserRuleCall_1_0()); }
		ruleTypeDecl
		{ after(grammarAccess.getDeclarationAccess().getTypeDeclTypeDeclParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__VarDeclAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclarationAccess().getVarDeclVarDeclParserRuleCall_2_0()); }
		ruleVarDecl
		{ after(grammarAccess.getDeclarationAccess().getVarDeclVarDeclParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TopLevelDecl__DeclarationAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTopLevelDeclAccess().getDeclarationDeclarationParserRuleCall_0_0()); }
		ruleDeclaration
		{ after(grammarAccess.getTopLevelDeclAccess().getDeclarationDeclarationParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TopLevelDecl__TopLevelDeclLinhaAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTopLevelDeclAccess().getTopLevelDeclLinhaTopLevelDeclLinhaParserRuleCall_1_1_0()); }
		ruletopLevelDeclLinha
		{ after(grammarAccess.getTopLevelDeclAccess().getTopLevelDeclLinhaTopLevelDeclLinhaParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TopLevelDeclLinha__FunctionNameAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTopLevelDeclLinhaAccess().getFunctionNameFunctionNameParserRuleCall_0_0_0()); }
		ruleFunctionName
		{ after(grammarAccess.getTopLevelDeclLinhaAccess().getFunctionNameFunctionNameParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TopLevelDeclLinha__SignatureAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTopLevelDeclLinhaAccess().getSignatureSignatureParserRuleCall_0_1_0()); }
		ruleSignature
		{ after(grammarAccess.getTopLevelDeclLinhaAccess().getSignatureSignatureParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TopLevelDeclLinha__FunctionBodyAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTopLevelDeclLinhaAccess().getFunctionBodyFunctionBodyParserRuleCall_0_2_0()); }
		ruleFunctionBody
		{ after(grammarAccess.getTopLevelDeclLinhaAccess().getFunctionBodyFunctionBodyParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TopLevelDeclLinha__ReceiverAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTopLevelDeclLinhaAccess().getReceiverReceiverParserRuleCall_1_0_0()); }
		ruleReceiver
		{ after(grammarAccess.getTopLevelDeclLinhaAccess().getReceiverReceiverParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TopLevelDeclLinha__MethodNameAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTopLevelDeclLinhaAccess().getMethodNameMethodNameParserRuleCall_1_1_0()); }
		ruleMethodName
		{ after(grammarAccess.getTopLevelDeclLinhaAccess().getMethodNameMethodNameParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TopLevelDeclLinha__SignatureAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTopLevelDeclLinhaAccess().getSignatureSignatureParserRuleCall_1_2_0()); }
		ruleSignature
		{ after(grammarAccess.getTopLevelDeclLinhaAccess().getSignatureSignatureParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TopLevelDeclLinha__FunctionBodyAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTopLevelDeclLinhaAccess().getFunctionBodyFunctionBodyParserRuleCall_1_3_0()); }
		ruleFunctionBody
		{ after(grammarAccess.getTopLevelDeclLinhaAccess().getFunctionBodyFunctionBodyParserRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstDecl__ConstSpecAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstDeclAccess().getConstSpecConstSpecParserRuleCall_2_0_0()); }
		ruleConstSpec
		{ after(grammarAccess.getConstDeclAccess().getConstSpecConstSpecParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstDecl__ConstSpecAssignment_2_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstDeclAccess().getConstSpecConstSpecParserRuleCall_2_1_1_0_0()); }
		ruleConstSpec
		{ after(grammarAccess.getConstDeclAccess().getConstSpecConstSpecParserRuleCall_2_1_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstSpec__IdentifierListAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstSpecAccess().getIdentifierListIdentifierListParserRuleCall_0_0()); }
		ruleIdentifierList
		{ after(grammarAccess.getConstSpecAccess().getIdentifierListIdentifierListParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstSpec__TypeAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstSpecAccess().getTypeTypeParserRuleCall_1_0_0()); }
		ruleType
		{ after(grammarAccess.getConstSpecAccess().getTypeTypeParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstSpec__ExpressionListAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstSpecAccess().getExpressionListExpressionListParserRuleCall_1_2_0()); }
		ruleExpressionList
		{ after(grammarAccess.getConstSpecAccess().getExpressionListExpressionListParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IdentifierList__IdentifierAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIdentifierListAccess().getIdentifierIdentifierParserRuleCall_0_0()); }
		ruleidentifier
		{ after(grammarAccess.getIdentifierListAccess().getIdentifierIdentifierParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IdentifierList__IdentifierAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIdentifierListAccess().getIdentifierIdentifierParserRuleCall_1_1_0()); }
		ruleidentifier
		{ after(grammarAccess.getIdentifierListAccess().getIdentifierIdentifierParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionList__ExpressionAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionListAccess().getExpressionExpressionParserRuleCall_0_0()); }
		ruleExpression
		{ after(grammarAccess.getExpressionListAccess().getExpressionExpressionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionList__ExpressionAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionListAccess().getExpressionExpressionParserRuleCall_1_1_0()); }
		ruleExpression
		{ after(grammarAccess.getExpressionListAccess().getExpressionExpressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDecl__TypeSpecAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeDeclAccess().getTypeSpecTypeSpecParserRuleCall_2_0_0()); }
		ruleTypeSpec
		{ after(grammarAccess.getTypeDeclAccess().getTypeSpecTypeSpecParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDecl__TypeSpecAssignment_2_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeDeclAccess().getTypeSpecTypeSpecParserRuleCall_2_1_1_0_0()); }
		ruleTypeSpec
		{ after(grammarAccess.getTypeDeclAccess().getTypeSpecTypeSpecParserRuleCall_2_1_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AliasDecl__IdentifierAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAliasDeclAccess().getIdentifierIdentifierParserRuleCall_0_0()); }
		ruleidentifier
		{ after(grammarAccess.getAliasDeclAccess().getIdentifierIdentifierParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AliasDecl__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAliasDeclAccess().getTypeTypeParserRuleCall_2_0()); }
		ruleType
		{ after(grammarAccess.getAliasDeclAccess().getTypeTypeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDef__IdentifierAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeDefAccess().getIdentifierIdentifierParserRuleCall_0_0()); }
		ruleidentifier
		{ after(grammarAccess.getTypeDefAccess().getIdentifierIdentifierParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDef__TypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeDefAccess().getTypeTypeParserRuleCall_1_0()); }
		ruleType
		{ after(grammarAccess.getTypeDefAccess().getTypeTypeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__VarSpecAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarDeclAccess().getVarSpecVarSpecParserRuleCall_2_0_0()); }
		ruleVarSpec
		{ after(grammarAccess.getVarDeclAccess().getVarSpecVarSpecParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__VarSpecAssignment_2_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarDeclAccess().getVarSpecVarSpecParserRuleCall_2_1_1_0_0()); }
		ruleVarSpec
		{ after(grammarAccess.getVarDeclAccess().getVarSpecVarSpecParserRuleCall_2_1_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarSpec__IdentifierListAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarSpecAccess().getIdentifierListIdentifierListParserRuleCall_0_0()); }
		ruleIdentifierList
		{ after(grammarAccess.getVarSpecAccess().getIdentifierListIdentifierListParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarSpec__TypeAssignment_1_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarSpecAccess().getTypeTypeParserRuleCall_1_0_0_0()); }
		ruleType
		{ after(grammarAccess.getVarSpecAccess().getTypeTypeParserRuleCall_1_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarSpec__ExpressionListAssignment_1_0_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarSpecAccess().getExpressionListExpressionListParserRuleCall_1_0_1_1_0()); }
		ruleExpressionList
		{ after(grammarAccess.getVarSpecAccess().getExpressionListExpressionListParserRuleCall_1_0_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarSpec__ExpressionListAssignment_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarSpecAccess().getExpressionListExpressionListParserRuleCall_1_1_1_0()); }
		ruleExpressionList
		{ after(grammarAccess.getVarSpecAccess().getExpressionListExpressionListParserRuleCall_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShortVarDecl__IdentifierListAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getShortVarDeclAccess().getIdentifierListIdentifierListParserRuleCall_0_0()); }
		ruleIdentifierList
		{ after(grammarAccess.getShortVarDeclAccess().getIdentifierListIdentifierListParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShortVarDecl__ExpressionListAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getShortVarDeclAccess().getExpressionListExpressionListParserRuleCall_2_0()); }
		ruleExpressionList
		{ after(grammarAccess.getShortVarDeclAccess().getExpressionListExpressionListParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionName__IdentifierAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionNameAccess().getIdentifierIdentifierParserRuleCall_0()); }
		ruleidentifier
		{ after(grammarAccess.getFunctionNameAccess().getIdentifierIdentifierParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBody__BlockAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionBodyAccess().getBlockBlockParserRuleCall_0()); }
		ruleBlock
		{ after(grammarAccess.getFunctionBodyAccess().getBlockBlockParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operand__LiteralAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperandAccess().getLiteralLiteralParserRuleCall_0_0()); }
		ruleLiteral
		{ after(grammarAccess.getOperandAccess().getLiteralLiteralParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operand__OperandNameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperandAccess().getOperandNameOperandNameParserRuleCall_1_0()); }
		ruleOperandName
		{ after(grammarAccess.getOperandAccess().getOperandNameOperandNameParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operand__ExpressionAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperandAccess().getExpressionExpressionParserRuleCall_2_1_0()); }
		ruleExpression
		{ after(grammarAccess.getOperandAccess().getExpressionExpressionParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__BasicLitAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralAccess().getBasicLitBasicLitParserRuleCall_0_0()); }
		ruleBasicLit
		{ after(grammarAccess.getLiteralAccess().getBasicLitBasicLitParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicLit__Int_litAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBasicLitAccess().getInt_litInt_litParserRuleCall_0_1_0()); }
		ruleint_lit
		{ after(grammarAccess.getBasicLitAccess().getInt_litInt_litParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicLit__Float_litAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBasicLitAccess().getFloat_litFloat_litParserRuleCall_1_0()); }
		rulefloat_lit
		{ after(grammarAccess.getBasicLitAccess().getFloat_litFloat_litParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicLit__Rune_litAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBasicLitAccess().getRune_litRune_litParserRuleCall_2_0()); }
		rulerune_lit
		{ after(grammarAccess.getBasicLitAccess().getRune_litRune_litParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicLit__String_litAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBasicLitAccess().getString_litString_litParserRuleCall_3_0()); }
		rulestring_lit
		{ after(grammarAccess.getBasicLitAccess().getString_litString_litParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedIdent__PackageNameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQualifiedIdentAccess().getPackageNamePackageNameParserRuleCall_0_0()); }
		rulePackageName
		{ after(grammarAccess.getQualifiedIdentAccess().getPackageNamePackageNameParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedIdent__IdentifierAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQualifiedIdentAccess().getIdentifierIdentifierParserRuleCall_2_0()); }
		ruleidentifier
		{ after(grammarAccess.getQualifiedIdentAccess().getIdentifierIdentifierParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeLit__LiteralTypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompositeLitAccess().getLiteralTypeLiteralTypeParserRuleCall_0_0()); }
		ruleLiteralType
		{ after(grammarAccess.getCompositeLitAccess().getLiteralTypeLiteralTypeParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeLit__LiteralValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompositeLitAccess().getLiteralValueLiteralValueParserRuleCall_1_0()); }
		ruleLiteralValue
		{ after(grammarAccess.getCompositeLitAccess().getLiteralValueLiteralValueParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralType__StructTypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralTypeAccess().getStructTypeStructTypeParserRuleCall_0_0()); }
		ruleStructType
		{ after(grammarAccess.getLiteralTypeAccess().getStructTypeStructTypeParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralType__LiteralTypeLinhaAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralTypeAccess().getLiteralTypeLinhaLiteralTypeLinhaParserRuleCall_1_1_0()); }
		ruleLiteralTypeLinha
		{ after(grammarAccess.getLiteralTypeAccess().getLiteralTypeLinhaLiteralTypeLinhaParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralType__ElementTypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralTypeAccess().getElementTypeElementTypeParserRuleCall_2_0()); }
		ruleElementType
		{ after(grammarAccess.getLiteralTypeAccess().getElementTypeElementTypeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralType__MapTypeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralTypeAccess().getMapTypeMapTypeParserRuleCall_3_0()); }
		ruleMapType
		{ after(grammarAccess.getLiteralTypeAccess().getMapTypeMapTypeParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralType__TypeNameAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralTypeAccess().getTypeNameTypeNameParserRuleCall_4_0()); }
		ruleTypeName
		{ after(grammarAccess.getLiteralTypeAccess().getTypeNameTypeNameParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTypeLinha__ArrayLengthAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralTypeLinhaAccess().getArrayLengthArrayLengthParserRuleCall_0_0_0()); }
		ruleArrayLength
		{ after(grammarAccess.getLiteralTypeLinhaAccess().getArrayLengthArrayLengthParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTypeLinha__ElementTypeAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralTypeLinhaAccess().getElementTypeElementTypeParserRuleCall_0_2_0()); }
		ruleElementType
		{ after(grammarAccess.getLiteralTypeLinhaAccess().getElementTypeElementTypeParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTypeLinha__ElementTypeAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralTypeLinhaAccess().getElementTypeElementTypeParserRuleCall_1_1_0()); }
		ruleElementType
		{ after(grammarAccess.getLiteralTypeLinhaAccess().getElementTypeElementTypeParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralValue__ElementListAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralValueAccess().getElementListElementListParserRuleCall_2_0_0()); }
		ruleElementList
		{ after(grammarAccess.getLiteralValueAccess().getElementListElementListParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementList__KeyedElementAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementListAccess().getKeyedElementKeyedElementParserRuleCall_0_0()); }
		ruleKeyedElement
		{ after(grammarAccess.getElementListAccess().getKeyedElementKeyedElementParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementList__KeyedElementAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementListAccess().getKeyedElementKeyedElementParserRuleCall_1_1_0()); }
		ruleKeyedElement
		{ after(grammarAccess.getElementListAccess().getKeyedElementKeyedElementParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__ExpressionAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementAccess().getExpressionExpressionParserRuleCall_0_0()); }
		ruleExpression
		{ after(grammarAccess.getElementAccess().getExpressionExpressionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__LiteralValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementAccess().getLiteralValueLiteralValueParserRuleCall_1_0()); }
		ruleLiteralValue
		{ after(grammarAccess.getElementAccess().getLiteralValueLiteralValueParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyedElement__KeyAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getKeyedElementAccess().getKeyKeyParserRuleCall_0_0_0()); }
		ruleKey
		{ after(grammarAccess.getKeyedElementAccess().getKeyKeyParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyedElement__ElementAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getKeyedElementAccess().getElementElementParserRuleCall_1_0()); }
		ruleElement
		{ after(grammarAccess.getKeyedElementAccess().getElementElementParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Key__FieldNameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getKeyAccess().getFieldNameFieldNameParserRuleCall_0_0()); }
		ruleFieldName
		{ after(grammarAccess.getKeyAccess().getFieldNameFieldNameParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Key__ExpressionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getKeyAccess().getExpressionExpressionParserRuleCall_1_0()); }
		ruleExpression
		{ after(grammarAccess.getKeyAccess().getExpressionExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Key__LiteralValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getKeyAccess().getLiteralValueLiteralValueParserRuleCall_2_0()); }
		ruleLiteralValue
		{ after(grammarAccess.getKeyAccess().getLiteralValueLiteralValueParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldName__IdentifierAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldNameAccess().getIdentifierIdentifierParserRuleCall_0()); }
		ruleidentifier
		{ after(grammarAccess.getFieldNameAccess().getIdentifierIdentifierParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionLit__SignatureAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionLitAccess().getSignatureSignatureParserRuleCall_1_0()); }
		ruleSignature
		{ after(grammarAccess.getFunctionLitAccess().getSignatureSignatureParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionLit__FunctionBodyAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionLitAccess().getFunctionBodyFunctionBodyParserRuleCall_2_0()); }
		ruleFunctionBody
		{ after(grammarAccess.getFunctionLitAccess().getFunctionBodyFunctionBodyParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__OperandAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExprAccess().getOperandOperandParserRuleCall_0_0_0()); }
		ruleOperand
		{ after(grammarAccess.getPrimaryExprAccess().getOperandOperandParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__PrimaryExprLinhaAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExprAccess().getPrimaryExprLinhaPrimaryExprLinhaParserRuleCall_0_1_0()); }
		rulePrimaryExprLinha
		{ after(grammarAccess.getPrimaryExprAccess().getPrimaryExprLinhaPrimaryExprLinhaParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__ConversionAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExprAccess().getConversionConversionParserRuleCall_1_0_0()); }
		ruleConversion
		{ after(grammarAccess.getPrimaryExprAccess().getConversionConversionParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__PrimaryExprLinhaAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExprAccess().getPrimaryExprLinhaPrimaryExprLinhaParserRuleCall_1_1_0()); }
		rulePrimaryExprLinha
		{ after(grammarAccess.getPrimaryExprAccess().getPrimaryExprLinhaPrimaryExprLinhaParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__MethodExprAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExprAccess().getMethodExprMethodExprParserRuleCall_2_0_0()); }
		ruleMethodExpr
		{ after(grammarAccess.getPrimaryExprAccess().getMethodExprMethodExprParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__PrimaryExprLinhaAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExprAccess().getPrimaryExprLinhaPrimaryExprLinhaParserRuleCall_2_1_0()); }
		rulePrimaryExprLinha
		{ after(grammarAccess.getPrimaryExprAccess().getPrimaryExprLinhaPrimaryExprLinhaParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprLinha__ArgumentsAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExprLinhaAccess().getArgumentsArgumentsParserRuleCall_0_0_0()); }
		ruleArguments
		{ after(grammarAccess.getPrimaryExprLinhaAccess().getArgumentsArgumentsParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprLinha__PrimaryExprLinhaAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExprLinhaAccess().getPrimaryExprLinhaPrimaryExprLinhaParserRuleCall_0_1_0()); }
		rulePrimaryExprLinha
		{ after(grammarAccess.getPrimaryExprLinhaAccess().getPrimaryExprLinhaPrimaryExprLinhaParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprLinha__PontoAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExprLinhaAccess().getPontoPontoParserRuleCall_1_1_0()); }
		ruleponto
		{ after(grammarAccess.getPrimaryExprLinhaAccess().getPontoPontoParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprLinha__CochetesAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExprLinhaAccess().getCochetesCochetesParserRuleCall_2_1_0()); }
		rulecochetes
		{ after(grammarAccess.getPrimaryExprLinhaAccess().getCochetesCochetesParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ponto__SelectorAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPontoAccess().getSelectorSelectorParserRuleCall_0_0_0()); }
		ruleSelector
		{ after(grammarAccess.getPontoAccess().getSelectorSelectorParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ponto__PrimaryExprLinhaAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPontoAccess().getPrimaryExprLinhaPrimaryExprLinhaParserRuleCall_0_1_0()); }
		rulePrimaryExprLinha
		{ after(grammarAccess.getPontoAccess().getPrimaryExprLinhaPrimaryExprLinhaParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ponto__TypeAssertionAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPontoAccess().getTypeAssertionTypeAssertionParserRuleCall_1_0_0()); }
		ruleTypeAssertion
		{ after(grammarAccess.getPontoAccess().getTypeAssertionTypeAssertionParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ponto__PrimaryExprLinhaAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPontoAccess().getPrimaryExprLinhaPrimaryExprLinhaParserRuleCall_1_1_0()); }
		rulePrimaryExprLinha
		{ after(grammarAccess.getPontoAccess().getPrimaryExprLinhaPrimaryExprLinhaParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cochetes__IndexAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCochetesAccess().getIndexIndexParserRuleCall_0_0_0()); }
		ruleIndex
		{ after(grammarAccess.getCochetesAccess().getIndexIndexParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cochetes__PrimaryExprLinhaAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCochetesAccess().getPrimaryExprLinhaPrimaryExprLinhaParserRuleCall_0_1_0()); }
		rulePrimaryExprLinha
		{ after(grammarAccess.getCochetesAccess().getPrimaryExprLinhaPrimaryExprLinhaParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cochetes__SliceAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCochetesAccess().getSliceSliceParserRuleCall_1_0_0()); }
		ruleSlice
		{ after(grammarAccess.getCochetesAccess().getSliceSliceParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cochetes__PrimaryExprLinhaAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCochetesAccess().getPrimaryExprLinhaPrimaryExprLinhaParserRuleCall_1_1_0()); }
		rulePrimaryExprLinha
		{ after(grammarAccess.getCochetesAccess().getPrimaryExprLinhaPrimaryExprLinhaParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__IdentifierAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectorAccess().getIdentifierIdentifierParserRuleCall_0()); }
		ruleidentifier
		{ after(grammarAccess.getSelectorAccess().getIdentifierIdentifierParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Index__SliceAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIndexAccess().getSliceSliceParserRuleCall_1_0()); }
		ruleSlice
		{ after(grammarAccess.getIndexAccess().getSliceSliceParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Slice__DecimalsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSliceAccess().getDecimalsDecimalsParserRuleCall_1_0()); }
		ruledecimals
		{ after(grammarAccess.getSliceAccess().getDecimalsDecimalsParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Slice__DecimalsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSliceAccess().getDecimalsDecimalsParserRuleCall_3_0()); }
		ruledecimals
		{ after(grammarAccess.getSliceAccess().getDecimalsDecimalsParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeAssertion__TypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAssertionAccess().getTypeTypeParserRuleCall_1_0()); }
		ruleType
		{ after(grammarAccess.getTypeAssertionAccess().getTypeTypeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__ExpressionListAssignment_2_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgumentsAccess().getExpressionListExpressionListParserRuleCall_2_0_0_0()); }
		ruleExpressionList
		{ after(grammarAccess.getArgumentsAccess().getExpressionListExpressionListParserRuleCall_2_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__TypeAssignment_2_0_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgumentsAccess().getTypeTypeParserRuleCall_2_0_1_0_0()); }
		ruleType
		{ after(grammarAccess.getArgumentsAccess().getTypeTypeParserRuleCall_2_0_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__ExpressionListAssignment_2_0_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgumentsAccess().getExpressionListExpressionListParserRuleCall_2_0_1_1_1_0()); }
		ruleExpressionList
		{ after(grammarAccess.getArgumentsAccess().getExpressionListExpressionListParserRuleCall_2_0_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpr__ReceiverTypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodExprAccess().getReceiverTypeReceiverTypeParserRuleCall_0_0()); }
		ruleReceiverType
		{ after(grammarAccess.getMethodExprAccess().getReceiverTypeReceiverTypeParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpr__MethodNameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodExprAccess().getMethodNameMethodNameParserRuleCall_2_0()); }
		ruleMethodName
		{ after(grammarAccess.getMethodExprAccess().getMethodNameMethodNameParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReceiverType__TypeAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReceiverTypeAccess().getTypeTypeParserRuleCall_0()); }
		ruleType
		{ after(grammarAccess.getReceiverTypeAccess().getTypeTypeParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__UnaryExprAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getUnaryExprUnaryExprParserRuleCall_0_0()); }
		ruleUnaryExpr
		{ after(grammarAccess.getExpressionAccess().getUnaryExprUnaryExprParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__ExpressionLinhaAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getExpressionLinhaExpressionLinhaParserRuleCall_1_0()); }
		ruleExpressionLinha
		{ after(grammarAccess.getExpressionAccess().getExpressionLinhaExpressionLinhaParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLinha__Binary_opAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionLinhaAccess().getBinary_opBinary_opParserRuleCall_0_0_0()); }
		rulebinary_op
		{ after(grammarAccess.getExpressionLinhaAccess().getBinary_opBinary_opParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLinha__ExpressionAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionLinhaAccess().getExpressionExpressionParserRuleCall_0_1_0()); }
		ruleExpression
		{ after(grammarAccess.getExpressionLinhaAccess().getExpressionExpressionParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLinha__ExpressionLinhaAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionLinhaAccess().getExpressionLinhaExpressionLinhaParserRuleCall_0_2_0()); }
		ruleExpressionLinha
		{ after(grammarAccess.getExpressionLinhaAccess().getExpressionLinhaExpressionLinhaParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__PrimaryExprAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryExprAccess().getPrimaryExprPrimaryExprParserRuleCall_0_0()); }
		rulePrimaryExpr
		{ after(grammarAccess.getUnaryExprAccess().getPrimaryExprPrimaryExprParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__Unary_opAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryExprAccess().getUnary_opUnary_opParserRuleCall_1_0_0()); }
		ruleunary_op
		{ after(grammarAccess.getUnaryExprAccess().getUnary_opUnary_opParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__UnaryExprAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryExprAccess().getUnaryExprUnaryExprParserRuleCall_1_1_0()); }
		ruleUnaryExpr
		{ after(grammarAccess.getUnaryExprAccess().getUnaryExprUnaryExprParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Binary_op__Rel_opAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBinary_opAccess().getRel_opRel_opParserRuleCall_2_0()); }
		rulerel_op
		{ after(grammarAccess.getBinary_opAccess().getRel_opRel_opParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Binary_op__Add_opAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBinary_opAccess().getAdd_opAdd_opParserRuleCall_3_0()); }
		ruleadd_op
		{ after(grammarAccess.getBinary_opAccess().getAdd_opAdd_opParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Binary_op__Mul_opAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBinary_opAccess().getMul_opMul_opParserRuleCall_4_0()); }
		rulemul_op
		{ after(grammarAccess.getBinary_opAccess().getMul_opMul_opParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conversion__TypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConversionAccess().getTypeTypeParserRuleCall_0_0()); }
		ruleType
		{ after(grammarAccess.getConversionAccess().getTypeTypeParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conversion__ExpressionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConversionAccess().getExpressionExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getConversionAccess().getExpressionExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__DeclarationAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getDeclarationDeclarationParserRuleCall_0_0()); }
		ruleDeclaration
		{ after(grammarAccess.getStatementAccess().getDeclarationDeclarationParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__LabeledStmtAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getLabeledStmtLabeledStmtParserRuleCall_1_0()); }
		ruleLabeledStmt
		{ after(grammarAccess.getStatementAccess().getLabeledStmtLabeledStmtParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__SimpleStmtAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getSimpleStmtSimpleStmtParserRuleCall_2_0()); }
		ruleSimpleStmt
		{ after(grammarAccess.getStatementAccess().getSimpleStmtSimpleStmtParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__GoStmtAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getGoStmtGoStmtParserRuleCall_3_0()); }
		ruleGoStmt
		{ after(grammarAccess.getStatementAccess().getGoStmtGoStmtParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__ReturnStmtAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getReturnStmtReturnStmtParserRuleCall_4_0()); }
		ruleReturnStmt
		{ after(grammarAccess.getStatementAccess().getReturnStmtReturnStmtParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__BreakStmtAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getBreakStmtBreakStmtParserRuleCall_5_0()); }
		ruleBreakStmt
		{ after(grammarAccess.getStatementAccess().getBreakStmtBreakStmtParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__ContinueStmtAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getContinueStmtContinueStmtParserRuleCall_6_0()); }
		ruleContinueStmt
		{ after(grammarAccess.getStatementAccess().getContinueStmtContinueStmtParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__GotoStmtAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getGotoStmtGotoStmtParserRuleCall_7_0()); }
		ruleGotoStmt
		{ after(grammarAccess.getStatementAccess().getGotoStmtGotoStmtParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__FallthroughStmtAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getFallthroughStmtFallthroughStmtParserRuleCall_8_0()); }
		ruleFallthroughStmt
		{ after(grammarAccess.getStatementAccess().getFallthroughStmtFallthroughStmtParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__BlockAssignment_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getBlockBlockParserRuleCall_9_0()); }
		ruleBlock
		{ after(grammarAccess.getStatementAccess().getBlockBlockParserRuleCall_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__IfStmtAssignment_10
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getIfStmtIfStmtParserRuleCall_10_0()); }
		ruleIfStmt
		{ after(grammarAccess.getStatementAccess().getIfStmtIfStmtParserRuleCall_10_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__SwitchStmtAssignment_11
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getSwitchStmtSwitchStmtParserRuleCall_11_0()); }
		ruleSwitchStmt
		{ after(grammarAccess.getStatementAccess().getSwitchStmtSwitchStmtParserRuleCall_11_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__SelectStmtAssignment_12
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getSelectStmtSelectStmtParserRuleCall_12_0()); }
		ruleSelectStmt
		{ after(grammarAccess.getStatementAccess().getSelectStmtSelectStmtParserRuleCall_12_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__ForStmtAssignment_13
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getForStmtForStmtParserRuleCall_13_0()); }
		ruleForStmt
		{ after(grammarAccess.getStatementAccess().getForStmtForStmtParserRuleCall_13_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__DeferStmtAssignment_14
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getDeferStmtDeferStmtParserRuleCall_14_0()); }
		ruleDeferStmt
		{ after(grammarAccess.getStatementAccess().getDeferStmtDeferStmtParserRuleCall_14_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStmt__EmptyStmtAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleStmtAccess().getEmptyStmtEmptyStmtParserRuleCall_0_0()); }
		ruleEmptyStmt
		{ after(grammarAccess.getSimpleStmtAccess().getEmptyStmtEmptyStmtParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStmt__ExpressionStmtAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleStmtAccess().getExpressionStmtExpressionStmtParserRuleCall_1_0()); }
		ruleExpressionStmt
		{ after(grammarAccess.getSimpleStmtAccess().getExpressionStmtExpressionStmtParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStmt__SendStmtAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleStmtAccess().getSendStmtSendStmtParserRuleCall_2_0()); }
		ruleSendStmt
		{ after(grammarAccess.getSimpleStmtAccess().getSendStmtSendStmtParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStmt__IncDecStmtAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleStmtAccess().getIncDecStmtIncDecStmtParserRuleCall_3_0()); }
		ruleIncDecStmt
		{ after(grammarAccess.getSimpleStmtAccess().getIncDecStmtIncDecStmtParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStmt__AssignmentAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleStmtAccess().getAssignmentAssignmentParserRuleCall_4_0()); }
		ruleAssignment
		{ after(grammarAccess.getSimpleStmtAccess().getAssignmentAssignmentParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStmt__ShortVarDeclAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleStmtAccess().getShortVarDeclShortVarDeclParserRuleCall_5_0()); }
		ruleShortVarDecl
		{ after(grammarAccess.getSimpleStmtAccess().getShortVarDeclShortVarDeclParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LabeledStmt__LabelAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLabeledStmtAccess().getLabelLabelParserRuleCall_0_0()); }
		ruleLabel
		{ after(grammarAccess.getLabeledStmtAccess().getLabelLabelParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LabeledStmt__StatementAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLabeledStmtAccess().getStatementStatementParserRuleCall_2_0()); }
		ruleStatement
		{ after(grammarAccess.getLabeledStmtAccess().getStatementStatementParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Label__IdentifierAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLabelAccess().getIdentifierIdentifierParserRuleCall_0()); }
		ruleidentifier
		{ after(grammarAccess.getLabelAccess().getIdentifierIdentifierParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionStmt__ExpressionAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionStmtAccess().getExpressionExpressionParserRuleCall_0()); }
		ruleExpression
		{ after(grammarAccess.getExpressionStmtAccess().getExpressionExpressionParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SendStmt__ChannelAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSendStmtAccess().getChannelChannelParserRuleCall_0_0()); }
		ruleChannel
		{ after(grammarAccess.getSendStmtAccess().getChannelChannelParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SendStmt__ExpressionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSendStmtAccess().getExpressionExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getSendStmtAccess().getExpressionExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Channel__ExpressionAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChannelAccess().getExpressionExpressionParserRuleCall_0()); }
		ruleExpression
		{ after(grammarAccess.getChannelAccess().getExpressionExpressionParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IncDecStmt__ExpressionAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIncDecStmtAccess().getExpressionExpressionParserRuleCall_0_0()); }
		ruleExpression
		{ after(grammarAccess.getIncDecStmtAccess().getExpressionExpressionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__ExpressionListAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignmentAccess().getExpressionListExpressionListParserRuleCall_0_0()); }
		ruleExpressionList
		{ after(grammarAccess.getAssignmentAccess().getExpressionListExpressionListParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Assign_opAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignmentAccess().getAssign_opAssign_opParserRuleCall_1_0()); }
		ruleassign_op
		{ after(grammarAccess.getAssignmentAccess().getAssign_opAssign_opParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__ExpressionListAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignmentAccess().getExpressionListExpressionListParserRuleCall_2_0()); }
		ruleExpressionList
		{ after(grammarAccess.getAssignmentAccess().getExpressionListExpressionListParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__SimpleStmtAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfStmtAccess().getSimpleStmtSimpleStmtParserRuleCall_1_0_0()); }
		ruleSimpleStmt
		{ after(grammarAccess.getIfStmtAccess().getSimpleStmtSimpleStmtParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__ExpressionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfStmtAccess().getExpressionExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getIfStmtAccess().getExpressionExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__BlockAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfStmtAccess().getBlockBlockParserRuleCall_3_0()); }
		ruleBlock
		{ after(grammarAccess.getIfStmtAccess().getBlockBlockParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__IfStmtAssignment_4_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfStmtAccess().getIfStmtIfStmtParserRuleCall_4_1_0_0()); }
		ruleIfStmt
		{ after(grammarAccess.getIfStmtAccess().getIfStmtIfStmtParserRuleCall_4_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__BlockAssignment_4_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfStmtAccess().getBlockBlockParserRuleCall_4_1_1_0()); }
		ruleBlock
		{ after(grammarAccess.getIfStmtAccess().getBlockBlockParserRuleCall_4_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStmt__Switch_stmt_linhaAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSwitchStmtAccess().getSwitch_stmt_linhaSwitch_stmt_linhaParserRuleCall_2_0()); }
		ruleswitch_stmt_linha
		{ after(grammarAccess.getSwitchStmtAccess().getSwitch_stmt_linhaSwitch_stmt_linhaParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprCaseClause__ExprSwitchCaseAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprCaseClauseAccess().getExprSwitchCaseExprSwitchCaseParserRuleCall_0_0()); }
		ruleExprSwitchCase
		{ after(grammarAccess.getExprCaseClauseAccess().getExprSwitchCaseExprSwitchCaseParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprCaseClause__StatementListAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprCaseClauseAccess().getStatementListStatementListParserRuleCall_2_0()); }
		ruleStatementList
		{ after(grammarAccess.getExprCaseClauseAccess().getStatementListStatementListParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSwitchCase__ExpressionListAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprSwitchCaseAccess().getExpressionListExpressionListParserRuleCall_0_1_0()); }
		ruleExpressionList
		{ after(grammarAccess.getExprSwitchCaseAccess().getExpressionListExpressionListParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Switch_stmt_linha__TypeSwitchGuardAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSwitch_stmt_linhaAccess().getTypeSwitchGuardTypeSwitchGuardParserRuleCall_0_0_0()); }
		ruleTypeSwitchGuard
		{ after(grammarAccess.getSwitch_stmt_linhaAccess().getTypeSwitchGuardTypeSwitchGuardParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Switch_stmt_linha__TypeCaseClauseAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSwitch_stmt_linhaAccess().getTypeCaseClauseTypeCaseClauseParserRuleCall_0_2_0()); }
		ruleTypeCaseClause
		{ after(grammarAccess.getSwitch_stmt_linhaAccess().getTypeCaseClauseTypeCaseClauseParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Switch_stmt_linha__Switch_stmt_linhaAssignment_0_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSwitch_stmt_linhaAccess().getSwitch_stmt_linhaSwitch_stmt_linhaParserRuleCall_0_4_0()); }
		ruleswitch_stmt_linha
		{ after(grammarAccess.getSwitch_stmt_linhaAccess().getSwitch_stmt_linhaSwitch_stmt_linhaParserRuleCall_0_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Switch_stmt_linha__ExpressionAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSwitch_stmt_linhaAccess().getExpressionExpressionParserRuleCall_1_1_0()); }
		ruleExpression
		{ after(grammarAccess.getSwitch_stmt_linhaAccess().getExpressionExpressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Switch_stmt_linha__ExprCaseClauseAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSwitch_stmt_linhaAccess().getExprCaseClauseExprCaseClauseParserRuleCall_1_3_0()); }
		ruleExprCaseClause
		{ after(grammarAccess.getSwitch_stmt_linhaAccess().getExprCaseClauseExprCaseClauseParserRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Switch_stmt_linha__Switch_stmt_linhaAssignment_1_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSwitch_stmt_linhaAccess().getSwitch_stmt_linhaSwitch_stmt_linhaParserRuleCall_1_5_0()); }
		ruleswitch_stmt_linha
		{ after(grammarAccess.getSwitch_stmt_linhaAccess().getSwitch_stmt_linhaSwitch_stmt_linhaParserRuleCall_1_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSwitchGuard__IdentifierAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeSwitchGuardAccess().getIdentifierIdentifierParserRuleCall_0_0_0()); }
		ruleidentifier
		{ after(grammarAccess.getTypeSwitchGuardAccess().getIdentifierIdentifierParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSwitchGuard__PrimaryExprAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeSwitchGuardAccess().getPrimaryExprPrimaryExprParserRuleCall_1_0()); }
		rulePrimaryExpr
		{ after(grammarAccess.getTypeSwitchGuardAccess().getPrimaryExprPrimaryExprParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeCaseClause__TypeSwitchCaseAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeCaseClauseAccess().getTypeSwitchCaseTypeSwitchCaseParserRuleCall_0_0()); }
		ruleTypeSwitchCase
		{ after(grammarAccess.getTypeCaseClauseAccess().getTypeSwitchCaseTypeSwitchCaseParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeCaseClause__StatementListAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeCaseClauseAccess().getStatementListStatementListParserRuleCall_2_0()); }
		ruleStatementList
		{ after(grammarAccess.getTypeCaseClauseAccess().getStatementListStatementListParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSwitchCase__TypeListAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeSwitchCaseAccess().getTypeListTypeListParserRuleCall_0_1_0()); }
		ruleTypeList
		{ after(grammarAccess.getTypeSwitchCaseAccess().getTypeListTypeListParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeList__TypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeListAccess().getTypeTypeParserRuleCall_0_0()); }
		ruleType
		{ after(grammarAccess.getTypeListAccess().getTypeTypeParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeList__TypeAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeListAccess().getTypeTypeParserRuleCall_1_1_0()); }
		ruleType
		{ after(grammarAccess.getTypeListAccess().getTypeTypeParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__ConditionAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForStmtAccess().getConditionConditionParserRuleCall_1_0_0()); }
		ruleCondition
		{ after(grammarAccess.getForStmtAccess().getConditionConditionParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__ForClauseAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForStmtAccess().getForClauseForClauseParserRuleCall_1_1_0()); }
		ruleForClause
		{ after(grammarAccess.getForStmtAccess().getForClauseForClauseParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__RangeClauseAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForStmtAccess().getRangeClauseRangeClauseParserRuleCall_1_2_0()); }
		ruleRangeClause
		{ after(grammarAccess.getForStmtAccess().getRangeClauseRangeClauseParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__BlockAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForStmtAccess().getBlockBlockParserRuleCall_2_0()); }
		ruleBlock
		{ after(grammarAccess.getForStmtAccess().getBlockBlockParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__ExpressionAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionAccess().getExpressionExpressionParserRuleCall_0()); }
		ruleExpression
		{ after(grammarAccess.getConditionAccess().getExpressionExpressionParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForClause__InitStmtAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForClauseAccess().getInitStmtInitStmtParserRuleCall_1_0()); }
		ruleInitStmt
		{ after(grammarAccess.getForClauseAccess().getInitStmtInitStmtParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForClause__ConditionAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForClauseAccess().getConditionConditionParserRuleCall_3_0()); }
		ruleCondition
		{ after(grammarAccess.getForClauseAccess().getConditionConditionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForClause__PostStmtAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForClauseAccess().getPostStmtPostStmtParserRuleCall_5_0()); }
		rulePostStmt
		{ after(grammarAccess.getForClauseAccess().getPostStmtPostStmtParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InitStmt__SimpleStmtAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInitStmtAccess().getSimpleStmtSimpleStmtParserRuleCall_0()); }
		ruleSimpleStmt
		{ after(grammarAccess.getInitStmtAccess().getSimpleStmtSimpleStmtParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostStmt__SimpleStmtAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPostStmtAccess().getSimpleStmtSimpleStmtParserRuleCall_0()); }
		ruleSimpleStmt
		{ after(grammarAccess.getPostStmtAccess().getSimpleStmtSimpleStmtParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeClause__ExpressionListAssignment_0_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRangeClauseAccess().getExpressionListExpressionListParserRuleCall_0_0_0_0()); }
		ruleExpressionList
		{ after(grammarAccess.getRangeClauseAccess().getExpressionListExpressionListParserRuleCall_0_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeClause__IdentifierListAssignment_0_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRangeClauseAccess().getIdentifierListIdentifierListParserRuleCall_0_1_0_0()); }
		ruleIdentifierList
		{ after(grammarAccess.getRangeClauseAccess().getIdentifierListIdentifierListParserRuleCall_0_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeClause__ExpressionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRangeClauseAccess().getExpressionExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getRangeClauseAccess().getExpressionExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GoStmt__ExpressionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGoStmtAccess().getExpressionExpressionParserRuleCall_1_0()); }
		ruleExpression
		{ after(grammarAccess.getGoStmtAccess().getExpressionExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStmt__CommClauseAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectStmtAccess().getCommClauseCommClauseParserRuleCall_3_0()); }
		ruleCommClause
		{ after(grammarAccess.getSelectStmtAccess().getCommClauseCommClauseParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommClause__CommCaseAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommClauseAccess().getCommCaseCommCaseParserRuleCall_0_0()); }
		ruleCommCase
		{ after(grammarAccess.getCommClauseAccess().getCommCaseCommCaseParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommClause__StatementListAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommClauseAccess().getStatementListStatementListParserRuleCall_2_0()); }
		ruleStatementList
		{ after(grammarAccess.getCommClauseAccess().getStatementListStatementListParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommCase__SendStmtAssignment_0_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommCaseAccess().getSendStmtSendStmtParserRuleCall_0_1_0_0()); }
		ruleSendStmt
		{ after(grammarAccess.getCommCaseAccess().getSendStmtSendStmtParserRuleCall_0_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommCase__RecvStmtAssignment_0_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommCaseAccess().getRecvStmtRecvStmtParserRuleCall_0_1_1_0()); }
		ruleRecvStmt
		{ after(grammarAccess.getCommCaseAccess().getRecvStmtRecvStmtParserRuleCall_0_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RecvStmt__ExpressionListAssignment_0_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRecvStmtAccess().getExpressionListExpressionListParserRuleCall_0_0_0_0()); }
		ruleExpressionList
		{ after(grammarAccess.getRecvStmtAccess().getExpressionListExpressionListParserRuleCall_0_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RecvStmt__IdentifierListAssignment_0_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRecvStmtAccess().getIdentifierListIdentifierListParserRuleCall_0_1_0_0()); }
		ruleIdentifierList
		{ after(grammarAccess.getRecvStmtAccess().getIdentifierListIdentifierListParserRuleCall_0_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RecvStmt__RecvExprAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRecvStmtAccess().getRecvExprRecvExprParserRuleCall_1_0()); }
		ruleRecvExpr
		{ after(grammarAccess.getRecvStmtAccess().getRecvExprRecvExprParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RecvExpr__ExpressionAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRecvExprAccess().getExpressionExpressionParserRuleCall_0()); }
		ruleExpression
		{ after(grammarAccess.getRecvExprAccess().getExpressionExpressionParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStmt__ExpressionListAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReturnStmtAccess().getExpressionListExpressionListParserRuleCall_2_0()); }
		ruleExpressionList
		{ after(grammarAccess.getReturnStmtAccess().getExpressionListExpressionListParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BreakStmt__LabelAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBreakStmtAccess().getLabelLabelParserRuleCall_2_0()); }
		ruleLabel
		{ after(grammarAccess.getBreakStmtAccess().getLabelLabelParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContinueStmt__LabelAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContinueStmtAccess().getLabelLabelParserRuleCall_2_0()); }
		ruleLabel
		{ after(grammarAccess.getContinueStmtAccess().getLabelLabelParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GotoStmt__LabelAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGotoStmtAccess().getLabelLabelParserRuleCall_1_0()); }
		ruleLabel
		{ after(grammarAccess.getGotoStmtAccess().getLabelLabelParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeferStmt__ExpressionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeferStmtAccess().getExpressionExpressionParserRuleCall_1_0()); }
		ruleExpression
		{ after(grammarAccess.getDeferStmtAccess().getExpressionExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageClause__PackageNameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackageClauseAccess().getPackageNamePackageNameParserRuleCall_1_0()); }
		rulePackageName
		{ after(grammarAccess.getPackageClauseAccess().getPackageNamePackageNameParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageName__IdentifierAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackageNameAccess().getIdentifierIdentifierParserRuleCall_0()); }
		ruleidentifier
		{ after(grammarAccess.getPackageNameAccess().getIdentifierIdentifierParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDecl__ImportSpecAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportDeclAccess().getImportSpecImportSpecParserRuleCall_2_0_0()); }
		ruleImportSpec
		{ after(grammarAccess.getImportDeclAccess().getImportSpecImportSpecParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDecl__ImportSpecAssignment_2_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportDeclAccess().getImportSpecImportSpecParserRuleCall_2_1_1_0_0()); }
		ruleImportSpec
		{ after(grammarAccess.getImportDeclAccess().getImportSpecImportSpecParserRuleCall_2_1_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportSpec__PackageNameAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportSpecAccess().getPackageNamePackageNameParserRuleCall_0_1_0()); }
		rulePackageName
		{ after(grammarAccess.getImportSpecAccess().getPackageNamePackageNameParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportSpec__ImportPathAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportSpecAccess().getImportPathImportPathParserRuleCall_1_0()); }
		ruleImportPath
		{ after(grammarAccess.getImportSpecAccess().getImportPathImportPathParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportPath__String_litAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportPathAccess().getString_litString_litParserRuleCall_0()); }
		rulestring_lit
		{ after(grammarAccess.getImportPathAccess().getString_litString_litParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier__LETTERAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIdentifierAccess().getLETTERLETTERTerminalRuleCall_0_0()); }
		RULE_LETTER
		{ after(grammarAccess.getIdentifierAccess().getLETTERLETTERTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier__LETTERAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIdentifierAccess().getLETTERLETTERTerminalRuleCall_1_0_0()); }
		RULE_LETTER
		{ after(grammarAccess.getIdentifierAccess().getLETTERLETTERTerminalRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier__DECIMAL_DIGITAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIdentifierAccess().getDECIMAL_DIGITDECIMAL_DIGITTerminalRuleCall_1_1_0()); }
		RULE_DECIMAL_DIGIT
		{ after(grammarAccess.getIdentifierAccess().getDECIMAL_DIGITDECIMAL_DIGITTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Float_lit__DecimalsAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFloat_litAccess().getDecimalsDecimalsParserRuleCall_0_2_0()); }
		ruledecimals
		{ after(grammarAccess.getFloat_litAccess().getDecimalsDecimalsParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Float_lit__ExponentAssignment_0_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFloat_litAccess().getExponentExponentParserRuleCall_0_3_0()); }
		ruleexponent
		{ after(grammarAccess.getFloat_litAccess().getExponentExponentParserRuleCall_0_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Float_lit__ExponentAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFloat_litAccess().getExponentExponentParserRuleCall_1_1_0()); }
		ruleexponent
		{ after(grammarAccess.getFloat_litAccess().getExponentExponentParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Float_lit__ExponenAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFloat_litAccess().getExponenExponentParserRuleCall_2_2_0()); }
		ruleexponent
		{ after(grammarAccess.getFloat_litAccess().getExponenExponentParserRuleCall_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__String_lit__Raw_string_litAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getString_litAccess().getRaw_string_litRaw_string_litParserRuleCall_0_0()); }
		ruleraw_string_lit
		{ after(grammarAccess.getString_litAccess().getRaw_string_litRaw_string_litParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__String_lit__Interpreted_string_litAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getString_litAccess().getInterpreted_string_litInterpreted_string_litParserRuleCall_1_0()); }
		ruleinterpreted_string_lit
		{ after(grammarAccess.getString_litAccess().getInterpreted_string_litInterpreted_string_litParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Decimals__DECIMAL_DIGITAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDecimalsAccess().getDECIMAL_DIGITDECIMAL_DIGITTerminalRuleCall_0_0()); }
		RULE_DECIMAL_DIGIT
		{ after(grammarAccess.getDecimalsAccess().getDECIMAL_DIGITDECIMAL_DIGITTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Decimals__DECIMAL_DIGITAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDecimalsAccess().getDECIMAL_DIGITDECIMAL_DIGITTerminalRuleCall_1_0()); }
		RULE_DECIMAL_DIGIT
		{ after(grammarAccess.getDecimalsAccess().getDECIMAL_DIGITDECIMAL_DIGITTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exponent__DecimalsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExponentAccess().getDecimalsDecimalsParserRuleCall_2_0()); }
		ruledecimals
		{ after(grammarAccess.getExponentAccess().getDecimalsDecimalsParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rune_lit__Unicode_valueAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRune_litAccess().getUnicode_valueUnicode_valueParserRuleCall_1_0_0()); }
		ruleunicode_value
		{ after(grammarAccess.getRune_litAccess().getUnicode_valueUnicode_valueParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rune_lit__Byte_valueAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRune_litAccess().getByte_valueByte_valueParserRuleCall_1_1_0()); }
		rulebyte_value
		{ after(grammarAccess.getRune_litAccess().getByte_valueByte_valueParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_OCTAL_DIGIT : ('0'|'1'|'2'|'3'|'4'|'5'|'6');

RULE_DECIMAL_DIGIT : (RULE_OCTAL_DIGIT|RULE_SEVEN_TO_NINE);

RULE_HEX_DIGIT : (RULE_DECIMAL_DIGIT|RULE_A_TO_F);

fragment RULE_SEVEN_TO_NINE : ('7'|'8'|'9');

fragment RULE_A_TO_F : ('A'|'B'|'C'|'D'|'E'|'F'|'a'|'b'|'c'|'d'|'e'|'f');

RULE_LETTER : (RULE_A_TO_F|'g'|'h'|'i'|'j'|'k'|'l'|'m'|'n'|'o'|'p'|'q'|'r'|'s'|'t'|'u'|'v'|'x'|'y'|'z'|'_'|'G'|'H'|'I'|'J'|'K'|'L'|'M'|'N'|'O'|'P'|'Q'|'R'|'S'|'T'|'U'|'V'|'W'|'X'|'Y'|'Z');

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
